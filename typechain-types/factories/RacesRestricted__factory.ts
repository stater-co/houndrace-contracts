/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002f8538038062002f8583398101604081905262000039916200050f565b80516101008201518291906200004f33620001e7565b80518251146200005e57600080fd5b60005b8251811015620000f85781818151811062000080576200008062000634565b602002602001015160016000858481518110620000a157620000a162000634565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f0906200064a565b905062000061565b505081518051839250600391620001159183916020019062000237565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051620001db9260088501920190620002a1565b50905050505062000672565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d9291506200034a565b5090565b828054828255906000526020600020906007016008900481019282156200028f5791602002820160005b838211156200030e57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002cb565b8015620003405782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200030e565b50506200029d9291505b5b808211156200029d57600081556001016200034b565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200039d576200039d62000361565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ce57620003ce62000361565b604052919050565b60006001600160401b03821115620003f257620003f262000361565b5060051b60200190565b80516001600160a01b03811681146200041457600080fd5b919050565b600082601f8301126200042b57600080fd5b81516020620004446200043e83620003d6565b620003a3565b82815260059290921b840181019181810190868411156200046457600080fd5b8286015b848110156200048a576200047c81620003fc565b835291830191830162000468565b509695505050505050565b600082601f830112620004a757600080fd5b81516020620004ba6200043e83620003d6565b82815260059290921b84018101918181019086841115620004da57600080fd5b8286015b848110156200048a5780516001600160e01b031981168114620005015760008081fd5b8352918301918301620004de565b6000602082840312156200052257600080fd5b81516001600160401b03808211156200053a57600080fd5b9083019061012082860312156200055057600080fd5b6200055a62000377565b8251828111156200056a57600080fd5b620005788782860162000419565b8252506200058960208401620003fc565b60208201526200059c60408401620003fc565b6040820152620005af60608401620003fc565b6060820152620005c260808401620003fc565b6080820152620005d560a08401620003fc565b60a0820152620005e860c08401620003fc565b60c0820152620005fb60e08401620003fc565b60e082015261010080840151838111156200061557600080fd5b620006238882870162000495565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200066b57634e487b7160e01b600052601160045260246000fd5b5060010190565b61290380620006826000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063af640d0f11610076578063d8de65871161005b578063d8de65871461017e578063e200c85714610219578063f2fde38b1461023957600080fd5b8063af640d0f14610147578063b7dda85e1461015e57600080fd5b80637bbc469e116100a75780637bbc469e146100e05780638da5cb5b1461010c578063aa4daabd1461013457600080fd5b806330e54438146100c3578063715018a6146100d8575b600080fd5b6100d66100d1366004611ec1565b61024c565b005b6100d66107a5565b6100f36100ee366004612058565b6107b9565b60405161010394939291906123b6565b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610103565b6100d661014236600461247c565b610d2d565b61015060025481565b604051908152602001610103565b61017161016c366004612058565b610e4f565b6040516101039190612589565b600454600554600654600754600854600954600a546101c39673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610103565b61022c610227366004612058565b6113db565b60405161010391906125fd565b6100d6610247366004612617565b611440565b3360009081526001602052604081205460e01b7fffffffff000000000000000000000000000000000000000000000000000000009081169135161461029057600080fd5b60048054825160a001516040517f11a343930000000000000000000000000000000000000000000000000000000081529283015273ffffffffffffffffffffffffffffffffffffffff16906311a3439390602401600060405180830381600087803b1580156102fe57600080fd5b505af1158015610312573d6000803e3d6000fd5b5050600a54835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061037191600401612632565b600060405180830381600087803b15801561038b57600080fd5b505af115801561039f573d6000803e3d6000fd5b5050506000848152600c6020526040902082518051849350829081906103c590826126e6565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161043d92600385019201906116ac565b50608082015180516104599160048401916020909101906116ac565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610496918391602001906116f7565b5060208281015180516104af92600185019201906116f7565b50604082015180516104cb9160028401916020909101906116f7565b50606082015180516104e7916003840191602090910190611771565b5060808201518051610503916004840191602090910190611771565b5060a0820151805161051f9160058401916020909101906117ca565b505050506020830151600e830155506040820151600f8201556060820151601082019061054c90826126e6565b50506009546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018590526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa1580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190612800565b905060005b8251606001515181101561076557600554835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc91908490811061063357610633612826565b602002602001015160006040518363ffffffff1660e01b8152600401610663929190918252602082015260400190565b6020604051808303816000875af1158015610682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a69190612855565b6000036106b257600080fd5b600554835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106106ed576106ed612826565b6020026020010151846040518363ffffffff1660e01b815260040161072292919091825263ffffffff16602082015260400190565b600060405180830381600087803b15801561073c57600080fd5b505af1158015610750573d6000803e3d6000fd5b505050508061075e9061286e565b90506105ea565b5082847fa6266edd73d5306347b1967afd613964af265e032c9c487394151570a567766f846040516107979190612589565b60405180910390a350505050565b6107ad6114f9565b6107b7600061157a565b565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546107ed90612645565b80601f016020809104026020016040519081016040528092919081815260200182805461081990612645565b80156108665780601f1061083b57610100808354040283529160200191610866565b820191906000526020600020905b81548152906001019060200180831161084957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156108f457602002820191906000526020600020905b8154815260200190600101908083116108e0575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561094c57602002820191906000526020600020905b815481526020019060010190808311610938575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156109e957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116109be575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a5857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a2d575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ac757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a9c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b6157600084815260209081902083018054604080518285028101850190915281815292830182828015610b4d57602002820191906000526020600020905b815481526020019060010190808311610b39575b505050505081526020019060010190610af5565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610bfa57600084815260209081902083018054604080518285028101850190915281815292830182828015610be657602002820191906000526020600020905b815481526020019060010190808311610bd2575b505050505081526020019060010190610b8e565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610c8157602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610c5f57610c5f6121ab565b815260206001928301818104948501949093039092029101808411610c405790505b505050505081525050815250509080600e01549080600f015490806010018054610caa90612645565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd690612645565b8015610d235780601f10610cf857610100808354040283529160200191610d23565b820191906000526020600020905b815481529060010190602001808311610d0657829003601f168201915b5050505050905084565b610d356114f9565b805180518291600391610d4f9183916020909101906116f7565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610e389260088501920190611879565b50508151610100830151610e4c92506115ef565b50565b610e57611913565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610e8990612645565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb590612645565b8015610f025780601f10610ed757610100808354040283529160200191610f02565b820191906000526020600020905b815481529060010190602001808311610ee557829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610f9057602002820191906000526020600020905b815481526020019060010190808311610f7c575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610fe857602002820191906000526020600020905b815481526020019060010190808311610fd4575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561108557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161105a575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156110f457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110c9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561116357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611138575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111fd576000848152602090819020830180546040805182850281018501909152818152928301828280156111e957602002820191906000526020600020905b8154815260200190600101908083116111d5575b505050505081526020019060010190611191565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112965760008481526020908190208301805460408051828502810185019091528181529283018282801561128257602002820191906000526020600020905b81548152602001906001019080831161126e575b50505050508152602001906001019061122a565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561131d57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156112fb576112fb6121ab565b8152602060019283018181049485019490930390920291018084116112dc5790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461135290612645565b80601f016020809104026020016040519081016040528092919081815260200182805461137e90612645565b80156113cb5780601f106113a0576101008083540402835291602001916113cb565b820191906000526020600020905b8154815290600101906020018083116113ae57829003601f168201915b5050505050815250509050919050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561143457602002820191906000526020600020905b815481526020019060010190808311611420575b50505050509050919050565b6114486114f9565b73ffffffffffffffffffffffffffffffffffffffff81166114f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610e4c8161157a565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114e7565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146115fd57600080fd5b60005b82518110156116a75781818151811061161b5761161b612826565b60200260200101516001600085848151811061163957611639612826565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c0217905550806116a09061286e565b9050611600565b505050565b8280548282559060005260206000209081019282156116e7579160200282015b828111156116e75782518255916020019190600101906116cc565b506116f3929150611941565b5090565b8280548282559060005260206000209081019282156116e7579160200282015b828111156116e757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611717565b8280548282559060005260206000209081019282156117be579160200282015b828111156117be57825180516117ae9184916020909101906116ac565b5091602001919060010190611791565b506116f3929150611956565b82805482825590600052602060002090601f016020900481019282156116e75791602002820160005b8382111561183f57835183826101000a81548160ff0219169083600381111561181e5761181e6121ab565b021790555092602001926001016020816000010492830192600103026117f3565b801561186c5782816101000a81549060ff021916905560010160208160000104928301926001030261183f565b50506116f3929150611941565b828054828255906000526020600020906007016008900481019282156116e75791602002820160005b838211156118e357835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026118a2565b801561186c5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026118e3565b6040518060800160405280611926611973565b81526020016000815260200160008152602001606081525090565b5b808211156116f35760008155600101611942565b808211156116f357600061196a8282611a21565b50600101611956565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611a1c6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5080546000825590600052602060002090810190610e4c9190611941565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611a9157611a91611a3f565b60405290565b6040516080810167ffffffffffffffff81118282101715611a9157611a91611a3f565b604051610120810167ffffffffffffffff81118282101715611a9157611a91611a3f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611b2557611b25611a3f565b604052919050565b600082601f830112611b3e57600080fd5b813567ffffffffffffffff811115611b5857611b58611a3f565b611b8960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611ade565b818152846020838601011115611b9e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611bdf57600080fd5b919050565b600067ffffffffffffffff821115611bfe57611bfe611a3f565b5060051b60200190565b600082601f830112611c1957600080fd5b81356020611c2e611c2983611be4565b611ade565b82815260059290921b84018101918181019086841115611c4d57600080fd5b8286015b84811015611c685780358352918301918301611c51565b509695505050505050565b600082601f830112611c8457600080fd5b81356020611c94611c2983611be4565b82815260059290921b84018101918181019086841115611cb357600080fd5b8286015b84811015611c6857611cc881611bbb565b8352918301918301611cb7565b600082601f830112611ce657600080fd5b81356020611cf6611c2983611be4565b82815260059290921b84018101918181019086841115611d1557600080fd5b8286015b84811015611c6857803567ffffffffffffffff811115611d395760008081fd5b611d478986838b0101611c08565b845250918301918301611d19565b600082601f830112611d6657600080fd5b81356020611d76611c2983611be4565b82815260059290921b84018101918181019086841115611d9557600080fd5b8286015b84811015611c6857803560048110611db15760008081fd5b8352918301918301611d99565b600060c08284031215611dd057600080fd5b611dd8611a6e565b9050813567ffffffffffffffff80821115611df257600080fd5b611dfe85838601611c73565b83526020840135915080821115611e1457600080fd5b611e2085838601611c73565b60208401526040840135915080821115611e3957600080fd5b611e4585838601611c73565b60408401526060840135915080821115611e5e57600080fd5b611e6a85838601611cd5565b60608401526080840135915080821115611e8357600080fd5b611e8f85838601611cd5565b608084015260a0840135915080821115611ea857600080fd5b50611eb584828501611d55565b60a08301525092915050565b600080600060608486031215611ed657600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611efc57600080fd5b9085019060808288031215611f1057600080fd5b611f18611a97565b823582811115611f2757600080fd5b8301610120818a031215611f3a57600080fd5b611f42611aba565b813584811115611f5157600080fd5b611f5d8b828501611b2d565b825250611f6c60208301611bbb565b6020820152611f7d60408301611bbb565b6040820152606082013584811115611f9457600080fd5b611fa08b828501611c08565b606083015250608082013584811115611fb857600080fd5b611fc48b828501611c08565b60808301525060a082013560a082015260c082013560c082015260e082013560e08201526101008083013585811115611ffc57600080fd5b6120088c828601611dbe565b8284015250508083525050602083013560208201526040830135604082015260608301358281111561203957600080fd5b61204589828601611b2d565b6060830152508093505050509250925092565b60006020828403121561206a57600080fd5b5035919050565b6000815180845260005b818110156120975760208185018101518683018201520161207b565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015612105578151875295820195908201906001016120e9565b509495945050505050565b600081518084526020808501945080840160005b8381101561210557815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612124565b600081518084526020808501808196508360051b8101915082860160005b8581101561219e57828403895261218c8483516120d5565b98850198935090840190600101612174565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526121ef60c0850182612110565b9050602080840151858303828701526122088382612110565b925050604084015185830360408701526122228382612110565b9250506060840151858303606087015261223c8382612156565b925050608084015185830360808701526122568382612156565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156122cc57855160048082106122b9577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b508352948401949184019160010161227a565b5090979650505050505050565b600061012082518185526122ef82860182612071565b9150506020830151612319602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612341604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261235982826120d5565b9150506080830151848203608086015261237382826120d5565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526123ac83826121da565b9695505050505050565b6080815260006123c960808301876122d9565b85602084015284604084015282810360608401526123e78185612071565b979650505050505050565b600082601f83011261240357600080fd5b81356020612413611c2983611be4565b82815260059290921b8401810191818101908684111561243257600080fd5b8286015b84811015611c685780357fffffffff000000000000000000000000000000000000000000000000000000008116811461246f5760008081fd5b8352918301918301612436565b60006020828403121561248e57600080fd5b813567ffffffffffffffff808211156124a657600080fd5b9083019061012082860312156124bb57600080fd5b6124c3611aba565b8235828111156124d257600080fd5b6124de87828601611c73565b8252506124ed60208401611bbb565b60208201526124fe60408401611bbb565b604082015261250f60608401611bbb565b606082015261252060808401611bbb565b608082015261253160a08401611bbb565b60a082015261254260c08401611bbb565b60c082015261255360e08401611bbb565b60e0820152610100808401358381111561256c57600080fd5b612578888287016123f2565b918301919091525095945050505050565b6020815260008251608060208401526125a560a08401826122d9565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526125f48282612071565b95945050505050565b60208152600061261060208301846120d5565b9392505050565b60006020828403121561262957600080fd5b61261082611bbb565b60208152600061261060208301846121da565b600181811c9082168061265957607f821691505b602082108103612692577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156116a757600081815260208120601f850160051c810160208610156126bf5750805b601f850160051c820191505b818110156126de578281556001016126cb565b505050505050565b815167ffffffffffffffff81111561270057612700611a3f565b6127148161270e8454612645565b84612698565b602080601f83116001811461276757600084156127315750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556126de565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156127b457888601518255948401946001909101908401612795565b50858210156127f057878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561281257600080fd5b815163ffffffff8116811461261057600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561286757600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220cf323443c0eff7627094835d0a6e51850fd7382574c36719ce0fec2651b5bf1b64736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
