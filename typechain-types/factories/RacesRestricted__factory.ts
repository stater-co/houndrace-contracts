/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002c6e38038062002c6e8339810160408190526200003891620003ea565b806200004433620001fc565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a929101906200024c565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015620001f357600d6000836101000151838151811062000159576200015962000511565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110620001ae57620001ae62000511565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001eb8162000527565b90506200012c565b5050506200054f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b805180151581146200032757600080fd5b600060208284031215620003fd57600080fd5b81516001600160401b03808211156200041557600080fd5b9083019061014082860312156200042b57600080fd5b62000435620002e3565b62000440836200030f565b815262000450602084016200030f565b602082015262000463604084016200030f565b604082015262000476606084016200030f565b606082015262000489608084016200030f565b60808201526200049c60a084016200030f565b60a0820152620004af60c084016200030f565b60c0820152620004c260e084016200030f565b60e08201526101008084015183811115620004dc57600080fd5b620004ea888287016200032c565b828401525050610120915062000502828401620003d9565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200054857634e487b7160e01b600052601160045260246000fd5b5060010190565b61270f806200055f6000396000f3fe6080604052600436106100ad5760003560e01c80630bb170a3146100b257806326e42cf4146100c75780632a546a38146100e7578063680adc37146101cd578063715018a6146102555780637bbc469e1461026a5780638da5cb5b1461029a578063af640d0f146102c7578063b7dda85e146102eb578063d63a8e1114610318578063d8de658714610358578063e115234314610405578063e200c85714610425578063f2fde38b14610452575b600080fd5b6100c56100c0366004611ebd565b610472565b005b3480156100d357600080fd5b506100c56100e236600461205a565b6108ec565b3480156100f357600080fd5b50610181610102366004612167565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600e6020908152604091829020825160808101845290546001600160401b038082168352600160401b8204811693830193909352600160801b8104831693820193909352600160c01b90920416606082015290565b6040516101c4919081516001600160401b039081168252602080840151821690830152604083810151821690830152606092830151169181019190915260800190565b60405180910390f35b3480156101d957600080fd5b506102226101e8366004612167565b600e602052600090815260409020546001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b03958616815293851660208501529184169183019190915290911660608201526080016101c4565b34801561026157600080fd5b506100c5610a9b565b34801561027657600080fd5b5061028a610285366004612167565b610aaf565b6040516101c49493929190612414565b3480156102a657600080fd5b506102af610feb565b6040516001600160a01b0390911681526020016101c4565b3480156102d357600080fd5b506102dd60015481565b6040519081526020016101c4565b3480156102f757600080fd5b5061030b610306366004612167565b610ffa565b6040516101c49190612450565b34801561032457600080fd5b506103486103333660046124a6565b600d6020526000908152604090205460ff1681565b60405190151581526020016101c4565b34801561036457600080fd5b50600254600354600454600554600654600754600854600954600b546103aa986001600160a01b0390811698811697811696811695811694811693811692169060ff1689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c084015290921660e0820152901515610100820152610120016101c4565b34801561041157600080fd5b506100c5610420366004612167565b61154e565b34801561043157600080fd5b50610445610440366004612167565b61163e565b6040516101c491906124c8565b34801561045e57600080fd5b506100c561046d3660046124a6565b6116a3565b61047a611719565b600354815160a001516040516311a3439360e01b81526001600160a01b03909216916311a34393916104b29160040190815260200190565b600060405180830381600087803b1580156104cc57600080fd5b505af11580156104e0573d6000803e3d6000fd5b5050505060005b81516101000151515181101561065657600754825161010001515180516001600160a01b039092169163400f959f919084908110610527576105276124db565b60200260200101518460000151610100015160200151848151811061054e5761054e6124db565b602002602001015185600001516101000151604001518581518110610575576105756124db565b60200260200101518660000151610100015160600151868151811061059c5761059c6124db565b6020026020010151876000015161010001516080015187815181106105c3576105c36124db565b60200260200101518860000151610100015160a0015188815181106105ea576105ea6124db565b60200260200101516040518763ffffffff1660e01b8152600401610613969594939291906124f1565b600060405180830381600087803b15801561062d57600080fd5b505af1158015610641573d6000803e3d6000fd5b505050508061064f90612551565b90506104e7565b506000828152600c6020526040902081518051839291908290819061067b9082612601565b506020828101516001830180546001600160a01b039283166001600160a01b0319918216179091556040850151600285018054919093169116179055606083015180516106ce92600385019201906117c8565b50608082015180516106ea9160048401916020909101906117c8565b5060a0820151600582015560c0820151600682015560e0820151600782015561010082015180518051600884019161072791839160200190611813565b5060208281015180516107409260018501920190611813565b506040820151805161075c916002840191602090910190611813565b5060608201518051610778916003840191602090910190611868565b5060808201518051610794916004840191602090910190611868565b5060a082015180516107b09160058401916020909101906118c1565b505050506020830151600e830155506040820151600f820155606082015160108201906107dd9082612601565b5090505060005b815160600151518110156108af5760045482516060015180516001600160a01b039092169163894f39fc919084908110610820576108206124db565b602002602001015160006040518363ffffffff1660e01b8152600401610850929190918252602082015260400190565b6020604051808303816000875af115801561086f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089391906126c0565b60000361089f57600080fd5b6108a881612551565b90506107e4565b50817f17cbd7a25b1bf0afef056e1742cb4a1f19795b2de33f4b72b70267dbd51bc635826040516108e09190612450565b60405180910390a25050565b6108f4611719565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936109ba92600a92910190611813565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015610a9757600d60008361010001518381518110610a0357610a036124db565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110610a5557610a556124db565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610a9081612551565b90506109da565b5050565b610aa3611719565b610aad6000611778565b565b600c6020528060005260406000206000915090508060000160405180610120016040529081600082018054610ae390612578565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0f90612578565b8015610b5c5780601f10610b3157610100808354040283529160200191610b5c565b820191906000526020600020905b815481529060010190602001808311610b3f57829003601f168201915b505050918352505060018201546001600160a01b0390811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610bdd57602002820191906000526020600020905b815481526020019060010190808311610bc9575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610c3557602002820191906000526020600020905b815481526020019060010190808311610c21575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610cc557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ca7575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610d2757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d09575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610d8957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d6b575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e2357600084815260209081902083018054604080518285028101850190915281815292830182828015610e0f57602002820191906000526020600020905b815481526020019060010190808311610dfb575b505050505081526020019060010190610db7565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610ebc57600084815260209081902083018054604080518285028101850190915281815292830182828015610ea857602002820191906000526020600020905b815481526020019060010190808311610e94575b505050505081526020019060010190610e50565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610f3f57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610f025790505b505050505081525050815250509080600e01549080600f015490806010018054610f6890612578565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9490612578565b8015610fe15780601f10610fb657610100808354040283529160200191610fe1565b820191906000526020600020905b815481529060010190602001808311610fc457829003601f168201915b5050505050905084565b6000546001600160a01b031690565b61100261196b565b6000828152600c60205260409081902081516101a0810190925280548290608082019083908290829061103490612578565b80601f016020809104026020016040519081016040528092919081815260200182805461106090612578565b80156110ad5780601f10611082576101008083540402835291602001916110ad565b820191906000526020600020905b81548152906001019060200180831161109057829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561112e57602002820191906000526020600020905b81548152602001906001019080831161111a575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561118657602002820191906000526020600020905b815481526020019060010190808311611172575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561121657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111f8575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561127857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161125a575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156112da57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116112bc575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156113745760008481526020908190208301805460408051828502810185019091528181529283018282801561136057602002820191906000526020600020905b81548152602001906001019080831161134c575b505050505081526020019060010190611308565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561140d576000848152602090819020830180546040805182850281018501909152818152928301828280156113f957602002820191906000526020600020905b8154815260200190600101908083116113e5575b5050505050815260200190600101906113a1565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561149057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116114535790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546114c590612578565b80601f01602080910402602001604051908101604052809291908181526020018280546114f190612578565b801561153e5780601f106115135761010080835404028352916020019161153e565b820191906000526020600020905b81548152906001019060200180831161152157829003601f168201915b5050505050815250509050919050565b611556611719565b478111156115c35760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6115cb610feb565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061163b5760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016115ba565b50565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561169757602002820191906000526020600020905b815481526020019060010190808311611683575b50505050509050919050565b6116ab611719565b6001600160a01b0381166117105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016115ba565b61163b81611778565b33611722610feb565b6001600160a01b031614610aad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016115ba565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611803579160200282015b828111156118035782518255916020019190600101906117e8565b5061180f929150611999565b5090565b828054828255906000526020600020908101928215611803579160200282015b8281111561180357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611833565b8280548282559060005260206000209081019282156118b5579160200282015b828111156118b557825180516118a59184916020909101906117c8565b5091602001919060010190611888565b5061180f9291506119ae565b828054828255906000526020600020906007016008900481019282156118035791602002820160005b8382111561192e57835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026118ea565b801561195e5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261192e565b505061180f929150611999565b604051806080016040528061197e6119cb565b81526020016000815260200160008152602001606081525090565b5b8082111561180f576000815560010161199a565b8082111561180f5760006119c28282611a5f565b506001016119ae565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001600081526020016000815260200160008152602001611a5a6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b508054600082559060005260206000209081019061163b9190611999565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611ab557611ab5611a7d565b60405290565b604051608081016001600160401b0381118282101715611ab557611ab5611a7d565b60405161012081016001600160401b0381118282101715611ab557611ab5611a7d565b60405161014081016001600160401b0381118282101715611ab557611ab5611a7d565b604051601f8201601f191681016001600160401b0381118282101715611b4b57611b4b611a7d565b604052919050565b600082601f830112611b6457600080fd5b81356001600160401b03811115611b7d57611b7d611a7d565b611b90601f8201601f1916602001611b23565b818152846020838601011115611ba557600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611bd957600080fd5b919050565b60006001600160401b03821115611bf757611bf7611a7d565b5060051b60200190565b600082601f830112611c1257600080fd5b81356020611c27611c2283611bde565b611b23565b82815260059290921b84018101918181019086841115611c4657600080fd5b8286015b84811015611c615780358352918301918301611c4a565b509695505050505050565b600082601f830112611c7d57600080fd5b81356020611c8d611c2283611bde565b82815260059290921b84018101918181019086841115611cac57600080fd5b8286015b84811015611c6157611cc181611bc2565b8352918301918301611cb0565b600082601f830112611cdf57600080fd5b81356020611cef611c2283611bde565b82815260059290921b84018101918181019086841115611d0e57600080fd5b8286015b84811015611c615780356001600160401b03811115611d315760008081fd5b611d3f8986838b0101611c01565b845250918301918301611d12565b600082601f830112611d5e57600080fd5b81356020611d6e611c2283611bde565b82815260059290921b84018101918181019086841115611d8d57600080fd5b8286015b84811015611c6157803563ffffffff81168114611dae5760008081fd5b8352918301918301611d91565b600060c08284031215611dcd57600080fd5b611dd5611a93565b905081356001600160401b0380821115611dee57600080fd5b611dfa85838601611c6c565b83526020840135915080821115611e1057600080fd5b611e1c85838601611c6c565b60208401526040840135915080821115611e3557600080fd5b611e4185838601611c6c565b60408401526060840135915080821115611e5a57600080fd5b611e6685838601611cce565b60608401526080840135915080821115611e7f57600080fd5b611e8b85838601611cce565b608084015260a0840135915080821115611ea457600080fd5b50611eb184828501611d4d565b60a08301525092915050565b60008060408385031215611ed057600080fd5b8235915060208301356001600160401b0380821115611eee57600080fd5b9084019060808287031215611f0257600080fd5b611f0a611abb565b823582811115611f1957600080fd5b83016101208189031215611f2c57600080fd5b611f34611add565b813584811115611f4357600080fd5b611f4f8a828501611b53565b825250611f5e60208301611bc2565b6020820152611f6f60408301611bc2565b6040820152606082013584811115611f8657600080fd5b611f928a828501611c01565b606083015250608082013584811115611faa57600080fd5b611fb68a828501611c01565b60808301525060a082013560a082015260c082013560c082015260e082013560e08201526101008083013585811115611fee57600080fd5b611ffa8b828601611dbb565b8284015250508083525050602083013560208201526040830135604082015260608301358281111561202b57600080fd5b61203788828601611b53565b6060830152508093505050509250929050565b80358015158114611bd957600080fd5b60006020828403121561206c57600080fd5b81356001600160401b038082111561208357600080fd5b90830190610140828603121561209857600080fd5b6120a0611b00565b6120a983611bc2565b81526120b760208401611bc2565b60208201526120c860408401611bc2565b60408201526120d960608401611bc2565b60608201526120ea60808401611bc2565b60808201526120fb60a08401611bc2565b60a082015261210c60c08401611bc2565b60c082015261211d60e08401611bc2565b60e0820152610100808401358381111561213657600080fd5b61214288828701611c6c565b828401525050610120915061215882840161204a565b91810191909152949350505050565b60006020828403121561217957600080fd5b5035919050565b6000815180845260005b818110156121a65760208185018101518683018201520161218a565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b83811015612203578151875295820195908201906001016121e7565b509495945050505050565b600081518084526020808501945080840160005b838110156122035781516001600160a01b031687529582019590820190600101612222565b600081518084526020808501808196508360051b8101915082860160005b8581101561228f57828403895261227d8483516121d3565b98850198935090840190600101612265565b5091979650505050505050565b6000815160c084526122b160c085018261220e565b9050602080840151858303828701526122ca838261220e565b925050604084015185830360408701526122e4838261220e565b925050606084015185830360608701526122fe8382612247565b925050608084015185830360808701526123188382612247565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611c6157845163ffffffff16825293830193600192909201919083019061233b565b6000610120825181855261237782860182612180565b915050602083015161238c60208601826121c6565b50604083015161239f60408601826121c6565b50606083015184820360608601526123b782826121d3565b915050608083015184820360808601526123d182826121d3565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261240a838261229c565b9695505050505050565b6080815260006124276080830187612361565b85602084015284604084015282810360608401526124458185612180565b979650505050505050565b60208152600082516080602084015261246c60a0840182612361565b905060208401516040840152604084015160608401526060840151601f1984830301608085015261249d8282612180565b95945050505050565b6000602082840312156124b857600080fd5b6124c182611bc2565b9392505050565b6020815260006124c160208301846121d3565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090612525908301866121d3565b828103608084015261253781866121d3565b91505063ffffffff831660a0830152979650505050505050565b60006001820161257157634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061258c57607f821691505b6020821081036125ac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156125fc57600081815260208120601f850160051c810160208610156125d95750805b601f850160051c820191505b818110156125f8578281556001016125e5565b5050505b505050565b81516001600160401b0381111561261a5761261a611a7d565b61262e816126288454612578565b846125b2565b602080601f831160018114612663576000841561264b5750858301515b600019600386901b1c1916600185901b1785556125f8565b600085815260208120601f198616915b8281101561269257888601518255948401946001909101908401612673565b50858210156126b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156126d257600080fd5b505191905056fea26469706673582212202099a0d686b50fc602e8557d01d1f2dd9705d030fdb8f814fb5a53d34f2e716164736f6c63430008100033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
