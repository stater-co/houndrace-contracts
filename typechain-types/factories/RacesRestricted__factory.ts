/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002ede38038062002ede8339810160408190526200003891620003c0565b806200004433620001e3565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000233565b5090505060005b81610100015151811015620001da57600c60008361010001518381518110620001405762000140620004d1565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600c60008461010001518481518110620001955762000195620004d1565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001d281620004e7565b905062000113565b5050506200050f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028b579160200282015b828111156200028b57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000254565b50620002999291506200029d565b5090565b5b808211156200029957600081556001016200029e565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620002f057620002f0620002b4565b60405290565b80516001600160a01b03811681146200030e57600080fd5b919050565b600082601f8301126200032557600080fd5b815160206001600160401b0380831115620003445762000344620002b4565b8260051b604051601f19603f830116810181811084821117156200036c576200036c620002b4565b6040529384528581018301938381019250878511156200038b57600080fd5b83870191505b84821015620003b557620003a582620002f6565b8352918301919083019062000391565b979650505050505050565b600060208284031215620003d357600080fd5b81516001600160401b0380821115620003eb57600080fd5b9083019061012082860312156200040157600080fd5b6200040b620002ca565b6200041683620002f6565b81526200042660208401620002f6565b60208201526200043960408401620002f6565b60408201526200044c60608401620002f6565b60608201526200045f60808401620002f6565b60808201526200047260a08401620002f6565b60a08201526200048560c08401620002f6565b60c08201526200049860e08401620002f6565b60e08201526101008084015183811115620004b257600080fd5b620004c08882870162000313565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200050857634e487b7160e01b600052601160045260246000fd5b5060010190565b6129bf806200051f6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063acb9671a1161008c578063d63a8e1111610066578063d63a8e111461033c578063d8de65871461036f578063e200c85714610419578063f2fde38b1461043957600080fd5b8063acb9671a146102f2578063af640d0f14610305578063b7dda85e1461031c57600080fd5b8063715018a6116100bd578063715018a61461029f5780637bbc469e146102a75780638da5cb5b146102ca57600080fd5b80632a546a38146100e457806330e54438146101e6578063680adc37146101fb575b600080fd5b6101996100f2366004611b97565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600d60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516101dd9190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b6101f96101f4366004612032565b61044c565b005b61026b610209366004611b97565b600d6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff958616815293851660208501529184169183019190915290911660608201526080016101dd565b6101f9610973565b6102ba6102b5366004611b97565b610987565b6040516101dd949392919061250e565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101dd565b6101f961030036600461254a565b610efb565b61030e60015481565b6040519081526020016101dd565b61032f61032a366004611b97565b6110fb565b6040516101dd9190612644565b61035f61034a3660046126b8565b600c6020526000908152604090205460ff1681565b60405190151581526020016101dd565b6002546003546004546005546006546007546008546009546103ba9773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e0820152610100016101dd565b61042c610427366004611b97565b611687565b6040516101dd91906126da565b6101f96104473660046126b8565b6116ec565b6104546117a8565b600354815160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a34393916104b29160040190815260200190565b600060405180830381600087803b1580156104cc57600080fd5b505af11580156104e0573d6000803e3d6000fd5b5050600954835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061053f916004016126ed565b600060405180830381600087803b15801561055957600080fd5b505af115801561056d573d6000803e3d6000fd5b5050506000848152600b60205260409020825180518493508290819061059390826127a2565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161060b926003850192019061189e565b506080820151805161062791600484019160209091019061189e565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610664918391602001906118e9565b50602082810151805161067d92600185019201906118e9565b50604082015180516106999160028401916020909101906118e9565b50606082015180516106b5916003840191602090910190611963565b50608082015180516106d1916004840191602090910190611963565b5060a082015180516106ed9160058401916020909101906119bc565b505050506020830151600e830155506040820151600f8201556060820151601082019061071a90826127a2565b50506008546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018590526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b391906128bc565b905060005b8251606001515181101561093357600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610801576108016128e2565b602002602001015160006040518363ffffffff1660e01b8152600401610831929190918252602082015260400190565b6020604051808303816000875af1158015610850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108749190612911565b60000361088057600080fd5b600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106108bb576108bb6128e2565b6020026020010151846040518363ffffffff1660e01b81526004016108f092919091825263ffffffff16602082015260400190565b600060405180830381600087803b15801561090a57600080fd5b505af115801561091e573d6000803e3d6000fd5b505050508061092c9061292a565b90506107b8565b5082847fa6266edd73d5306347b1967afd613964af265e032c9c487394151570a567766f846040516109659190612644565b60405180910390a350505050565b61097b6117a8565b6109856000611829565b565b600b60205280600052604060002060009150905080600001604051806101200160405290816000820180546109bb90612700565b80601f01602080910402602001604051908101604052809291908181526020018280546109e790612700565b8015610a345780601f10610a0957610100808354040283529160200191610a34565b820191906000526020600020905b815481529060010190602001808311610a1757829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610ac257602002820191906000526020600020905b815481526020019060010190808311610aae575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610b1a57602002820191906000526020600020905b815481526020019060010190808311610b06575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610bb757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b8c575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610c2657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610bfb575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c9557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c6a575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d2f57600084815260209081902083018054604080518285028101850190915281815292830182828015610d1b57602002820191906000526020600020905b815481526020019060010190808311610d07575b505050505081526020019060010190610cc3565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610dc857600084815260209081902083018054604080518285028101850190915281815292830182828015610db457602002820191906000526020600020905b815481526020019060010190808311610da0575b505050505081526020019060010190610d5c565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e4f57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610e2d57610e2d612303565b815260206001928301818104948501949093039092029101808411610e0e5790505b505050505081525050815250509080600e01549080600f015490806010018054610e7890612700565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea490612700565b8015610ef15780601f10610ec657610100808354040283529160200191610ef1565b820191906000526020600020905b815481529060010190602001808311610ed457829003601f168201915b5050505050905084565b610f036117a8565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e085015160098054909316941693909317905561010083015180518493610fee92600a929101906118e9565b5090505060005b816101000151518110156110f757600c6000836101000151838151811061101e5761101e6128e2565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600c6000846101000151848151811061108a5761108a6128e2565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556110f08161292a565b9050610ff5565b5050565b611103611a6b565b6000828152600b60205260409081902081516101a0810190925280548290608082019083908290829061113590612700565b80601f016020809104026020016040519081016040528092919081815260200182805461116190612700565b80156111ae5780601f10611183576101008083540402835291602001916111ae565b820191906000526020600020905b81548152906001019060200180831161119157829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561123c57602002820191906000526020600020905b815481526020019060010190808311611228575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561129457602002820191906000526020600020905b815481526020019060010190808311611280575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561133157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611306575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156113a057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611375575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561140f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116113e4575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156114a95760008481526020908190208301805460408051828502810185019091528181529283018282801561149557602002820191906000526020600020905b815481526020019060010190808311611481575b50505050508152602001906001019061143d565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156115425760008481526020908190208301805460408051828502810185019091528181529283018282801561152e57602002820191906000526020600020905b81548152602001906001019080831161151a575b5050505050815260200190600101906114d6565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156115c957602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156115a7576115a7612303565b8152602060019283018181049485019490930390920291018084116115885790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546115fe90612700565b80601f016020809104026020016040519081016040528092919081815260200182805461162a90612700565b80156116775780601f1061164c57610100808354040283529160200191611677565b820191906000526020600020905b81548152906001019060200180831161165a57829003601f168201915b5050505050815250509050919050565b6000818152600b60209081526040918290206003018054835181840281018401909452808452606093928301828280156116e057602002820191906000526020600020905b8154815260200190600101908083116116cc575b50505050509050919050565b6116f46117a8565b73ffffffffffffffffffffffffffffffffffffffff811661179c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6117a581611829565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611793565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156118d9579160200282015b828111156118d95782518255916020019190600101906118be565b506118e5929150611a99565b5090565b8280548282559060005260206000209081019282156118d9579160200282015b828111156118d957825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611909565b8280548282559060005260206000209081019282156119b0579160200282015b828111156119b057825180516119a091849160209091019061189e565b5091602001919060010190611983565b506118e5929150611aae565b82805482825590600052602060002090601f016020900481019282156118d95791602002820160005b83821115611a3157835183826101000a81548160ff02191690836003811115611a1057611a10612303565b021790555092602001926001016020816000010492830192600103026119e5565b8015611a5e5782816101000a81549060ff0219169055600101602081600001049283019260010302611a31565b50506118e5929150611a99565b6040518060800160405280611a7e611acb565b81526020016000815260200160008152602001606081525090565b5b808211156118e55760008155600101611a9a565b808211156118e5576000611ac28282611b79565b50600101611aae565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611b746040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b50805460008255906000526020600020908101906117a59190611a99565b600060208284031215611ba957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611c0257611c02611bb0565b60405290565b6040516080810167ffffffffffffffff81118282101715611c0257611c02611bb0565b604051610120810167ffffffffffffffff81118282101715611c0257611c02611bb0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c9657611c96611bb0565b604052919050565b600082601f830112611caf57600080fd5b813567ffffffffffffffff811115611cc957611cc9611bb0565b611cfa60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611c4f565b818152846020838601011115611d0f57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d5057600080fd5b919050565b600067ffffffffffffffff821115611d6f57611d6f611bb0565b5060051b60200190565b600082601f830112611d8a57600080fd5b81356020611d9f611d9a83611d55565b611c4f565b82815260059290921b84018101918181019086841115611dbe57600080fd5b8286015b84811015611dd95780358352918301918301611dc2565b509695505050505050565b600082601f830112611df557600080fd5b81356020611e05611d9a83611d55565b82815260059290921b84018101918181019086841115611e2457600080fd5b8286015b84811015611dd957611e3981611d2c565b8352918301918301611e28565b600082601f830112611e5757600080fd5b81356020611e67611d9a83611d55565b82815260059290921b84018101918181019086841115611e8657600080fd5b8286015b84811015611dd957803567ffffffffffffffff811115611eaa5760008081fd5b611eb88986838b0101611d79565b845250918301918301611e8a565b600082601f830112611ed757600080fd5b81356020611ee7611d9a83611d55565b82815260059290921b84018101918181019086841115611f0657600080fd5b8286015b84811015611dd957803560048110611f225760008081fd5b8352918301918301611f0a565b600060c08284031215611f4157600080fd5b611f49611bdf565b9050813567ffffffffffffffff80821115611f6357600080fd5b611f6f85838601611de4565b83526020840135915080821115611f8557600080fd5b611f9185838601611de4565b60208401526040840135915080821115611faa57600080fd5b611fb685838601611de4565b60408401526060840135915080821115611fcf57600080fd5b611fdb85838601611e46565b60608401526080840135915080821115611ff457600080fd5b61200085838601611e46565b608084015260a084013591508082111561201957600080fd5b5061202684828501611ec6565b60a08301525092915050565b60008060006060848603121561204757600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561206d57600080fd5b908501906080828803121561208157600080fd5b612089611c08565b82358281111561209857600080fd5b8301610120818a0312156120ab57600080fd5b6120b3611c2b565b8135848111156120c257600080fd5b6120ce8b828501611c9e565b8252506120dd60208301611d2c565b60208201526120ee60408301611d2c565b604082015260608201358481111561210557600080fd5b6121118b828501611d79565b60608301525060808201358481111561212957600080fd5b6121358b828501611d79565b60808301525060a082013560a082015260c082013560c082015260e082013560e0820152610100808301358581111561216d57600080fd5b6121798c828601611f2f565b828401525050808352505060208301356020820152604083013560408201526060830135828111156121aa57600080fd5b6121b689828601611c9e565b6060830152508093505050509250925092565b6000815180845260005b818110156121ef576020818501810151868301820152016121d3565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561225d57815187529582019590820190600101612241565b509495945050505050565b600081518084526020808501945080840160005b8381101561225d57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161227c565b600081518084526020808501808196508360051b8101915082860160005b858110156122f65782840389526122e484835161222d565b988501989350908401906001016122cc565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261234760c0850182612268565b9050602080840151858303828701526123608382612268565b9250506040840151858303604087015261237a8382612268565b9250506060840151858303606087015261239483826122ae565b925050608084015185830360808701526123ae83826122ae565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156124245785516004808210612411577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835294840194918401916001016123d2565b5090979650505050505050565b60006101208251818552612447828601826121c9565b9150506020830151612471602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612499604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526124b1828261222d565b915050608083015184820360808601526124cb828261222d565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526125048382612332565b9695505050505050565b6080815260006125216080830187612431565b856020840152846040840152828103606084015261253f81856121c9565b979650505050505050565b60006020828403121561255c57600080fd5b813567ffffffffffffffff8082111561257457600080fd5b90830190610120828603121561258957600080fd5b612591611c2b565b61259a83611d2c565b81526125a860208401611d2c565b60208201526125b960408401611d2c565b60408201526125ca60608401611d2c565b60608201526125db60808401611d2c565b60808201526125ec60a08401611d2c565b60a08201526125fd60c08401611d2c565b60c082015261260e60e08401611d2c565b60e0820152610100808401358381111561262757600080fd5b61263388828701611de4565b918301919091525095945050505050565b60208152600082516080602084015261266060a0840182612431565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526126af82826121c9565b95945050505050565b6000602082840312156126ca57600080fd5b6126d382611d2c565b9392505050565b6020815260006126d3602083018461222d565b6020815260006126d36020830184612332565b600181811c9082168061271457607f821691505b60208210810361274d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561279d57600081815260208120601f850160051c8101602086101561277a5750805b601f850160051c820191505b8181101561279957828155600101612786565b5050505b505050565b815167ffffffffffffffff8111156127bc576127bc611bb0565b6127d0816127ca8454612700565b84612753565b602080601f83116001811461282357600084156127ed5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612799565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561287057888601518255948401946001909101908401612851565b50858210156128ac57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156128ce57600080fd5b815163ffffffff811681146126d357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561292357600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612982577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212206cc17041820d128381a895fc421bd9104e4f9be3207b011e6db435ca7ada318a64736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
