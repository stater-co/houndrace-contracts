/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620029b1380380620029b18339810160408190526200003891620003ea565b806200004433620001fc565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a929101906200024c565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015620001f357600d6000836101000151838151811062000159576200015962000511565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110620001ae57620001ae62000511565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001eb8162000527565b90506200012c565b5050506200054f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b805180151581146200032757600080fd5b600060208284031215620003fd57600080fd5b81516001600160401b03808211156200041557600080fd5b9083019061014082860312156200042b57600080fd5b62000435620002e3565b62000440836200030f565b815262000450602084016200030f565b602082015262000463604084016200030f565b604082015262000476606084016200030f565b606082015262000489608084016200030f565b60808201526200049c60a084016200030f565b60a0820152620004af60c084016200030f565b60c0820152620004c260e084016200030f565b60e08201526101008084015183811115620004dc57600080fd5b620004ea888287016200032c565b828401525050610120915062000502828401620003d9565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200054857634e487b7160e01b600052601160045260246000fd5b5060010190565b612452806200055f6000396000f3fe6080604052600436106100ad5760003560e01c80631419f7b3146100b257806326e42cf4146100c75780632a546a38146100e7578063680adc37146101cd578063715018a6146102555780637bbc469e1461026a5780638da5cb5b1461029e578063af640d0f146102cb578063b7dda85e146102ef578063d63a8e111461031c578063d8de65871461035c578063e115234314610409578063e200c85714610429578063f2fde38b14610456575b600080fd5b6100c56100c0366004611c80565b610476565b005b3480156100d357600080fd5b506100c56100e2366004611db0565b61088f565b3480156100f357600080fd5b50610181610102366004611ebd565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600e6020908152604091829020825160808101845290546001600160401b038082168352600160401b8204811693830193909352600160801b8104831693820193909352600160c01b90920416606082015290565b6040516101c4919081516001600160401b039081168252602080840151821690830152604083810151821690830152606092830151169181019190915260800190565b60405180910390f35b3480156101d957600080fd5b506102226101e8366004611ebd565b600e602052600090815260409020546001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b03958616815293851660208501529184169183019190915290911660608201526080016101c4565b34801561026157600080fd5b506100c5610a3e565b34801561027657600080fd5b5061028a610285366004611ebd565b610a52565b6040516101c49897969594939291906120ad565b3480156102aa57600080fd5b506102b3610e8e565b6040516001600160a01b0390911681526020016101c4565b3480156102d757600080fd5b506102e160015481565b6040519081526020016101c4565b3480156102fb57600080fd5b5061030f61030a366004611ebd565b610e9d565b6040516101c49190612122565b34801561032857600080fd5b5061034c6103373660046121e9565b600d6020526000908152604090205460ff1681565b60405190151581526020016101c4565b34801561036857600080fd5b50600254600354600454600554600654600754600854600954600b546103ae986001600160a01b0390811698811697811696811695811694811693811692169060ff1689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c084015290921660e0820152901515610100820152610120016101c4565b34801561041557600080fd5b506100c5610424366004611ebd565b611369565b34801561043557600080fd5b50610449610444366004611ebd565b611459565b6040516101c4919061220b565b34801561046257600080fd5b506100c56104713660046121e9565b6114be565b61047e611534565b60035460608201516040516311a3439360e01b81526001600160a01b03909216916311a34393916104b59160040190815260200190565b600060405180830381600087803b1580156104cf57600080fd5b505af11580156104e3573d6000803e3d6000fd5b5050505060005b60c0820151515181101561063c5760075460c08301515180516001600160a01b039092169163400f959f9190849081106105265761052661221e565b60200260200101518460c001516020015184815181106105485761054861221e565b60200260200101518560c0015160400151858151811061056a5761056a61221e565b60200260200101518660c0015160600151868151811061058c5761058c61221e565b60200260200101518760c001516080015187815181106105ae576105ae61221e565b60200260200101518860c0015160a0015188815181106105d0576105d061221e565b60200260200101516040518763ffffffff1660e01b81526004016105f996959493929190612234565b600060405180830381600087803b15801561061357600080fd5b505af1158015610627573d6000803e3d6000fd5b505050508061063590612294565b90506104ea565b506000828152600c602052604090208151829190819061065c9082612344565b506020828101516001830180546001600160a01b0319166001600160a01b039092169190911790556040830151805161069b92600285019201906115e3565b50606082015160038201556080820151600482015560a0820151600582015560c08201518051805160068401916106d79183916020019061162e565b5060208281015180516106f0926001850192019061162e565b506040820151805161070c91600284019160209091019061162e565b5060608201518051610728916003840191602090910190611683565b5060808201518051610744916004840191602090910190611683565b5060a082015180516107609160058401916020909101906116dc565b50505060e0820151600c820155610100820151600d8201906107829082612344565b5090505060005b81604001515181101561085257600454604083015180516001600160a01b039092169163894f39fc9190849081106107c3576107c361221e565b602002602001015160006040518363ffffffff1660e01b81526004016107f3929190918252602082015260400190565b6020604051808303816000875af1158015610812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108369190612403565b60000361084257600080fd5b61084b81612294565b9050610789565b50817f5440bda56e61e4043ccc7655391e3d5a772beda74e20241e47eb40e95986d1cf826040516108839190612122565b60405180910390a25050565b610897611534565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361095d92600a9291019061162e565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015610a3a57600d600083610100015183815181106109a6576109a661221e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d600084610100015184815181106109f8576109f861221e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610a3381612294565b905061097d565b5050565b610a46611534565b610a506000611593565b565b600c60205260009081526040902080548190610a6d906122bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a99906122bb565b8015610ae65780601f10610abb57610100808354040283529160200191610ae6565b820191906000526020600020905b815481529060010190602001808311610ac957829003601f168201915b50505060018401546003850154600486015460058701546040805160068a01805460e0602082028401810190945260c083018181529a9b6001600160a01b039098169a96995094975092959490938492849190840182828015610b7257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b54575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610bd457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610bb6575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c18575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610cd057600084815260209081902083018054604080518285028101850190915281815292830182828015610cbc57602002820191906000526020600020905b815481526020019060010190808311610ca8575b505050505081526020019060010190610c64565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610d6957600084815260209081902083018054604080518285028101850190915281815292830182828015610d5557602002820191906000526020600020905b815481526020019060010190808311610d41575b505050505081526020019060010190610cfd565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610dec57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610daf5790505b5050505050815250509080600c01549080600d018054610e0b906122bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610e37906122bb565b8015610e845780601f10610e5957610100808354040283529160200191610e84565b820191906000526020600020905b815481529060010190602001808311610e6757829003601f168201915b5050505050905088565b6000546001600160a01b031690565b610ea5611786565b6000828152600c60205260409081902081516101208101909252805482908290610ece906122bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610efa906122bb565b8015610f475780601f10610f1c57610100808354040283529160200191610f47565b820191906000526020600020905b815481529060010190602001808311610f2a57829003601f168201915b505050918352505060018201546001600160a01b03166020808301919091526002830180546040805182850281018501825282815294019392830182828015610faf57602002820191906000526020600020905b815481526020019060010190808311610f9b575b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561103f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611021575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156110a157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611083575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561110357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110e5575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561119d5760008481526020908190208301805460408051828502810185019091528181529283018282801561118957602002820191906000526020600020905b815481526020019060010190808311611175575b505050505081526020019060010190611131565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112365760008481526020908190208301805460408051828502810185019091528181529283018282801561122257602002820191906000526020600020905b81548152602001906001019080831161120e575b5050505050815260200190600101906111ca565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156112b957602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161127c5790505b5050505050815250508152602001600c8201548152602001600d820180546112e0906122bb565b80601f016020809104026020016040519081016040528092919081815260200182805461130c906122bb565b80156113595780601f1061132e57610100808354040283529160200191611359565b820191906000526020600020905b81548152906001019060200180831161133c57829003601f168201915b5050505050815250509050919050565b611371611534565b478111156113de5760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6113e6610e8e565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506114565760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016113d5565b50565b6000818152600c60209081526040918290206002018054835181840281018401909452808452606093928301828280156114b257602002820191906000526020600020905b81548152602001906001019080831161149e575b50505050509050919050565b6114c6611534565b6001600160a01b03811661152b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016113d5565b61145681611593565b3361153d610e8e565b6001600160a01b031614610a505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016113d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561161e579160200282015b8281111561161e578251825591602001919060010190611603565b5061162a929150611812565b5090565b82805482825590600052602060002090810192821561161e579160200282015b8281111561161e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061164e565b8280548282559060005260206000209081019282156116d0579160200282015b828111156116d057825180516116c09184916020909101906115e3565b50916020019190600101906116a3565b5061162a929150611827565b8280548282559060005260206000209060070160089004810192821561161e5791602002820160005b8382111561174957835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302611705565b80156117795782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611749565b505061162a929150611812565b6040518061012001604052806060815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016117fe6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b5b8082111561162a5760008155600101611813565b8082111561162a57600061183b8282611844565b50600101611827565b50805460008255906000526020600020908101906114569190611812565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561189a5761189a611862565b60405290565b60405161012081016001600160401b038111828210171561189a5761189a611862565b60405161014081016001600160401b038111828210171561189a5761189a611862565b604051601f8201601f191681016001600160401b038111828210171561190e5761190e611862565b604052919050565b600082601f83011261192757600080fd5b81356001600160401b0381111561194057611940611862565b611953601f8201601f19166020016118e6565b81815284602083860101111561196857600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b038116811461199c57600080fd5b919050565b60006001600160401b038211156119ba576119ba611862565b5060051b60200190565b600082601f8301126119d557600080fd5b813560206119ea6119e5836119a1565b6118e6565b82815260059290921b84018101918181019086841115611a0957600080fd5b8286015b84811015611a245780358352918301918301611a0d565b509695505050505050565b600082601f830112611a4057600080fd5b81356020611a506119e5836119a1565b82815260059290921b84018101918181019086841115611a6f57600080fd5b8286015b84811015611a2457611a8481611985565b8352918301918301611a73565b600082601f830112611aa257600080fd5b81356020611ab26119e5836119a1565b82815260059290921b84018101918181019086841115611ad157600080fd5b8286015b84811015611a245780356001600160401b03811115611af45760008081fd5b611b028986838b01016119c4565b845250918301918301611ad5565b600082601f830112611b2157600080fd5b81356020611b316119e5836119a1565b82815260059290921b84018101918181019086841115611b5057600080fd5b8286015b84811015611a2457803563ffffffff81168114611b715760008081fd5b8352918301918301611b54565b600060c08284031215611b9057600080fd5b611b98611878565b905081356001600160401b0380821115611bb157600080fd5b611bbd85838601611a2f565b83526020840135915080821115611bd357600080fd5b611bdf85838601611a2f565b60208401526040840135915080821115611bf857600080fd5b611c0485838601611a2f565b60408401526060840135915080821115611c1d57600080fd5b611c2985838601611a91565b60608401526080840135915080821115611c4257600080fd5b611c4e85838601611a91565b608084015260a0840135915080821115611c6757600080fd5b50611c7484828501611b10565b60a08301525092915050565b60008060408385031215611c9357600080fd5b8235915060208301356001600160401b0380821115611cb157600080fd5b908401906101208287031215611cc657600080fd5b611cce6118a0565b823582811115611cdd57600080fd5b611ce988828601611916565b825250611cf860208401611985565b6020820152604083013582811115611d0f57600080fd5b611d1b888286016119c4565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013582811115611d5157600080fd5b611d5d88828601611b7e565b60c08301525060e083013560e08201526101008084013583811115611d8157600080fd5b611d8d89828701611916565b8284015250508093505050509250929050565b8035801515811461199c57600080fd5b600060208284031215611dc257600080fd5b81356001600160401b0380821115611dd957600080fd5b908301906101408286031215611dee57600080fd5b611df66118c3565b611dff83611985565b8152611e0d60208401611985565b6020820152611e1e60408401611985565b6040820152611e2f60608401611985565b6060820152611e4060808401611985565b6080820152611e5160a08401611985565b60a0820152611e6260c08401611985565b60c0820152611e7360e08401611985565b60e08201526101008084013583811115611e8c57600080fd5b611e9888828701611a2f565b8284015250506101209150611eae828401611da0565b91810191909152949350505050565b600060208284031215611ecf57600080fd5b5035919050565b6000815180845260005b81811015611efc57602081850181015186830182015201611ee0565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611f555781516001600160a01b031687529582019590820190600101611f30565b509495945050505050565b600081518084526020808501945080840160005b83811015611f5557815187529582019590820190600101611f74565b600082825180855260208086019550808260051b84010181860160005b84811015611fdb57601f19868403018952611fc9838351611f60565b98840198925090830190600101611fad565b5090979650505050505050565b6000815160c08452611ffd60c0850182611f1c565b9050602080840151858303828701526120168382611f1c565b925050604084015185830360408701526120308382611f1c565b9250506060840151858303606087015261204a8382611f90565b925050608084015185830360808701526120648382611f90565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611a2457845163ffffffff168252938301936001929092019190830190612087565b60006101008083526120c18184018c611ed6565b6001600160a01b038b166020850152604084018a9052606084018990526080840188905283810360a085015290506120f98187611fe8565b90508460c084015282810360e08401526121138185611ed6565b9b9a5050505050505050505050565b6020815260008251610120806020850152612141610140850183611ed6565b9150602085015161215d60408601826001600160a01b03169052565b506040850151601f198086850301606087015261217a8483611f60565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e08701526121b58483611fe8565b60e08801516101008881019190915288015187820390920184880152935090506121df8382611ed6565b9695505050505050565b6000602082840312156121fb57600080fd5b61220482611985565b9392505050565b6020815260006122046020830184611f60565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03878116825286811660208301528516604082015260c06060820181905260009061226890830186611f60565b828103608084015261227a8186611f60565b91505063ffffffff831660a0830152979650505050505050565b6000600182016122b457634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806122cf57607f821691505b6020821081036122ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561233f57600081815260208120601f850160051c8101602086101561231c5750805b601f850160051c820191505b8181101561233b57828155600101612328565b5050505b505050565b81516001600160401b0381111561235d5761235d611862565b6123718161236b84546122bb565b846122f5565b602080601f8311600181146123a6576000841561238e5750858301515b600019600386901b1c1916600185901b17855561233b565b600085815260208120601f198616915b828110156123d5578886015182559484019460019091019084016123b6565b50858210156123f35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561241557600080fd5b505191905056fea2646970667358221220945b0c481a615cbba4f38991d5b57de382acc7cdac7c88f683aee1e0792cccfe64736f6c63430008100033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
