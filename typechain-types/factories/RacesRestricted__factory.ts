/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620032de380380620032de8339810160408190526200003891620003ea565b806200004433620001fc565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a929101906200024c565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015620001f357600d6000836101000151838151811062000159576200015962000511565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110620001ae57620001ae62000511565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001eb8162000527565b90506200012c565b5050506200054f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b805180151581146200032757600080fd5b600060208284031215620003fd57600080fd5b81516001600160401b03808211156200041557600080fd5b9083019061014082860312156200042b57600080fd5b62000435620002e3565b62000440836200030f565b815262000450602084016200030f565b602082015262000463604084016200030f565b604082015262000476606084016200030f565b606082015262000489608084016200030f565b60808201526200049c60a084016200030f565b60a0820152620004af60c084016200030f565b60c0820152620004c260e084016200030f565b60e08201526101008084015183811115620004dc57600080fd5b620004ea888287016200032c565b828401525050610120915062000502828401620003d9565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200054857634e487b7160e01b600052601160045260246000fd5b5060010190565b612d7f806200055f6000396000f3fe6080604052600436106100dd5760003560e01c8063af640d0f1161007f578063d8de658711610059578063d8de6587146103e2578063e1152343146104a9578063e200c857146104c9578063f2fde38b146104f657600080fd5b8063af640d0f14610351578063b7dda85e14610375578063d63a8e11146103a257600080fd5b8063680adc37116100bb578063680adc3714610226578063715018a6146102d75780637bbc469e146102ec5780638da5cb5b1461031c57600080fd5b806326e42cf4146100e25780632a546a381461010457806330e5443814610213575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461209e565b610516565b005b34801561011057600080fd5b506101c661011f3660046121ac565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600e60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b60405161020a9190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b61010261022136600461249a565b61074d565b34801561023257600080fd5b506102a36102413660046121ac565b600e6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff9586168152938516602085015291841691830191909152909116606082015260800161020a565b3480156102e357600080fd5b50610102610d66565b3480156102f857600080fd5b5061030c6103073660046121ac565b610d7a565b60405161020a9493929190612978565b34801561032857600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161020a565b34801561035d57600080fd5b5061036760015481565b60405190815260200161020a565b34801561038157600080fd5b506103956103903660046121ac565b6112ee565b60405161020a91906129b4565b3480156103ae57600080fd5b506103d26103bd366004612a28565b600d6020526000908152604090205460ff1681565b604051901515815260200161020a565b3480156103ee57600080fd5b50600254600354600454600554600654600754600854600954600b546104419873ffffffffffffffffffffffffffffffffffffffff90811698811697811696811695811694811693811692169060ff1689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c084015290921660e08201529015156101008201526101200161020a565b3480156104b557600080fd5b506101026104c43660046121ac565b61187a565b3480156104d557600080fd5b506104e96104e43660046121ac565b6119b5565b60405161020a9190612a4a565b34801561050257600080fd5b50610102610511366004612a28565b611a1a565b61051e611ace565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361060992600a92910190611bc4565b506101209190910151600990910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560005b8161010001515181101561074957600d6000836101000151838151811061067057610670612a5d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d600084610100015184815181106106dc576106dc612a5d565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561074281612a8c565b9050610647565b5050565b610755611ace565b600354815160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a34393916107b39160040190815260200190565b600060405180830381600087803b1580156107cd57600080fd5b505af11580156107e1573d6000803e3d6000fd5b5050505060005b815161010001515151811015610964576007548251610100015151805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c291908490811061083557610835612a5d565b60200260200101518460000151610100015160200151848151811061085c5761085c612a5d565b60200260200101518560000151610100015160400151858151811061088357610883612a5d565b6020026020010151866000015161010001516060015186815181106108aa576108aa612a5d565b6020026020010151876000015161010001516080015187815181106108d1576108d1612a5d565b60200260200101518860000151610100015160a0015188815181106108f8576108f8612a5d565b60200260200101516040518763ffffffff1660e01b815260040161092196959493929190612aeb565b600060405180830381600087803b15801561093b57600080fd5b505af115801561094f573d6000803e3d6000fd5b505050508061095d90612a8c565b90506107e8565b506000838152600c602052604090208151805183929190829081906109899082612bf0565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491909316911617905560608301518051610a019260038501920190611c4e565b5060808201518051610a1d916004840191602090910190611c4e565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610a5a91839160200190611bc4565b506020828101518051610a739260018501920190611bc4565b5060408201518051610a8f916002840191602090910190611bc4565b5060608201518051610aab916003840191602090910190611c89565b5060808201518051610ac7916004840191602090910190611c89565b5060a08201518051610ae3916005840191602090910190611ce2565b505050506020830151600e830155506040820151600f82015560608201516010820190610b109082612bf0565b5050600480546040517fe3c5fc040000000000000000000000000000000000000000000000000000000081529182018590526000925073ffffffffffffffffffffffffffffffffffffffff169063e3c5fc0490602401602060405180830381865afa158015610b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba79190612d0a565b905060005b82516060015151811015610d2757600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610bf557610bf5612a5d565b602002602001015160006040518363ffffffff1660e01b8152600401610c25929190918252602082015260400190565b6020604051808303816000875af1158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190612d30565b600003610c7457600080fd5b600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc919084908110610caf57610caf612a5d565b6020026020010151846040518363ffffffff1660e01b8152600401610ce492919091825263ffffffff16602082015260400190565b600060405180830381600087803b158015610cfe57600080fd5b505af1158015610d12573d6000803e3d6000fd5b5050505080610d2090612a8c565b9050610bac565b50837fc02fecfc0d93a1af1b36bdc51bb32e39003cb94a5128ba50433165f8d25e0eac83604051610d5891906129b4565b60405180910390a250505050565b610d6e611ace565b610d786000611b4f565b565b600c6020528060005260406000206000915090508060000160405180610120016040529081600082018054610dae90612b4e565b80601f0160208091040260200160405190810160405280929190818152602001828054610dda90612b4e565b8015610e275780601f10610dfc57610100808354040283529160200191610e27565b820191906000526020600020905b815481529060010190602001808311610e0a57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610eb557602002820191906000526020600020905b815481526020019060010190808311610ea1575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610f0d57602002820191906000526020600020905b815481526020019060010190808311610ef9575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610faa57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f7f575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561101957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fee575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561108857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161105d575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111225760008481526020908190208301805460408051828502810185019091528181529283018282801561110e57602002820191906000526020600020905b8154815260200190600101908083116110fa575b5050505050815260200190600101906110b6565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156111bb576000848152602090819020830180546040805182850281018501909152818152928301828280156111a757602002820191906000526020600020905b815481526020019060010190808311611193575b50505050508152602001906001019061114f565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561124257602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156112205761122061276b565b8152602060019283018181049485019490930390920291018084116112015790505b505050505081525050815250509080600e01549080600f01549080601001805461126b90612b4e565b80601f016020809104026020016040519081016040528092919081815260200182805461129790612b4e565b80156112e45780601f106112b9576101008083540402835291602001916112e4565b820191906000526020600020905b8154815290600101906020018083116112c757829003601f168201915b5050505050905084565b6112f6611d91565b6000828152600c60205260409081902081516101a0810190925280548290608082019083908290829061132890612b4e565b80601f016020809104026020016040519081016040528092919081815260200182805461135490612b4e565b80156113a15780601f10611376576101008083540402835291602001916113a1565b820191906000526020600020905b81548152906001019060200180831161138457829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561142f57602002820191906000526020600020905b81548152602001906001019080831161141b575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561148757602002820191906000526020600020905b815481526020019060010190808311611473575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561152457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116114f9575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561159357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611568575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561160257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116115d7575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561169c5760008481526020908190208301805460408051828502810185019091528181529283018282801561168857602002820191906000526020600020905b815481526020019060010190808311611674575b505050505081526020019060010190611630565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156117355760008481526020908190208301805460408051828502810185019091528181529283018282801561172157602002820191906000526020600020905b81548152602001906001019080831161170d575b5050505050815260200190600101906116c9565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156117bc57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561179a5761179a61276b565b81526020600192830181810494850194909303909202910180841161177b5790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546117f190612b4e565b80601f016020809104026020016040519081016040528092919081815260200182805461181d90612b4e565b801561186a5780601f1061183f5761010080835404028352916020019161186a565b820191906000526020600020905b81548152906001019060200180831161184d57829003601f168201915b5050505050815250509050919050565b611882611ace565b47811115611917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f193505050506119b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f207769746864726177000000000000604482015260640161190e565b50565b6000818152600c6020908152604091829020600301805483518184028101840190945280845260609392830182828015611a0e57602002820191906000526020600020905b8154815260200190600101908083116119fa575b50505050509050919050565b611a22611ace565b73ffffffffffffffffffffffffffffffffffffffff8116611ac5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161190e565b6119b281611b4f565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161190e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611c3e579160200282015b82811115611c3e57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611be4565b50611c4a929150611dbf565b5090565b828054828255906000526020600020908101928215611c3e579160200282015b82811115611c3e578251825591602001919060010190611c6e565b828054828255906000526020600020908101928215611cd6579160200282015b82811115611cd65782518051611cc6918491602090910190611c4e565b5091602001919060010190611ca9565b50611c4a929150611dd4565b82805482825590600052602060002090601f01602090048101928215611c3e5791602002820160005b83821115611d5757835183826101000a81548160ff02191690836003811115611d3657611d3661276b565b02179055509260200192600101602081600001049283019260010302611d0b565b8015611d845782816101000a81549060ff0219169055600101602081600001049283019260010302611d57565b5050611c4a929150611dbf565b6040518060800160405280611da4611df1565b81526020016000815260200160008152602001606081525090565b5b80821115611c4a5760008155600101611dc0565b80821115611c4a576000611de88282611e9f565b50600101611dd4565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611e9a6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b50805460008255906000526020600020908101906119b29190611dbf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611f1057611f10611ebd565b60405290565b60405160c0810167ffffffffffffffff81118282101715611f1057611f10611ebd565b6040516080810167ffffffffffffffff81118282101715611f1057611f10611ebd565b604051610120810167ffffffffffffffff81118282101715611f1057611f10611ebd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611fc757611fc7611ebd565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611ff357600080fd5b919050565b600067ffffffffffffffff82111561201257612012611ebd565b5060051b60200190565b600082601f83011261202d57600080fd5b8135602061204261203d83611ff8565b611f80565b82815260059290921b8401810191818101908684111561206157600080fd5b8286015b848110156120835761207681611fcf565b8352918301918301612065565b509695505050505050565b80358015158114611ff357600080fd5b6000602082840312156120b057600080fd5b813567ffffffffffffffff808211156120c857600080fd5b9083019061014082860312156120dd57600080fd5b6120e5611eec565b6120ee83611fcf565b81526120fc60208401611fcf565b602082015261210d60408401611fcf565b604082015261211e60608401611fcf565b606082015261212f60808401611fcf565b608082015261214060a08401611fcf565b60a082015261215160c08401611fcf565b60c082015261216260e08401611fcf565b60e0820152610100808401358381111561217b57600080fd5b6121878882870161201c565b828401525050610120915061219d82840161208e565b91810191909152949350505050565b6000602082840312156121be57600080fd5b5035919050565b600082601f8301126121d657600080fd5b813567ffffffffffffffff8111156121f0576121f0611ebd565b61222160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611f80565b81815284602083860101111561223657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261226457600080fd5b8135602061227461203d83611ff8565b82815260059290921b8401810191818101908684111561229357600080fd5b8286015b848110156120835780358352918301918301612297565b600082601f8301126122bf57600080fd5b813560206122cf61203d83611ff8565b82815260059290921b840181019181810190868411156122ee57600080fd5b8286015b8481101561208357803567ffffffffffffffff8111156123125760008081fd5b6123208986838b0101612253565b8452509183019183016122f2565b600082601f83011261233f57600080fd5b8135602061234f61203d83611ff8565b82815260059290921b8401810191818101908684111561236e57600080fd5b8286015b848110156120835780356004811061238a5760008081fd5b8352918301918301612372565b600060c082840312156123a957600080fd5b6123b1611f16565b9050813567ffffffffffffffff808211156123cb57600080fd5b6123d78583860161201c565b835260208401359150808211156123ed57600080fd5b6123f98583860161201c565b6020840152604084013591508082111561241257600080fd5b61241e8583860161201c565b6040840152606084013591508082111561243757600080fd5b612443858386016122ae565b6060840152608084013591508082111561245c57600080fd5b612468858386016122ae565b608084015260a084013591508082111561248157600080fd5b5061248e8482850161232e565b60a08301525092915050565b6000806000606084860312156124af57600080fd5b8335925060208401359150604084013567ffffffffffffffff808211156124d557600080fd5b90850190608082880312156124e957600080fd5b6124f1611f39565b82358281111561250057600080fd5b8301610120818a03121561251357600080fd5b61251b611f5c565b81358481111561252a57600080fd5b6125368b8285016121c5565b82525061254560208301611fcf565b602082015261255660408301611fcf565b604082015260608201358481111561256d57600080fd5b6125798b828501612253565b60608301525060808201358481111561259157600080fd5b61259d8b828501612253565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015261010080830135858111156125d557600080fd5b6125e18c828601612397565b8284015250508083525050602083013560208201526040830135604082015260608301358281111561261257600080fd5b61261e898286016121c5565b6060830152508093505050509250925092565b6000815180845260005b818110156126575760208185018101518683018201520161263b565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156126c5578151875295820195908201906001016126a9565b509495945050505050565b600081518084526020808501945080840160005b838110156126c557815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016126e4565b600081518084526020808501808196508360051b8101915082860160005b8581101561275e57828403895261274c848351612695565b98850198935090840190600101612734565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106127d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c084526127ea60c08501826126d0565b90506020808401518583038287015261280383826126d0565b9250506040840151858303604087015261281d83826126d0565b925050606084015185830360608701526128378382612716565b925050608084015185830360808701526128518382612716565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156120835761288782865161279a565b938301936001929092019190830190612874565b600061012082518185526128b182860182612631565b91505060208301516128db602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612903604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261291b8282612695565b915050608083015184820360808601526129358282612695565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261296e83826127d5565b9695505050505050565b60808152600061298b608083018761289b565b85602084015284604084015282810360608401526129a98185612631565b979650505050505050565b6020815260008251608060208401526129d060a084018261289b565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016080850152612a1f8282612631565b95945050505050565b600060208284031215612a3a57600080fd5b612a4382611fcf565b9392505050565b602081526000612a436020830184612695565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ae4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c06060830152612b2c60c0830186612695565b8281036080840152612b3e8186612695565b9150506129a960a083018461279a565b600181811c90821680612b6257607f821691505b602082108103612b9b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115612beb57600081815260208120601f850160051c81016020861015612bc85750805b601f850160051c820191505b81811015612be757828155600101612bd4565b5050505b505050565b815167ffffffffffffffff811115612c0a57612c0a611ebd565b612c1e81612c188454612b4e565b84612ba1565b602080601f831160018114612c715760008415612c3b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612be7565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612cbe57888601518255948401946001909101908401612c9f565b5085821015612cfa57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612d1c57600080fd5b815163ffffffff81168114612a4357600080fd5b600060208284031215612d4257600080fd5b505191905056fea2646970667358221220429c4d345e828e0a9512c8580026a3c11a5c585116b4317b97eb8eb9e22153db64736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
