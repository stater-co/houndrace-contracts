/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002c8d38038062002c8d8339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b61279d80620004f06000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b7dda85e11610081578063d8de65871161005b578063d8de6587146101bb578063e200c85714610256578063f2fde38b1461027657600080fd5b8063b7dda85e14610155578063b8f1835914610175578063d63a8e111461018857600080fd5b80637bbc469e116100b25780637bbc469e146100eb5780638da5cb5b14610116578063af640d0f1461013e57600080fd5b806326bed1cc146100ce578063715018a6146100e3575b600080fd5b6100e16100dc366004611e41565b610289565b005b6100e16107a6565b6100fe6100f9366004611fce565b6107ba565b60405161010d9392919061231c565b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010d565b61014760015481565b60405190815260200161010d565b610168610163366004611fce565b610d28565b60405161010d9190612347565b6100e16101833660046123b1565b6112aa565b6101ab610196366004612496565b600b6020526000908152604090205460ff1681565b604051901515815260200161010d565b6002546003546004546005546006546007546008546102009673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e00161010d565b610269610264366004611fce565b611492565b60405161010d91906124b8565b6100e1610284366004612496565b6114f7565b6102916115b3565b600254815160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a34393916102ef9160040190815260200190565b600060405180830381600087803b15801561030957600080fd5b505af115801561031d573d6000803e3d6000fd5b5050600854835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061037c916004016124cb565b600060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b5050506000848152600a6020526040902082518051849350829081906103d09082612580565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161044892600385019201906116a9565b50608082015180516104649160048401916020909101906116a9565b5060a0820151600582015560c0820151600682015560e082015160078201556101008201518051805160088401916104a1918391602001906116f4565b5060208281015180516104ba92600185019201906116f4565b50604082015180516104d69160028401916020909101906116f4565b50606082015180516104f291600384019160209091019061176e565b506080820151805161050e91600484019160209091019061176e565b5060a0820151805161052a9160058401916020909101906117c7565b505050506020830151600e830155506040820151600f82019061054d9082612580565b50506007546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018590526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e6919061269a565b905060005b8251606001515181101561076657600354835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610634576106346126c0565b602002602001015160006040518363ffffffff1660e01b8152600401610664929190918252602082015260400190565b6020604051808303816000875af1158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a791906126ef565b6000036106b357600080fd5b600354835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106106ee576106ee6126c0565b6020026020010151846040518363ffffffff1660e01b815260040161072392919091825263ffffffff16602082015260400190565b600060405180830381600087803b15801561073d57600080fd5b505af1158015610751573d6000803e3d6000fd5b505050508061075f90612708565b90506105eb565b5082847fb42f3bb275d4341cadee516a71ee5c14fff30d5666be77fa72d7a2dd1c5d4d3f846040516107989190612347565b60405180910390a350505050565b6107ae6115b3565b6107b86000611634565b565b600a60205280600052604060002060009150905080600001604051806101200160405290816000820180546107ee906124de565b80601f016020809104026020016040519081016040528092919081815260200182805461081a906124de565b80156108675780601f1061083c57610100808354040283529160200191610867565b820191906000526020600020905b81548152906001019060200180831161084a57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156108f557602002820191906000526020600020905b8154815260200190600101908083116108e1575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561094d57602002820191906000526020600020905b815481526020019060010190808311610939575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156109ea57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116109bf575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a5957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a2e575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ac857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a9d575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b6257600084815260209081902083018054604080518285028101850190915281815292830182828015610b4e57602002820191906000526020600020905b815481526020019060010190808311610b3a575b505050505081526020019060010190610af6565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610bfb57600084815260209081902083018054604080518285028101850190915281815292830182828015610be757602002820191906000526020600020905b815481526020019060010190808311610bd3575b505050505081526020019060010190610b8f565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610c8257602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610c6057610c6061211e565b815260206001928301818104948501949093039092029101808411610c415790505b505050505081525050815250509080600e01549080600f018054610ca5906124de565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd1906124de565b8015610d1e5780601f10610cf357610100808354040283529160200191610d1e565b820191906000526020600020905b815481529060010190602001808311610d0157829003601f168201915b5050505050905083565b610d30611876565b6000828152600a60205260409081902081516101808101909252805482906060820190839082908290610d62906124de565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8e906124de565b8015610ddb5780601f10610db057610100808354040283529160200191610ddb565b820191906000526020600020905b815481529060010190602001808311610dbe57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610e6957602002820191906000526020600020905b815481526020019060010190808311610e55575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ec157602002820191906000526020600020905b815481526020019060010190808311610ead575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610f5e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f33575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610fcd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fa2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561103c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611011575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110d6576000848152602090819020830180546040805182850281018501909152818152928301828280156110c257602002820191906000526020600020905b8154815260200190600101908083116110ae575b50505050508152602001906001019061106a565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561116f5760008481526020908190208301805460408051828502810185019091528181529283018282801561115b57602002820191906000526020600020905b815481526020019060010190808311611147575b505050505081526020019060010190611103565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156111f657602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156111d4576111d461211e565b8152602060019283018181049485019490930390920291018084116111b55790505b505050505081525050815250508152602001600e8201548152602001600f82018054611221906124de565b80601f016020809104026020016040519081016040528092919081815260200182805461124d906124de565b801561129a5780601f1061126f5761010080835404028352916020019161129a565b820191906000526020600020905b81548152906001019060200180831161127d57829003601f168201915b5050505050815250509050919050565b6112b26115b3565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493611388926009929101906116f4565b5090505060005b8160e001515181101561148e57600b60008360e0015183815181106113b6576113b66126c0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e001518481518110611421576114216126c0565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561148781612708565b905061138f565b5050565b6000818152600a60209081526040918290206003018054835181840281018401909452808452606093928301828280156114eb57602002820191906000526020600020905b8154815260200190600101908083116114d7575b50505050509050919050565b6114ff6115b3565b73ffffffffffffffffffffffffffffffffffffffff81166115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6115b081611634565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161159e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156116e4579160200282015b828111156116e45782518255916020019190600101906116c9565b506116f092915061189d565b5090565b8280548282559060005260206000209081019282156116e4579160200282015b828111156116e457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611714565b8280548282559060005260206000209081019282156117bb579160200282015b828111156117bb57825180516117ab9184916020909101906116a9565b509160200191906001019061178e565b506116f09291506118b2565b82805482825590600052602060002090601f016020900481019282156116e45791602002820160005b8382111561183c57835183826101000a81548160ff0219169083600381111561181b5761181b61211e565b021790555092602001926001016020816000010492830192600103026117f0565b80156118695782816101000a81549060ff021916905560010160208160000104928301926001030261183c565b50506116f092915061189d565b60405180606001604052806118896118cf565b815260200160008152602001606081525090565b5b808211156116f0576000815560010161189e565b808211156116f05760006118c6828261197d565b506001016118b2565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016119786040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b50805460008255906000526020600020908101906115b0919061189d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156119ed576119ed61199b565b60405290565b6040516060810167ffffffffffffffff811182821017156119ed576119ed61199b565b604051610120810167ffffffffffffffff811182821017156119ed576119ed61199b565b604051610100810167ffffffffffffffff811182821017156119ed576119ed61199b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611aa557611aa561199b565b604052919050565b600082601f830112611abe57600080fd5b813567ffffffffffffffff811115611ad857611ad861199b565b611b0960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611a5e565b818152846020838601011115611b1e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b5f57600080fd5b919050565b600067ffffffffffffffff821115611b7e57611b7e61199b565b5060051b60200190565b600082601f830112611b9957600080fd5b81356020611bae611ba983611b64565b611a5e565b82815260059290921b84018101918181019086841115611bcd57600080fd5b8286015b84811015611be85780358352918301918301611bd1565b509695505050505050565b600082601f830112611c0457600080fd5b81356020611c14611ba983611b64565b82815260059290921b84018101918181019086841115611c3357600080fd5b8286015b84811015611be857611c4881611b3b565b8352918301918301611c37565b600082601f830112611c6657600080fd5b81356020611c76611ba983611b64565b82815260059290921b84018101918181019086841115611c9557600080fd5b8286015b84811015611be857803567ffffffffffffffff811115611cb95760008081fd5b611cc78986838b0101611b88565b845250918301918301611c99565b600082601f830112611ce657600080fd5b81356020611cf6611ba983611b64565b82815260059290921b84018101918181019086841115611d1557600080fd5b8286015b84811015611be857803560048110611d315760008081fd5b8352918301918301611d19565b600060c08284031215611d5057600080fd5b611d586119ca565b9050813567ffffffffffffffff80821115611d7257600080fd5b611d7e85838601611bf3565b83526020840135915080821115611d9457600080fd5b611da085838601611bf3565b60208401526040840135915080821115611db957600080fd5b611dc585838601611bf3565b60408401526060840135915080821115611dde57600080fd5b611dea85838601611c55565b60608401526080840135915080821115611e0357600080fd5b611e0f85838601611c55565b608084015260a0840135915080821115611e2857600080fd5b50611e3584828501611cd5565b60a08301525092915050565b600080600060608486031215611e5657600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611e7c57600080fd5b9085019060608288031215611e9057600080fd5b611e986119f3565b823582811115611ea757600080fd5b8301610120818a031215611eba57600080fd5b611ec2611a16565b813584811115611ed157600080fd5b611edd8b828501611aad565b825250611eec60208301611b3b565b6020820152611efd60408301611b3b565b6040820152606082013584811115611f1457600080fd5b611f208b828501611b88565b606083015250608082013584811115611f3857600080fd5b611f448b828501611b88565b60808301525060a082013560a082015260c082013560c082015260e082013560e08201526101008083013585811115611f7c57600080fd5b611f888c828601611d3e565b828401525050808352505060208301356020820152604083013582811115611faf57600080fd5b611fbb89828601611aad565b6040830152508093505050509250925092565b600060208284031215611fe057600080fd5b5035919050565b6000815180845260005b8181101561200d57602081850181015186830182015201611ff1565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561207b5781518752958201959082019060010161205f565b509495945050505050565b600081518084526020808501945080840160005b8381101561207b57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161209a565b6000815180845260208085019450848260051b860182860160005b858110156121115783830389526120ff83835161204b565b988501989250908401906001016120e7565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261216260c0850182612086565b90506020808401518583038287015261217b8382612086565b925050604084015185830360408701526121958382612086565b925050606084015185830360608701526121af83826120cc565b925050608084015185830360808701526121c983826120cc565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015612111578551600480821061222c577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835294840194918401916001016121ed565b6000610120825181855261225582860182611fe7565b915050602083015161227f602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516122a7604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526122bf828261204b565b915050608083015184820360808601526122d9828261204b565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612312838261214d565b9695505050505050565b60608152600061232f606083018661223f565b84602084015282810360408401526123128185611fe7565b602081526000825160606020840152612363608084018261223f565b90506020840151604084015260408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526123a88282611fe7565b95945050505050565b6000602082840312156123c357600080fd5b813567ffffffffffffffff808211156123db57600080fd5b9083019061010082860312156123f057600080fd5b6123f8611a3a565b61240183611b3b565b815261240f60208401611b3b565b602082015261242060408401611b3b565b604082015261243160608401611b3b565b606082015261244260808401611b3b565b608082015261245360a08401611b3b565b60a082015261246460c08401611b3b565b60c082015260e08301358281111561247b57600080fd5b61248787828601611bf3565b60e08301525095945050505050565b6000602082840312156124a857600080fd5b6124b182611b3b565b9392505050565b6020815260006124b1602083018461204b565b6020815260006124b1602083018461214d565b600181811c908216806124f257607f821691505b60208210810361252b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561257b57600081815260208120601f850160051c810160208610156125585750805b601f850160051c820191505b8181101561257757828155600101612564565b5050505b505050565b815167ffffffffffffffff81111561259a5761259a61199b565b6125ae816125a884546124de565b84612531565b602080601f83116001811461260157600084156125cb5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612577565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561264e5788860151825594840194600190910190840161262f565b508582101561268a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156126ac57600080fd5b815163ffffffff811681146124b157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561270157600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612760577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220cf6b38d148e0a9117ea27e8d6f4f010f87acfe5a446f80e365e80b0f6b04345364736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
