/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b506040516200315d3803806200315d8339810160408190526200003891620003ff565b80620000443362000211565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b9291019062000261565b506101409190910151600a909101805460ff191691151591909117905560005b816101200151518110156200020857600e600083610120015183815181106200016e576200016e6200053a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110620001c357620001c36200053a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002008162000550565b905062000141565b50505062000578565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000282565b50620002c7929150620002cb565b5090565b5b80821115620002c75760008155600101620002cc565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156200031e576200031e620002e2565b60405290565b80516001600160a01b03811681146200033c57600080fd5b919050565b600082601f8301126200035357600080fd5b815160206001600160401b0380831115620003725762000372620002e2565b8260051b604051601f19603f830116810181811084821117156200039a576200039a620002e2565b604052938452858101830193838101925087851115620003b957600080fd5b83870191505b84821015620003e357620003d38262000324565b83529183019190830190620003bf565b979650505050505050565b805180151581146200033c57600080fd5b6000602082840312156200041257600080fd5b81516001600160401b03808211156200042a57600080fd5b9083019061016082860312156200044057600080fd5b6200044a620002f8565b620004558362000324565b8152620004656020840162000324565b6020820152620004786040840162000324565b60408201526200048b6060840162000324565b60608201526200049e6080840162000324565b6080820152620004b160a0840162000324565b60a0820152620004c460c0840162000324565b60c0820152620004d760e0840162000324565b60e0820152610100620004ec81850162000324565b9082015261012083810151838111156200050557600080fd5b620005138882870162000341565b82840152505061014091506200052b828401620003ee565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200057157634e487b7160e01b600052601160045260246000fd5b5060010190565b612bd580620005886000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063af640d0f1161008c578063d8de658711610066578063d8de65871461037a578063e115234314610443578063e200c85714610456578063f2fde38b1461047657600080fd5b8063af640d0f14610310578063b7dda85e14610327578063d63a8e111461034757600080fd5b8063680adc37116100c8578063680adc3714610219578063715018a6146102bd5780637bbc469e146102c55780638da5cb5b146102e857600080fd5b80632a546a38146100ef57806330e54438146101f15780636574105b14610206575b600080fd5b6101a46100fd366004611d53565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600f60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516101e89190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b6102046101ff366004612212565b610489565b005b6102046102143660046123b9565b6109b0565b610289610227366004611d53565b600f6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff958616815293851660208501529184169183019190915290911660608201526080016101e8565b610204610bfc565b6102d86102d3366004611d53565b610c10565b6040516101e8949392919061281e565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e8565b61031960015481565b6040519081526020016101e8565b61033a610335366004611d53565b611184565b6040516101e8919061285a565b61036a6103553660046128ce565b600e6020526000908152604090205460ff1681565b60405190151581526020016101e8565b600254600354600454600554600654600754600854600954600a54600c546103d29973ffffffffffffffffffffffffffffffffffffffff90811699811698811697811696811695811694811693811692169060ff168a565b6040805173ffffffffffffffffffffffffffffffffffffffff9b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c0850152841660e0840152909216610100820152901515610120820152610140016101e8565b610204610451366004611d53565b611710565b610469610464366004611d53565b61184b565b6040516101e891906128f0565b6102046104843660046128ce565b6118b0565b610491611964565b600354815160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a34393916104ef9160040190815260200190565b600060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b5050600a54835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061057c91600401612903565b600060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b5050506000848152600d6020526040902082518051849350829081906105d090826129b8565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516106489260038501920190611a5a565b5060808201518051610664916004840191602090910190611a5a565b5060a0820151600582015560c0820151600682015560e082015160078201556101008201518051805160088401916106a191839160200190611aa5565b5060208281015180516106ba9260018501920190611aa5565b50604082015180516106d6916002840191602090910190611aa5565b50606082015180516106f2916003840191602090910190611b1f565b506080820151805161070e916004840191602090910190611b1f565b5060a0820151805161072a916005840191602090910190611b78565b505050506020830151600e830155506040820151600f8201556060820151601082019061075790826129b8565b50506009546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018590526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa1580156107cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f09190612ad2565b905060005b8251606001515181101561097057600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc91908490811061083e5761083e612af8565b602002602001015160006040518363ffffffff1660e01b815260040161086e929190918252602082015260400190565b6020604051808303816000875af115801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b19190612b27565b6000036108bd57600080fd5b600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106108f8576108f8612af8565b6020026020010151846040518363ffffffff1660e01b815260040161092d92919091825263ffffffff16602082015260400190565b600060405180830381600087803b15801561094757600080fd5b505af115801561095b573d6000803e3d6000fd5b505050508061096990612b40565b90506107f5565b5082847fa6266edd73d5306347b1967afd613964af265e032c9c487394151570a567766f846040516109a2919061285a565b60405180910390a350505050565b6109b8611964565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a8054909316941693909317905561012083015180518493610ab892600b92910190611aa5565b506101409190910151600a90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560005b81610120015151811015610bf857600e60008361012001518381518110610b1f57610b1f612af8565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110610b8b57610b8b612af8565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610bf181612b40565b9050610af6565b5050565b610c04611964565b610c0e60006119e5565b565b600d6020528060005260406000206000915090508060000160405180610120016040529081600082018054610c4490612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7090612916565b8015610cbd5780601f10610c9257610100808354040283529160200191610cbd565b820191906000526020600020905b815481529060010190602001808311610ca057829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610d4b57602002820191906000526020600020905b815481526020019060010190808311610d37575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610da357602002820191906000526020600020905b815481526020019060010190808311610d8f575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610e4057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e15575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610eaf57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e84575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610f1e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ef3575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610fb857600084815260209081902083018054604080518285028101850190915281815292830182828015610fa457602002820191906000526020600020905b815481526020019060010190808311610f90575b505050505081526020019060010190610f4c565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110515760008481526020908190208301805460408051828502810185019091528181529283018282801561103d57602002820191906000526020600020905b815481526020019060010190808311611029575b505050505081526020019060010190610fe5565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156110d857602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156110b6576110b6612613565b8152602060019283018181049485019490930390920291018084116110975790505b505050505081525050815250509080600e01549080600f01549080601001805461110190612916565b80601f016020809104026020016040519081016040528092919081815260200182805461112d90612916565b801561117a5780601f1061114f5761010080835404028352916020019161117a565b820191906000526020600020905b81548152906001019060200180831161115d57829003601f168201915b5050505050905084565b61118c611c27565b6000828152600d60205260409081902081516101a081019092528054829060808201908390829082906111be90612916565b80601f01602080910402602001604051908101604052809291908181526020018280546111ea90612916565b80156112375780601f1061120c57610100808354040283529160200191611237565b820191906000526020600020905b81548152906001019060200180831161121a57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156112c557602002820191906000526020600020905b8154815260200190600101908083116112b1575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561131d57602002820191906000526020600020905b815481526020019060010190808311611309575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156113ba57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161138f575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561142957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116113fe575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561149857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161146d575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115325760008481526020908190208301805460408051828502810185019091528181529283018282801561151e57602002820191906000526020600020905b81548152602001906001019080831161150a575b5050505050815260200190600101906114c6565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156115cb576000848152602090819020830180546040805182850281018501909152818152928301828280156115b757602002820191906000526020600020905b8154815260200190600101908083116115a3575b50505050508152602001906001019061155f565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561165257602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561163057611630612613565b8152602060019283018181049485019490930390920291018084116116115790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461168790612916565b80601f01602080910402602001604051908101604052809291908181526020018280546116b390612916565b80156117005780601f106116d557610100808354040283529160200191611700565b820191906000526020600020905b8154815290600101906020018083116116e357829003601f168201915b5050505050815250509050919050565b611718611964565b478111156117ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f19350505050611848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f20776974686472617700000000000060448201526064016117a4565b50565b6000818152600d60209081526040918290206003018054835181840281018401909452808452606093928301828280156118a457602002820191906000526020600020905b815481526020019060010190808311611890575b50505050509050919050565b6118b8611964565b73ffffffffffffffffffffffffffffffffffffffff811661195b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016117a4565b611848816119e5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016117a4565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611a95579160200282015b82811115611a95578251825591602001919060010190611a7a565b50611aa1929150611c55565b5090565b828054828255906000526020600020908101928215611a95579160200282015b82811115611a9557825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611ac5565b828054828255906000526020600020908101928215611b6c579160200282015b82811115611b6c5782518051611b5c918491602090910190611a5a565b5091602001919060010190611b3f565b50611aa1929150611c6a565b82805482825590600052602060002090601f01602090048101928215611a955791602002820160005b83821115611bed57835183826101000a81548160ff02191690836003811115611bcc57611bcc612613565b02179055509260200192600101602081600001049283019260010302611ba1565b8015611c1a5782816101000a81549060ff0219169055600101602081600001049283019260010302611bed565b5050611aa1929150611c55565b6040518060800160405280611c3a611c87565b81526020016000815260200160008152602001606081525090565b5b80821115611aa15760008155600101611c56565b80821115611aa1576000611c7e8282611d35565b50600101611c6a565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611d306040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b50805460008255906000526020600020908101906118489190611c55565b600060208284031215611d6557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611dbe57611dbe611d6c565b60405290565b6040516080810167ffffffffffffffff81118282101715611dbe57611dbe611d6c565b604051610120810167ffffffffffffffff81118282101715611dbe57611dbe611d6c565b604051610160810167ffffffffffffffff81118282101715611dbe57611dbe611d6c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611e7657611e76611d6c565b604052919050565b600082601f830112611e8f57600080fd5b813567ffffffffffffffff811115611ea957611ea9611d6c565b611eda60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611e2f565b818152846020838601011115611eef57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f3057600080fd5b919050565b600067ffffffffffffffff821115611f4f57611f4f611d6c565b5060051b60200190565b600082601f830112611f6a57600080fd5b81356020611f7f611f7a83611f35565b611e2f565b82815260059290921b84018101918181019086841115611f9e57600080fd5b8286015b84811015611fb95780358352918301918301611fa2565b509695505050505050565b600082601f830112611fd557600080fd5b81356020611fe5611f7a83611f35565b82815260059290921b8401810191818101908684111561200457600080fd5b8286015b84811015611fb95761201981611f0c565b8352918301918301612008565b600082601f83011261203757600080fd5b81356020612047611f7a83611f35565b82815260059290921b8401810191818101908684111561206657600080fd5b8286015b84811015611fb957803567ffffffffffffffff81111561208a5760008081fd5b6120988986838b0101611f59565b84525091830191830161206a565b600082601f8301126120b757600080fd5b813560206120c7611f7a83611f35565b82815260059290921b840181019181810190868411156120e657600080fd5b8286015b84811015611fb9578035600481106121025760008081fd5b83529183019183016120ea565b600060c0828403121561212157600080fd5b612129611d9b565b9050813567ffffffffffffffff8082111561214357600080fd5b61214f85838601611fc4565b8352602084013591508082111561216557600080fd5b61217185838601611fc4565b6020840152604084013591508082111561218a57600080fd5b61219685838601611fc4565b604084015260608401359150808211156121af57600080fd5b6121bb85838601612026565b606084015260808401359150808211156121d457600080fd5b6121e085838601612026565b608084015260a08401359150808211156121f957600080fd5b50612206848285016120a6565b60a08301525092915050565b60008060006060848603121561222757600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561224d57600080fd5b908501906080828803121561226157600080fd5b612269611dc4565b82358281111561227857600080fd5b8301610120818a03121561228b57600080fd5b612293611de7565b8135848111156122a257600080fd5b6122ae8b828501611e7e565b8252506122bd60208301611f0c565b60208201526122ce60408301611f0c565b60408201526060820135848111156122e557600080fd5b6122f18b828501611f59565b60608301525060808201358481111561230957600080fd5b6123158b828501611f59565b60808301525060a082013560a082015260c082013560c082015260e082013560e0820152610100808301358581111561234d57600080fd5b6123598c82860161210f565b8284015250508083525050602083013560208201526040830135604082015260608301358281111561238a57600080fd5b61239689828601611e7e565b6060830152508093505050509250925092565b80358015158114611f3057600080fd5b6000602082840312156123cb57600080fd5b813567ffffffffffffffff808211156123e357600080fd5b9083019061016082860312156123f857600080fd5b612400611e0b565b61240983611f0c565b815261241760208401611f0c565b602082015261242860408401611f0c565b604082015261243960608401611f0c565b606082015261244a60808401611f0c565b608082015261245b60a08401611f0c565b60a082015261246c60c08401611f0c565b60c082015261247d60e08401611f0c565b60e0820152610100612490818501611f0c565b9082015261012083810135838111156124a857600080fd5b6124b488828701611fc4565b82840152505061014091506124ca8284016123a9565b91810191909152949350505050565b6000815180845260005b818110156124ff576020818501810151868301820152016124e3565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561256d57815187529582019590820190600101612551565b509495945050505050565b600081518084526020808501945080840160005b8381101561256d57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161258c565b600081518084526020808501808196508360051b8101915082860160005b858110156126065782840389526125f484835161253d565b988501989350908401906001016125dc565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261265760c0850182612578565b9050602080840151858303828701526126708382612578565b9250506040840151858303604087015261268a8382612578565b925050606084015185830360608701526126a483826125be565b925050608084015185830360808701526126be83826125be565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156127345785516004808210612721577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835294840194918401916001016126e2565b5090979650505050505050565b60006101208251818552612757828601826124d9565b9150506020830151612781602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516127a9604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526127c1828261253d565b915050608083015184820360808601526127db828261253d565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526128148382612642565b9695505050505050565b6080815260006128316080830187612741565b856020840152846040840152828103606084015261284f81856124d9565b979650505050505050565b60208152600082516080602084015261287660a0840182612741565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526128c582826124d9565b95945050505050565b6000602082840312156128e057600080fd5b6128e982611f0c565b9392505050565b6020815260006128e9602083018461253d565b6020815260006128e96020830184612642565b600181811c9082168061292a57607f821691505b602082108103612963577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156129b357600081815260208120601f850160051c810160208610156129905750805b601f850160051c820191505b818110156129af5782815560010161299c565b5050505b505050565b815167ffffffffffffffff8111156129d2576129d2611d6c565b6129e6816129e08454612916565b84612969565b602080601f831160018114612a395760008415612a035750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556129af565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612a8657888601518255948401946001909101908401612a67565b5085821015612ac257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612ae457600080fd5b815163ffffffff811681146128e957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612b3957600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b98577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212207ce9a214b6fcfddf29279aa05e6f75c18fd316338c26f6c35f96f823e81c643164736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
