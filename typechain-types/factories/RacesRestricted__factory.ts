/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620030a3380380620030a383398101604081905262000039916200050f565b80516101008201518291906200004f33620001e7565b80518251146200005e57600080fd5b60005b8251811015620000f85781818151811062000080576200008062000634565b602002602001015160016000858481518110620000a157620000a162000634565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f0906200064a565b905062000061565b505081518051839250600391620001159183916020019062000237565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051620001db9260088501920190620002a1565b50905050505062000672565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d9291506200034a565b5090565b828054828255906000526020600020906007016008900481019282156200028f5791602002820160005b838211156200030e57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002cb565b8015620003405782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200030e565b50506200029d9291505b5b808211156200029d57600081556001016200034b565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200039d576200039d62000361565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ce57620003ce62000361565b604052919050565b60006001600160401b03821115620003f257620003f262000361565b5060051b60200190565b80516001600160a01b03811681146200041457600080fd5b919050565b600082601f8301126200042b57600080fd5b81516020620004446200043e83620003d6565b620003a3565b82815260059290921b840181019181810190868411156200046457600080fd5b8286015b848110156200048a576200047c81620003fc565b835291830191830162000468565b509695505050505050565b600082601f830112620004a757600080fd5b81516020620004ba6200043e83620003d6565b82815260059290921b84018101918181019086841115620004da57600080fd5b8286015b848110156200048a5780516001600160e01b031981168114620005015760008081fd5b8352918301918301620004de565b6000602082840312156200052257600080fd5b81516001600160401b03808211156200053a57600080fd5b9083019061012082860312156200055057600080fd5b6200055a62000377565b8251828111156200056a57600080fd5b620005788782860162000419565b8252506200058960208401620003fc565b60208201526200059c60408401620003fc565b6040820152620005af60608401620003fc565b6060820152620005c260808401620003fc565b6080820152620005d560a08401620003fc565b60a0820152620005e860c08401620003fc565b60c0820152620005fb60e08401620003fc565b60e082015261010080840151838111156200061557600080fd5b620006238882870162000495565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200066b57634e487b7160e01b600052601160045260246000fd5b5060010190565b612a2180620006826000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063aa4daabd11610081578063d8de65871161005b578063d8de65871461023e578063e200c857146102d9578063f2fde38b146102f957600080fd5b8063aa4daabd146101f4578063af640d0f14610207578063b7dda85e1461021e57600080fd5b80637bbc469e116100b25780637bbc469e146101095780638da5cb5b146101355780639cce37c61461015d57600080fd5b806330e54438146100d9578063357d5142146100ee578063715018a614610101575b600080fd5b6100ec6100e7366004611f7b565b61030c565b005b6100ec6100fc36600461219c565b610865565b6100ec61092a565b61011c610117366004612200565b61093e565b60405161012c949392919061255e565b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012c565b6101bb61016b36600461259a565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff0000000000000000000000000000000000000000000000000000000093841681529290911660208301520161012c565b6100ec6102023660046125bc565b610eb2565b61021060025481565b60405190815260200161012c565b61023161022c366004612200565b610fc3565b60405161012c91906126c9565b600454600554600654600754600854600954600a546102839673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e00161012c565b6102ec6102e7366004612200565b61154f565b60405161012c919061273d565b6100ec61030736600461259a565b6115b4565b3360009081526001602052604081205460e01b7fffffffff000000000000000000000000000000000000000000000000000000009081169135161461035057600080fd5b60048054825160a001516040517f11a343930000000000000000000000000000000000000000000000000000000081529283015273ffffffffffffffffffffffffffffffffffffffff16906311a3439390602401600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b5050600a54835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061043191600401612750565b600060405180830381600087803b15801561044b57600080fd5b505af115801561045f573d6000803e3d6000fd5b5050506000848152600c6020526040902082518051849350829081906104859082612804565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516104fd9260038501920190611766565b5060808201518051610519916004840191602090910190611766565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610556918391602001906117b1565b50602082810151805161056f92600185019201906117b1565b506040820151805161058b9160028401916020909101906117b1565b50606082015180516105a791600384019160209091019061182b565b50608082015180516105c391600484019160209091019061182b565b5060a082015180516105df916005840191602090910190611884565b505050506020830151600e830155506040820151600f8201556060820151601082019061060c9082612804565b50506009546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018590526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa158015610681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a5919061291e565b905060005b8251606001515181101561082557600554835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106106f3576106f3612944565b602002602001015160006040518363ffffffff1660e01b8152600401610723929190918252602082015260400190565b6020604051808303816000875af1158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190612973565b60000361077257600080fd5b600554835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106107ad576107ad612944565b6020026020010151846040518363ffffffff1660e01b81526004016107e292919091825263ffffffff16602082015260400190565b600060405180830381600087803b1580156107fc57600080fd5b505af1158015610810573d6000803e3d6000fd5b505050508061081e9061298c565b90506106aa565b5082847fa6266edd73d5306347b1967afd613964af265e032c9c487394151570a567766f8460405161085791906126c9565b60405180910390a350505050565b61086d611670565b805182511461087b57600080fd5b60005b82518110156109255781818151811061089957610899612944565b6020026020010151600160008584815181106108b7576108b7612944565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c02179055508061091e9061298c565b905061087e565b505050565b610932611670565b61093c60006116f1565b565b600c602052806000526040600020600091509050806000016040518061012001604052908160008201805461097290612763565b80601f016020809104026020016040519081016040528092919081815260200182805461099e90612763565b80156109eb5780601f106109c0576101008083540402835291602001916109eb565b820191906000526020600020905b8154815290600101906020018083116109ce57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610a7957602002820191906000526020600020905b815481526020019060010190808311610a65575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ad157602002820191906000526020600020905b815481526020019060010190808311610abd575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610b6e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b43575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610bdd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610bb2575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c4c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c21575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610ce657600084815260209081902083018054604080518285028101850190915281815292830182828015610cd257602002820191906000526020600020905b815481526020019060010190808311610cbe575b505050505081526020019060010190610c7a565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610d7f57600084815260209081902083018054604080518285028101850190915281815292830182828015610d6b57602002820191906000526020600020905b815481526020019060010190808311610d57575b505050505081526020019060010190610d13565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e0657602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610de457610de4612353565b815260206001928301818104948501949093039092029101808411610dc55790505b505050505081525050815250509080600e01549080600f015490806010018054610e2f90612763565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5b90612763565b8015610ea85780601f10610e7d57610100808354040283529160200191610ea8565b820191906000526020600020905b815481529060010190602001808311610e8b57829003601f168201915b5050505050905084565b610eba611670565b805180518291600391610ed49183916020909101906117b1565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610fbd9260088501920190611933565b50505050565b610fcb6119cd565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610ffd90612763565b80601f016020809104026020016040519081016040528092919081815260200182805461102990612763565b80156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561110457602002820191906000526020600020905b8154815260200190600101908083116110f0575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561115c57602002820191906000526020600020905b815481526020019060010190808311611148575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156111f957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116111ce575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561126857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161123d575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156112d757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116112ac575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156113715760008481526020908190208301805460408051828502810185019091528181529283018282801561135d57602002820191906000526020600020905b815481526020019060010190808311611349575b505050505081526020019060010190611305565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561140a576000848152602090819020830180546040805182850281018501909152818152928301828280156113f657602002820191906000526020600020905b8154815260200190600101908083116113e2575b50505050508152602001906001019061139e565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561149157602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561146f5761146f612353565b8152602060019283018181049485019490930390920291018084116114505790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546114c690612763565b80601f01602080910402602001604051908101604052809291908181526020018280546114f290612763565b801561153f5780601f106115145761010080835404028352916020019161153f565b820191906000526020600020905b81548152906001019060200180831161152257829003601f168201915b5050505050815250509050919050565b6000818152600c60209081526040918290206003018054835181840281018401909452808452606093928301828280156115a857602002820191906000526020600020905b815481526020019060010190808311611594575b50505050509050919050565b6115bc611670565b73ffffffffffffffffffffffffffffffffffffffff8116611664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61166d816116f1565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161165b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156117a1579160200282015b828111156117a1578251825591602001919060010190611786565b506117ad9291506119fb565b5090565b8280548282559060005260206000209081019282156117a1579160200282015b828111156117a157825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906117d1565b828054828255906000526020600020908101928215611878579160200282015b828111156118785782518051611868918491602090910190611766565b509160200191906001019061184b565b506117ad929150611a10565b82805482825590600052602060002090601f016020900481019282156117a15791602002820160005b838211156118f957835183826101000a81548160ff021916908360038111156118d8576118d8612353565b021790555092602001926001016020816000010492830192600103026118ad565b80156119265782816101000a81549060ff02191690556001016020816000010492830192600103026118f9565b50506117ad9291506119fb565b828054828255906000526020600020906007016008900481019282156117a15791602002820160005b8382111561199d57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261195c565b80156119265782816101000a81549063ffffffff021916905560040160208160030104928301926001030261199d565b60405180608001604052806119e0611a2d565b81526020016000815260200160008152602001606081525090565b5b808211156117ad57600081556001016119fc565b808211156117ad576000611a248282611adb565b50600101611a10565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611ad66040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b508054600082559060005260206000209081019061166d91906119fb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611b4b57611b4b611af9565b60405290565b6040516080810167ffffffffffffffff81118282101715611b4b57611b4b611af9565b604051610120810167ffffffffffffffff81118282101715611b4b57611b4b611af9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611bdf57611bdf611af9565b604052919050565b600082601f830112611bf857600080fd5b813567ffffffffffffffff811115611c1257611c12611af9565b611c4360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611b98565b818152846020838601011115611c5857600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c9957600080fd5b919050565b600067ffffffffffffffff821115611cb857611cb8611af9565b5060051b60200190565b600082601f830112611cd357600080fd5b81356020611ce8611ce383611c9e565b611b98565b82815260059290921b84018101918181019086841115611d0757600080fd5b8286015b84811015611d225780358352918301918301611d0b565b509695505050505050565b600082601f830112611d3e57600080fd5b81356020611d4e611ce383611c9e565b82815260059290921b84018101918181019086841115611d6d57600080fd5b8286015b84811015611d2257611d8281611c75565b8352918301918301611d71565b600082601f830112611da057600080fd5b81356020611db0611ce383611c9e565b82815260059290921b84018101918181019086841115611dcf57600080fd5b8286015b84811015611d2257803567ffffffffffffffff811115611df35760008081fd5b611e018986838b0101611cc2565b845250918301918301611dd3565b600082601f830112611e2057600080fd5b81356020611e30611ce383611c9e565b82815260059290921b84018101918181019086841115611e4f57600080fd5b8286015b84811015611d2257803560048110611e6b5760008081fd5b8352918301918301611e53565b600060c08284031215611e8a57600080fd5b611e92611b28565b9050813567ffffffffffffffff80821115611eac57600080fd5b611eb885838601611d2d565b83526020840135915080821115611ece57600080fd5b611eda85838601611d2d565b60208401526040840135915080821115611ef357600080fd5b611eff85838601611d2d565b60408401526060840135915080821115611f1857600080fd5b611f2485838601611d8f565b60608401526080840135915080821115611f3d57600080fd5b611f4985838601611d8f565b608084015260a0840135915080821115611f6257600080fd5b50611f6f84828501611e0f565b60a08301525092915050565b600080600060608486031215611f9057600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611fb657600080fd5b9085019060808288031215611fca57600080fd5b611fd2611b51565b823582811115611fe157600080fd5b8301610120818a031215611ff457600080fd5b611ffc611b74565b81358481111561200b57600080fd5b6120178b828501611be7565b82525061202660208301611c75565b602082015261203760408301611c75565b604082015260608201358481111561204e57600080fd5b61205a8b828501611cc2565b60608301525060808201358481111561207257600080fd5b61207e8b828501611cc2565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015261010080830135858111156120b657600080fd5b6120c28c828601611e78565b828401525050808352505060208301356020820152604083013560408201526060830135828111156120f357600080fd5b6120ff89828601611be7565b6060830152508093505050509250925092565b600082601f83011261212357600080fd5b81356020612133611ce383611c9e565b82815260059290921b8401810191818101908684111561215257600080fd5b8286015b84811015611d225780357fffffffff000000000000000000000000000000000000000000000000000000008116811461218f5760008081fd5b8352918301918301612156565b600080604083850312156121af57600080fd5b823567ffffffffffffffff808211156121c757600080fd5b6121d386838701611d2d565b935060208501359150808211156121e957600080fd5b506121f685828601612112565b9150509250929050565b60006020828403121561221257600080fd5b5035919050565b6000815180845260005b8181101561223f57602081850181015186830182015201612223565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156122ad57815187529582019590820190600101612291565b509495945050505050565b600081518084526020808501945080840160005b838110156122ad57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016122cc565b600081518084526020808501808196508360051b8101915082860160005b8581101561234657828403895261233484835161227d565b9885019893509084019060010161231c565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261239760c08501826122b8565b9050602080840151858303828701526123b083826122b8565b925050604084015185830360408701526123ca83826122b8565b925050606084015185830360608701526123e483826122fe565b925050608084015185830360808701526123fe83826122fe565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156124745785516004808210612461577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101612422565b5090979650505050505050565b6000610120825181855261249782860182612219565b91505060208301516124c1602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516124e9604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612501828261227d565b9150506080830151848203608086015261251b828261227d565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526125548382612382565b9695505050505050565b6080815260006125716080830187612481565b856020840152846040840152828103606084015261258f8185612219565b979650505050505050565b6000602082840312156125ac57600080fd5b6125b582611c75565b9392505050565b6000602082840312156125ce57600080fd5b813567ffffffffffffffff808211156125e657600080fd5b9083019061012082860312156125fb57600080fd5b612603611b74565b82358281111561261257600080fd5b61261e87828601611d2d565b82525061262d60208401611c75565b602082015261263e60408401611c75565b604082015261264f60608401611c75565b606082015261266060808401611c75565b608082015261267160a08401611c75565b60a082015261268260c08401611c75565b60c082015261269360e08401611c75565b60e082015261010080840135838111156126ac57600080fd5b6126b888828701612112565b918301919091525095945050505050565b6020815260008251608060208401526126e560a0840182612481565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526127348282612219565b95945050505050565b6020815260006125b5602083018461227d565b6020815260006125b56020830184612382565b600181811c9082168061277757607f821691505b6020821081036127b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561092557600081815260208120601f850160051c810160208610156127dd5750805b601f850160051c820191505b818110156127fc578281556001016127e9565b505050505050565b815167ffffffffffffffff81111561281e5761281e611af9565b6128328161282c8454612763565b846127b6565b602080601f831160018114612885576000841561284f5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556127fc565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156128d2578886015182559484019460019091019084016128b3565b508582101561290e57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561293057600080fd5b815163ffffffff811681146125b557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561298557600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036129e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212200cbbbdcd54e3158c97c7c631922ffa52981a33c4ee845e0f36fe170fe7f2732e64736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
