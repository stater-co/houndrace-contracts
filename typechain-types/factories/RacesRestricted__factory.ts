/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceEntryTicketCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raceEntryTicket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b506040516200358c3803806200358c8339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b612d4b80620008416000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806393de70e811610081578063d8de65871161005b578063d8de6587146101ca578063e200c85714610265578063f2fde38b1461028557600080fd5b806393de70e814610180578063af640d0f14610193578063b7dda85e146101aa57600080fd5b8063797a6764116100b2578063797a6764146101215780637bbc469e146101345780638da5cb5b1461015857600080fd5b80635b19e294146100ce578063715018a614610117575b600080fd5b6100e16100dc366004611db6565b610298565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61011f6102de565b005b61011f61012f366004612332565b6102f2565b610147610142366004612410565b6108cd565b60405161010e95949392919061274e565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61011f61018e3660046128a5565b610e3d565b61019c60025481565b60405190815260200161010e565b6101bd6101b8366004612410565b610f5f565b60405161010e91906129b2565b600454600554600654600754600854600954600a5461020f9673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e00161010e565b610278610273366004612410565b6114ea565b60405161010e9190612a45565b61011f610293366004612a5f565b61154f565b600160205281600052604060002081815481106102b457600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6102e6611608565b6102f06000611689565b565b6000805b336000908152600160205260409020548110156103af57336000908152600160205260408120805491357fffffffff0000000000000000000000000000000000000000000000000000000016918390811061035357610353612a7a565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361039f57600191505b6103a881612aa9565b90506102f6565b50806103ba57600080fd5b60048054835160a001516040517f11a343930000000000000000000000000000000000000000000000000000000081529283015273ffffffffffffffffffffffffffffffffffffffff16906311a3439390602401600060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050600a5460808501516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061049991600401612b08565b600060405180830381600087803b1580156104b357600080fd5b505af11580156104c7573d6000803e3d6000fd5b5050506000858152600c6020526040902083518051859350829081906104ed9082612bbc565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516105659260038501920190611964565b5060808201518051610581916004840191602090910190611964565b5060a0820151600582015560c0820151600682015560e09091015160079091015560208201516008820155604082015160098201556060820151600a8201906105ca9082612bbc565b50608082015180518051600b8401916105e8918391602001906119af565b50602082810151805161060192600185019201906119af565b506040820151805161061d9160028401916020909101906119af565b5060608201518051610639916003840191602090910190611a29565b5060808201518051610655916004840191602090910190611a29565b5060a08201518051610671916005840191602090910190611a82565b50506009546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018890526000945073ffffffffffffffffffffffffffffffffffffffff909116925063e3c5fc049150602401602060405180830381865afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070c9190612cd6565b905060005b8351606001515181101561088c57600554845160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc91908490811061075a5761075a612a7a565b602002602001015160006040518363ffffffff1660e01b815260040161078a929190918252602082015260400190565b6020604051808303816000875af11580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd9190612cfc565b6000036107d957600080fd5b600554845160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc91908490811061081457610814612a7a565b6020026020010151846040518363ffffffff1660e01b815260040161084992919091825263ffffffff16602082015260400190565b600060405180830381600087803b15801561086357600080fd5b505af1158015610877573d6000803e3d6000fd5b505050508061088590612aa9565b9050610711565b5083857f11ef6af92dc673ebab471c9a43cd3f4fc18c09152c3b47543bf17d3df3f2839e856040516108be91906129b2565b60405180910390a35050505050565b600c602052806000526040600020600091509050806000016040518061010001604052908160008201805461090190612b1b565b80601f016020809104026020016040519081016040528092919081815260200182805461092d90612b1b565b801561097a5780601f1061094f5761010080835404028352916020019161097a565b820191906000526020600020905b81548152906001019060200180831161095d57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610a0857602002820191906000526020600020905b8154815260200190600101908083116109f4575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610a6057602002820191906000526020600020905b815481526020019060010190808311610a4c575b5050505050815260200160058201548152602001600682015481526020016007820154815250509080600801549080600901549080600a018054610aa390612b1b565b80601f0160208091040260200160405190810160405280929190818152602001828054610acf90612b1b565b8015610b1c5780601f10610af157610100808354040283529160200191610b1c565b820191906000526020600020905b815481529060010190602001808311610aff57829003601f168201915b50505050509080600b016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610b9757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b6c575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610c0657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610bdb575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c7557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c4a575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d0f57600084815260209081902083018054604080518285028101850190915281815292830182828015610cfb57602002820191906000526020600020905b815481526020019060010190808311610ce7575b505050505081526020019060010190610ca3565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610da857600084815260209081902083018054604080518285028101850190915281815292830182828015610d9457602002820191906000526020600020905b815481526020019060010190808311610d80575b505050505081526020019060010190610d3c565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e2f57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610e0d57610e0d612620565b815260206001928301818104948501949093039092029101808411610dee5790505b505050505081525050905085565b610e45611608565b805180518291600391610e5f9183916020909101906119af565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610f489260088501920190611b31565b50508151610100830151610f5c92506116fe565b50565b610f67611b8a565b6000828152600c60205260409081902081516101a081019092528054829060a0820190839082908290610f9990612b1b565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc590612b1b565b80156110125780601f10610fe757610100808354040283529160200191611012565b820191906000526020600020905b815481529060010190602001808311610ff557829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156110a057602002820191906000526020600020905b81548152602001906001019080831161108c575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156110f857602002820191906000526020600020905b8154815260200190600101908083116110e4575b50505050508152602001600582015481526020016006820154815260200160078201548152505081526020016008820154815260200160098201548152602001600a8201805461114790612b1b565b80601f016020809104026020016040519081016040528092919081815260200182805461117390612b1b565b80156111c05780601f10611195576101008083540402835291602001916111c0565b820191906000526020600020905b8154815290600101906020018083116111a357829003601f168201915b50505050508152602001600b82016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561123f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611214575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156112ae57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611283575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561131d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116112f2575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156113b7576000848152602090819020830180546040805182850281018501909152818152928301828280156113a357602002820191906000526020600020905b81548152602001906001019080831161138f575b50505050508152602001906001019061134b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156114505760008481526020908190208301805460408051828502810185019091528181529283018282801561143c57602002820191906000526020600020905b815481526020019060010190808311611428575b5050505050815260200190600101906113e4565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156114d757602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156114b5576114b5612620565b8152602060019283018181049485019490930390920291018084116114965790505b5050509190925250505090525092915050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561154357602002820191906000526020600020905b81548152602001906001019080831161152f575b50505050509050919050565b611557611608565b73ffffffffffffffffffffffffffffffffffffffff81166115ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610f5c81611689565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016115f6565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461170c57600080fd5b60005b825181101561195f5760005b82828151811061172d5761172d612a7a565b60200260200101515181101561194e576001600085848151811061175357611753612a7a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061187157600160008584815181106117b5576117b5612a7a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061180957611809612a7a565b6020026020010151828151811061182257611822612a7a565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c9190910291909117905561193e565b82828151811061188357611883612a7a565b6020026020010151818151811061189c5761189c612a7a565b6020026020010151600160008685815181106118ba576118ba612a7a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061190d5761190d612a7a565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61194781612aa9565b905061171b565b5061195881612aa9565b905061170f565b505050565b82805482825590600052602060002090810192821561199f579160200282015b8281111561199f578251825591602001919060010190611984565b506119ab929150611c61565b5090565b82805482825590600052602060002090810192821561199f579160200282015b8281111561199f57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906119cf565b828054828255906000526020600020908101928215611a76579160200282015b82811115611a765782518051611a66918491602090910190611964565b5091602001919060010190611a49565b506119ab929150611c76565b82805482825590600052602060002090601f0160209004810192821561199f5791602002820160005b83821115611af757835183826101000a81548160ff02191690836003811115611ad657611ad6612620565b02179055509260200192600101602081600001049283019260010302611aab565b8015611b245782816101000a81549060ff0219169055600101602081600001049283019260010302611af7565b50506119ab929150611c61565b828054828255906000526020600020908101928215611b7e579160200282015b82811115611b7e5782518051611b6e918491602090910190611c93565b5091602001919060010190611b51565b506119ab929150611d2d565b6040518060a00160405280611c0960405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160608152602001611c5c6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156119ab5760008155600101611c62565b808211156119ab576000611c8a8282611d4a565b50600101611c76565b8280548282559060005260206000209060070160089004810192821561199f5791602002820160005b83821115611cfd57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302611cbc565b8015611b245782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611cfd565b808211156119ab576000611d418282611d68565b50600101611d2d565b5080546000825590600052602060002090810190610f5c9190611c61565b508054600082556007016008900490600052602060002090810190610f5c9190611c61565b803573ffffffffffffffffffffffffffffffffffffffff81168114611db157600080fd5b919050565b60008060408385031215611dc957600080fd5b611dd283611d8d565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611e3357611e33611de0565b60405290565b60405160c0810167ffffffffffffffff81118282101715611e3357611e33611de0565b60405160a0810167ffffffffffffffff81118282101715611e3357611e33611de0565b604051610120810167ffffffffffffffff81118282101715611e3357611e33611de0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611eea57611eea611de0565b604052919050565b600082601f830112611f0357600080fd5b813567ffffffffffffffff811115611f1d57611f1d611de0565b611f4e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611ea3565b818152846020838601011115611f6357600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611f9a57611f9a611de0565b5060051b60200190565b600082601f830112611fb557600080fd5b81356020611fca611fc583611f80565b611ea3565b82815260059290921b84018101918181019086841115611fe957600080fd5b8286015b848110156120045780358352918301918301611fed565b509695505050505050565b6000610100828403121561202257600080fd5b61202a611e0f565b9050813567ffffffffffffffff8082111561204457600080fd5b61205085838601611ef2565b835261205e60208501611d8d565b602084015261206f60408501611d8d565b6040840152606084013591508082111561208857600080fd5b61209485838601611fa4565b606084015260808401359150808211156120ad57600080fd5b506120ba84828501611fa4565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b600082601f8301126120f557600080fd5b81356020612105611fc583611f80565b82815260059290921b8401810191818101908684111561212457600080fd5b8286015b848110156120045761213981611d8d565b8352918301918301612128565b600082601f83011261215757600080fd5b81356020612167611fc583611f80565b82815260059290921b8401810191818101908684111561218657600080fd5b8286015b8481101561200457803567ffffffffffffffff8111156121aa5760008081fd5b6121b88986838b0101611fa4565b84525091830191830161218a565b600082601f8301126121d757600080fd5b813560206121e7611fc583611f80565b82815260059290921b8401810191818101908684111561220657600080fd5b8286015b84811015612004578035600481106122225760008081fd5b835291830191830161220a565b600060c0828403121561224157600080fd5b612249611e39565b9050813567ffffffffffffffff8082111561226357600080fd5b61226f858386016120e4565b8352602084013591508082111561228557600080fd5b612291858386016120e4565b602084015260408401359150808211156122aa57600080fd5b6122b6858386016120e4565b604084015260608401359150808211156122cf57600080fd5b6122db85838601612146565b606084015260808401359150808211156122f457600080fd5b61230085838601612146565b608084015260a084013591508082111561231957600080fd5b50612326848285016121c6565b60a08301525092915050565b60008060006060848603121561234757600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561236d57600080fd5b9085019060a0828803121561238157600080fd5b612389611e5c565b82358281111561239857600080fd5b6123a48982860161200f565b82525060208301356020820152604083013560408201526060830135828111156123cd57600080fd5b6123d989828601611ef2565b6060830152506080830135828111156123f157600080fd5b6123fd8982860161222f565b6080830152508093505050509250925092565b60006020828403121561242257600080fd5b5035919050565b6000815180845260005b8181101561244f57602081850181015186830182015201612433565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156124bd578151875295820195908201906001016124a1565b509495945050505050565b600061010082518185526124de82860182612429565b91505073ffffffffffffffffffffffffffffffffffffffff60208401511660208501526040830151612528604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612540828261248d565b9150506080830151848203608086015261255a828261248d565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b600081518084526020808501945080840160005b838110156124bd57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612599565b600081518084526020808501808196508360051b8101915082860160005b8581101561261357828403895261260184835161248d565b988501989350908401906001016125e9565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261266460c0850182612585565b90506020808401518583038287015261267d8382612585565b925050604084015185830360408701526126978382612585565b925050606084015185830360608701526126b183826125cb565b925050608084015185830360808701526126cb83826125cb565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015612741578551600480821061272e577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835294840194918401916001016126ef565b5090979650505050505050565b60a08152600061276160a08301886124c8565b866020840152856040840152828103606084015261277f8186612429565b90508281036080840152612793818561264f565b98975050505050505050565b600082601f8301126127b057600080fd5b813560206127c0611fc583611f80565b828152600592831b85018201928282019190878511156127df57600080fd5b8387015b8581101561274157803567ffffffffffffffff8111156128035760008081fd5b8801603f81018a136128155760008081fd5b858101356040612827611fc583611f80565b82815291851b8301810191888101908d8411156128445760008081fd5b938201935b8385101561289457843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146128845760008081fd5b8282529389019390890190612849565b8852505050938501935084016127e3565b6000602082840312156128b757600080fd5b813567ffffffffffffffff808211156128cf57600080fd5b9083019061012082860312156128e457600080fd5b6128ec611e7f565b8235828111156128fb57600080fd5b612907878286016120e4565b82525061291660208401611d8d565b602082015261292760408401611d8d565b604082015261293860608401611d8d565b606082015261294960808401611d8d565b608082015261295a60a08401611d8d565b60a082015261296b60c08401611d8d565b60c082015261297c60e08401611d8d565b60e0820152610100808401358381111561299557600080fd5b6129a18882870161279f565b918301919091525095945050505050565b602081526000825160a060208401526129ce60c08401826124c8565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080858403016080860152612a1e8383612429565b925060808601519150808584030160a086015250612a3c828261264f565b95945050505050565b602081526000612a58602083018461248d565b9392505050565b600060208284031215612a7157600080fd5b612a5882611d8d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b01577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b602081526000612a58602083018461264f565b600181811c90821680612b2f57607f821691505b602082108103612b68577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561195f57600081815260208120601f850160051c81016020861015612b955750805b601f850160051c820191505b81811015612bb457828155600101612ba1565b505050505050565b815167ffffffffffffffff811115612bd657612bd6611de0565b612bea81612be48454612b1b565b84612b6e565b602080601f831160018114612c3d5760008415612c075750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612bb4565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612c8a57888601518255948401946001909101908401612c6b565b5085821015612cc657878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612ce857600080fd5b815163ffffffff81168114612a5857600080fd5b600060208284031215612d0e57600080fd5b505191905056fea2646970667358221220d0a80a79a47248ffac9b2f729d9ef43b5ec4958c81bbf1e36d294f0203aa45eb64736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
