/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002e5038038062002e508339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b61296080620004f06000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063af640d0f1161008c578063d63a8e1111610066578063d63a8e111461033b578063d8de65871461036e578063e200c85714610409578063f2fde38b1461042957600080fd5b8063af640d0f146102f1578063b7dda85e14610308578063b8f183591461032857600080fd5b8063715018a6116100bd578063715018a61461029f5780637bbc469e146102a75780638da5cb5b146102c957600080fd5b806326bed1cc146100e45780632a546a38146100f9578063680adc37146101fb575b600080fd5b6100f76100f2366004611ff4565b61043c565b005b6101ae610107366004612181565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600c60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516101f29190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b61026b610209366004612181565b600c6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff958616815293851660208501529184169183019190915290911660608201526080016101f2565b6100f7610959565b6102ba6102b5366004612181565b61096d565b6040516101f2939291906124df565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101f2565b6102fa60015481565b6040519081526020016101f2565b61031b610316366004612181565b610edb565b6040516101f2919061250a565b6100f7610336366004612574565b61145d565b61035e610349366004612659565b600b6020526000908152604090205460ff1681565b60405190151581526020016101f2565b6002546003546004546005546006546007546008546103b39673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e0016101f2565b61041c610417366004612181565b611645565b6040516101f2919061267b565b6100f7610437366004612659565b6116aa565b610444611766565b600254815160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a34393916104a29160040190815260200190565b600060405180830381600087803b1580156104bc57600080fd5b505af11580156104d0573d6000803e3d6000fd5b5050600854835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061052f9160040161268e565b600060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b5050506000848152600a6020526040902082518051849350829081906105839082612743565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516105fb926003850192019061185c565b506080820151805161061791600484019160209091019061185c565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610654918391602001906118a7565b50602082810151805161066d92600185019201906118a7565b50604082015180516106899160028401916020909101906118a7565b50606082015180516106a5916003840191602090910190611921565b50608082015180516106c1916004840191602090910190611921565b5060a082015180516106dd91600584019160209091019061197a565b505050506020830151600e830155506040820151600f8201906107009082612743565b50506007546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018590526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610799919061285d565b905060005b8251606001515181101561091957600354835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106107e7576107e7612883565b602002602001015160006040518363ffffffff1660e01b8152600401610817929190918252602082015260400190565b6020604051808303816000875af1158015610836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085a91906128b2565b60000361086657600080fd5b600354835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106108a1576108a1612883565b6020026020010151846040518363ffffffff1660e01b81526004016108d692919091825263ffffffff16602082015260400190565b600060405180830381600087803b1580156108f057600080fd5b505af1158015610904573d6000803e3d6000fd5b5050505080610912906128cb565b905061079e565b5082847fb42f3bb275d4341cadee516a71ee5c14fff30d5666be77fa72d7a2dd1c5d4d3f8460405161094b919061250a565b60405180910390a350505050565b610961611766565b61096b60006117e7565b565b600a60205280600052604060002060009150905080600001604051806101200160405290816000820180546109a1906126a1565b80601f01602080910402602001604051908101604052809291908181526020018280546109cd906126a1565b8015610a1a5780601f106109ef57610100808354040283529160200191610a1a565b820191906000526020600020905b8154815290600101906020018083116109fd57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610aa857602002820191906000526020600020905b815481526020019060010190808311610a94575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610b0057602002820191906000526020600020905b815481526020019060010190808311610aec575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610b9d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b72575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610c0c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610be1575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c7b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c50575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d1557600084815260209081902083018054604080518285028101850190915281815292830182828015610d0157602002820191906000526020600020905b815481526020019060010190808311610ced575b505050505081526020019060010190610ca9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610dae57600084815260209081902083018054604080518285028101850190915281815292830182828015610d9a57602002820191906000526020600020905b815481526020019060010190808311610d86575b505050505081526020019060010190610d42565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e3557602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610e1357610e136122d4565b815260206001928301818104948501949093039092029101808411610df45790505b505050505081525050815250509080600e01549080600f018054610e58906126a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610e84906126a1565b8015610ed15780601f10610ea657610100808354040283529160200191610ed1565b820191906000526020600020905b815481529060010190602001808311610eb457829003601f168201915b5050505050905083565b610ee3611a29565b6000828152600a60205260409081902081516101808101909252805482906060820190839082908290610f15906126a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610f41906126a1565b8015610f8e5780601f10610f6357610100808354040283529160200191610f8e565b820191906000526020600020905b815481529060010190602001808311610f7157829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561101c57602002820191906000526020600020905b815481526020019060010190808311611008575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561107457602002820191906000526020600020905b815481526020019060010190808311611060575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561111157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110e6575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561118057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611155575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156111ef57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116111c4575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112895760008481526020908190208301805460408051828502810185019091528181529283018282801561127557602002820191906000526020600020905b815481526020019060010190808311611261575b50505050508152602001906001019061121d565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156113225760008481526020908190208301805460408051828502810185019091528181529283018282801561130e57602002820191906000526020600020905b8154815260200190600101908083116112fa575b5050505050815260200190600101906112b6565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156113a957602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611387576113876122d4565b8152602060019283018181049485019490930390920291018084116113685790505b505050505081525050815250508152602001600e8201548152602001600f820180546113d4906126a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611400906126a1565b801561144d5780601f106114225761010080835404028352916020019161144d565b820191906000526020600020905b81548152906001019060200180831161143057829003601f168201915b5050505050815250509050919050565b611465611766565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e08301518051849361153b926009929101906118a7565b5090505060005b8160e001515181101561164157600b60008360e00151838151811061156957611569612883565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106115d4576115d4612883565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561163a816128cb565b9050611542565b5050565b6000818152600a602090815260409182902060030180548351818402810184019094528084526060939283018282801561169e57602002820191906000526020600020905b81548152602001906001019080831161168a575b50505050509050919050565b6116b2611766565b73ffffffffffffffffffffffffffffffffffffffff811661175a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b611763816117e7565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611751565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611897579160200282015b8281111561189757825182559160200191906001019061187c565b506118a3929150611a50565b5090565b828054828255906000526020600020908101928215611897579160200282015b8281111561189757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906118c7565b82805482825590600052602060002090810192821561196e579160200282015b8281111561196e578251805161195e91849160209091019061185c565b5091602001919060010190611941565b506118a3929150611a65565b82805482825590600052602060002090601f016020900481019282156118975791602002820160005b838211156119ef57835183826101000a81548160ff021916908360038111156119ce576119ce6122d4565b021790555092602001926001016020816000010492830192600103026119a3565b8015611a1c5782816101000a81549060ff02191690556001016020816000010492830192600103026119ef565b50506118a3929150611a50565b6040518060600160405280611a3c611a82565b815260200160008152602001606081525090565b5b808211156118a35760008155600101611a51565b808211156118a3576000611a798282611b30565b50600101611a65565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611b2b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b50805460008255906000526020600020908101906117639190611a50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611ba057611ba0611b4e565b60405290565b6040516060810167ffffffffffffffff81118282101715611ba057611ba0611b4e565b604051610120810167ffffffffffffffff81118282101715611ba057611ba0611b4e565b604051610100810167ffffffffffffffff81118282101715611ba057611ba0611b4e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c5857611c58611b4e565b604052919050565b600082601f830112611c7157600080fd5b813567ffffffffffffffff811115611c8b57611c8b611b4e565b611cbc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611c11565b818152846020838601011115611cd157600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d1257600080fd5b919050565b600067ffffffffffffffff821115611d3157611d31611b4e565b5060051b60200190565b600082601f830112611d4c57600080fd5b81356020611d61611d5c83611d17565b611c11565b82815260059290921b84018101918181019086841115611d8057600080fd5b8286015b84811015611d9b5780358352918301918301611d84565b509695505050505050565b600082601f830112611db757600080fd5b81356020611dc7611d5c83611d17565b82815260059290921b84018101918181019086841115611de657600080fd5b8286015b84811015611d9b57611dfb81611cee565b8352918301918301611dea565b600082601f830112611e1957600080fd5b81356020611e29611d5c83611d17565b82815260059290921b84018101918181019086841115611e4857600080fd5b8286015b84811015611d9b57803567ffffffffffffffff811115611e6c5760008081fd5b611e7a8986838b0101611d3b565b845250918301918301611e4c565b600082601f830112611e9957600080fd5b81356020611ea9611d5c83611d17565b82815260059290921b84018101918181019086841115611ec857600080fd5b8286015b84811015611d9b57803560048110611ee45760008081fd5b8352918301918301611ecc565b600060c08284031215611f0357600080fd5b611f0b611b7d565b9050813567ffffffffffffffff80821115611f2557600080fd5b611f3185838601611da6565b83526020840135915080821115611f4757600080fd5b611f5385838601611da6565b60208401526040840135915080821115611f6c57600080fd5b611f7885838601611da6565b60408401526060840135915080821115611f9157600080fd5b611f9d85838601611e08565b60608401526080840135915080821115611fb657600080fd5b611fc285838601611e08565b608084015260a0840135915080821115611fdb57600080fd5b50611fe884828501611e88565b60a08301525092915050565b60008060006060848603121561200957600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561202f57600080fd5b908501906060828803121561204357600080fd5b61204b611ba6565b82358281111561205a57600080fd5b8301610120818a03121561206d57600080fd5b612075611bc9565b81358481111561208457600080fd5b6120908b828501611c60565b82525061209f60208301611cee565b60208201526120b060408301611cee565b60408201526060820135848111156120c757600080fd5b6120d38b828501611d3b565b6060830152506080820135848111156120eb57600080fd5b6120f78b828501611d3b565b60808301525060a082013560a082015260c082013560c082015260e082013560e0820152610100808301358581111561212f57600080fd5b61213b8c828601611ef1565b82840152505080835250506020830135602082015260408301358281111561216257600080fd5b61216e89828601611c60565b6040830152508093505050509250925092565b60006020828403121561219357600080fd5b5035919050565b6000815180845260005b818110156121c0576020818501810151868301820152016121a4565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561222e57815187529582019590820190600101612212565b509495945050505050565b600081518084526020808501945080840160005b8381101561222e57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161224d565b600081518084526020808501808196508360051b8101915082860160005b858110156122c75782840389526122b58483516121fe565b9885019893509084019060010161229d565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261231860c0850182612239565b9050602080840151858303828701526123318382612239565b9250506040840151858303604087015261234b8382612239565b92505060608401518583036060870152612365838261227f565b9250506080840151858303608087015261237f838261227f565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156123f557855160048082106123e2577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835294840194918401916001016123a3565b5090979650505050505050565b600061012082518185526124188286018261219a565b9150506020830151612442602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161246a604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261248282826121fe565b9150506080830151848203608086015261249c82826121fe565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526124d58382612303565b9695505050505050565b6060815260006124f26060830186612402565b84602084015282810360408401526124d5818561219a565b6020815260008251606060208401526125266080840182612402565b90506020840151604084015260408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261256b828261219a565b95945050505050565b60006020828403121561258657600080fd5b813567ffffffffffffffff8082111561259e57600080fd5b9083019061010082860312156125b357600080fd5b6125bb611bed565b6125c483611cee565b81526125d260208401611cee565b60208201526125e360408401611cee565b60408201526125f460608401611cee565b606082015261260560808401611cee565b608082015261261660a08401611cee565b60a082015261262760c08401611cee565b60c082015260e08301358281111561263e57600080fd5b61264a87828601611da6565b60e08301525095945050505050565b60006020828403121561266b57600080fd5b61267482611cee565b9392505050565b60208152600061267460208301846121fe565b6020815260006126746020830184612303565b600181811c908216806126b557607f821691505b6020821081036126ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561273e57600081815260208120601f850160051c8101602086101561271b5750805b601f850160051c820191505b8181101561273a57828155600101612727565b5050505b505050565b815167ffffffffffffffff81111561275d5761275d611b4e565b6127718161276b84546126a1565b846126f4565b602080601f8311600181146127c4576000841561278e5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561273a565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612811578886015182559484019460019091019084016127f2565b508582101561284d57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561286f57600080fd5b815163ffffffff8116811461267457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156128c457600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612923577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212206bd32bf06a2a3ca7007184c86f92ff83f89dcf9f091a2480f590c9f168bb99a764736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
