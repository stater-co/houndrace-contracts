/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceEntryTicketCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raceEntryTicket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620034b9380380620034b98339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b612c7880620008416000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806393de70e811610081578063d8de65871161005b578063d8de6587146101ca578063e200c85714610265578063f2fde38b1461028557600080fd5b806393de70e814610180578063af640d0f14610193578063b7dda85e146101aa57600080fd5b8063797a6764116100b2578063797a6764146101215780637bbc469e146101345780638da5cb5b1461015857600080fd5b80635b19e294146100ce578063715018a614610117575b600080fd5b6100e16100dc366004611cfc565b610298565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61011f6102de565b005b61011f61012f366004612278565b6102f2565b610147610142366004612356565b610813565b60405161010e959493929190612694565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61011f61018e3660046127eb565b610d83565b61019c60025481565b60405190815260200161010e565b6101bd6101b8366004612356565b610ea5565b60405161010e91906128f8565b600454600554600654600754600854600954600a5461020f9673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e00161010e565b610278610273366004612356565b611430565b60405161010e919061298b565b61011f6102933660046129a5565b611495565b600160205281600052604060002081815481106102b457600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6102e661154e565b6102f060006115cf565b565b6000805b336000908152600160205260409020548110156103af57336000908152600160205260408120805491357fffffffff00000000000000000000000000000000000000000000000000000000169183908110610353576103536129c0565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361039f57600191505b6103a8816129ef565b90506102f6565b50806103ba57600080fd5b60048054835160a001516040517f11a343930000000000000000000000000000000000000000000000000000000081529283015273ffffffffffffffffffffffffffffffffffffffff16906311a3439390602401600060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050600a5460808501516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061049991600401612a4e565b600060405180830381600087803b1580156104b357600080fd5b505af11580156104c7573d6000803e3d6000fd5b5050506000858152600c6020526040902083518051859350829081906104ed9082612b02565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161056592600385019201906118aa565b50608082015180516105819160048401916020909101906118aa565b5060a0820151600582015560c0820151600682015560e09091015160079091015560208201516008820155604082015160098201556060820151600a8201906105ca9082612b02565b50608082015180518051600b8401916105e8918391602001906118f5565b50602082810151805161060192600185019201906118f5565b506040820151805161061d9160028401916020909101906118f5565b506060820151805161063991600384019160209091019061196f565b506080820151805161065591600484019160209091019061196f565b5060a082015180516106719160058401916020909101906119c8565b50506009546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018890526000945073ffffffffffffffffffffffffffffffffffffffff909116925063e3c5fc049150602401602060405180830381865afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070c9190612c1c565b905060005b835160600151518110156107d257600554845160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc91908490811061075a5761075a6129c0565b6020026020010151846040518363ffffffff1660e01b815260040161078f92919091825263ffffffff16602082015260400190565b600060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b50505050806107cb906129ef565b9050610711565b5083857f11ef6af92dc673ebab471c9a43cd3f4fc18c09152c3b47543bf17d3df3f2839e8560405161080491906128f8565b60405180910390a35050505050565b600c602052806000526040600020600091509050806000016040518061010001604052908160008201805461084790612a61565b80601f016020809104026020016040519081016040528092919081815260200182805461087390612a61565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561094e57602002820191906000526020600020905b81548152602001906001019080831161093a575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156109a657602002820191906000526020600020905b815481526020019060010190808311610992575b5050505050815260200160058201548152602001600682015481526020016007820154815250509080600801549080600901549080600a0180546109e990612a61565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1590612a61565b8015610a625780601f10610a3757610100808354040283529160200191610a62565b820191906000526020600020905b815481529060010190602001808311610a4557829003601f168201915b50505050509080600b016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610add57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ab2575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610b4c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b21575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610bbb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b90575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610c5557600084815260209081902083018054604080518285028101850190915281815292830182828015610c4157602002820191906000526020600020905b815481526020019060010190808311610c2d575b505050505081526020019060010190610be9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610cee57600084815260209081902083018054604080518285028101850190915281815292830182828015610cda57602002820191906000526020600020905b815481526020019060010190808311610cc6575b505050505081526020019060010190610c82565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610d7557602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610d5357610d53612566565b815260206001928301818104948501949093039092029101808411610d345790505b505050505081525050905085565b610d8b61154e565b805180518291600391610da59183916020909101906118f5565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610e8e9260088501920190611a77565b50508151610100830151610ea29250611644565b50565b610ead611ad0565b6000828152600c60205260409081902081516101a081019092528054829060a0820190839082908290610edf90612a61565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0b90612a61565b8015610f585780601f10610f2d57610100808354040283529160200191610f58565b820191906000526020600020905b815481529060010190602001808311610f3b57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610fe657602002820191906000526020600020905b815481526020019060010190808311610fd2575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561103e57602002820191906000526020600020905b81548152602001906001019080831161102a575b50505050508152602001600582015481526020016006820154815260200160078201548152505081526020016008820154815260200160098201548152602001600a8201805461108d90612a61565b80601f01602080910402602001604051908101604052809291908181526020018280546110b990612a61565b80156111065780601f106110db57610100808354040283529160200191611106565b820191906000526020600020905b8154815290600101906020018083116110e957829003601f168201915b50505050508152602001600b82016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561118557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161115a575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156111f457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116111c9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561126357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611238575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112fd576000848152602090819020830180546040805182850281018501909152818152928301828280156112e957602002820191906000526020600020905b8154815260200190600101908083116112d5575b505050505081526020019060010190611291565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156113965760008481526020908190208301805460408051828502810185019091528181529283018282801561138257602002820191906000526020600020905b81548152602001906001019080831161136e575b50505050508152602001906001019061132a565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561141d57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156113fb576113fb612566565b8152602060019283018181049485019490930390920291018084116113dc5790505b5050509190925250505090525092915050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561148957602002820191906000526020600020905b815481526020019060010190808311611475575b50505050509050919050565b61149d61154e565b73ffffffffffffffffffffffffffffffffffffffff8116611545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610ea2816115cf565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161153c565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461165257600080fd5b60005b82518110156118a55760005b828281518110611673576116736129c0565b6020026020010151518110156118945760016000858481518110611699576116996129c0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106117b757600160008584815181106116fb576116fb6129c0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061174f5761174f6129c0565b60200260200101518281518110611768576117686129c0565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055611884565b8282815181106117c9576117c96129c0565b602002602001015181815181106117e2576117e26129c0565b602002602001015160016000868581518110611800576118006129c0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611853576118536129c0565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61188d816129ef565b9050611661565b5061189e816129ef565b9050611655565b505050565b8280548282559060005260206000209081019282156118e5579160200282015b828111156118e55782518255916020019190600101906118ca565b506118f1929150611ba7565b5090565b8280548282559060005260206000209081019282156118e5579160200282015b828111156118e557825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611915565b8280548282559060005260206000209081019282156119bc579160200282015b828111156119bc57825180516119ac9184916020909101906118aa565b509160200191906001019061198f565b506118f1929150611bbc565b82805482825590600052602060002090601f016020900481019282156118e55791602002820160005b83821115611a3d57835183826101000a81548160ff02191690836003811115611a1c57611a1c612566565b021790555092602001926001016020816000010492830192600103026119f1565b8015611a6a5782816101000a81549060ff0219169055600101602081600001049283019260010302611a3d565b50506118f1929150611ba7565b828054828255906000526020600020908101928215611ac4579160200282015b82811115611ac45782518051611ab4918491602090910190611bd9565b5091602001919060010190611a97565b506118f1929150611c73565b6040518060a00160405280611b4f60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160608152602001611ba26040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156118f15760008155600101611ba8565b808211156118f1576000611bd08282611c90565b50600101611bbc565b828054828255906000526020600020906007016008900481019282156118e55791602002820160005b83821115611c4357835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302611c02565b8015611a6a5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611c43565b808211156118f1576000611c878282611cae565b50600101611c73565b5080546000825590600052602060002090810190610ea29190611ba7565b508054600082556007016008900490600052602060002090810190610ea29190611ba7565b803573ffffffffffffffffffffffffffffffffffffffff81168114611cf757600080fd5b919050565b60008060408385031215611d0f57600080fd5b611d1883611cd3565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611d7957611d79611d26565b60405290565b60405160c0810167ffffffffffffffff81118282101715611d7957611d79611d26565b60405160a0810167ffffffffffffffff81118282101715611d7957611d79611d26565b604051610120810167ffffffffffffffff81118282101715611d7957611d79611d26565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611e3057611e30611d26565b604052919050565b600082601f830112611e4957600080fd5b813567ffffffffffffffff811115611e6357611e63611d26565b611e9460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611de9565b818152846020838601011115611ea957600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611ee057611ee0611d26565b5060051b60200190565b600082601f830112611efb57600080fd5b81356020611f10611f0b83611ec6565b611de9565b82815260059290921b84018101918181019086841115611f2f57600080fd5b8286015b84811015611f4a5780358352918301918301611f33565b509695505050505050565b60006101008284031215611f6857600080fd5b611f70611d55565b9050813567ffffffffffffffff80821115611f8a57600080fd5b611f9685838601611e38565b8352611fa460208501611cd3565b6020840152611fb560408501611cd3565b60408401526060840135915080821115611fce57600080fd5b611fda85838601611eea565b60608401526080840135915080821115611ff357600080fd5b5061200084828501611eea565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b600082601f83011261203b57600080fd5b8135602061204b611f0b83611ec6565b82815260059290921b8401810191818101908684111561206a57600080fd5b8286015b84811015611f4a5761207f81611cd3565b835291830191830161206e565b600082601f83011261209d57600080fd5b813560206120ad611f0b83611ec6565b82815260059290921b840181019181810190868411156120cc57600080fd5b8286015b84811015611f4a57803567ffffffffffffffff8111156120f05760008081fd5b6120fe8986838b0101611eea565b8452509183019183016120d0565b600082601f83011261211d57600080fd5b8135602061212d611f0b83611ec6565b82815260059290921b8401810191818101908684111561214c57600080fd5b8286015b84811015611f4a578035600481106121685760008081fd5b8352918301918301612150565b600060c0828403121561218757600080fd5b61218f611d7f565b9050813567ffffffffffffffff808211156121a957600080fd5b6121b58583860161202a565b835260208401359150808211156121cb57600080fd5b6121d78583860161202a565b602084015260408401359150808211156121f057600080fd5b6121fc8583860161202a565b6040840152606084013591508082111561221557600080fd5b6122218583860161208c565b6060840152608084013591508082111561223a57600080fd5b6122468583860161208c565b608084015260a084013591508082111561225f57600080fd5b5061226c8482850161210c565b60a08301525092915050565b60008060006060848603121561228d57600080fd5b8335925060208401359150604084013567ffffffffffffffff808211156122b357600080fd5b9085019060a082880312156122c757600080fd5b6122cf611da2565b8235828111156122de57600080fd5b6122ea89828601611f55565b825250602083013560208201526040830135604082015260608301358281111561231357600080fd5b61231f89828601611e38565b60608301525060808301358281111561233757600080fd5b61234389828601612175565b6080830152508093505050509250925092565b60006020828403121561236857600080fd5b5035919050565b6000815180845260005b8181101561239557602081850181015186830182015201612379565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015612403578151875295820195908201906001016123e7565b509495945050505050565b600061010082518185526124248286018261236f565b91505073ffffffffffffffffffffffffffffffffffffffff6020840151166020850152604083015161246e604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261248682826123d3565b915050608083015184820360808601526124a082826123d3565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b600081518084526020808501945080840160005b8381101561240357815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016124df565b600081518084526020808501808196508360051b8101915082860160005b858110156125595782840389526125478483516123d3565b9885019893509084019060010161252f565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526125aa60c08501826124cb565b9050602080840151858303828701526125c383826124cb565b925050604084015185830360408701526125dd83826124cb565b925050606084015185830360608701526125f78382612511565b925050608084015185830360808701526126118382612511565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156126875785516004808210612674577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101612635565b5090979650505050505050565b60a0815260006126a760a083018861240e565b86602084015285604084015282810360608401526126c5818661236f565b905082810360808401526126d98185612595565b98975050505050505050565b600082601f8301126126f657600080fd5b81356020612706611f0b83611ec6565b828152600592831b850182019282820191908785111561272557600080fd5b8387015b8581101561268757803567ffffffffffffffff8111156127495760008081fd5b8801603f81018a1361275b5760008081fd5b85810135604061276d611f0b83611ec6565b82815291851b8301810191888101908d84111561278a5760008081fd5b938201935b838510156127da57843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146127ca5760008081fd5b828252938901939089019061278f565b885250505093850193508401612729565b6000602082840312156127fd57600080fd5b813567ffffffffffffffff8082111561281557600080fd5b90830190610120828603121561282a57600080fd5b612832611dc5565b82358281111561284157600080fd5b61284d8782860161202a565b82525061285c60208401611cd3565b602082015261286d60408401611cd3565b604082015261287e60608401611cd3565b606082015261288f60808401611cd3565b60808201526128a060a08401611cd3565b60a08201526128b160c08401611cd3565b60c08201526128c260e08401611cd3565b60e082015261010080840135838111156128db57600080fd5b6128e7888287016126e5565b918301919091525095945050505050565b602081526000825160a0602084015261291460c084018261240e565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080858403016080860152612964838361236f565b925060808601519150808584030160a0860152506129828282612595565b95945050505050565b60208152600061299e60208301846123d3565b9392505050565b6000602082840312156129b757600080fd5b61299e82611cd3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a47577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60208152600061299e6020830184612595565b600181811c90821680612a7557607f821691505b602082108103612aae577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156118a557600081815260208120601f850160051c81016020861015612adb5750805b601f850160051c820191505b81811015612afa57828155600101612ae7565b505050505050565b815167ffffffffffffffff811115612b1c57612b1c611d26565b612b3081612b2a8454612a61565b84612ab4565b602080601f831160018114612b835760008415612b4d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612afa565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612bd057888601518255948401946001909101908401612bb1565b5085821015612c0c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612c2e57600080fd5b815163ffffffff8116811461299e57600080fdfea264697066735822122058a6efc519c94ee6e502111db773b3efb772053ddc42f2140c81aa1a2266522f64736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
