/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620031f6380380620031f68339810160408190526200003891620003ff565b80620000443362000211565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b9291019062000261565b506101409190910151600a909101805460ff191691151591909117905560005b816101200151518110156200020857600e600083610120015183815181106200016e576200016e6200053a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110620001c357620001c36200053a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002008162000550565b905062000141565b50505062000578565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000282565b50620002c7929150620002cb565b5090565b5b80821115620002c75760008155600101620002cc565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156200031e576200031e620002e2565b60405290565b80516001600160a01b03811681146200033c57600080fd5b919050565b600082601f8301126200035357600080fd5b815160206001600160401b0380831115620003725762000372620002e2565b8260051b604051601f19603f830116810181811084821117156200039a576200039a620002e2565b604052938452858101830193838101925087851115620003b957600080fd5b83870191505b84821015620003e357620003d38262000324565b83529183019190830190620003bf565b979650505050505050565b805180151581146200033c57600080fd5b6000602082840312156200041257600080fd5b81516001600160401b03808211156200042a57600080fd5b9083019061016082860312156200044057600080fd5b6200044a620002f8565b620004558362000324565b8152620004656020840162000324565b6020820152620004786040840162000324565b60408201526200048b6060840162000324565b60608201526200049e6080840162000324565b6080820152620004b160a0840162000324565b60a0820152620004c460c0840162000324565b60c0820152620004d760e0840162000324565b60e0820152610100620004ec81850162000324565b9082015261012083810151838111156200050557600080fd5b620005138882870162000341565b82840152505061014091506200052b828401620003ee565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200057157634e487b7160e01b600052601160045260246000fd5b5060010190565b612c6e80620005886000396000f3fe6080604052600436106100dd5760003560e01c8063af640d0f1161007f578063d8de658711610059578063d8de6587146103e2578063e1152343146104b8578063e200c857146104d8578063f2fde38b1461050557600080fd5b8063af640d0f14610351578063b7dda85e14610375578063d63a8e11146103a257600080fd5b8063680adc37116100bb578063680adc3714610226578063715018a6146102d75780637bbc469e146102ec5780638da5cb5b1461031c57600080fd5b80632a546a38146100e257806330e54438146101f15780636574105b14610206575b600080fd5b3480156100ee57600080fd5b506101a46100fd366004611dec565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600f60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516101e89190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b6102046101ff3660046122ab565b610525565b005b34801561021257600080fd5b50610204610221366004612452565b610a49565b34801561023257600080fd5b506102a3610241366004611dec565b600f6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff958616815293851660208501529184169183019190915290911660608201526080016101e8565b3480156102e357600080fd5b50610204610c95565b3480156102f857600080fd5b5061030c610307366004611dec565b610ca9565b6040516101e894939291906128b7565b34801561032857600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e8565b34801561035d57600080fd5b5061036760015481565b6040519081526020016101e8565b34801561038157600080fd5b50610395610390366004611dec565b61121d565b6040516101e891906128f3565b3480156103ae57600080fd5b506103d26103bd366004612967565b600e6020526000908152604090205460ff1681565b60405190151581526020016101e8565b3480156103ee57600080fd5b50600254600354600454600554600654600754600854600954600a54600c546104479973ffffffffffffffffffffffffffffffffffffffff90811699811698811697811696811695811694811693811692169060ff168a565b6040805173ffffffffffffffffffffffffffffffffffffffff9b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c0850152841660e0840152909216610100820152901515610120820152610140016101e8565b3480156104c457600080fd5b506102046104d3366004611dec565b6117a9565b3480156104e457600080fd5b506104f86104f3366004611dec565b6118e4565b6040516101e89190612989565b34801561051157600080fd5b50610204610520366004612967565b611949565b61052d6119fd565b600354815160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a343939161058b9160040190815260200190565b600060405180830381600087803b1580156105a557600080fd5b505af11580156105b9573d6000803e3d6000fd5b5050600a54835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b092506106189160040161299c565b600060405180830381600087803b15801561063257600080fd5b505af1158015610646573d6000803e3d6000fd5b5050506000848152600d60205260409020825180518493508290819061066c9082612a51565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516106e49260038501920190611af3565b5060808201518051610700916004840191602090910190611af3565b5060a0820151600582015560c0820151600682015560e0820151600782015561010082015180518051600884019161073d91839160200190611b3e565b5060208281015180516107569260018501920190611b3e565b5060408201518051610772916002840191602090910190611b3e565b506060820151805161078e916003840191602090910190611bb8565b50608082015180516107aa916004840191602090910190611bb8565b5060a082015180516107c6916005840191602090910190611c11565b505050506020830151600e830155506040820151600f820155606082015160108201906107f39082612a51565b5050600480546040517fe3c5fc040000000000000000000000000000000000000000000000000000000081529182018590526000925073ffffffffffffffffffffffffffffffffffffffff169063e3c5fc0490602401602060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a9190612b6b565b905060005b82516060015151811015610a0a57600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106108d8576108d8612b91565b602002602001015160006040518363ffffffff1660e01b8152600401610908929190918252602082015260400190565b6020604051808303816000875af1158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b9190612bc0565b60000361095757600080fd5b600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc91908490811061099257610992612b91565b6020026020010151846040518363ffffffff1660e01b81526004016109c792919091825263ffffffff16602082015260400190565b600060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b5050505080610a0390612bd9565b905061088f565b50837fc02fecfc0d93a1af1b36bdc51bb32e39003cb94a5128ba50433165f8d25e0eac83604051610a3b91906128f3565b60405180910390a250505050565b610a516119fd565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a8054909316941693909317905561012083015180518493610b5192600b92910190611b3e565b506101409190910151600a90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560005b81610120015151811015610c9157600e60008361012001518381518110610bb857610bb8612b91565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110610c2457610c24612b91565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610c8a81612bd9565b9050610b8f565b5050565b610c9d6119fd565b610ca76000611a7e565b565b600d6020528060005260406000206000915090508060000160405180610120016040529081600082018054610cdd906129af565b80601f0160208091040260200160405190810160405280929190818152602001828054610d09906129af565b8015610d565780601f10610d2b57610100808354040283529160200191610d56565b820191906000526020600020905b815481529060010190602001808311610d3957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610de457602002820191906000526020600020905b815481526020019060010190808311610dd0575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610e3c57602002820191906000526020600020905b815481526020019060010190808311610e28575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610ed957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610eae575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f4857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f1d575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610fb757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f8c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110515760008481526020908190208301805460408051828502810185019091528181529283018282801561103d57602002820191906000526020600020905b815481526020019060010190808311611029575b505050505081526020019060010190610fe5565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110ea576000848152602090819020830180546040805182850281018501909152818152928301828280156110d657602002820191906000526020600020905b8154815260200190600101908083116110c2575b50505050508152602001906001019061107e565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561117157602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561114f5761114f6126ac565b8152602060019283018181049485019490930390920291018084116111305790505b505050505081525050815250509080600e01549080600f01549080601001805461119a906129af565b80601f01602080910402602001604051908101604052809291908181526020018280546111c6906129af565b80156112135780601f106111e857610100808354040283529160200191611213565b820191906000526020600020905b8154815290600101906020018083116111f657829003601f168201915b5050505050905084565b611225611cc0565b6000828152600d60205260409081902081516101a08101909252805482906080820190839082908290611257906129af565b80601f0160208091040260200160405190810160405280929190818152602001828054611283906129af565b80156112d05780601f106112a5576101008083540402835291602001916112d0565b820191906000526020600020905b8154815290600101906020018083116112b357829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561135e57602002820191906000526020600020905b81548152602001906001019080831161134a575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156113b657602002820191906000526020600020905b8154815260200190600101908083116113a2575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561145357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611428575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156114c257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611497575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561153157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611506575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115cb576000848152602090819020830180546040805182850281018501909152818152928301828280156115b757602002820191906000526020600020905b8154815260200190600101908083116115a3575b50505050508152602001906001019061155f565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156116645760008481526020908190208301805460408051828502810185019091528181529283018282801561165057602002820191906000526020600020905b81548152602001906001019080831161163c575b5050505050815260200190600101906115f8565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156116eb57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156116c9576116c96126ac565b8152602060019283018181049485019490930390920291018084116116aa5790505b505050505081525050815250508152602001600e8201548152602001600f8201548152602001601082018054611720906129af565b80601f016020809104026020016040519081016040528092919081815260200182805461174c906129af565b80156117995780601f1061176e57610100808354040283529160200191611799565b820191906000526020600020905b81548152906001019060200180831161177c57829003601f168201915b5050505050815250509050919050565b6117b16119fd565b47811115611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f193505050506118e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f207769746864726177000000000000604482015260640161183d565b50565b6000818152600d602090815260409182902060030180548351818402810184019094528084526060939283018282801561193d57602002820191906000526020600020905b815481526020019060010190808311611929575b50505050509050919050565b6119516119fd565b73ffffffffffffffffffffffffffffffffffffffff81166119f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161183d565b6118e181611a7e565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ca7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161183d565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611b2e579160200282015b82811115611b2e578251825591602001919060010190611b13565b50611b3a929150611cee565b5090565b828054828255906000526020600020908101928215611b2e579160200282015b82811115611b2e57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611b5e565b828054828255906000526020600020908101928215611c05579160200282015b82811115611c055782518051611bf5918491602090910190611af3565b5091602001919060010190611bd8565b50611b3a929150611d03565b82805482825590600052602060002090601f01602090048101928215611b2e5791602002820160005b83821115611c8657835183826101000a81548160ff02191690836003811115611c6557611c656126ac565b02179055509260200192600101602081600001049283019260010302611c3a565b8015611cb35782816101000a81549060ff0219169055600101602081600001049283019260010302611c86565b5050611b3a929150611cee565b6040518060800160405280611cd3611d20565b81526020016000815260200160008152602001606081525090565b5b80821115611b3a5760008155600101611cef565b80821115611b3a576000611d178282611dce565b50600101611d03565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611dc96040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b50805460008255906000526020600020908101906118e19190611cee565b600060208284031215611dfe57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611e5757611e57611e05565b60405290565b6040516080810167ffffffffffffffff81118282101715611e5757611e57611e05565b604051610120810167ffffffffffffffff81118282101715611e5757611e57611e05565b604051610160810167ffffffffffffffff81118282101715611e5757611e57611e05565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f0f57611f0f611e05565b604052919050565b600082601f830112611f2857600080fd5b813567ffffffffffffffff811115611f4257611f42611e05565b611f7360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611ec8565b818152846020838601011115611f8857600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611fc957600080fd5b919050565b600067ffffffffffffffff821115611fe857611fe8611e05565b5060051b60200190565b600082601f83011261200357600080fd5b8135602061201861201383611fce565b611ec8565b82815260059290921b8401810191818101908684111561203757600080fd5b8286015b84811015612052578035835291830191830161203b565b509695505050505050565b600082601f83011261206e57600080fd5b8135602061207e61201383611fce565b82815260059290921b8401810191818101908684111561209d57600080fd5b8286015b84811015612052576120b281611fa5565b83529183019183016120a1565b600082601f8301126120d057600080fd5b813560206120e061201383611fce565b82815260059290921b840181019181810190868411156120ff57600080fd5b8286015b8481101561205257803567ffffffffffffffff8111156121235760008081fd5b6121318986838b0101611ff2565b845250918301918301612103565b600082601f83011261215057600080fd5b8135602061216061201383611fce565b82815260059290921b8401810191818101908684111561217f57600080fd5b8286015b848110156120525780356004811061219b5760008081fd5b8352918301918301612183565b600060c082840312156121ba57600080fd5b6121c2611e34565b9050813567ffffffffffffffff808211156121dc57600080fd5b6121e88583860161205d565b835260208401359150808211156121fe57600080fd5b61220a8583860161205d565b6020840152604084013591508082111561222357600080fd5b61222f8583860161205d565b6040840152606084013591508082111561224857600080fd5b612254858386016120bf565b6060840152608084013591508082111561226d57600080fd5b612279858386016120bf565b608084015260a084013591508082111561229257600080fd5b5061229f8482850161213f565b60a08301525092915050565b6000806000606084860312156122c057600080fd5b8335925060208401359150604084013567ffffffffffffffff808211156122e657600080fd5b90850190608082880312156122fa57600080fd5b612302611e5d565b82358281111561231157600080fd5b8301610120818a03121561232457600080fd5b61232c611e80565b81358481111561233b57600080fd5b6123478b828501611f17565b82525061235660208301611fa5565b602082015261236760408301611fa5565b604082015260608201358481111561237e57600080fd5b61238a8b828501611ff2565b6060830152506080820135848111156123a257600080fd5b6123ae8b828501611ff2565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015261010080830135858111156123e657600080fd5b6123f28c8286016121a8565b8284015250508083525050602083013560208201526040830135604082015260608301358281111561242357600080fd5b61242f89828601611f17565b6060830152508093505050509250925092565b80358015158114611fc957600080fd5b60006020828403121561246457600080fd5b813567ffffffffffffffff8082111561247c57600080fd5b90830190610160828603121561249157600080fd5b612499611ea4565b6124a283611fa5565b81526124b060208401611fa5565b60208201526124c160408401611fa5565b60408201526124d260608401611fa5565b60608201526124e360808401611fa5565b60808201526124f460a08401611fa5565b60a082015261250560c08401611fa5565b60c082015261251660e08401611fa5565b60e0820152610100612529818501611fa5565b90820152610120838101358381111561254157600080fd5b61254d8882870161205d565b8284015250506101409150612563828401612442565b91810191909152949350505050565b6000815180845260005b818110156125985760208185018101518683018201520161257c565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015612606578151875295820195908201906001016125ea565b509495945050505050565b600081518084526020808501945080840160005b8381101561260657815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612625565b600081518084526020808501808196508360051b8101915082860160005b8581101561269f57828403895261268d8483516125d6565b98850198935090840190600101612675565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526126f060c0850182612611565b9050602080840151858303828701526127098382612611565b925050604084015185830360408701526127238382612611565b9250506060840151858303606087015261273d8382612657565b925050608084015185830360808701526127578382612657565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156127cd57855160048082106127ba577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b508352948401949184019160010161277b565b5090979650505050505050565b600061012082518185526127f082860182612572565b915050602083015161281a602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612842604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261285a82826125d6565b9150506080830151848203608086015261287482826125d6565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526128ad83826126db565b9695505050505050565b6080815260006128ca60808301876127da565b85602084015284604084015282810360608401526128e88185612572565b979650505050505050565b60208152600082516080602084015261290f60a08401826127da565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301608085015261295e8282612572565b95945050505050565b60006020828403121561297957600080fd5b61298282611fa5565b9392505050565b60208152600061298260208301846125d6565b60208152600061298260208301846126db565b600181811c908216806129c357607f821691505b6020821081036129fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115612a4c57600081815260208120601f850160051c81016020861015612a295750805b601f850160051c820191505b81811015612a4857828155600101612a35565b5050505b505050565b815167ffffffffffffffff811115612a6b57612a6b611e05565b612a7f81612a7984546129af565b84612a02565b602080601f831160018114612ad25760008415612a9c5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612a48565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612b1f57888601518255948401946001909101908401612b00565b5085821015612b5b57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612b7d57600080fd5b815163ffffffff8116811461298257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612bd257600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c31577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220c019d09553e7887152d85547844390b4e29b7d37215a534c5dd1e2618c6b2a1d64736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
