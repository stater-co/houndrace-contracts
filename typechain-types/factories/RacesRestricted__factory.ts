/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620034a4380380620034a48339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b612c6380620008416000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806393de70e811610081578063d8de65871161005b578063d8de6587146101c9578063e200c85714610264578063f2fde38b1461028457600080fd5b806393de70e81461017f578063af640d0f14610192578063b7dda85e146101a957600080fd5b8063715018a6116100b2578063715018a61461012c5780637bbc469e146101345780638da5cb5b1461015757600080fd5b806330e54438146100ce5780635b19e294146100e3575b600080fd5b6100e16100dc3660046121df565b610297565b005b6100f66100f1366004612376565b610875565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6100e16108bb565b6101476101423660046123a0565b6108cf565b60405161012394939291906126d6565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610123565b6100e161018d366004612818565b610e43565b61019b60025481565b604051908152602001610123565b6101bc6101b73660046123a0565b610f65565b6040516101239190612925565b600454600554600654600754600854600954600a5461020e9673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610123565b6102776102723660046123a0565b6114f1565b604051610123919061297b565b6100e1610292366004612995565b611556565b6000805b3360009081526001602052604090205481101561035457336000908152600160205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106102f8576102f86129b0565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361034457600191505b61034d816129df565b905061029b565b508061035f57600080fd5b60048054835160a001516040517f11a343930000000000000000000000000000000000000000000000000000000081529283015273ffffffffffffffffffffffffffffffffffffffff16906311a3439390602401600060405180830381600087803b1580156103cd57600080fd5b505af11580156103e1573d6000803e3d6000fd5b5050600a54845161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061044091600401612a3e565b600060405180830381600087803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b5050506000858152600c6020526040902083518051859350829081906104949082612af2565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161050c926003850192019061196b565b506080820151805161052891600484019160209091019061196b565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610565918391602001906119b6565b50602082810151805161057e92600185019201906119b6565b506040820151805161059a9160028401916020909101906119b6565b50606082015180516105b6916003840191602090910190611a30565b50608082015180516105d2916004840191602090910190611a30565b5060a082015180516105ee916005840191602090910190611a89565b505050506020830151600e830155506040820151600f8201556060820151601082019061061b9082612af2565b50506009546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018690526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b49190612bee565b905060005b8351606001515181101561083457600554845160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610702576107026129b0565b602002602001015160006040518363ffffffff1660e01b8152600401610732929190918252602082015260400190565b6020604051808303816000875af1158015610751573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107759190612c14565b60000361078157600080fd5b600554845160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106107bc576107bc6129b0565b6020026020010151846040518363ffffffff1660e01b81526004016107f192919091825263ffffffff16602082015260400190565b600060405180830381600087803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b505050508061082d906129df565b90506106b9565b5083857fa6266edd73d5306347b1967afd613964af265e032c9c487394151570a567766f856040516108669190612925565b60405180910390a35050505050565b6001602052816000526040600020818154811061089157600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6108c361160f565b6108cd6000611690565b565b600c602052806000526040600020600091509050806000016040518061012001604052908160008201805461090390612a51565b80601f016020809104026020016040519081016040528092919081815260200182805461092f90612a51565b801561097c5780601f106109515761010080835404028352916020019161097c565b820191906000526020600020905b81548152906001019060200180831161095f57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610a0a57602002820191906000526020600020905b8154815260200190600101908083116109f6575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610a6257602002820191906000526020600020905b815481526020019060010190808311610a4e575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610aff57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ad4575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610b6e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b43575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610bdd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610bb2575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610c7757600084815260209081902083018054604080518285028101850190915281815292830182828015610c6357602002820191906000526020600020905b815481526020019060010190808311610c4f575b505050505081526020019060010190610c0b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610d1057600084815260209081902083018054604080518285028101850190915281815292830182828015610cfc57602002820191906000526020600020905b815481526020019060010190808311610ce8575b505050505081526020019060010190610ca4565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610d9757602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610d7557610d756124d8565b815260206001928301818104948501949093039092029101808411610d565790505b505050505081525050815250509080600e01549080600f015490806010018054610dc090612a51565b80601f0160208091040260200160405190810160405280929190818152602001828054610dec90612a51565b8015610e395780601f10610e0e57610100808354040283529160200191610e39565b820191906000526020600020905b815481529060010190602001808311610e1c57829003601f168201915b5050505050905084565b610e4b61160f565b805180518291600391610e659183916020909101906119b6565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610f4e9260088501920190611b38565b50508151610100830151610f629250611705565b50565b610f6d611b91565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610f9f90612a51565b80601f0160208091040260200160405190810160405280929190818152602001828054610fcb90612a51565b80156110185780601f10610fed57610100808354040283529160200191611018565b820191906000526020600020905b815481529060010190602001808311610ffb57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156110a657602002820191906000526020600020905b815481526020019060010190808311611092575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156110fe57602002820191906000526020600020905b8154815260200190600101908083116110ea575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561119b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611170575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561120a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116111df575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561127957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161124e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611313576000848152602090819020830180546040805182850281018501909152818152928301828280156112ff57602002820191906000526020600020905b8154815260200190600101908083116112eb575b5050505050815260200190600101906112a7565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156113ac5760008481526020908190208301805460408051828502810185019091528181529283018282801561139857602002820191906000526020600020905b815481526020019060010190808311611384575b505050505081526020019060010190611340565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561143357602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611411576114116124d8565b8152602060019283018181049485019490930390920291018084116113f25790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461146890612a51565b80601f016020809104026020016040519081016040528092919081815260200182805461149490612a51565b80156114e15780601f106114b6576101008083540402835291602001916114e1565b820191906000526020600020905b8154815290600101906020018083116114c457829003601f168201915b5050505050815250509050919050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561154a57602002820191906000526020600020905b815481526020019060010190808311611536575b50505050509050919050565b61155e61160f565b73ffffffffffffffffffffffffffffffffffffffff8116611606576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610f6281611690565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016115fd565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461171357600080fd5b60005b82518110156119665760005b828281518110611734576117346129b0565b602002602001015151811015611955576001600085848151811061175a5761175a6129b0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061187857600160008584815181106117bc576117bc6129b0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838381518110611810576118106129b0565b60200260200101518281518110611829576118296129b0565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055611945565b82828151811061188a5761188a6129b0565b602002602001015181815181106118a3576118a36129b0565b6020026020010151600160008685815181106118c1576118c16129b0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611914576119146129b0565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61194e816129df565b9050611722565b5061195f816129df565b9050611716565b505050565b8280548282559060005260206000209081019282156119a6579160200282015b828111156119a657825182559160200191906001019061198b565b506119b2929150611bbf565b5090565b8280548282559060005260206000209081019282156119a6579160200282015b828111156119a657825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906119d6565b828054828255906000526020600020908101928215611a7d579160200282015b82811115611a7d5782518051611a6d91849160209091019061196b565b5091602001919060010190611a50565b506119b2929150611bd4565b82805482825590600052602060002090601f016020900481019282156119a65791602002820160005b83821115611afe57835183826101000a81548160ff02191690836003811115611add57611add6124d8565b02179055509260200192600101602081600001049283019260010302611ab2565b8015611b2b5782816101000a81549060ff0219169055600101602081600001049283019260010302611afe565b50506119b2929150611bbf565b828054828255906000526020600020908101928215611b85579160200282015b82811115611b855782518051611b75918491602090910190611bf1565b5091602001919060010190611b58565b506119b2929150611c8b565b6040518060800160405280611ba4611ca8565b81526020016000815260200160008152602001606081525090565b5b808211156119b25760008155600101611bc0565b808211156119b2576000611be88282611d56565b50600101611bd4565b828054828255906000526020600020906007016008900481019282156119a65791602002820160005b83821115611c5b57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302611c1a565b8015611b2b5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611c5b565b808211156119b2576000611c9f8282611d74565b50600101611c8b565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611d516040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5080546000825590600052602060002090810190610f629190611bbf565b508054600082556007016008900490600052602060002090810190610f629190611bbf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611deb57611deb611d99565b60405290565b6040516080810167ffffffffffffffff81118282101715611deb57611deb611d99565b604051610120810167ffffffffffffffff81118282101715611deb57611deb611d99565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e6157611e61611d99565b604052919050565b600082601f830112611e7a57600080fd5b813567ffffffffffffffff811115611e9457611e94611d99565b611ea76020601f19601f84011601611e38565b818152846020838601011115611ebc57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611efd57600080fd5b919050565b600067ffffffffffffffff821115611f1c57611f1c611d99565b5060051b60200190565b600082601f830112611f3757600080fd5b81356020611f4c611f4783611f02565b611e38565b82815260059290921b84018101918181019086841115611f6b57600080fd5b8286015b84811015611f865780358352918301918301611f6f565b509695505050505050565b600082601f830112611fa257600080fd5b81356020611fb2611f4783611f02565b82815260059290921b84018101918181019086841115611fd157600080fd5b8286015b84811015611f8657611fe681611ed9565b8352918301918301611fd5565b600082601f83011261200457600080fd5b81356020612014611f4783611f02565b82815260059290921b8401810191818101908684111561203357600080fd5b8286015b84811015611f8657803567ffffffffffffffff8111156120575760008081fd5b6120658986838b0101611f26565b845250918301918301612037565b600082601f83011261208457600080fd5b81356020612094611f4783611f02565b82815260059290921b840181019181810190868411156120b357600080fd5b8286015b84811015611f86578035600481106120cf5760008081fd5b83529183019183016120b7565b600060c082840312156120ee57600080fd5b6120f6611dc8565b9050813567ffffffffffffffff8082111561211057600080fd5b61211c85838601611f91565b8352602084013591508082111561213257600080fd5b61213e85838601611f91565b6020840152604084013591508082111561215757600080fd5b61216385838601611f91565b6040840152606084013591508082111561217c57600080fd5b61218885838601611ff3565b606084015260808401359150808211156121a157600080fd5b6121ad85838601611ff3565b608084015260a08401359150808211156121c657600080fd5b506121d384828501612073565b60a08301525092915050565b6000806000606084860312156121f457600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561221a57600080fd5b908501906080828803121561222e57600080fd5b612236611df1565b82358281111561224557600080fd5b8301610120818a03121561225857600080fd5b612260611e14565b81358481111561226f57600080fd5b61227b8b828501611e69565b82525061228a60208301611ed9565b602082015261229b60408301611ed9565b60408201526060820135848111156122b257600080fd5b6122be8b828501611f26565b6060830152506080820135848111156122d657600080fd5b6122e28b828501611f26565b60808301525060a082013560a082015260c082013560c082015260e082013560e0820152610100808301358581111561231a57600080fd5b6123268c8286016120dc565b8284015250508083525050602083013560208201526040830135604082015260608301358281111561235757600080fd5b61236389828601611e69565b6060830152508093505050509250925092565b6000806040838503121561238957600080fd5b61239283611ed9565b946020939093013593505050565b6000602082840312156123b257600080fd5b5035919050565b6000815180845260005b818110156123df576020818501810151868301820152016123c3565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561242f57815187529582019590820190600101612413565b509495945050505050565b600081518084526020808501945080840160005b8381101561242f57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161244e565b600082825180855260208086019550808260051b84010181860160005b848110156124cb57601f198684030189526124b98383516123ff565b9884019892509083019060010161249d565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261251c60c085018261243a565b905060208084015185830382870152612535838261243a565b9250506040840151858303604087015261254f838261243a565b925050606084015185830360608701526125698382612480565b925050608084015185830360808701526125838382612480565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156124cb57855160048082106125e6577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835294840194918401916001016125a7565b6000610120825181855261260f828601826123b9565b9150506020830151612639602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612661604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261267982826123ff565b9150506080830151848203608086015261269382826123ff565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526126cc8382612507565b9695505050505050565b6080815260006126e960808301876125f9565b856020840152846040840152828103606084015261270781856123b9565b979650505050505050565b600082601f83011261272357600080fd5b81356020612733611f4783611f02565b828152600592831b850182019282820191908785111561275257600080fd5b8387015b858110156124cb57803567ffffffffffffffff8111156127765760008081fd5b8801603f81018a136127885760008081fd5b85810135604061279a611f4783611f02565b82815291851b8301810191888101908d8411156127b75760008081fd5b938201935b8385101561280757843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146127f75760008081fd5b82825293890193908901906127bc565b885250505093850193508401612756565b60006020828403121561282a57600080fd5b813567ffffffffffffffff8082111561284257600080fd5b90830190610120828603121561285757600080fd5b61285f611e14565b82358281111561286e57600080fd5b61287a87828601611f91565b82525061288960208401611ed9565b602082015261289a60408401611ed9565b60408201526128ab60608401611ed9565b60608201526128bc60808401611ed9565b60808201526128cd60a08401611ed9565b60a08201526128de60c08401611ed9565b60c08201526128ef60e08401611ed9565b60e0820152610100808401358381111561290857600080fd5b61291488828701612712565b918301919091525095945050505050565b60208152600082516080602084015261294160a08401826125f9565b905060208401516040840152604084015160608401526060840151601f1984830301608085015261297282826123b9565b95945050505050565b60208152600061298e60208301846123ff565b9392505050565b6000602082840312156129a757600080fd5b61298e82611ed9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a37577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60208152600061298e6020830184612507565b600181811c90821680612a6557607f821691505b602082108103612a9e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561196657600081815260208120601f850160051c81016020861015612acb5750805b601f850160051c820191505b81811015612aea57828155600101612ad7565b505050505050565b815167ffffffffffffffff811115612b0c57612b0c611d99565b612b2081612b1a8454612a51565b84612aa4565b602080601f831160018114612b735760008415612b3d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612aea565b600085815260208120601f198616915b82811015612ba257888601518255948401946001909101908401612b83565b5085821015612bde57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612c0057600080fd5b815163ffffffff8116811461298e57600080fd5b600060208284031215612c2657600080fd5b505191905056fea2646970667358221220da13c746eb58a3e4a089030763f334c3240ba9f3e797fb25b9bf97218e373f3664736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
