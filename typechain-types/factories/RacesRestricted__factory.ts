/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesRestricted,
  RacesRestrictedInterface,
  RacesConstructor,
} from "../RacesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002ce438038062002ce48339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b6127f480620004f06000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b7dda85e11610081578063d8de65871161005b578063d8de6587146101bc578063e200c85714610257578063f2fde38b1461027757600080fd5b8063b7dda85e14610156578063b8f1835914610176578063d63a8e111461018957600080fd5b80637bbc469e116100b25780637bbc469e146100eb5780638da5cb5b14610117578063af640d0f1461013f57600080fd5b806330e54438146100ce578063715018a6146100e3575b600080fd5b6100e16100dc366004611e63565b61028a565b005b6100e16107b1565b6100fe6100f9366004611ffa565b6107c5565b60405161010e9493929190612358565b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61014860015481565b60405190815260200161010e565b610169610164366004611ffa565b610d39565b60405161010e9190612394565b6100e1610184366004612408565b6112c5565b6101ac6101973660046124ed565b600b6020526000908152604090205460ff1681565b604051901515815260200161010e565b6002546003546004546005546006546007546008546102019673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e00161010e565b61026a610265366004611ffa565b6114ad565b60405161010e919061250f565b6100e16102853660046124ed565b611512565b6102926115ce565b600254815160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a34393916102f09160040190815260200190565b600060405180830381600087803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b5050600854835161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061037d91600401612522565b600060405180830381600087803b15801561039757600080fd5b505af11580156103ab573d6000803e3d6000fd5b5050506000848152600a6020526040902082518051849350829081906103d190826125d7565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161044992600385019201906116c4565b50608082015180516104659160048401916020909101906116c4565b5060a0820151600582015560c0820151600682015560e082015160078201556101008201518051805160088401916104a29183916020019061170f565b5060208281015180516104bb926001850192019061170f565b50604082015180516104d791600284019160209091019061170f565b50606082015180516104f3916003840191602090910190611789565b506080820151805161050f916004840191602090910190611789565b5060a0820151805161052b9160058401916020909101906117e2565b505050506020830151600e830155506040820151600f8201556060820151601082019061055890826125d7565b50506007546040517fe3c5fc04000000000000000000000000000000000000000000000000000000008152600481018590526000925073ffffffffffffffffffffffffffffffffffffffff9091169063e3c5fc0490602401602060405180830381865afa1580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f191906126f1565b905060005b8251606001515181101561077157600354835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc91908490811061063f5761063f612717565b602002602001015160006040518363ffffffff1660e01b815260040161066f929190918252602082015260400190565b6020604051808303816000875af115801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190612746565b6000036106be57600080fd5b600354835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106106f9576106f9612717565b6020026020010151846040518363ffffffff1660e01b815260040161072e92919091825263ffffffff16602082015260400190565b600060405180830381600087803b15801561074857600080fd5b505af115801561075c573d6000803e3d6000fd5b505050508061076a9061275f565b90506105f6565b5082847fa6266edd73d5306347b1967afd613964af265e032c9c487394151570a567766f846040516107a39190612394565b60405180910390a350505050565b6107b96115ce565b6107c3600061164f565b565b600a60205280600052604060002060009150905080600001604051806101200160405290816000820180546107f990612535565b80601f016020809104026020016040519081016040528092919081815260200182805461082590612535565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561090057602002820191906000526020600020905b8154815260200190600101908083116108ec575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561095857602002820191906000526020600020905b815481526020019060010190808311610944575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156109f557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116109ca575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a6457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a39575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ad357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610aa8575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b6d57600084815260209081902083018054604080518285028101850190915281815292830182828015610b5957602002820191906000526020600020905b815481526020019060010190808311610b45575b505050505081526020019060010190610b01565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610c0657600084815260209081902083018054604080518285028101850190915281815292830182828015610bf257602002820191906000526020600020905b815481526020019060010190808311610bde575b505050505081526020019060010190610b9a565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610c8d57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610c6b57610c6b61214d565b815260206001928301818104948501949093039092029101808411610c4c5790505b505050505081525050815250509080600e01549080600f015490806010018054610cb690612535565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce290612535565b8015610d2f5780601f10610d0457610100808354040283529160200191610d2f565b820191906000526020600020905b815481529060010190602001808311610d1257829003601f168201915b5050505050905084565b610d41611891565b6000828152600a60205260409081902081516101a08101909252805482906080820190839082908290610d7390612535565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9f90612535565b8015610dec5780601f10610dc157610100808354040283529160200191610dec565b820191906000526020600020905b815481529060010190602001808311610dcf57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610e7a57602002820191906000526020600020905b815481526020019060010190808311610e66575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ed257602002820191906000526020600020905b815481526020019060010190808311610ebe575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610f6f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f44575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610fde57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fb3575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561104d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611022575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110e7576000848152602090819020830180546040805182850281018501909152818152928301828280156110d357602002820191906000526020600020905b8154815260200190600101908083116110bf575b50505050508152602001906001019061107b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156111805760008481526020908190208301805460408051828502810185019091528181529283018282801561116c57602002820191906000526020600020905b815481526020019060010190808311611158575b505050505081526020019060010190611114565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561120757602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156111e5576111e561214d565b8152602060019283018181049485019490930390920291018084116111c65790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461123c90612535565b80601f016020809104026020016040519081016040528092919081815260200182805461126890612535565b80156112b55780601f1061128a576101008083540402835291602001916112b5565b820191906000526020600020905b81548152906001019060200180831161129857829003601f168201915b5050505050815250509050919050565b6112cd6115ce565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e0830151805184936113a39260099291019061170f565b5090505060005b8160e00151518110156114a957600b60008360e0015183815181106113d1576113d1612717565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e00151848151811061143c5761143c612717565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556114a28161275f565b90506113aa565b5050565b6000818152600a602090815260409182902060030180548351818402810184019094528084526060939283018282801561150657602002820191906000526020600020905b8154815260200190600101908083116114f2575b50505050509050919050565b61151a6115ce565b73ffffffffffffffffffffffffffffffffffffffff81166115c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6115cb8161164f565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016115b9565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156116ff579160200282015b828111156116ff5782518255916020019190600101906116e4565b5061170b9291506118bf565b5090565b8280548282559060005260206000209081019282156116ff579160200282015b828111156116ff57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061172f565b8280548282559060005260206000209081019282156117d6579160200282015b828111156117d657825180516117c69184916020909101906116c4565b50916020019190600101906117a9565b5061170b9291506118d4565b82805482825590600052602060002090601f016020900481019282156116ff5791602002820160005b8382111561185757835183826101000a81548160ff021916908360038111156118365761183661214d565b0217905550926020019260010160208160000104928301926001030261180b565b80156118845782816101000a81549060ff0219169055600101602081600001049283019260010302611857565b505061170b9291506118bf565b60405180608001604052806118a46118f1565b81526020016000815260200160008152602001606081525090565b5b8082111561170b57600081556001016118c0565b8082111561170b5760006118e8828261199f565b506001016118d4565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200161199a6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b50805460008255906000526020600020908101906115cb91906118bf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611a0f57611a0f6119bd565b60405290565b6040516080810167ffffffffffffffff81118282101715611a0f57611a0f6119bd565b604051610120810167ffffffffffffffff81118282101715611a0f57611a0f6119bd565b604051610100810167ffffffffffffffff81118282101715611a0f57611a0f6119bd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611ac757611ac76119bd565b604052919050565b600082601f830112611ae057600080fd5b813567ffffffffffffffff811115611afa57611afa6119bd565b611b2b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611a80565b818152846020838601011115611b4057600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b8157600080fd5b919050565b600067ffffffffffffffff821115611ba057611ba06119bd565b5060051b60200190565b600082601f830112611bbb57600080fd5b81356020611bd0611bcb83611b86565b611a80565b82815260059290921b84018101918181019086841115611bef57600080fd5b8286015b84811015611c0a5780358352918301918301611bf3565b509695505050505050565b600082601f830112611c2657600080fd5b81356020611c36611bcb83611b86565b82815260059290921b84018101918181019086841115611c5557600080fd5b8286015b84811015611c0a57611c6a81611b5d565b8352918301918301611c59565b600082601f830112611c8857600080fd5b81356020611c98611bcb83611b86565b82815260059290921b84018101918181019086841115611cb757600080fd5b8286015b84811015611c0a57803567ffffffffffffffff811115611cdb5760008081fd5b611ce98986838b0101611baa565b845250918301918301611cbb565b600082601f830112611d0857600080fd5b81356020611d18611bcb83611b86565b82815260059290921b84018101918181019086841115611d3757600080fd5b8286015b84811015611c0a57803560048110611d535760008081fd5b8352918301918301611d3b565b600060c08284031215611d7257600080fd5b611d7a6119ec565b9050813567ffffffffffffffff80821115611d9457600080fd5b611da085838601611c15565b83526020840135915080821115611db657600080fd5b611dc285838601611c15565b60208401526040840135915080821115611ddb57600080fd5b611de785838601611c15565b60408401526060840135915080821115611e0057600080fd5b611e0c85838601611c77565b60608401526080840135915080821115611e2557600080fd5b611e3185838601611c77565b608084015260a0840135915080821115611e4a57600080fd5b50611e5784828501611cf7565b60a08301525092915050565b600080600060608486031215611e7857600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611e9e57600080fd5b9085019060808288031215611eb257600080fd5b611eba611a15565b823582811115611ec957600080fd5b8301610120818a031215611edc57600080fd5b611ee4611a38565b813584811115611ef357600080fd5b611eff8b828501611acf565b825250611f0e60208301611b5d565b6020820152611f1f60408301611b5d565b6040820152606082013584811115611f3657600080fd5b611f428b828501611baa565b606083015250608082013584811115611f5a57600080fd5b611f668b828501611baa565b60808301525060a082013560a082015260c082013560c082015260e082013560e08201526101008083013585811115611f9e57600080fd5b611faa8c828601611d60565b82840152505080835250506020830135602082015260408301356040820152606083013582811115611fdb57600080fd5b611fe789828601611acf565b6060830152508093505050509250925092565b60006020828403121561200c57600080fd5b5035919050565b6000815180845260005b818110156120395760208185018101518683018201520161201d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156120a75781518752958201959082019060010161208b565b509495945050505050565b600081518084526020808501945080840160005b838110156120a757815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016120c6565b600081518084526020808501808196508360051b8101915082860160005b8581101561214057828403895261212e848351612077565b98850198935090840190600101612116565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261219160c08501826120b2565b9050602080840151858303828701526121aa83826120b2565b925050604084015185830360408701526121c483826120b2565b925050606084015185830360608701526121de83826120f8565b925050608084015185830360808701526121f883826120f8565b60a08681015188830391890191909152805180835290840194506000925090830190825b8181101561226e578551600480821061225b577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b508352948401949184019160010161221c565b5090979650505050505050565b6000610120825181855261229182860182612013565b91505060208301516122bb602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516122e3604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526122fb8282612077565b915050608083015184820360808601526123158282612077565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261234e838261217c565b9695505050505050565b60808152600061236b608083018761227b565b85602084015284604084015282810360608401526123898185612013565b979650505050505050565b6020815260008251608060208401526123b060a084018261227b565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526123ff8282612013565b95945050505050565b60006020828403121561241a57600080fd5b813567ffffffffffffffff8082111561243257600080fd5b90830190610100828603121561244757600080fd5b61244f611a5c565b61245883611b5d565b815261246660208401611b5d565b602082015261247760408401611b5d565b604082015261248860608401611b5d565b606082015261249960808401611b5d565b60808201526124aa60a08401611b5d565b60a08201526124bb60c08401611b5d565b60c082015260e0830135828111156124d257600080fd5b6124de87828601611c15565b60e08301525095945050505050565b6000602082840312156124ff57600080fd5b61250882611b5d565b9392505050565b6020815260006125086020830184612077565b602081526000612508602083018461217c565b600181811c9082168061254957607f821691505b602082108103612582577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156125d257600081815260208120601f850160051c810160208610156125af5750805b601f850160051c820191505b818110156125ce578281556001016125bb565b5050505b505050565b815167ffffffffffffffff8111156125f1576125f16119bd565b612605816125ff8454612535565b84612588565b602080601f83116001811461265857600084156126225750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556125ce565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156126a557888601518255948401946001909101908401612686565b50858210156126e157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561270357600080fd5b815163ffffffff8116811461250857600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561275857600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e50ffc14d21572498d525ddb6badbec8d4d5f1b9237d309c6a93f991628042e264736f6c63430008110033";

type RacesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesRestricted__factory extends ContractFactory {
  constructor(...args: RacesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesRestricted";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<RacesRestricted>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesRestricted {
    return super.attach(address) as RacesRestricted;
  }
  connect(signer: Signer): RacesRestricted__factory {
    return super.connect(signer) as RacesRestricted__factory;
  }
  static readonly contractName: "RacesRestricted";
  public readonly contractName: "RacesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesRestrictedInterface {
    return new utils.Interface(_abi) as RacesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesRestricted {
    return new Contract(address, _abi, signerOrProvider) as RacesRestricted;
  }
}
