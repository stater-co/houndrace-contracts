/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Incubator,
  IncubatorInterface,
  IncubatorConstructor,
} from "../Incubator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "onId",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getIdentity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsIdentity",
    outputs: [
      {
        internalType: "uint256",
        name: "maleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "femaleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "generation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "birthDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "extensionTraits",
        type: "string",
      },
      {
        internalType: "enum Specie.Enum",
        name: "specie",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "identity",
        type: "tuple",
      },
    ],
    name: "setIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200160b3803806200160b8339810160408190526200003491620003b7565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a083015180518493620000cb9260069291019062000216565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905560a0810151620000ff9062000157565b5050620004db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200021257600860008383815181106200017d576200017d6200049d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560086000848481518110620001cd57620001cd6200049d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200020a81620004b3565b90506200015a565b5050565b8280548282559060005260206000209081019282156200026e579160200282015b828111156200026e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000237565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002d257620002d262000297565b60405290565b80516001600160a01b0381168114620002f057600080fd5b919050565b600082601f8301126200030757600080fd5b815160206001600160401b038083111562000326576200032662000297565b8260051b604051601f19603f830116810181811084821117156200034e576200034e62000297565b6040529384528581018301938381019250878511156200036d57600080fd5b83870191505b8482101562000397576200038782620002d8565b8352918301919083019062000373565b979650505050505050565b805163ffffffff81168114620002f057600080fd5b600060208284031215620003ca57600080fd5b81516001600160401b0380821115620003e257600080fd5b9083019060e08286031215620003f757600080fd5b62000401620002ad565b6200040c83620002d8565b81526200041c60208401620002d8565b60208201526200042f60408401620002d8565b60408201526200044260608401620002d8565b60608201526200045560808401620002d8565b608082015260a0830151828111156200046d57600080fd5b6200047b87828601620002f5565b60a0830152506200048f60c08401620003a2565b60c082015295945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d457634e487b7160e01b600052601160045260246000fd5b5060010190565b61112080620004eb6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806307b371c714610093578063715018a6146100a85780637f1f59bf146100b057806385e3f058146100c35780638da5cb5b146100ec578063c2115d4d1461010c578063d63a8e111461011f578063d8de658714610152578063e0eb2c56146101d0578063f2fde38b146101f5575b600080fd5b6100a66100a1366004610b9c565b610208565b005b6100a661027e565b6100a66100be366004610c1a565b610292565b6100d66100d1366004610c60565b61033c565b6040516100e39190610cf7565b60405180910390f35b6100f46104b1565b6040516001600160a01b0390911681526020016100e3565b6100a661011a366004610e2b565b6104c0565b61014261012d366004610efd565b60086020526000908152604090205460ff1681565b60405190151581526020016100e3565b600154600254600354600454600554600754610188956001600160a01b0390811695811694811693811692169063ffffffff1686565b604080516001600160a01b0397881681529587166020870152938616938501939093529084166060840152909216608082015263ffffffff90911660a082015260c0016100e3565b6101e36101de366004610c60565b610586565b6040516100e396959493929190610f1f565b6100a6610203366004610efd565b610648565b6001546040516000916001600160a01b0316906102289083903690610f59565b600060405180830381855af49150503d8060008114610263576040519150601f19603f3d011682016040523d82523d6000602084013e610268565b606091505b505090508061027657600080fd5b505050505050565b6102866106c3565b6102906000610722565b565b3360009081526008602052604090205460ff166102ae57600080fd5b600082815260096020908152604091829020835181559083015160018201559082015160028201556060820151600382015560808201518291906102f89060048301906036610827565b5060a0820151600b82019061030d9082610fee565b5060c0820151600c8201805460ff1916600183600681111561033157610331610cbf565b021790555050505050565b6103446108c3565b6000828152600960209081526040808320815160e081018352815481526001820154938101939093526002810154838301526003810154606084015281516106c0810192839052929390926080850192909160048501916036918390855b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116103a257905050505050508152602001600b820180546103f790610f69565b80601f016020809104026020016040519081016040528092919081815260200182805461042390610f69565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b5050509183525050600c82015460209091019060ff16600681111561049757610497610cbf565b60068111156104a8576104a8610cbf565b90525092915050565b6000546001600160a01b031690565b6104c86106c3565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a08301518051849361055192600692910190610905565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905560a081015161058390610772565b50565b60096020526000908152604090208054600182015460028301546003840154600b8501805494959394929391926105bc90610f69565b80601f01602080910402602001604051908101604052809291908181526020018280546105e890610f69565b80156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b505050600c909301549192505060ff1686565b6106506106c3565b6001600160a01b0381166106ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61058381610722565b336106cc6104b1565b6001600160a01b0316146102905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156108235760086000838381518110610794576107946110ad565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600860008484815181106107e1576107e16110ad565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561081c816110c3565b9050610775565b5050565b6007830191839082156108b35791602002820160005b8382111561088157835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261083d565b80156108b15782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610881565b505b506108bf92915061095a565b5090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016108f261096f565b8152606060208201526040016000905290565b8280548282559060005260206000209081019282156108b3579160200282015b828111156108b357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610925565b5b808211156108bf576000815560010161095b565b604051806106c001604052806036906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b03811182821017156109c6576109c661098e565b60405290565b604051601f8201601f191681016001600160401b03811182821017156109f4576109f461098e565b604052919050565b803563ffffffff81168114610a1057600080fd5b919050565b600082601f830112610a2657600080fd5b6040516106c08082016001600160401b0381118382101715610a4a57610a4a61098e565b60405283018185821115610a5d57600080fd5b845b82811015610a7e57610a70816109fc565b825260209182019101610a5f565b509195945050505050565b600082601f830112610a9a57600080fd5b81356001600160401b03811115610ab357610ab361098e565b610ac6601f8201601f19166020016109cc565b818152846020838601011115610adb57600080fd5b816020850160208301376000918101602001919091529392505050565b803560078110610a1057600080fd5b60006107808284031215610b1a57600080fd5b610b226109a4565b905081358152602082013560208201526040820135604082015260608201356060820152610b538360808401610a15565b60808201526107408201356001600160401b03811115610b7257600080fd5b610b7e84828501610a89565b60a083015250610b916107608301610af8565b60c082015292915050565b600080600080600060a08688031215610bb457600080fd5b8535945060208601356001600160401b0380821115610bd257600080fd5b610bde89838a01610b07565b9550604088013594506060880135915080821115610bfb57600080fd5b50610c0888828901610b07565b95989497509295608001359392505050565b60008060408385031215610c2d57600080fd5b8235915060208301356001600160401b03811115610c4a57600080fd5b610c5685828601610b07565b9150509250929050565b600060208284031215610c7257600080fd5b5035919050565b6000815180845260005b81811015610c9f57602081850181015186830182015201610c83565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60078110610cf357634e487b7160e01b600052602160045260246000fd5b9052565b600060208083528351818401528084015160408401526040840151606084015260608401516080840152608084015160a0840160005b6036811015610d5057825163ffffffff1682529183019190830190600101610d2d565b5050505060a083015161078080610760850152610d716107a0850183610c79565b915060c0850151610d8482860182610cd5565b5090949350505050565b80356001600160a01b0381168114610a1057600080fd5b600082601f830112610db657600080fd5b813560206001600160401b03821115610dd157610dd161098e565b8160051b610de08282016109cc565b9283528481018201928281019087851115610dfa57600080fd5b83870192505b84831015610e2057610e1183610d8e565b82529183019190830190610e00565b979650505050505050565b600060208284031215610e3d57600080fd5b81356001600160401b0380821115610e5457600080fd5b9083019060e08286031215610e6857600080fd5b610e706109a4565b610e7983610d8e565b8152610e8760208401610d8e565b6020820152610e9860408401610d8e565b6040820152610ea960608401610d8e565b6060820152610eba60808401610d8e565b608082015260a083013582811115610ed157600080fd5b610edd87828601610da5565b60a083015250610eef60c084016109fc565b60c082015295945050505050565b600060208284031215610f0f57600080fd5b610f1882610d8e565b9392505050565b86815285602082015284604082015283606082015260c060808201526000610f4a60c0830185610c79565b9050610e2060a0830184610cd5565b8183823760009101908152919050565b600181811c90821680610f7d57607f821691505b602082108103610f9d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610fe957600081815260208120601f850160051c81016020861015610fca5750805b601f850160051c820191505b8181101561027657828155600101610fd6565b505050565b81516001600160401b038111156110075761100761098e565b61101b816110158454610f69565b84610fa3565b602080601f83116001811461105057600084156110385750858301515b600019600386901b1c1916600185901b178555610276565b600085815260208120601f198616915b8281101561107f57888601518255948401946001909101908401611060565b508582101561109d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016110e357634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122000570b76fa277bbc41fead28c4fbda139406fc87654f53edad5e7f96d4f98f2964736f6c63430008110033";

type IncubatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Incubator__factory extends ContractFactory {
  constructor(...args: IncubatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Incubator";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Incubator> {
    return super.deploy(input, overrides || {}) as Promise<Incubator>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Incubator {
    return super.attach(address) as Incubator;
  }
  connect(signer: Signer): Incubator__factory {
    return super.connect(signer) as Incubator__factory;
  }
  static readonly contractName: "Incubator";
  public readonly contractName: "Incubator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorInterface {
    return new utils.Interface(_abi) as IncubatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Incubator {
    return new Contract(address, _abi, signerOrProvider) as Incubator;
  }
}
