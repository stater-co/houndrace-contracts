/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Incubator,
  IncubatorInterface,
  IncubatorConstructor,
} from "../Incubator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "onId",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getIdentity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsIdentity",
    outputs: [
      {
        internalType: "uint256",
        name: "maleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "femaleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "generation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "birthDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "extensionTraits",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "identity",
        type: "tuple",
      },
    ],
    name: "setIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001694380380620016948339810160408190526200003491620003b7565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a083015180518493620000cb9260069291019062000216565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905560a0810151620000ff9062000157565b5050620004db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200021257600860008383815181106200017d576200017d6200049d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560086000848481518110620001cd57620001cd6200049d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200020a81620004b3565b90506200015a565b5050565b8280548282559060005260206000209081019282156200026e579160200282015b828111156200026e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000237565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002d257620002d262000297565b60405290565b80516001600160a01b0381168114620002f057600080fd5b919050565b600082601f8301126200030757600080fd5b815160206001600160401b038083111562000326576200032662000297565b8260051b604051601f19603f830116810181811084821117156200034e576200034e62000297565b6040529384528581018301938381019250878511156200036d57600080fd5b83870191505b8482101562000397576200038782620002d8565b8352918301919083019062000373565b979650505050505050565b805163ffffffff81168114620002f057600080fd5b600060208284031215620003ca57600080fd5b81516001600160401b0380821115620003e257600080fd5b9083019060e08286031215620003f757600080fd5b62000401620002ad565b6200040c83620002d8565b81526200041c60208401620002d8565b60208201526200042f60408401620002d8565b60408201526200044260608401620002d8565b60608201526200045560808401620002d8565b608082015260a0830151828111156200046d57600080fd5b6200047b87828601620002f5565b60a0830152506200048f60c08401620003a2565b60c082015295945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d457634e487b7160e01b600052601160045260246000fd5b5060010190565b6111a980620004eb6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c8063715018a61461009357806385e3f0581461009d5780638da5cb5b146100c65780639033586a146100db578063bcb515ea146100ee578063c2115d4d14610101578063d63a8e1114610114578063d8de658714610147578063e0eb2c56146101c5578063f2fde38b146101e9575b600080fd5b61009b6101fc565b005b6100b06100ab366004610a5d565b610210565b6040516100bd9190610abc565b60405180910390f35b6100ce610354565b6040516100bd9190610b3b565b61009b6100e9366004610d4f565b610363565b61009b6100fc366004610dcd565b6103d9565b61009b61010f366004610eb0565b6104b6565b610137610122366004610f82565b60086020526000908152604090205460ff1681565b60405190151581526020016100bd565b60015460025460035460045460055460075461017d956001600160a01b0390811695811694811693811692169063ffffffff1686565b604080516001600160a01b0397881681529587166020870152938616938501939093529084166060840152909216608082015263ffffffff90911660a082015260c0016100bd565b6101d86101d3366004610a5d565b61057c565b6040516100bd959493929190610fa4565b61009b6101f7366004610f82565b610635565b6102046106b0565b61020e600061070f565b565b6102186108fc565b6000828152600960209081526040808320815160c081018352815481526001820154938101939093526002810154838301526003810154606084015281516106c0810192839052929390926080850192909160048501916036918390855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161027657905050505050508152602001600b820180546102cb90610fcf565b80601f01602080910402602001604051908101604052809291908181526020018280546102f790610fcf565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050815250509050919050565b6000546001600160a01b031690565b6001546040516000916001600160a01b0316906103839083903690611009565b600060405180830381855af49150503d80600081146103be576040519150601f19603f3d011682016040523d82523d6000602084013e6103c3565b606091505b50509050806103d157600080fd5b505050505050565b61040f60405180604001604052806015815260200174029b2ba1034b232b73a34ba3c9610333937b6901d1605d1b81525061075f565b610418336107a2565b336000908152600860205260409020546104349060ff166107e5565b3360009081526008602052604090205460ff1661045057600080fd5b6000828152600960209081526040918290208351815590830151600182015590820151600282015560608201516003820155608082015182919061049a9060048301906036610938565b5060a0820151600b8201906104af9082611064565b5050505050565b6104be6106b0565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a083015180518493610547926006929101906109d4565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905560a081015161057990610826565b50565b60096020526000908152604090208054600182015460028301546003840154600b8501805494959394929391926105b290610fcf565b80601f01602080910402602001604051908101604052809291908181526020018280546105de90610fcf565b801561062b5780601f106106005761010080835404028352916020019161062b565b820191906000526020600020905b81548152906001019060200180831161060e57829003601f168201915b5050505050905085565b61063d6106b0565b6001600160a01b0381166106a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105798161070f565b336106b9610354565b6001600160a01b03161461020e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610579816040516024016107739190611123565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526108db565b610579816040516024016107b69190610b3b565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526108db565b60405181151560248201526105799060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b1790526108db565b60005b81518110156108d7576008600083838151811061084857610848611136565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff16156008600084848151811061089557610895611136565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556108d08161114c565b9050610829565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060c001604052806000815260200160008152602001600081526020016000815260200161092b610a29565b8152602001606081525090565b6007830191839082156109c45791602002820160005b8382111561099257835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261094e565b80156109c25782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610992565b505b506109d0929150610a48565b5090565b8280548282559060005260206000209081019282156109c4579160200282015b828111156109c457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906109f4565b604051806106c001604052806036906020820280368337509192915050565b5b808211156109d05760008155600101610a49565b600060208284031215610a6f57600080fd5b5035919050565b6000815180845260005b81811015610a9c57602081850181015186830182015201610a80565b506000602082860101526020601f19601f83011685010191505092915050565b600060208083528351818401528084015160408401526040840151606084015260608401516080840152608084015160a0840160005b6036811015610b1557825163ffffffff1682529183019190830190600101610af2565b5050505060a083015161076083810152610b33610780840182610a76565b949350505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610b8757610b87610b4f565b60405290565b6040516106c081016001600160401b0381118282101715610b8757610b87610b4f565b60405160e081016001600160401b0381118282101715610b8757610b87610b4f565b604051601f8201601f191681016001600160401b0381118282101715610bfa57610bfa610b4f565b604052919050565b803563ffffffff81168114610c1657600080fd5b919050565b600082601f830112610c2c57600080fd5b81356001600160401b03811115610c4557610c45610b4f565b610c58601f8201601f1916602001610bd2565b818152846020838601011115610c6d57600080fd5b816020850160208301376000918101602001919091529392505050565b60006107608284031215610c9d57600080fd5b610ca5610b65565b90508135815260208083013581830152604083013560408301526060830135606083015283609f840112610cd857600080fd5b610ce0610b8d565b80610740850186811115610cf357600080fd5b608086015b81811015610d1657610d0981610c02565b8452928401928401610cf8565b506080850191909152359150506001600160401b03811115610d3757600080fd5b610d4384828501610c1b565b60a08301525092915050565b600080600080600060a08688031215610d6757600080fd5b8535945060208601356001600160401b0380821115610d8557600080fd5b610d9189838a01610c8a565b9550604088013594506060880135915080821115610dae57600080fd5b50610dbb88828901610c8a565b95989497509295608001359392505050565b60008060408385031215610de057600080fd5b8235915060208301356001600160401b03811115610dfd57600080fd5b610e0985828601610c8a565b9150509250929050565b80356001600160a01b0381168114610c1657600080fd5b600082601f830112610e3b57600080fd5b813560206001600160401b03821115610e5657610e56610b4f565b8160051b610e65828201610bd2565b9283528481018201928281019087851115610e7f57600080fd5b83870192505b84831015610ea557610e9683610e13565b82529183019190830190610e85565b979650505050505050565b600060208284031215610ec257600080fd5b81356001600160401b0380821115610ed957600080fd5b9083019060e08286031215610eed57600080fd5b610ef5610bb0565b610efe83610e13565b8152610f0c60208401610e13565b6020820152610f1d60408401610e13565b6040820152610f2e60608401610e13565b6060820152610f3f60808401610e13565b608082015260a083013582811115610f5657600080fd5b610f6287828601610e2a565b60a083015250610f7460c08401610c02565b60c082015295945050505050565b600060208284031215610f9457600080fd5b610f9d82610e13565b9392505050565b85815284602082015283604082015282606082015260a060808201526000610ea560a0830184610a76565b600181811c90821680610fe357607f821691505b60208210810361100357634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b601f82111561105f57600081815260208120601f850160051c810160208610156110405750805b601f850160051c820191505b818110156103d15782815560010161104c565b505050565b81516001600160401b0381111561107d5761107d610b4f565b6110918161108b8454610fcf565b84611019565b602080601f8311600181146110c657600084156110ae5750858301515b600019600386901b1c1916600185901b1785556103d1565b600085815260208120601f198616915b828110156110f5578886015182559484019460019091019084016110d6565b50858210156111135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610f9d6020830184610a76565b634e487b7160e01b600052603260045260246000fd5b60006001820161116c57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122014f4d452ff5872051845d4651a0e7c9c31812a1efb6512b03fb51b71be36a38764736f6c63430008100033";

type IncubatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Incubator__factory extends ContractFactory {
  constructor(...args: IncubatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Incubator";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Incubator> {
    return super.deploy(input, overrides || {}) as Promise<Incubator>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Incubator {
    return super.attach(address) as Incubator;
  }
  connect(signer: Signer): Incubator__factory {
    return super.connect(signer) as Incubator__factory;
  }
  static readonly contractName: "Incubator";
  public readonly contractName: "Incubator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorInterface {
    return new utils.Interface(_abi) as IncubatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Incubator {
    return new Contract(address, _abi, signerOrProvider) as Incubator;
  }
}
