/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Incubator,
  IncubatorInterface,
  IncubatorConstructor,
} from "../Incubator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "onId",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getIdentity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsIdentity",
    outputs: [
      {
        internalType: "uint256",
        name: "maleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "femaleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "generation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "birthDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "extensionTraits",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010ee380380620010ee8339810160408190526200003491620002e9565b806200004033620000f8565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a083015180518493620000cb9260069291019062000148565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905550620003cf9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620001a0579160200282015b82811115620001a057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000169565b50620001ae929150620001b2565b5090565b5b80821115620001ae5760008155600101620001b3565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002045762000204620001c9565b60405290565b80516001600160a01b03811681146200022257600080fd5b919050565b600082601f8301126200023957600080fd5b815160206001600160401b0380831115620002585762000258620001c9565b8260051b604051601f19603f83011681018181108482111715620002805762000280620001c9565b6040529384528581018301938381019250878511156200029f57600080fd5b83870191505b84821015620002c957620002b9826200020a565b83529183019190830190620002a5565b979650505050505050565b805163ffffffff811681146200022257600080fd5b600060208284031215620002fc57600080fd5b81516001600160401b03808211156200031457600080fd5b9083019060e082860312156200032957600080fd5b62000333620001df565b6200033e836200020a565b81526200034e602084016200020a565b602082015262000361604084016200020a565b604082015262000374606084016200020a565b606082015262000387608084016200020a565b608082015260a0830151828111156200039f57600080fd5b620003ad8782860162000227565b60a083015250620003c160c08401620002d4565b60c082015295945050505050565b610d0f80620003df6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063715018a61461008857806385e3f058146100925780638da5cb5b146100bb5780639033586a146100db578063c2115d4d146100ee578063d63a8e1114610101578063d8de658714610134578063e0eb2c56146101b2578063f2fde38b146101d6575b600080fd5b6100906101e9565b005b6100a56100a0366004610734565b6101fd565b6040516100b2919061080e565b60405180910390f35b6100c3610341565b6040516001600160a01b0390911681526020016100b2565b6100906100e9366004610a28565b610350565b6100906100fc366004610b43565b6103c1565b61012461010f366004610c15565b60086020526000908152604090205460ff1681565b60405190151581526020016100b2565b60015460025460035460045460055460075461016a956001600160a01b0390811695811694811693811692169063ffffffff1686565b604080516001600160a01b0397881681529587166020870152938616938501939093529084166060840152909216608082015263ffffffff90911660a082015260c0016100b2565b6101c56101c0366004610734565b610479565b6040516100b2959493929190610c30565b6100906101e4366004610c15565b610532565b6101f16105b0565b6101fb600061060f565b565b61020561065f565b6000828152600960209081526040808320815160c081018352815481526001820154938101939093526002810154838301526003810154606084015281516106c0810192839052929390926080850192909160048501916036918390855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161026357905050505050508152602001600b820180546102b890610c5b565b80601f01602080910402602001604051908101604052809291908181526020018280546102e490610c5b565b80156103315780601f1061030657610100808354040283529160200191610331565b820191906000526020600020905b81548152906001019060200180831161031457829003601f168201915b5050505050815250509050919050565b6000546001600160a01b031690565b600154604051634819ac3560e11b81526001600160a01b0390911690639033586a906103889088908890889088908890600401610c95565b600060405180830381600087803b1580156103a257600080fd5b505af11580156103b6573d6000803e3d6000fd5b505050505050505050565b6103c96105b0565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a0830151805184936104529260069291019061069b565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905550565b60096020526000908152604090208054600182015460028301546003840154600b8501805494959394929391926104af90610c5b565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90610c5b565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b5050505050905085565b61053a6105b0565b6001600160a01b0381166105a45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105ad8161060f565b50565b336105b9610341565b6001600160a01b0316146101fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161059b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060c001604052806000815260200160008152602001600081526020016000815260200161068e610700565b8152602001606081525090565b8280548282559060005260206000209081019282156106f0579160200282015b828111156106f057825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906106bb565b506106fc92915061071f565b5090565b604051806106c001604052806036906020820280368337509192915050565b5b808211156106fc5760008155600101610720565b60006020828403121561074657600080fd5b5035919050565b6000815180845260005b8181101561077357602081850181015186830182015201610757565b506000602082860101526020601f19601f83011685010191505092915050565b60006107608251845260208084015181860152604084015160408601526060840151606086015260808401516080860160005b60368110156107e957825163ffffffff16825291830191908301906001016107c6565b5050505060a0830151816107408601526108058286018261074d565b95945050505050565b6020815260006108216020830184610793565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561086057610860610828565b60405290565b6040516106c081016001600160401b038111828210171561086057610860610828565b60405160e081016001600160401b038111828210171561086057610860610828565b604051601f8201601f191681016001600160401b03811182821017156108d3576108d3610828565b604052919050565b803563ffffffff811681146108ef57600080fd5b919050565b600082601f83011261090557600080fd5b81356001600160401b0381111561091e5761091e610828565b610931601f8201601f19166020016108ab565b81815284602083860101111561094657600080fd5b816020850160208301376000918101602001919091529392505050565b6000610760828403121561097657600080fd5b61097e61083e565b90508135815260208083013581830152604083013560408301526060830135606083015283609f8401126109b157600080fd5b6109b9610866565b806107408501868111156109cc57600080fd5b608086015b818110156109ef576109e2816108db565b84529284019284016109d1565b506080850191909152359150506001600160401b03811115610a1057600080fd5b610a1c848285016108f4565b60a08301525092915050565b600080600080600060a08688031215610a4057600080fd5b8535945060208601356001600160401b0380821115610a5e57600080fd5b610a6a89838a01610963565b9550604088013594506060880135915080821115610a8757600080fd5b50610a9488828901610963565b95989497509295608001359392505050565b80356001600160a01b03811681146108ef57600080fd5b600082601f830112610ace57600080fd5b813560206001600160401b03821115610ae957610ae9610828565b8160051b610af88282016108ab565b9283528481018201928281019087851115610b1257600080fd5b83870192505b84831015610b3857610b2983610aa6565b82529183019190830190610b18565b979650505050505050565b600060208284031215610b5557600080fd5b81356001600160401b0380821115610b6c57600080fd5b9083019060e08286031215610b8057600080fd5b610b88610889565b610b9183610aa6565b8152610b9f60208401610aa6565b6020820152610bb060408401610aa6565b6040820152610bc160608401610aa6565b6060820152610bd260808401610aa6565b608082015260a083013582811115610be957600080fd5b610bf587828601610abd565b60a083015250610c0760c084016108db565b60c082015295945050505050565b600060208284031215610c2757600080fd5b61082182610aa6565b85815284602082015283604082015282606082015260a060808201526000610b3860a083018461074d565b600181811c90821680610c6f57607f821691505b602082108103610c8f57634e487b7160e01b600052602260045260246000fd5b50919050565b85815260a060208201526000610cae60a0830187610793565b8560408401528281036060840152610cc68186610793565b915050826080830152969550505050505056fea26469706673582212207043c40b7aa7eeb40ee1d9d1d815c7c5596c58875062066fcbfa9764af5d946564736f6c63430008100033";

type IncubatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Incubator__factory extends ContractFactory {
  constructor(...args: IncubatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Incubator";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Incubator> {
    return super.deploy(input, overrides || {}) as Promise<Incubator>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Incubator {
    return super.attach(address) as Incubator;
  }
  connect(signer: Signer): Incubator__factory {
    return super.connect(signer) as Incubator__factory;
  }
  static readonly contractName: "Incubator";
  public readonly contractName: "Incubator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorInterface {
    return new utils.Interface(_abi) as IncubatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Incubator {
    return new Contract(address, _abi, signerOrProvider) as Incubator;
  }
}
