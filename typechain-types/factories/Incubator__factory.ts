/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Incubator,
  IncubatorInterface,
  IncubatorConstructor,
} from "../Incubator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound2",
        type: "tuple",
      },
    ],
    name: "breedHounds",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011c1380380620011c183398101604081905262000034916200011a565b806200004033620000ad565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b0319909416919092161791909117905550620001b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011557600080fd5b919050565b6000608082840312156200012d57600080fd5b604051608081016001600160401b03811182821017156200015e57634e487b7160e01b600052604160045260246000fd5b6040526200016c83620000fd565b81526200017c60208401620000fd565b60208201526200018f60408401620000fd565b6040820152606083015163ffffffff81168114620001ac57600080fd5b60608201529392505050565b610ff980620001c86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063203dbf0214610067578063715018a61461007c5780638da5cb5b14610084578063d8de6587146100a9578063db2a02de1461010f578063f2fde38b1461012f575b600080fd5b61007a6100753660046105d1565b610142565b005b61007a6101b2565b61008c6101c6565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546002546003546100d9926001600160a01b039081169281169190811690600160a01b900463ffffffff1684565b604080516001600160a01b0395861681529385166020850152919093169082015263ffffffff90911660608201526080016100a0565b61012261011d3660046109bf565b6101d5565b6040516100a09190610c36565b61007a61013d366004610c50565b610261565b61014a6102df565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b03199094169190921617919091179055565b6101ba6102df565b6101c4600061033e565b565b6000546001600160a01b031690565b6101dd61038e565b600154604051636d95016f60e11b81526001600160a01b039091169063db2a02de90610213908890889088908890600401610c6b565b600060405180830381865afa158015610230573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102589190810190610eb7565b95945050505050565b6102696102df565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102dc8161033e565b50565b336102e86101c6565b6001600160a01b0316146101c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805161018081019091526000610100820181815261012083018290526101408301829052610160830191909152819081526040805160a08101825260008082526020828101829052928201819052606082018190526080820152910190815260200161041f60405180608001604052806000815260200160008152602001600081526020016000151581525090565b815260200161042c610450565b81526020016060815260200160608152602001600081526020016000151581525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200161047f61048c565b8152602001606081525090565b604051806106c001604052806036906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156104e3576104e36104ab565b60405290565b60405160a081016001600160401b03811182821017156104e3576104e36104ab565b60405160c081016001600160401b03811182821017156104e3576104e36104ab565b60405161010081016001600160401b03811182821017156104e3576104e36104ab565b6040516106c081016001600160401b03811182821017156104e3576104e36104ab565b604051601f8201601f191681016001600160401b038111828210171561059b5761059b6104ab565b604052919050565b80356001600160a01b03811681146105ba57600080fd5b919050565b63ffffffff811681146102dc57600080fd5b6000608082840312156105e357600080fd5b604051608081016001600160401b0381118282101715610605576106056104ab565b604052610611836105a3565b815261061f602084016105a3565b6020820152610630604084016105a3565b60408201526060830135610643816105bf565b60608201529392505050565b6001600160401b03811681146102dc57600080fd5b60006080828403121561067657600080fd5b61067e6104c1565b9050813561068b8161064f565b8152602082013561069b8161064f565b602082015260408201356106ae8161064f565b604082015260608201356106c18161064f565b606082015292915050565b600060a082840312156106de57600080fd5b6106e66104e9565b905081358152602082013560208201526040820135610704816105bf565b60408201526060820135610717816105bf565b6060820152608082013561072a816105bf565b608082015292915050565b80151581146102dc57600080fd5b80356105ba81610735565b60006080828403121561076057600080fd5b6107686104c1565b905081358152602082013560208201526040820135604082015260608201356106c181610735565b60006001600160401b038211156107a9576107a96104ab565b50601f01601f191660200190565b600082601f8301126107c857600080fd5b81356107db6107d682610790565b610573565b8181528460208386010111156107f057600080fd5b816020850160208301376000918101602001919091529392505050565b6000610760828403121561082057600080fd5b61082861050b565b90508135815260208083013581830152604083013560408301526060830135606083015283609f84011261085b57600080fd5b610863610550565b8061074085018681111561087657600080fd5b608086015b8181101561089b57803561088e816105bf565b845292840192840161087b565b506080850191909152359150506001600160401b038111156108bc57600080fd5b6108c8848285016107b7565b60a08301525092915050565b600061024082840312156108e757600080fd5b6108ef61052d565b90506108fb8383610664565b815261090a83608084016106cc565b602082015261091d83610120840161074e565b60408201526101a08201356001600160401b038082111561093d57600080fd5b6109498583860161080d565b60608401526101c084013591508082111561096357600080fd5b61096f858386016107b7565b60808401526101e084013591508082111561098957600080fd5b50610996848285016107b7565b60a08301525061020082013560c08201526109b46102208301610743565b60e082015292915050565b600080600080608085870312156109d557600080fd5b8435935060208501356001600160401b03808211156109f357600080fd5b6109ff888389016108d4565b9450604087013593506060870135915080821115610a1c57600080fd5b50610a29878288016108d4565b91505092959194509250565b60005b83811015610a50578181015183820152602001610a38565b83811115610a5f576000848401525b50505050565b60008151808452610a7d816020860160208601610a35565b601f01601f19169290920160200192915050565b60006107608251845260208084015181860152604084015160408601526060840151606086015260808401516080860160005b6036811015610ae757825163ffffffff1682529183019190830190600101610ac4565b5050505060a08301518161074086015261025882860182610a65565b6000610240610b4184845180516001600160401b03908116835260208083015182169084015260408281015182169084015260609182015116910152565b6020830151610b8c60808601828051825260208101516020830152604081015163ffffffff808216604085015280606084015116606085015280608084015116608085015250505050565b50604083810151805161012087015260208101516101408701529081015161016086015260608101511515610180860152506060830151816101a0860152610bd682860182610a91565b91505060808301518482036101c0860152610bf18282610a65565b91505060a08301518482036101e0860152610c0c8282610a65565b91505060c083015161020085015260e0830151610c2e61022086018215159052565b509392505050565b602081526000610c496020830184610b03565b9392505050565b600060208284031215610c6257600080fd5b610c49826105a3565b848152608060208201526000610c846080830186610b03565b8460408401528281036060840152610c9c8185610b03565b979650505050505050565b600060808284031215610cb957600080fd5b610cc16104c1565b90508151610cce8161064f565b81526020820151610cde8161064f565b60208201526040820151610cf18161064f565b604082015260608201516106c18161064f565b600060a08284031215610d1657600080fd5b610d1e6104e9565b905081518152602082015160208201526040820151610d3c816105bf565b60408201526060820151610d4f816105bf565b6060820152608082015161072a816105bf565b80516105ba81610735565b600060808284031215610d7f57600080fd5b610d876104c1565b905081518152602082015160208201526040820151604082015260608201516106c181610735565b600082601f830112610dc057600080fd5b8151610dce6107d682610790565b818152846020838601011115610de357600080fd5b610df4826020830160208701610a35565b949350505050565b60006107608284031215610e0f57600080fd5b610e1761050b565b90508151815260208083015181830152604083015160408301526060830151606083015283609f840112610e4a57600080fd5b610e52610550565b80610740850186811115610e6557600080fd5b608086015b81811015610e8a578051610e7d816105bf565b8452928401928401610e6a565b506080850191909152519150506001600160401b03811115610eab57600080fd5b6108c884828501610daf565b600060208284031215610ec957600080fd5b81516001600160401b0380821115610ee057600080fd5b908301906102408286031215610ef557600080fd5b610efd61052d565b610f078684610ca7565b8152610f168660808501610d04565b6020820152610f29866101208501610d6d565b60408201526101a083015182811115610f4157600080fd5b610f4d87828601610dfc565b6060830152506101c083015182811115610f6657600080fd5b610f7287828601610daf565b6080830152506101e083015182811115610f8b57600080fd5b610f9787828601610daf565b60a08301525061020083015160c0820152610fb56102208401610d62565b60e08201529594505050505056fea2646970667358221220e2f5e469abd3b3e1e0d83027840dfd60ce6ff30580a1879bf767877f16ddc00164736f6c634300080f0033";

type IncubatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Incubator__factory extends ContractFactory {
  constructor(...args: IncubatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Incubator";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Incubator> {
    return super.deploy(input, overrides || {}) as Promise<Incubator>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Incubator {
    return super.attach(address) as Incubator;
  }
  connect(signer: Signer): Incubator__factory {
    return super.connect(signer) as Incubator__factory;
  }
  static readonly contractName: "Incubator";
  public readonly contractName: "Incubator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorInterface {
    return new utils.Interface(_abi) as IncubatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Incubator {
    return new Contract(address, _abi, signerOrProvider) as Incubator;
  }
}
