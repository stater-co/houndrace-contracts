/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopZerocost,
  ShopZerocostInterface,
  ShopConstructor,
} from "../ShopZerocost";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "checkDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620014fb380380620014fb83398181016040528101906200003b91906200032b565b806200005c62000050620000f860201b60201c565b6200010060201b60201c565b80600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050506200035d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200022382620001d8565b810181811067ffffffffffffffff82111715620002455762000244620001e9565b5b80604052505050565b60006200025a620001c4565b905062000268828262000218565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200029a826200026d565b9050919050565b620002ac816200028d565b8114620002b857600080fd5b50565b600081519050620002cc81620002a1565b92915050565b600060408284031215620002eb57620002ea620001d3565b5b620002f760406200024e565b905060006200030984828501620002bb565b60008301525060206200031f84828501620002bb565b60208301525092915050565b600060408284031215620003445762000343620001ce565b5b60006200035484828501620002d2565b91505092915050565b61118e806200036d6000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100fa578063af640d0f14610125578063d8de658714610150578063f2fde38b1461017c5761007b565b8063299f9f0e1461007d578063715018a6146100a657806385e87de2146100bd5761007b565b3661007b57005b005b34801561008957600080fd5b506100a4600480360381019061009f9190610dfe565b6101a5565b005b3480156100b257600080fd5b506100bb610244565b005b3480156100c957600080fd5b506100e460048036038101906100df9190610e2b565b610258565b6040516100f19190610e71565b60405180910390f35b34801561010657600080fd5b5061010f610a62565b60405161011c9190610e9b565b60405180910390f35b34801561013157600080fd5b5061013a610a8b565b6040516101479190610e71565b60405180910390f35b34801561015c57600080fd5b50610165610a91565b604051610173929190610eb6565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e9190610e2b565b610ae3565b005b6101ad610b66565b80600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b61024c610b66565b6102566000610be4565b565b60008060005b600154811015610a585760016005600083815260200190815260200160002060040160049054906101000a900460ff1660ff160361051d5760005b600560008381526020019081526020016000206001018054905081101561051b576005600083815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff168311806102f45750600183145b801561032c575060016005600084815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff16115b1561050a576005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e866005600086815260200190815260200160002060010184815481106103ab576103aa610edf565b5b90600052602060002001546040518363ffffffff1660e01b81526004016103d3929190610f0e565b602060405180830381865afa92505050801561040d57506040513d601f19601f8201168201806040525081019061040a9190610f63565b60015b610449573d806000811461043d576040519150601f19603f3d011682016040523d82523d6000602084013e610442565b606091505b5050610509565b6000811115610507574260056000858152602001908152602001600020600201541115801561048e575042600560008581526020019081526020016000206003015410155b806104d15750600060056000858152602001908152602001600020600201541480156104d0575060006005600085815260200190815260200160002060030154145b5b15610506576005600084815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff1693505b5b505b5b8061051490610fbf565b9050610299565b505b60026005600083815260200190815260200160002060040160049054906101000a900460ff1660ff1603610769576005600082815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff168211806105855750600182145b80156105bd575060016005600083815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff16115b15610768576005600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b341aed856040518263ffffffff1660e01b81526004016106319190610e9b565b602060405180830381865afa92505050801561066b57506040513d601f19601f820116820180604052508101906106689190610f63565b60015b6106a7573d806000811461069b576040519150601f19603f3d011682016040523d82523d6000602084013e6106a0565b606091505b5050610767565b600081111561076557426005600084815260200190815260200160002060020154111580156106ec575042600560008481526020019081526020016000206003015410155b8061072f57506000600560008481526020019081526020016000206002015414801561072e575060006005600084815260200190815260200160002060030154145b5b15610764576005600083815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff1692505b5b505b5b5b60006005600083815260200190815260200160002060040160049054906101000a900460ff1660ff1603610a475760005b6005600083815260200190815260200160002060010180549050811015610a45576005600083815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff168311806107f55750600183145b801561082d575060016005600084815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff16115b15610a34576005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6005600085815260200190815260200160002060010183815481106108ac576108ab610edf565b5b90600052602060002001546040518263ffffffff1660e01b81526004016108d39190610e71565b602060405180830381865afa92505050801561090d57506040513d601f19601f8201168201806040525081019061090a919061101c565b60015b610949573d806000811461093d576040519150601f19603f3d011682016040523d82523d6000602084013e610942565b606091505b5050610a33565b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a3157426005600085815260200190815260200160002060020154111580156109b8575042600560008581526020019081526020016000206003015410155b806109fb5750600060056000858152602001908152602001600020600201541480156109fa575060006005600085815260200190815260200160002060030154145b5b15610a30576005600084815260200190815260200160002060040160009054906101000a900463ffffffff1663ffffffff1693505b5b505b5b80610a3e90610fbf565b905061079a565b505b80610a5190610fbf565b905061025e565b5080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610aeb610b66565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b51906110cc565b60405180910390fd5b610b6381610be4565b50565b610b6e610ca8565b73ffffffffffffffffffffffffffffffffffffffff16610b8c610a62565b73ffffffffffffffffffffffffffffffffffffffff1614610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd990611138565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d0d82610cc4565b810181811067ffffffffffffffff82111715610d2c57610d2b610cd5565b5b80604052505050565b6000610d3f610cb0565b9050610d4b8282610d04565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7b82610d50565b9050919050565b610d8b81610d70565b8114610d9657600080fd5b50565b600081359050610da881610d82565b92915050565b600060408284031215610dc457610dc3610cbf565b5b610dce6040610d35565b90506000610dde84828501610d99565b6000830152506020610df284828501610d99565b60208301525092915050565b600060408284031215610e1457610e13610cba565b5b6000610e2284828501610dae565b91505092915050565b600060208284031215610e4157610e40610cba565b5b6000610e4f84828501610d99565b91505092915050565b6000819050919050565b610e6b81610e58565b82525050565b6000602082019050610e866000830184610e62565b92915050565b610e9581610d70565b82525050565b6000602082019050610eb06000830184610e8c565b92915050565b6000604082019050610ecb6000830185610e8c565b610ed86020830184610e8c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050610f236000830185610e8c565b610f306020830184610e62565b9392505050565b610f4081610e58565b8114610f4b57600080fd5b50565b600081519050610f5d81610f37565b92915050565b600060208284031215610f7957610f78610cba565b5b6000610f8784828501610f4e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fca82610e58565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ffc57610ffb610f90565b5b600182019050919050565b60008151905061101681610d82565b92915050565b60006020828403121561103257611031610cba565b5b600061104084828501611007565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110b6602683611049565b91506110c18261105a565b604082019050919050565b600060208201905081810360008301526110e5816110a9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611122602083611049565b915061112d826110ec565b602082019050919050565b6000602082019050818103600083015261115181611115565b905091905056fea26469706673582212209136a991578d0d54eb2d560b8c709864f41b8ff2513dbfd0ac38caeb57bdfa8064736f6c63430008110033";

type ShopZerocostConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopZerocostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopZerocost__factory extends ContractFactory {
  constructor(...args: ShopZerocostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopZerocost";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopZerocost> {
    return super.deploy(input, overrides || {}) as Promise<ShopZerocost>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopZerocost {
    return super.attach(address) as ShopZerocost;
  }
  connect(signer: Signer): ShopZerocost__factory {
    return super.connect(signer) as ShopZerocost__factory;
  }
  static readonly contractName: "ShopZerocost";
  public readonly contractName: "ShopZerocost";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopZerocostInterface {
    return new utils.Interface(_abi) as ShopZerocostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopZerocost {
    return new Contract(address, _abi, signerOrProvider) as ShopZerocost;
  }
}
