/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopZerocost,
  ShopZerocostInterface,
  ShopConstructor,
} from "../ShopZerocost";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "checkDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620017ab380380620017ab833981016040819052620000399162000448565b805160808201518291906200004e336200018c565b80518251146200005d57600080fd5b60005b8251811015620000f7578181815181106200007f576200007f6200057e565b602002602001015160016000858481518110620000a057620000a06200057e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000ef9062000594565b905062000060565b5050815180518392506003916200011491839160200190620001dc565b506020828101516001830180546001600160a01b039283166001600160a01b031991821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805162000180926004850192019062000246565b509050505050620005bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000234579160200282015b828111156200023457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001fd565b5062000242929150620002ef565b5090565b82805482825590600052602060002090600701600890048101928215620002345791602002820160005b83821115620002b357835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000270565b8015620002e55782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b3565b5050620002429291505b5b80821115620002425760008155600101620002f0565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000341576200034162000306565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000372576200037262000306565b604052919050565b60006001600160401b0382111562000396576200039662000306565b5060051b60200190565b80516001600160a01b0381168114620003b857600080fd5b919050565b600082601f830112620003cf57600080fd5b81516020620003e8620003e2836200037a565b62000347565b82815260059290921b840181019181810190868411156200040857600080fd5b8286015b848110156200043d5780516001600160e01b0319811681146200042f5760008081fd5b83529183019183016200040c565b509695505050505050565b600060208083850312156200045c57600080fd5b82516001600160401b03808211156200047457600080fd5b9084019060a082870312156200048957600080fd5b620004936200031c565b825182811115620004a357600080fd5b8301601f81018813620004b557600080fd5b8051620004c6620003e2826200037a565b81815260059190911b8201860190868101908a831115620004e657600080fd5b928701925b828410156200050f57620004ff84620003a0565b82529287019290870190620004eb565b84525062000522915050838501620003a0565b848201526200053460408401620003a0565b60408201526200054760608401620003a0565b606082015260808301519350818411156200056157600080fd5b6200056f87858501620003bd565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620005b557634e487b7160e01b600052601160045260246000fd5b5060010190565b6111df80620005cc6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638da5cb5b11610076578063af640d0f1161005b578063af640d0f146101bd578063d8de6587146101c6578063f2fde38b1461022a57600080fd5b80638da5cb5b146100fe5780639cce37c61461012657600080fd5b8063357d5142146100a85780633d278784146100bd578063715018a6146100d057806385e87de2146100d8575b600080fd5b6100bb6100b6366004610f95565b61023d565b005b6100bb6100cb366004610ff9565b610302565b6100bb6103b9565b6100eb6100e63660046110c1565b6103cd565b6040519081526020015b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f5565b6101846101343660046110c1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff000000000000000000000000000000000000000000000000000000009384168152929091166020830152016100f5565b6100eb60025481565b6004546005546006546101f39273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100f5565b6100bb6102383660046110c1565b610aa6565b610245610b62565b805182511461025357600080fd5b60005b82518110156102fd57818181518110610271576102716110e5565b60200260200101516001600085848151811061028f5761028f6110e5565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c0217905550806102f690611114565b9050610256565b505050565b61030a610b62565b805180518291600391610324918391602090910190610c58565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549184169183169190911790556060850151600385018054919093169116179055608083015180516103b39260048501920190610ce2565b50505050565b6103c1610b62565b6103cb6000610be3565b565b60008060005b600254811015610a9f57600081815260096020526040902060040154640100000000900460ff166001036106415760005b60008281526009602052604090206001015481101561063f5760008281526009602052604090206004015463ffffffff168311806104425750826001145b80156104675750600082815260096020526040902060040154600163ffffffff909116115b1561062f57600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff9092169162fdd58e918891859081106104b3576104b36110e5565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa925050508015610567575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261056491810190611173565b60015b6105a1573d808015610595576040519150601f19603f3d011682016040523d82523d6000602084013e61059a565b606091505b505061062f565b801561062d5760008381526009602052604090206002015442108015906105d957506000838152600960205260409020600301544211155b8061060d575060008381526009602052604090206002015415801561060d5750600083815260096020526040902060030154155b1561062d5760008381526009602052604090206004015463ffffffff1693505b505b61063881611114565b9050610404565b505b600081815260096020526040902060040154640100000000900460ff166002036108335760008181526009602052604090206004015463ffffffff1682118061068a5750816001145b80156106af5750600081815260096020526040902060040154600163ffffffff909116115b1561083357600081815260096020526040908190205490517f4b341aed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911690634b341aed90602401602060405180830381865afa92505050801561076b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261076891810190611173565b60015b6107a5573d808015610799576040519150601f19603f3d011682016040523d82523d6000602084013e61079e565b606091505b5050610833565b80156108315760008281526009602052604090206002015442108015906107dd57506000828152600960205260409020600301544211155b8061081157506000828152600960205260409020600201541580156108115750600082815260096020526040902060030154155b156108315760008281526009602052604090206004015463ffffffff1692505b505b600081815260096020526040812060040154640100000000900460ff169003610a8f5760005b600082815260096020526040902060010154811015610a8d5760008281526009602052604090206004015463ffffffff168311806108975750826001145b80156108bc5750600082815260096020526040902060040154600163ffffffff909116115b15610a7d57600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff90921691636352211e919084908110610908576109086110e5565b90600052602060002001546040518263ffffffff1660e01b815260040161093191815260200190565b602060405180830381865afa925050508015610988575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526109859181019061118c565b60015b6109c2573d8080156109b6576040519150601f19603f3d011682016040523d82523d6000602084013e6109bb565b606091505b5050610a7d565b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a7b576000838152600960205260409020600201544210801590610a2757506000838152600960205260409020600301544211155b80610a5b5750600083815260096020526040902060020154158015610a5b5750600083815260096020526040902060030154155b15610a7b5760008381526009602052604090206004015463ffffffff1693505b505b610a8681611114565b9050610859565b505b610a9881611114565b90506103d3565b5092915050565b610aae610b62565b73ffffffffffffffffffffffffffffffffffffffff8116610b56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610b5f81610be3565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b4d565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610cd2579160200282015b82811115610cd257825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610c78565b50610cde929150610d85565b5090565b82805482825590600052602060002090600701600890048101928215610cd25791602002820160005b83821115610d4c57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610d0b565b8015610d7c5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610d4c565b5050610cde9291505b5b80821115610cde5760008155600101610d86565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610dec57610dec610d9a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e3957610e39610d9a565b604052919050565b600067ffffffffffffffff821115610e5b57610e5b610d9a565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610b5f57600080fd5b8035610e9281610e65565b919050565b600082601f830112610ea857600080fd5b81356020610ebd610eb883610e41565b610df2565b82815260059290921b84018101918181019086841115610edc57600080fd5b8286015b84811015610f00578035610ef381610e65565b8352918301918301610ee0565b509695505050505050565b600082601f830112610f1c57600080fd5b81356020610f2c610eb883610e41565b82815260059290921b84018101918181019086841115610f4b57600080fd5b8286015b84811015610f005780357fffffffff0000000000000000000000000000000000000000000000000000000081168114610f885760008081fd5b8352918301918301610f4f565b60008060408385031215610fa857600080fd5b823567ffffffffffffffff80821115610fc057600080fd5b610fcc86838701610e97565b93506020850135915080821115610fe257600080fd5b50610fef85828601610f0b565b9150509250929050565b60006020828403121561100b57600080fd5b813567ffffffffffffffff8082111561102357600080fd5b9083019060a0828603121561103757600080fd5b61103f610dc9565b82358281111561104e57600080fd5b61105a87828601610e97565b825250602083013561106b81610e65565b6020820152604083013561107e81610e65565b604082015261108f60608401610e87565b60608201526080830135828111156110a657600080fd5b6110b287828601610f0b565b60808301525095945050505050565b6000602082840312156110d357600080fd5b81356110de81610e65565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361116c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561118557600080fd5b5051919050565b60006020828403121561119e57600080fd5b81516110de81610e6556fea2646970667358221220b64ba2964a6e7c8e2e5c339ff12d099357e5f7766b7fd550d7f16587745b418964736f6c63430008110033";

type ShopZerocostConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopZerocostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopZerocost__factory extends ContractFactory {
  constructor(...args: ShopZerocostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopZerocost";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopZerocost> {
    return super.deploy(input, overrides || {}) as Promise<ShopZerocost>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopZerocost {
    return super.attach(address) as ShopZerocost;
  }
  connect(signer: Signer): ShopZerocost__factory {
    return super.connect(signer) as ShopZerocost__factory;
  }
  static readonly contractName: "ShopZerocost";
  public readonly contractName: "ShopZerocost";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopZerocostInterface {
    return new utils.Interface(_abi) as ShopZerocostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopZerocost {
    return new Contract(address, _abi, signerOrProvider) as ShopZerocost;
  }
}
