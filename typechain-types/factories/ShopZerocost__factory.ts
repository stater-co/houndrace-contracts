/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopZerocost,
  ShopZerocostInterface,
  ShopConstructor,
} from "../ShopZerocost";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "checkDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001bac38038062001bac8339810160408190526200003991620005fc565b805160808201518291906200004e336200020b565b80518251146200005d57600080fd5b60005b8251811015620001765760005b82828151811062000082576200008262000732565b602002602001015151811015620001625760016000858481518110620000ac57620000ac62000732565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000e957620000e962000732565b6020026020010151828151811062000105576200010562000732565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015a8162000748565b90506200006d565b506200016e8162000748565b905062000060565b50508151805183925060039162000193918391602001906200025b565b506020828101516001830180546001600160a01b039283166001600160a01b0319918216179091556040850151600285018054918416918316919091179055606085015160038501805491909316911617905560808301518051620001ff9260048501920190620002c5565b50905050505062000770565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b3579160200282015b82811115620002b357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200027c565b50620002c192915062000325565b5090565b82805482825590600052602060002090810192821562000317579160200282015b82811115620003175782518051620003069184916020909101906200033c565b5091602001919060010190620002e6565b50620002c1929150620003ea565b5b80821115620002c1576000815560010162000326565b82805482825590600052602060002090600701600890048101928215620002b35791602002820160005b83821115620003a957835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000366565b8015620003db5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620003a9565b5050620002c192915062000325565b80821115620002c15760006200040182826200040b565b50600101620003ea565b50805460008255600701600890049060005260206000209081019062000432919062000325565b50565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000470576200047062000435565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004a157620004a162000435565b604052919050565b60006001600160401b03821115620004c557620004c562000435565b5060051b60200190565b80516001600160a01b0381168114620004e757600080fd5b919050565b600082601f830112620004fe57600080fd5b81516020620005176200051183620004a9565b62000476565b828152600592831b85018201928282019190878511156200053757600080fd5b8387015b85811015620005ef5780516001600160401b038111156200055c5760008081fd5b8801603f81018a136200056f5760008081fd5b858101516040620005846200051183620004a9565b82815291851b8301810191888101908d841115620005a25760008081fd5b938201935b83851015620005dd57845192506001600160e01b031983168314620005cc5760008081fd5b8282529389019390890190620005a7565b8852505050938501935084016200053b565b5090979650505050505050565b600060208083850312156200061057600080fd5b82516001600160401b03808211156200062857600080fd5b9084019060a082870312156200063d57600080fd5b620006476200044b565b8251828111156200065757600080fd5b8301601f810188136200066957600080fd5b80516200067a6200051182620004a9565b81815260059190911b8201860190868101908a8311156200069a57600080fd5b928701925b82841015620006c357620006b384620004cf565b825292870192908701906200069f565b845250620006d6915050838501620004cf565b84820152620006e860408401620004cf565b6040820152620006fb60608401620004cf565b606082015260808301519350818411156200071557600080fd5b6200072387858501620004ec565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200076957634e487b7160e01b600052601160045260246000fd5b5060010190565b61142c80620007806000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063af640d0f1161005b578063af640d0f14610129578063c0d94d1a14610132578063d8de658714610145578063f2fde38b146101a957600080fd5b80635b19e2941461008d578063715018a6146100d657806385e87de2146100e05780638da5cb5b14610101575b600080fd5b6100a061009b366004610fde565b6101bc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6100de610202565b005b6100f36100ee36600461100a565b610216565b6040519081526020016100cd565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cd565b6100f360025481565b6100de610140366004611211565b6108ef565b6004546005546006546101729273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100cd565b6100de6101b736600461100a565b6109b6565b600160205281600052604060002081815481106101d857600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b61020a610a6f565b6102146000610af0565b565b60008060005b6002548110156108e857600081815260096020526040902060040154640100000000900460ff1660010361048a5760005b6000828152600960205260409020600101548110156104885760008281526009602052604090206004015463ffffffff1683118061028b5750826001145b80156102b05750600082815260096020526040902060040154600163ffffffff909116115b1561047857600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff9092169162fdd58e918891859081106102fc576102fc611332565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa9250505080156103b0575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526103ad91810190611361565b60015b6103ea573d8080156103de576040519150601f19603f3d011682016040523d82523d6000602084013e6103e3565b606091505b5050610478565b801561047657600083815260096020526040902060020154421080159061042257506000838152600960205260409020600301544211155b8061045657506000838152600960205260409020600201541580156104565750600083815260096020526040902060030154155b156104765760008381526009602052604090206004015463ffffffff1693505b505b6104818161137a565b905061024d565b505b600081815260096020526040902060040154640100000000900460ff1660020361067c5760008181526009602052604090206004015463ffffffff168211806104d35750816001145b80156104f85750600081815260096020526040902060040154600163ffffffff909116115b1561067c57600081815260096020526040908190205490517f4b341aed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911690634b341aed90602401602060405180830381865afa9250505080156105b4575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526105b191810190611361565b60015b6105ee573d8080156105e2576040519150601f19603f3d011682016040523d82523d6000602084013e6105e7565b606091505b505061067c565b801561067a57600082815260096020526040902060020154421080159061062657506000828152600960205260409020600301544211155b8061065a575060008281526009602052604090206002015415801561065a5750600082815260096020526040902060030154155b1561067a5760008281526009602052604090206004015463ffffffff1692505b505b600081815260096020526040812060040154640100000000900460ff1690036108d85760005b6000828152600960205260409020600101548110156108d65760008281526009602052604090206004015463ffffffff168311806106e05750826001145b80156107055750600082815260096020526040902060040154600163ffffffff909116115b156108c657600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff90921691636352211e91908490811061075157610751611332565b90600052602060002001546040518263ffffffff1660e01b815260040161077a91815260200190565b602060405180830381865afa9250505080156107d1575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526107ce918101906113d9565b60015b61080b573d8080156107ff576040519150601f19603f3d011682016040523d82523d6000602084013e610804565b606091505b50506108c6565b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c457600083815260096020526040902060020154421080159061087057506000838152600960205260409020600301544211155b806108a457506000838152600960205260409020600201541580156108a45750600083815260096020526040902060030154155b156108c45760008381526009602052604090206004015463ffffffff1693505b505b6108cf8161137a565b90506106a2565b505b6108e18161137a565b905061021c565b5092915050565b6108f7610a6f565b805180518291600391610911918391602090910190610dcb565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549184169183169190911790556060850151600385018054919093169116179055608083015180516109a09260048501920190610e55565b5050815160808301516109b39250610b65565b50565b6109be610a6f565b73ffffffffffffffffffffffffffffffffffffffff8116610a66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6109b381610af0565b60005473ffffffffffffffffffffffffffffffffffffffff163314610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a5d565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114610b7357600080fd5b60005b8251811015610dc65760005b828281518110610b9457610b94611332565b602002602001015151811015610db55760016000858481518110610bba57610bba611332565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610cd85760016000858481518110610c1c57610c1c611332565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838381518110610c7057610c70611332565b60200260200101518281518110610c8957610c89611332565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055610da5565b828281518110610cea57610cea611332565b60200260200101518181518110610d0357610d03611332565b602002602001015160016000868581518110610d2157610d21611332565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610d7457610d74611332565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b610dae8161137a565b9050610b82565b50610dbf8161137a565b9050610b76565b505050565b828054828255906000526020600020908101928215610e45579160200282015b82811115610e4557825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610deb565b50610e51929150610eae565b5090565b828054828255906000526020600020908101928215610ea2579160200282015b82811115610ea25782518051610e92918491602090910190610ec3565b5091602001919060010190610e75565b50610e51929150610f6a565b5b80821115610e515760008155600101610eaf565b82805482825590600052602060002090600701600890048101928215610e455791602002820160005b83821115610f2d57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610eec565b8015610f5d5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610f2d565b5050610e51929150610eae565b80821115610e51576000610f7e8282610f87565b50600101610f6a565b5080546000825560070160089004906000526020600020908101906109b39190610eae565b73ffffffffffffffffffffffffffffffffffffffff811681146109b357600080fd5b8035610fd981610fac565b919050565b60008060408385031215610ff157600080fd5b8235610ffc81610fac565b946020939093013593505050565b60006020828403121561101c57600080fd5b813561102781610fac565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156110805761108061102e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110cd576110cd61102e565b604052919050565b600067ffffffffffffffff8211156110ef576110ef61102e565b5060051b60200190565b600082601f83011261110a57600080fd5b8135602061111f61111a836110d5565b611086565b828152600592831b850182019282820191908785111561113e57600080fd5b8387015b8581101561120457803567ffffffffffffffff8111156111625760008081fd5b8801603f81018a136111745760008081fd5b85810135604061118661111a836110d5565b82815291851b8301810191888101908d8411156111a35760008081fd5b938201935b838510156111f357843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146111e35760008081fd5b82825293890193908901906111a8565b885250505093850193508401611142565b5090979650505050505050565b6000602080838503121561122457600080fd5b823567ffffffffffffffff8082111561123c57600080fd5b9084019060a0828703121561125057600080fd5b61125861105d565b82358281111561126757600080fd5b8301601f8101881361127857600080fd5b803561128661111a826110d5565b81815260059190911b8201860190868101908a8311156112a557600080fd5b928701925b828410156112cc5783356112bd81610fac565b825292870192908701906112aa565b8452506112dd915050838501610fce565b848201526112ed60408401610fce565b60408201526112fe60608401610fce565b6060820152608083013593508184111561131757600080fd5b611323878585016110f9565b60808201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561137357600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602082840312156113eb57600080fd5b815161102781610fac56fea2646970667358221220f10daa33223fa402d75030b0668cba8d4442ff24fbd13a2990e6783f5107c73464736f6c63430008110033";

type ShopZerocostConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopZerocostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopZerocost__factory extends ContractFactory {
  constructor(...args: ShopZerocostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopZerocost";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopZerocost> {
    return super.deploy(input, overrides || {}) as Promise<ShopZerocost>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopZerocost {
    return super.attach(address) as ShopZerocost;
  }
  connect(signer: Signer): ShopZerocost__factory {
    return super.connect(signer) as ShopZerocost__factory;
  }
  static readonly contractName: "ShopZerocost";
  public readonly contractName: "ShopZerocost";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopZerocostInterface {
    return new utils.Interface(_abi) as ShopZerocostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopZerocost {
    return new Contract(address, _abi, signerOrProvider) as ShopZerocost;
  }
}
