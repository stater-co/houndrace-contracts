/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopZerocost,
  ShopZerocostInterface,
  ShopConstructor,
} from "../ShopZerocost";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "checkDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b506040516200167138038062001671833981016040819052620000399162000448565b805160808201518291906200004e336200018c565b80518251146200005d57600080fd5b60005b8251811015620000f7578181815181106200007f576200007f6200057e565b602002602001015160016000858481518110620000a057620000a06200057e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000ef9062000594565b905062000060565b5050815180518392506003916200011491839160200190620001dc565b506020828101516001830180546001600160a01b039283166001600160a01b031991821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805162000180926004850192019062000246565b509050505050620005bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000234579160200282015b828111156200023457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001fd565b5062000242929150620002ef565b5090565b82805482825590600052602060002090600701600890048101928215620002345791602002820160005b83821115620002b357835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000270565b8015620002e55782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b3565b5050620002429291505b5b80821115620002425760008155600101620002f0565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000341576200034162000306565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000372576200037262000306565b604052919050565b60006001600160401b0382111562000396576200039662000306565b5060051b60200190565b80516001600160a01b0381168114620003b857600080fd5b919050565b600082601f830112620003cf57600080fd5b81516020620003e8620003e2836200037a565b62000347565b82815260059290921b840181019181810190868411156200040857600080fd5b8286015b848110156200043d5780516001600160e01b0319811681146200042f5760008081fd5b83529183019183016200040c565b509695505050505050565b600060208083850312156200045c57600080fd5b82516001600160401b03808211156200047457600080fd5b9084019060a082870312156200048957600080fd5b620004936200031c565b825182811115620004a357600080fd5b8301601f81018813620004b557600080fd5b8051620004c6620003e2826200037a565b81815260059190911b8201860190868101908a831115620004e657600080fd5b928701925b828410156200050f57620004ff84620003a0565b82529287019290870190620004eb565b84525062000522915050838501620003a0565b848201526200053460408401620003a0565b60408201526200054760608401620003a0565b606082015260808301519350818411156200056157600080fd5b6200056f87858501620003bd565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620005b557634e487b7160e01b600052601160045260246000fd5b5060010190565b6110a580620005cc6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c5578063af640d0f146100ed578063d8de6587146100f6578063f2fde38b1461015a57600080fd5b80633d27878414610082578063715018a61461009757806385e87de21461009f575b600080fd5b610095610090366004610e66565b61016d565b005b610095610234565b6100b26100ad366004610f87565b610248565b6040519081526020015b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bc565b6100b260025481565b6004546005546006546101239273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100bc565b610095610168366004610f87565b610921565b6101756109da565b80518051829160039161018f918391602090910190610b8d565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805161021e9260048501920190610c17565b5050815160808301516102319250610a5b565b50565b61023c6109da565b6102466000610b18565b565b60008060005b60025481101561091a57600081815260096020526040902060040154640100000000900460ff166001036104bc5760005b6000828152600960205260409020600101548110156104ba5760008281526009602052604090206004015463ffffffff168311806102bd5750826001145b80156102e25750600082815260096020526040902060040154600163ffffffff909116115b156104aa57600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff9092169162fdd58e9188918590811061032e5761032e610fab565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa9250505080156103e2575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526103df91810190610fda565b60015b61041c573d808015610410576040519150601f19603f3d011682016040523d82523d6000602084013e610415565b606091505b50506104aa565b80156104a857600083815260096020526040902060020154421080159061045457506000838152600960205260409020600301544211155b8061048857506000838152600960205260409020600201541580156104885750600083815260096020526040902060030154155b156104a85760008381526009602052604090206004015463ffffffff1693505b505b6104b381610ff3565b905061027f565b505b600081815260096020526040902060040154640100000000900460ff166002036106ae5760008181526009602052604090206004015463ffffffff168211806105055750816001145b801561052a5750600081815260096020526040902060040154600163ffffffff909116115b156106ae57600081815260096020526040908190205490517f4b341aed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911690634b341aed90602401602060405180830381865afa9250505080156105e6575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526105e391810190610fda565b60015b610620573d808015610614576040519150601f19603f3d011682016040523d82523d6000602084013e610619565b606091505b50506106ae565b80156106ac57600082815260096020526040902060020154421080159061065857506000828152600960205260409020600301544211155b8061068c575060008281526009602052604090206002015415801561068c5750600082815260096020526040902060030154155b156106ac5760008281526009602052604090206004015463ffffffff1692505b505b600081815260096020526040812060040154640100000000900460ff16900361090a5760005b6000828152600960205260409020600101548110156109085760008281526009602052604090206004015463ffffffff168311806107125750826001145b80156107375750600082815260096020526040902060040154600163ffffffff909116115b156108f857600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff90921691636352211e91908490811061078357610783610fab565b90600052602060002001546040518263ffffffff1660e01b81526004016107ac91815260200190565b602060405180830381865afa925050508015610803575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261080091810190611052565b60015b61083d573d808015610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b50506108f8565b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108f65760008381526009602052604090206002015442108015906108a257506000838152600960205260409020600301544211155b806108d657506000838152600960205260409020600201541580156108d65750600083815260096020526040902060030154155b156108f65760008381526009602052604090206004015463ffffffff1693505b505b61090181610ff3565b90506106d4565b505b61091381610ff3565b905061024e565b5092915050565b6109296109da565b73ffffffffffffffffffffffffffffffffffffffff81166109d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61023181610b18565b60005473ffffffffffffffffffffffffffffffffffffffff163314610246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c8565b8051825114610a6957600080fd5b60005b8251811015610b1357818181518110610a8757610a87610fab565b602002602001015160016000858481518110610aa557610aa5610fab565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080610b0c90610ff3565b9050610a6c565b505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610c07579160200282015b82811115610c0757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610bad565b50610c13929150610cba565b5090565b82805482825590600052602060002090600701600890048101928215610c075791602002820160005b83821115610c8157835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610c40565b8015610cb15782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610c81565b5050610c139291505b5b80821115610c135760008155600101610cbb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610d2157610d21610ccf565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610d6e57610d6e610ccf565b604052919050565b600067ffffffffffffffff821115610d9057610d90610ccf565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461023157600080fd5b8035610dc781610d9a565b919050565b600082601f830112610ddd57600080fd5b81356020610df2610ded83610d76565b610d27565b82815260059290921b84018101918181019086841115610e1157600080fd5b8286015b84811015610e5b5780357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e4e5760008081fd5b8352918301918301610e15565b509695505050505050565b60006020808385031215610e7957600080fd5b823567ffffffffffffffff80821115610e9157600080fd5b9084019060a08287031215610ea557600080fd5b610ead610cfe565b823582811115610ebc57600080fd5b8301601f81018813610ecd57600080fd5b8035610edb610ded82610d76565b81815260059190911b8201860190868101908a831115610efa57600080fd5b928701925b82841015610f21578335610f1281610d9a565b82529287019290870190610eff565b845250610f32915050838501610dbc565b84820152610f4260408401610dbc565b6040820152610f5360608401610dbc565b60608201526080830135935081841115610f6c57600080fd5b610f7887858501610dcc565b60808201529695505050505050565b600060208284031215610f9957600080fd5b8135610fa481610d9a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610fec57600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361104b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561106457600080fd5b8151610fa481610d9a56fea26469706673582212205507fd0bd2b6b3b9ee212c071466b9f83705ccee2b6cdef7d1e35abad488375e64736f6c63430008110033";

type ShopZerocostConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopZerocostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopZerocost__factory extends ContractFactory {
  constructor(...args: ShopZerocostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopZerocost";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopZerocost> {
    return super.deploy(input, overrides || {}) as Promise<ShopZerocost>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopZerocost {
    return super.attach(address) as ShopZerocost;
  }
  connect(signer: Signer): ShopZerocost__factory {
    return super.connect(signer) as ShopZerocost__factory;
  }
  static readonly contractName: "ShopZerocost";
  public readonly contractName: "ShopZerocost";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopZerocostInterface {
    return new utils.Interface(_abi) as ShopZerocostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopZerocost {
    return new Contract(address, _abi, signerOrProvider) as ShopZerocost;
  }
}
