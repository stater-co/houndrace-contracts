/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GamificationRestricted,
  GamificationRestrictedInterface,
  Constructor,
} from "../GamificationRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "defaultBreeding",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "defaultStamina",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStamina",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStaminaBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsBreeding",
    outputs: [
      {
        internalType: "address",
        name: "breedingFeeCurrency",
        type: "address",
      },
      {
        internalType: "address",
        name: "breedingCooldownCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastBreed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldown",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldownTimeUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillBreedingCooldownCost",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "availableToBreed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStamina",
    outputs: [
      {
        internalType: "address",
        name: "staminaRefillCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "staminaLastUpdate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "staminaRefill1x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillStaminaCooldownCost",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "staminaValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaPerTimeUnit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCap",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "breeding",
        type: "tuple",
      },
    ],
    name: "setBreeding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "stamina",
        type: "tuple",
      },
    ],
    name: "setStamina",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dc038038062001dc083398101604081905262000034916200052d565b806200004033620001ae565b80518051600180546001600160a01b039283166001600160a01b03199182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e0909901516008805491151560ff19909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff908116680100000000000000000263ffffffff60401b19958216640100000000026001600160401b031990981691909216179590951792909216939093179093559183015180518493926200015a92600e92910190620002bd565b506060820151600e820180546001600160a01b03199081166001600160a01b0393841617909155608090930151600f909201805490931691161790556040810151620001a690620001fe565b5050620006b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015620002b9576011600083838151811062000224576200022462000673565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff16156011600084848151811062000274576200027462000673565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002b18162000689565b905062000201565b5050565b82805482825590600052602060002090810192821562000315579160200282015b828111156200031557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002de565b506200032392915062000327565b5090565b5b8082111562000323576000815560010162000328565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156200037957620003796200033e565b60405290565b60405161010081016001600160401b03811182821017156200037957620003796200033e565b80516001600160a01b0381168114620003bd57600080fd5b919050565b805163ffffffff81168114620003bd57600080fd5b600060e08284031215620003ea57600080fd5b60405160e081016001600160401b03811182821017156200040f576200040f6200033e565b6040529050806200042083620003a5565b81526020830151602082015260408301516040820152606083015160608201526200044e60808401620003c2565b60808201526200046160a08401620003c2565b60a08201526200047460c08401620003c2565b60c08201525092915050565b600082601f8301126200049257600080fd5b815160206001600160401b0380831115620004b157620004b16200033e565b8260051b604051601f19603f83011681018181108482111715620004d957620004d96200033e565b604052938452858101830193838101925087851115620004f857600080fd5b83870191505b8482101562000522576200051282620003a5565b83529183019190830190620004fe565b979650505050505050565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b908301908185036102408112156200056f57600080fd5b6200057962000354565b610100808312156200058a57600080fd5b620005946200037f565b9250620005a185620003a5565b8352620005b160208601620003a5565b602084015260408501516040840152606085015160608401526080850151608084015260a085015160a084015260c085015160c084015260e08501518015158114620005fc57600080fd5b60e08401528282526200061288868301620003d7565b6020830152506101e08401519150828211156200062e57600080fd5b6200063c8783860162000480565b6040820152620006506102008501620003a5565b6060820152620006646102208501620003a5565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620006aa57634e487b7160e01b600052601160045260246000fd5b5060010190565b6116ff80620006c16000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063715018a61161008c578063d63a8e1111610066578063d63a8e111461032a578063d8de65871461035d578063e622563014610462578063f2fde38b1461054557600080fd5b8063715018a6146102e757806379720266146102ef5780638da5cb5b1461030257600080fd5b80635815d8bf116100bd5780635815d8bf1461014357806366bec164146102065780636f27089f1461021957600080fd5b80632c85e863146100e4578063408c3b2e1461010e5780634aecebf31461012e575b600080fd5b6100f76100f2366004610f7c565b610558565b604051610105929190610f95565b60405180910390f35b61012161011c366004610f7c565b610712565b6040516101059190611080565b61014161013c366004611277565b610814565b005b6101b1610151366004610f7c565b6013602052600090815260409020805460018201546002830154600384015460048501546005860154600687015460079097015473ffffffffffffffffffffffffffffffffffffffff968716979590961695939492939192909160ff1688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a168152989097166020890152958701949094526060860192909252608085015260a084015260c0830152151560e082015261010001610105565b610141610214366004611357565b610901565b61028f610227366004610f7c565b6012602052600090815260409020805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff90931693919290919063ffffffff808216916401000000008104821691680100000000000000009091041687565b6040805173ffffffffffffffffffffffffffffffffffffffff9098168852602088019690965294860193909352606085019190915263ffffffff908116608085015290811660a08401521660c082015260e001610105565b610141610a19565b6101416102fd36600461137c565b610a2d565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610105565b61034d61033836600461149f565b60116020526000908152604090205460ff1681565b6040519015158152602001610105565b604080516101008101825260015473ffffffffffffffffffffffffffffffffffffffff908116825260025481166020808401919091526003548385015260045460608085019190915260055460808086019190915260065460a08087019190915260075460c08088019190915260085460ff16151560e0808901919091528851908101895260095487168152600a5495810195909552600b5497850197909752600c5492840192909252600d5463ffffffff808216928501929092526401000000008104821692840192909252680100000000000000009091041693810193909352600f546010546104529492918216911684565b60405161010594939291906114ba565b610538610470366004610f7c565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915250600090815260126020908152604091829020825160e081018452815473ffffffffffffffffffffffffffffffffffffffff1681526001820154928101929092526002810154928201929092526003820154606082015260049091015463ffffffff80821660808401526401000000008204811660a0840152680100000000000000009091041660c082015290565b60405161010591906115ca565b61014161055336600461149f565b610c31565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610607604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b505060009081526012602090815260408083206013835292819020815160e08082018452855473ffffffffffffffffffffffffffffffffffffffff908116835260018088015484880152600280890154858801526003808a015460608088019190915260049a8b015463ffffffff8082166080808b01919091526401000000008304821660a0808c01919091526801000000000000000090930490911660c0808b01919091528b5161010081018d528b5489168152968b01549097169b86019b909b5292880154988401989098528601549682019690965296840154958701959095526005830154938601939093526006820154938501939093526007015460ff1615159083015291565b610788604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b50600090815260136020908152604091829020825161010081018452815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015416928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c082015260079091015460ff16151560e082015290565b3360009081526011602052604090205460ff1661083057600080fd5b600091825260136020908152604092839020825181547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff92831617835592840151600183018054909416911617909155918101516002830155606081015160038301556080810151600483015560a0810151600583015560c0810151600683015560e00151600790910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b3360009081526011602052604090205460ff1661091d57600080fd5b6000918252601260209081526040928390208251815473ffffffffffffffffffffffffffffffffffffffff9091167fffffffffffffffffffffffff00000000000000000000000000000000000000009091161781559082015160018201559181015160028301556060810151600383015560808101516004909201805460a083015160c09093015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff948216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090931691909516171791909116919091179055565b610a21610ced565b610a2b6000610d6e565b565b610a35610ced565b610a428160400151610de3565b805180516001805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e090990151600880549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff958216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009098169190921617959095179290921693909317909355918301518051849392610bcd92600e92910190610edd565b506060820151600e820180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155608090930151600f9092018054909316911617905550565b610c39610ced565b73ffffffffffffffffffffffffffffffffffffffff8116610ce1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610cea81610d6e565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610cd8565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015610ed95760116000838381518110610e0557610e0561163b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161560116000848481518110610e6c57610e6c61163b565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610ed28161166a565b9050610de6565b5050565b828054828255906000526020600020908101928215610f57579160200282015b82811115610f5757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610efd565b50610f63929150610f67565b5090565b5b80821115610f635760008155600101610f68565b600060208284031215610f8e57600080fd5b5035919050565b6101e08101611007828573ffffffffffffffffffffffffffffffffffffffff8151168252602081015160208301526040810151604083015260608101516060830152608081015163ffffffff80821660808501528060a08401511660a08501528060c08401511660c085015250505050565b61107960e083018473ffffffffffffffffffffffffffffffffffffffff8082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b9392505050565b61010081016110f4828473ffffffffffffffffffffffffffffffffffffffff8082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561114d5761114d6110fa565b60405290565b60405160a0810167ffffffffffffffff8111828210171561114d5761114d6110fa565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111bd576111bd6110fa565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146111e957600080fd5b919050565b6000610100828403121561120157600080fd5b611209611129565b9050611214826111c5565b8152611222602083016111c5565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e0820135801515811461126c57600080fd5b60e082015292915050565b600080610120838503121561128b57600080fd5b8235915061129c84602085016111ee565b90509250929050565b803563ffffffff811681146111e957600080fd5b600060e082840312156112cb57600080fd5b60405160e0810181811067ffffffffffffffff821117156112ee576112ee6110fa565b6040529050806112fd836111c5565b8152602083013560208201526040830135604082015260608301356060820152611329608084016112a5565b608082015261133a60a084016112a5565b60a082015261134b60c084016112a5565b60c08201525092915050565b600080610100838503121561136b57600080fd5b8235915061129c84602085016112b9565b6000602080838503121561138f57600080fd5b823567ffffffffffffffff808211156113a757600080fd5b9084019061024082870312156113bc57600080fd5b6113c4611153565b6113ce87846111ee565b81526113de8761010085016112b9565b848201526101e0830135828111156113f557600080fd5b8301601f8101881361140657600080fd5b803583811115611418576114186110fa565b8060051b9350611429868501611176565b818152938201860193868101908a86111561144357600080fd5b928701925b8584101561146857611459846111c5565b82529287019290870190611448565b60408501525061147e91505061020084016111c5565b606082015261149061022084016111c5565b60808201529695505050505050565b6000602082840312156114b157600080fd5b611079826111c5565b610220810161152e828773ffffffffffffffffffffffffffffffffffffffff8082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b845173ffffffffffffffffffffffffffffffffffffffff16610100830152602085015161012083015260408501516101408301526060850151610160830152608085015163ffffffff90811661018084015260a086015181166101a084015260c0860151166101c083015273ffffffffffffffffffffffffffffffffffffffff8085166101e08401528084166102008401525095945050505050565b60e081016110f4828473ffffffffffffffffffffffffffffffffffffffff8151168252602081015160208301526040810151604083015260608101516060830152608081015163ffffffff80821660808501528060a08401511660a08501528060c08401511660c085015250505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220151754cb06b2a96031f24f74144275487bfd1e6d4533cd2a60714d552c149eb964736f6c63430008110033";

type GamificationRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GamificationRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GamificationRestricted__factory extends ContractFactory {
  constructor(...args: GamificationRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GamificationRestricted";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GamificationRestricted> {
    return super.deploy(
      input,
      overrides || {}
    ) as Promise<GamificationRestricted>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GamificationRestricted {
    return super.attach(address) as GamificationRestricted;
  }
  connect(signer: Signer): GamificationRestricted__factory {
    return super.connect(signer) as GamificationRestricted__factory;
  }
  static readonly contractName: "GamificationRestricted";
  public readonly contractName: "GamificationRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GamificationRestrictedInterface {
    return new utils.Interface(_abi) as GamificationRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GamificationRestricted {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GamificationRestricted;
  }
}
