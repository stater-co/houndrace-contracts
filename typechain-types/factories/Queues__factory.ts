/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Queues, QueuesInterface, QueuesConstructor } from "../Queues";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b50604051620030493803806200304983398101604081905262000039916200052d565b80516101208201516001600055829190620000543362000203565b80518251146200006357600080fd5b60005b8251811015620000fd5781818151811062000085576200008562000666565b602002602001015160026000858481518110620000a657620000a662000666565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f5906200067c565b905062000066565b5050815180518392506004916200011a9183916020019062000255565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051620001f79260098501920190620002bf565b509050505050620006a4565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215620002ad579160200282015b82811115620002ad57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000276565b50620002bb92915062000368565b5090565b82805482825590600052602060002090600701600890048101928215620002ad5791602002820160005b838211156200032c57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002e9565b80156200035e5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200032c565b5050620002bb9291505b5b80821115620002bb576000815560010162000369565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003bb57620003bb6200037f565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ec57620003ec6200037f565b604052919050565b60006001600160401b038211156200041057620004106200037f565b5060051b60200190565b80516001600160a01b03811681146200043257600080fd5b919050565b600082601f8301126200044957600080fd5b81516020620004626200045c83620003f4565b620003c1565b82815260059290921b840181019181810190868411156200048257600080fd5b8286015b84811015620004a8576200049a816200041a565b835291830191830162000486565b509695505050505050565b600082601f830112620004c557600080fd5b81516020620004d86200045c83620003f4565b82815260059290921b84018101918181019086841115620004f857600080fd5b8286015b84811015620004a85780516001600160e01b0319811681146200051f5760008081fd5b8352918301918301620004fc565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b9083019061014082860312156200056e57600080fd5b6200057862000395565b8251828111156200058857600080fd5b620005968782860162000437565b825250620005a7602084016200041a565b6020820152620005ba604084016200041a565b6040820152620005cd606084016200041a565b6060820152620005e0608084016200041a565b6080820152620005f360a084016200041a565b60a08201526200060660c084016200041a565b60c08201526200061960e084016200041a565b60e08201526101006200062e8185016200041a565b9082015261012083810151838111156200064757600080fd5b6200065588828701620004b3565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200069d57634e487b7160e01b600052601160045260246000fd5b5060010190565b61299580620006b46000396000f3fe6080604052600436106101445760003560e01c8063af640d0f116100c0578063e3c5fc0411610074578063ec7bbea311610059578063ec7bbea314610527578063f2fde38b14610542578063ffd9f5521461056257600080fd5b8063e3c5fc04146104b0578063e7c4d3741461050757600080fd5b8063d8de6587116100a5578063d8de6587146103ac578063ddf0b00914610463578063e200c8571461049057600080fd5b8063af640d0f14610311578063b3aa39b61461033557600080fd5b8063357d5142116101175780638da5cb5b116100fc5780638da5cb5b14610225578063982d64d41461025a5780639cce37c61461026d57600080fd5b8063357d5142146101f0578063715018a61461021057600080fd5b80630f7921ed1461014957806319e3e5921461018657806321204948146101a857806330f9a0f0146101d5575b600080fd5b34801561015557600080fd5b5061016961016436600461192f565b610582565b60405161017d989796959493929190611ca1565b60405180910390f35b34801561019257600080fd5b506101a66101a136600461192f565b610aab565b005b3480156101b457600080fd5b506101c86101c336600461192f565b610b2a565b60405161017d9190611cf7565b3480156101e157600080fd5b506101a66101a13660046123bc565b3480156101fc57600080fd5b506101a661020b3660046124f7565b610b8f565b34801561021c57600080fd5b506101a6610c54565b34801561023157600080fd5b5060015460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161017d565b6101a661026836600461255b565b610c68565b34801561027957600080fd5b506102d861028836600461257d565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff0000000000000000000000000000000000000000000000000000000093841681529290911660208301520161017d565b34801561031d57600080fd5b5061032760035481565b60405190815260200161017d565b34801561034157600080fd5b5061035561035036600461192f565b610ce3565b60408051845173ffffffffffffffffffffffffffffffffffffffff908116825260209586015186830152845181169282019290925292840151606084015281511660808301529091015160a082015260c00161017d565b3480156103b857600080fd5b50600554600654600754600854600954600a54600b54600c546104049773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e08201526101000161017d565b34801561046f57600080fd5b5061048361047e36600461192f565b610dbf565b60405161017d91906125a1565b34801561049c57600080fd5b506101c86104ab36600461192f565b611369565b3480156104bc57600080fd5b506104f26104cb36600461192f565b6000908152600e602052604090206012015468010000000000000000900463ffffffff1690565b60405163ffffffff909116815260200161017d565b34801561051357600080fd5b506101a6610522366004612671565b6113cc565b34801561053357600080fd5b506101a661026836600461255b565b34801561054e57600080fd5b506101a661055d36600461257d565b6113f9565b34801561056e57600080fd5b506101a661057d3660046126ae565b6114b5565b600e60205280600052604060002060009150905080600001604051806101200160405290816000820180546105b6906127cd565b80601f01602080910402602001604051908101604052809291908181526020018280546105e2906127cd565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156106bd57602002820191906000526020600020905b8154815260200190600101908083116106a9575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561071557602002820191906000526020600020905b815481526020019060010190808311610701575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156107b257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610787575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561082157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107f6575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561089057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610865575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561092a5760008481526020908190208301805460408051828502810185019091528181529283018282801561091657602002820191906000526020600020905b815481526020019060010190808311610902575b5050505050815260200190600101906108be565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109c3576000848152602090819020830180546040805182850281018501909152818152928301828280156109af57602002820191906000526020600020905b81548152602001906001019080831161099b575b505050505081526020019060010190610957565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a4a57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610a2857610a28611aa3565b815260206001928301818104948501949093039092029101808411610a095790505b50505091909252505050905250600f820154601083015460118401546012909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff1690610ad89083903690612820565b600060405180830381855af49150503d8060008114610b13576040519150601f19603f3d011682016040523d82523d6000602084013e610b18565b606091505b5050905080610b2657600080fd5b5050565b6000818152600e6020908152604091829020600401805483518184028101840190945280845260609392830182828015610b8357602002820191906000526020600020905b815481526020019060010190808311610b6f575b50505050509050919050565b610b976115dd565b8051825114610ba557600080fd5b60005b8251811015610c4f57818181518110610bc357610bc3612830565b602002602001015160026000858481518110610be157610be1612830565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080610c489061285f565b9050610ba8565b505050565b610c5c6115dd565b610c66600061165e565b565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff1690610c959083903690612820565b600060405180830381855af49150503d8060008114610cd0576040519150601f19603f3d011682016040523d82523d6000602084013e610cd5565b606091505b5050905080610c4f57600080fd5b6040805180820190915260008082526020820152604080518082019091526000808252602082015260408051808201909152600080825260208201526008546040517fb3aa39b60000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff9091169063b3aa39b69060240160c060405180830381865afa158015610d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db29190612919565b9250925092509193909250565b610dc76116d5565b6000828152600e6020526040908190208151610240810190925280548290610120820190839082908290610dfa906127cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e26906127cd565b8015610e735780601f10610e4857610100808354040283529160200191610e73565b820191906000526020600020905b815481529060010190602001808311610e5657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610f0157602002820191906000526020600020905b815481526020019060010190808311610eed575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610f5957602002820191906000526020600020905b815481526020019060010190808311610f45575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610ff657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fcb575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561106557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161103a575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156110d457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110a9575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561116e5760008481526020908190208301805460408051828502810185019091528181529283018282801561115a57602002820191906000526020600020905b815481526020019060010190808311611146575b505050505081526020019060010190611102565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611207576000848152602090819020830180546040805182850281018501909152818152928301828280156111f357602002820191906000526020600020905b8154815260200190600101908083116111df575b50505050508152602001906001019061119b565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561128e57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561126c5761126c611aa3565b81526020600192830181810494850194909303909202910180841161124d5790505b505050505081525050815250508152602001600e82018054806020026020016040519081016040528092919081815260200182805480156112ee57602002820191906000526020600020905b8154815260200190600101908083116112da575b5050509183525050600f8201546020820152601082015460408201526011820154606082015260129091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600e6020908152604091829020600301805483518184028101840190945280845260609392830182828015610b835760200282019190600052602060002090815481526020019060010190808311610b6f5750505050509050919050565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff1690610c959083903690612820565b6114016115dd565b73ffffffffffffffffffffffffffffffffffffffff81166114a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6114b28161165e565b50565b6114bd6115dd565b8051805182916004916114d791839160209091019061173b565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e08501516007850180548316918416919091179055610100850151600885018054909216921691909117905561012083015180516115d792600985019201906117c5565b50505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610c66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114a0565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040518061012001604052806116e961186c565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b8280548282559060005260206000209081019282156117b5579160200282015b828111156117b557825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061175b565b506117c192915061191a565b5090565b828054828255906000526020600020906007016008900481019282156117b55791602002820160005b8382111561182f57835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026117ee565b801561185f5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261182f565b50506117c192915061191a565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016119156040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156117c1576000815560010161191b565b60006020828403121561194157600080fd5b5035919050565b6000815180845260005b8181101561196e57602081850181015186830182015201611952565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156119dc578151875295820195908201906001016119c0565b509495945050505050565b600081518084526020808501945080840160005b838110156119dc57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016119fb565b600082825180855260208086019550808260051b84010181860160005b84811015611a96577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018952611a848383516119ac565b98840198925090830190600101611a4a565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c08452611ae760c08501826119e7565b905060208084015185830382870152611b0083826119e7565b92505060408401518583036040870152611b1a83826119e7565b92505060608401518583036060870152611b348382611a2d565b92505060808401518583036080870152611b4e8382611a2d565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015611a965785516004808210611bb1577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101611b72565b60006101208251818552611bda82860182611948565b9150506020830151611c04602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611c2c604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152611c4482826119ac565b91505060808301518482036080860152611c5e82826119ac565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611c978382611ad2565b9695505050505050565b6000610100808352611cb58184018c611bc4565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020808252825182820181905260009190848201906040850190845b81811015611d2f57835183529284019291840191600101611d13565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611d8d57611d8d611d3b565b60405290565b604051610120810167ffffffffffffffff81118282101715611d8d57611d8d611d3b565b604051610140810167ffffffffffffffff81118282101715611d8d57611d8d611d3b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611e2257611e22611d3b565b604052919050565b600067ffffffffffffffff821115611e4457611e44611d3b565b5060051b60200190565b600082601f830112611e5f57600080fd5b813567ffffffffffffffff811115611e7957611e79611d3b565b611eaa60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611ddb565b818152846020838601011115611ebf57600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146114b257600080fd5b8035611f0981611edc565b919050565b600082601f830112611f1f57600080fd5b81356020611f34611f2f83611e2a565b611ddb565b82815260059290921b84018101918181019086841115611f5357600080fd5b8286015b84811015611f6e5780358352918301918301611f57565b509695505050505050565b600082601f830112611f8a57600080fd5b81356020611f9a611f2f83611e2a565b82815260059290921b84018101918181019086841115611fb957600080fd5b8286015b84811015611f6e578035611fd081611edc565b8352918301918301611fbd565b600082601f830112611fee57600080fd5b81356020611ffe611f2f83611e2a565b82815260059290921b8401810191818101908684111561201d57600080fd5b8286015b84811015611f6e57803567ffffffffffffffff8111156120415760008081fd5b61204f8986838b0101611f0e565b845250918301918301612021565b600082601f83011261206e57600080fd5b8135602061207e611f2f83611e2a565b82815260059290921b8401810191818101908684111561209d57600080fd5b8286015b84811015611f6e578035600481106120b95760008081fd5b83529183019183016120a1565b600060c082840312156120d857600080fd5b6120e0611d6a565b9050813567ffffffffffffffff808211156120fa57600080fd5b61210685838601611f79565b8352602084013591508082111561211c57600080fd5b61212885838601611f79565b6020840152604084013591508082111561214157600080fd5b61214d85838601611f79565b6040840152606084013591508082111561216657600080fd5b61217285838601611fdd565b6060840152608084013591508082111561218b57600080fd5b61219785838601611fdd565b608084015260a08401359150808211156121b057600080fd5b506121bd8482850161205d565b60a08301525092915050565b600061012082840312156121dc57600080fd5b6121e4611d93565b9050813567ffffffffffffffff808211156121fe57600080fd5b61220a85838601611e4e565b835261221860208501611efe565b602084015261222960408501611efe565b6040840152606084013591508082111561224257600080fd5b61224e85838601611f0e565b6060840152608084013591508082111561226757600080fd5b61227385838601611f0e565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156122ac57600080fd5b6122b8868287016120c6565b8385015250505092915050565b803563ffffffff81168114611f0957600080fd5b80358015158114611f0957600080fd5b600061012082840312156122fc57600080fd5b612304611d93565b9050813567ffffffffffffffff8082111561231e57600080fd5b61232a858386016121c9565b8352602084013591508082111561234057600080fd5b5061234d84828501611f0e565b60208301525060408201356040820152606082013560608201526080820135608082015261237d60a083016122c5565b60a082015261238e60c083016122c5565b60c082015261239f60e083016122c5565b60e08201526101006123b28184016122d9565b9082015292915050565b600060208083850312156123cf57600080fd5b823567ffffffffffffffff808211156123e757600080fd5b818501915085601f8301126123fb57600080fd5b8135612409611f2f82611e2a565b81815260059190911b8301840190848101908883111561242857600080fd5b8585015b83811015612460578035858111156124445760008081fd5b6124528b89838a01016122e9565b84525091860191860161242c565b5098975050505050505050565b600082601f83011261247e57600080fd5b8135602061248e611f2f83611e2a565b82815260059290921b840181019181810190868411156124ad57600080fd5b8286015b84811015611f6e5780357fffffffff00000000000000000000000000000000000000000000000000000000811681146124ea5760008081fd5b83529183019183016124b1565b6000806040838503121561250a57600080fd5b823567ffffffffffffffff8082111561252257600080fd5b61252e86838701611f79565b9350602085013591508082111561254457600080fd5b506125518582860161246d565b9150509250929050565b6000806040838503121561256e57600080fd5b50508035926020909101359150565b60006020828403121561258f57600080fd5b813561259a81611edc565b9392505050565b60208152600082516101208060208501526125c0610140850183611bc4565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160408601526125fb83826119ac565b9250506040850151606085015260608501516080850152608085015160a085015260a085015161263360c086018263ffffffff169052565b5060c085015163ffffffff811660e08601525060e085015161010061265f8187018363ffffffff169052565b90950151151593019290925250919050565b6000806040838503121561268457600080fd5b82359150602083013567ffffffffffffffff8111156126a257600080fd5b612551858286016122e9565b6000602082840312156126c057600080fd5b813567ffffffffffffffff808211156126d857600080fd5b9083019061014082860312156126ed57600080fd5b6126f5611db7565b82358281111561270457600080fd5b61271087828601611f79565b82525061271f60208401611efe565b602082015261273060408401611efe565b604082015261274160608401611efe565b606082015261275260808401611efe565b608082015261276360a08401611efe565b60a082015261277460c08401611efe565b60c082015261278560e08401611efe565b60e0820152610100612798818501611efe565b9082015261012083810135838111156127b057600080fd5b6127bc8882870161246d565b918301919091525095945050505050565b600181811c908216806127e157607f821691505b60208210810361281a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000604082840312156128d057600080fd5b6040516040810181811067ffffffffffffffff821117156128f3576128f3611d3b565b8060405250809150825161290681611edc565b8152602092830151920191909152919050565b600080600060c0848603121561292e57600080fd5b61293885856128be565b925061294785604086016128be565b915061295685608086016128be565b9050925092509256fea2646970667358221220f2965c2e132d40d5b7dbef06152ee3a308df511b7a4dc18b71eea00f22d49ff064736f6c63430008110033";

type QueuesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Queues__factory extends ContractFactory {
  constructor(...args: QueuesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Queues";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Queues> {
    return super.deploy(input, overrides || {}) as Promise<Queues>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Queues {
    return super.attach(address) as Queues;
  }
  connect(signer: Signer): Queues__factory {
    return super.connect(signer) as Queues__factory;
  }
  static readonly contractName: "Queues";
  public readonly contractName: "Queues";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesInterface {
    return new utils.Interface(_abi) as QueuesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Queues {
    return new Contract(address, _abi, signerOrProvider) as Queues;
  }
}
