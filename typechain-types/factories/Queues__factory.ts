/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Queues, QueuesInterface, QueuesConstructor } from "../Queues";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002eca38038062002eca8339810160408190526200003991620003de565b80620000453362000142565b600180558051600380546001600160a01b03199081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b80549093169416939093179055610120830151805184936200012692600c9291019062000251565b5050506101208101516200013a9062000192565b505062000541565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024d57600e6000838381518110620001b857620001b862000503565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e600084848151811062000208576200020862000503565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002458162000519565b905062000195565b5050565b828054828255906000526020600020908101928215620002a9579160200282015b82811115620002a957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000272565b50620002b7929150620002bb565b5090565b5b80821115620002b75760008155600101620002bc565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156200030e576200030e620002d2565b60405290565b80516001600160a01b03811681146200032c57600080fd5b919050565b600082601f8301126200034357600080fd5b815160206001600160401b0380831115620003625762000362620002d2565b8260051b604051601f19603f830116810181811084821117156200038a576200038a620002d2565b604052938452858101830193838101925087851115620003a957600080fd5b83870191505b84821015620003d357620003c38262000314565b83529183019190830190620003af565b979650505050505050565b600060208284031215620003f157600080fd5b81516001600160401b03808211156200040957600080fd5b9083019061014082860312156200041f57600080fd5b62000429620002e8565b620004348362000314565b8152620004446020840162000314565b6020820152620004576040840162000314565b60408201526200046a6060840162000314565b60608201526200047d6080840162000314565b60808201526200049060a0840162000314565b60a0820152620004a360c0840162000314565b60c0820152620004b660e0840162000314565b60e0820152610100620004cb81850162000314565b908201526101208381015183811115620004e457600080fd5b620004f28882870162000331565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053a57634e487b7160e01b600052601160045260246000fd5b5060010190565b61297980620005516000396000f3fe6080604052600436106101445760003560e01c8063af640d0f116100c0578063e115234311610074578063e3c5fc0411610059578063e3c5fc041461049a578063ec7bbea3146104f1578063f2fde38b1461050c57600080fd5b8063e11523431461045a578063e200c8571461047a57600080fd5b8063d63a8e11116100a5578063d63a8e1114610328578063d8de658714610368578063ddf0b0091461042d57600080fd5b8063af640d0f1461028d578063b3aa39b6146102b157600080fd5b8063451383f2116101175780638da5cb5b116100fc5780638da5cb5b14610225578063982d64d41461025a578063ac766c4d1461026d57600080fd5b8063451383f2146101f0578063715018a61461021057600080fd5b80630f7921ed1461014957806319e3e5921461018657806321204948146101a85780632df310b4146101d5575b600080fd5b34801561015557600080fd5b506101696101643660046119ad565b61052c565b60405161017d989796959493929190611ce6565b60405180910390f35b34801561019257600080fd5b506101a66101a13660046119ad565b610a4e565b005b3480156101b457600080fd5b506101c86101c33660046119ad565b610ad5565b60405161017d9190611d3c565b3480156101e157600080fd5b506101a66101a136600461245f565b3480156101fc57600080fd5b506101a661020b366004612510565b610b3a565b34801561021c57600080fd5b506101a6610c57565b34801561023157600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161017d565b6101a661026836600461261c565b610c6b565b34801561027957600080fd5b506101a661028836600461263e565b610ceb565b34801561029957600080fd5b506102a360025481565b60405190815260200161017d565b3480156102bd57600080fd5b506102d16102cc3660046119ad565b610d20565b60408051845173ffffffffffffffffffffffffffffffffffffffff908116825260209586015186830152845181169282019290925292840151606084015281511660808301529091015160a082015260c00161017d565b34801561033457600080fd5b50610358610343366004612685565b600e6020526000908152604090205460ff1681565b604051901515815260200161017d565b34801561037457600080fd5b50600354600454600554600654600754600854600954600a54600b546103c69873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e08301529091166101008201526101200161017d565b34801561043957600080fd5b5061044d6104483660046119ad565b610dfc565b60405161017d91906126e9565b34801561046657600080fd5b506101a66104753660046119ad565b6113d3565b34801561048657600080fd5b506101c86104953660046119ad565b61150b565b3480156104a657600080fd5b506104dc6104b53660046119ad565b6000908152600d602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff909116815260200161017d565b3480156104fd57600080fd5b506101a661026836600461261c565b34801561051857600080fd5b506101a6610527366004612685565b61156e565b600d6020528060005260406000206000915090508060000160405180610120016040529081600082018054610560906127b1565b80601f016020809104026020016040519081016040528092919081815260200182805461058c906127b1565b80156105d95780601f106105ae576101008083540402835291602001916105d9565b820191906000526020600020905b8154815290600101906020018083116105bc57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561066757602002820191906000526020600020905b815481526020019060010190808311610653575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156106bf57602002820191906000526020600020905b8154815260200190600101908083116106ab575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561075c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610731575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156107cb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107a0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561083a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161080f575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108d4576000848152602090819020830180546040805182850281018501909152818152928301828280156108c057602002820191906000526020600020905b8154815260200190600101908083116108ac575b505050505081526020019060010190610868565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561096d5760008481526020908190208301805460408051828502810185019091528181529283018282801561095957602002820191906000526020600020905b815481526020019060010190808311610945575b505050505081526020019060010190610901565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156109f457602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156109d2576109d2611b00565b8152602060019283018181049485019490930390920291018084116109b35790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b610a56611622565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff1690610a839083903690612804565b600060405180830381855af49150503d8060008114610abe576040519150601f19603f3d011682016040523d82523d6000602084013e610ac3565b606091505b5050905080610ad157600080fd5b5050565b6000818152600d6020908152604091829020600401805483518184028101840190945280845260609392830182828015610b2e57602002820191906000526020600020905b815481526020019060010190808311610b1a575b50505050509050919050565b610b42611622565b8051600380547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b8054909316941693909317905561012083015180518493610c4292600c9291019061180e565b50905050610c548161012001516116a3565b50565b610c5f611622565b610c696000611799565b565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff1690610c989083903690612804565b600060405180830381855af49150503d8060008114610cd3576040519150601f19603f3d011682016040523d82523d6000602084013e610cd8565b606091505b5050905080610ce657600080fd5b505050565b610cf3611622565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff1690610c989083903690612804565b6040805180820190915260008082526020820152604080518082019091526000808252602082015260408051808201909152600080825260208201526006546040517fb3aa39b60000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff9091169063b3aa39b69060240160c060405180830381865afa158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def919061286f565b9250925092509193909250565b610e04611898565b6000828152600d6020526040908190208151610240810190925280548290610120820190839082908290610e37906127b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610e63906127b1565b8015610eb05780601f10610e8557610100808354040283529160200191610eb0565b820191906000526020600020905b815481529060010190602001808311610e9357829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610f3e57602002820191906000526020600020905b815481526020019060010190808311610f2a575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610f9657602002820191906000526020600020905b815481526020019060010190808311610f82575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561103357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611008575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156110a257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611077575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561111157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110e6575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111ab5760008481526020908190208301805460408051828502810185019091528181529283018282801561119757602002820191906000526020600020905b815481526020019060010190808311611183575b50505050508152602001906001019061113f565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112445760008481526020908190208301805460408051828502810185019091528181529283018282801561123057602002820191906000526020600020905b81548152602001906001019080831161121c575b5050505050815260200190600101906111d8565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156112cb57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156112a9576112a9611b00565b81526020600192830181810494850194909303909202910180841161128a5790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e09094019391929091908301828280156113b357602002820191906000526020600020906000905b82829054906101000a900460ff16600681111561139157611391611b00565b8152602060019283018181049485019490930390920291018084116113725790505b50505091835250506013919091015460ff16151560209091015292915050565b6113db611622565b47811115611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f19350505050610c54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f2077697468647261770000000000006044820152606401611467565b6000818152600d6020908152604091829020600301805483518184028101840190945280845260609392830182828015610b2e5760200282019190600052602060002090815481526020019060010190808311610b1a5750505050509050919050565b611576611622565b73ffffffffffffffffffffffffffffffffffffffff8116611619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611467565b610c5481611799565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611467565b60005b8151811015610ad157600e60008383815181106116c5576116c56128b5565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e600084848151811061172c5761172c6128b5565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055611792816128e4565b90506116a6565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611888579160200282015b8281111561188857825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061182e565b506118949291506118ea565b5090565b6040518061012001604052806118ac6118ff565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b8082111561189457600081556001016118eb565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016119a86040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156119bf57600080fd5b5035919050565b6000815180845260005b818110156119ec576020818501810151868301820152016119d0565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611a5a57815187529582019590820190600101611a3e565b509495945050505050565b600081518084526020808501945080840160005b83811015611a5a57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611a79565b600081518084526020808501808196508360051b8101915082860160005b85811015611af3578284038952611ae1848351611a2a565b98850198935090840190600101611ac9565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c08452611b4460c0850182611a65565b905060208084015185830382870152611b5d8382611a65565b92505060408401518583036040870152611b778382611a65565b92505060608401518583036060870152611b918382611aab565b92505060808401518583036080870152611bab8382611aab565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611bfe57845160048110611be857611be8611b00565b8252938301936001929092019190830190611bce565b509695505050505050565b60006101208251818552611c1f828601826119c6565b9150506020830151611c49602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611c71604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152611c898282611a2a565b91505060808301518482036080860152611ca38282611a2a565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611cdc8382611b2f565b9695505050505050565b6000610100808352611cfa8184018c611c09565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020808252825182820181905260009190848201906040850190845b81811015611d7457835183529284019291840191600101611d58565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611dd257611dd2611d80565b60405290565b604051610120810167ffffffffffffffff81118282101715611dd257611dd2611d80565b604051610140810167ffffffffffffffff81118282101715611dd257611dd2611d80565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611e6757611e67611d80565b604052919050565b600067ffffffffffffffff821115611e8957611e89611d80565b5060051b60200190565b600082601f830112611ea457600080fd5b813567ffffffffffffffff811115611ebe57611ebe611d80565b611eef60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611e20565b818152846020838601011115611f0457600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c5457600080fd5b8035611f4e81611f21565b919050565b600082601f830112611f6457600080fd5b81356020611f79611f7483611e6f565b611e20565b82815260059290921b84018101918181019086841115611f9857600080fd5b8286015b84811015611bfe5780358352918301918301611f9c565b600082601f830112611fc457600080fd5b81356020611fd4611f7483611e6f565b82815260059290921b84018101918181019086841115611ff357600080fd5b8286015b84811015611bfe57803561200a81611f21565b8352918301918301611ff7565b600082601f83011261202857600080fd5b81356020612038611f7483611e6f565b82815260059290921b8401810191818101908684111561205757600080fd5b8286015b84811015611bfe57803567ffffffffffffffff81111561207b5760008081fd5b6120898986838b0101611f53565b84525091830191830161205b565b600082601f8301126120a857600080fd5b813560206120b8611f7483611e6f565b82815260059290921b840181019181810190868411156120d757600080fd5b8286015b84811015611bfe578035600481106120f35760008081fd5b83529183019183016120db565b600060c0828403121561211257600080fd5b61211a611daf565b9050813567ffffffffffffffff8082111561213457600080fd5b61214085838601611fb3565b8352602084013591508082111561215657600080fd5b61216285838601611fb3565b6020840152604084013591508082111561217b57600080fd5b61218785838601611fb3565b604084015260608401359150808211156121a057600080fd5b6121ac85838601612017565b606084015260808401359150808211156121c557600080fd5b6121d185838601612017565b608084015260a08401359150808211156121ea57600080fd5b506121f784828501612097565b60a08301525092915050565b6000610120828403121561221657600080fd5b61221e611dd8565b9050813567ffffffffffffffff8082111561223857600080fd5b61224485838601611e93565b835261225260208501611f43565b602084015261226360408501611f43565b6040840152606084013591508082111561227c57600080fd5b61228885838601611f53565b606084015260808401359150808211156122a157600080fd5b6122ad85838601611f53565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156122e657600080fd5b6122f286828701612100565b8385015250505092915050565b803563ffffffff81168114611f4e57600080fd5b600082601f83011261232457600080fd5b81356020612334611f7483611e6f565b82815260059290921b8401810191818101908684111561235357600080fd5b8286015b84811015611bfe5780356007811061236f5760008081fd5b8352918301918301612357565b80358015158114611f4e57600080fd5b6000610120828403121561239f57600080fd5b6123a7611dd8565b9050813567ffffffffffffffff808211156123c157600080fd5b6123cd85838601612203565b83526020840135602084015260408401356040840152606084013560608401526123f9608085016122ff565b608084015261240a60a085016122ff565b60a084015261241b60c085016122ff565b60c084015260e084013591508082111561243457600080fd5b5061244184828501612313565b60e08301525061010061245581840161237c565b9082015292915050565b6000602080838503121561247257600080fd5b823567ffffffffffffffff8082111561248a57600080fd5b818501915085601f83011261249e57600080fd5b81356124ac611f7482611e6f565b81815260059190911b830184019084810190888311156124cb57600080fd5b8585015b83811015612503578035858111156124e75760008081fd5b6124f58b89838a010161238c565b8452509186019186016124cf565b5098975050505050505050565b60006020828403121561252257600080fd5b813567ffffffffffffffff8082111561253a57600080fd5b90830190610140828603121561254f57600080fd5b612557611dfc565b61256083611f43565b815261256e60208401611f43565b602082015261257f60408401611f43565b604082015261259060608401611f43565b60608201526125a160808401611f43565b60808201526125b260a08401611f43565b60a08201526125c360c08401611f43565b60c08201526125d460e08401611f43565b60e08201526101006125e7818501611f43565b9082015261012083810135838111156125ff57600080fd5b61260b88828701611fb3565b918301919091525095945050505050565b6000806040838503121561262f57600080fd5b50508035926020909101359150565b6000806040838503121561265157600080fd5b82359150602083013567ffffffffffffffff81111561266f57600080fd5b61267b8582860161238c565b9150509250929050565b60006020828403121561269757600080fd5b81356126a281611f21565b9392505050565b600081518084526020808501945080840160005b83811015611a5a578151600781106126d7576126d7611b00565b875295820195908201906001016126bd565b6020815260008251610120806020850152612708610140850183611c09565b9150602085015160408501526040850151606085015260608501516080850152608085015161273f60a086018263ffffffff169052565b5060a085015163ffffffff811660c08601525060c085015163ffffffff811660e08601525060e08501516101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868503018187015261279f84836126a9565b96015115159190940152509192915050565b600181811c908216806127c557607f821691505b6020821081036127fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b60006040828403121561282657600080fd5b6040516040810181811067ffffffffffffffff8211171561284957612849611d80565b8060405250809150825161285c81611f21565b8152602092830151920191909152919050565b600080600060c0848603121561288457600080fd5b61288e8585612814565b925061289d8560408601612814565b91506128ac8560808601612814565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361293c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220a59fc7ddbf892815a9b23d055e0963d397b9e4633e48d8d5a0b448dacb9ce20e64736f6c63430008110033";

type QueuesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Queues__factory extends ContractFactory {
  constructor(...args: QueuesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Queues";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Queues> {
    return super.deploy(input, overrides || {}) as Promise<Queues>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Queues {
    return super.attach(address) as Queues;
  }
  connect(signer: Signer): Queues__factory {
    return super.connect(signer) as Queues__factory;
  }
  static readonly contractName: "Queues";
  public readonly contractName: "Queues";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesInterface {
    return new utils.Interface(_abi) as QueuesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Queues {
    return new Contract(address, _abi, signerOrProvider) as Queues;
  }
}
