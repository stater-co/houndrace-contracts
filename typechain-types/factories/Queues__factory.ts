/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Queues, QueuesInterface, QueuesConstructor } from "../Queues";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b5060405162002efb38038062002efb83398101604081905262000039916200052d565b80516101208201516001600055829190620000543362000203565b80518251146200006357600080fd5b60005b8251811015620000fd5781818151811062000085576200008562000666565b602002602001015160026000858481518110620000a657620000a662000666565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f5906200067c565b905062000066565b5050815180518392506004916200011a9183916020019062000255565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051620001f79260098501920190620002bf565b509050505050620006a4565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215620002ad579160200282015b82811115620002ad57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000276565b50620002bb92915062000368565b5090565b82805482825590600052602060002090600701600890048101928215620002ad5791602002820160005b838211156200032c57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002e9565b80156200035e5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200032c565b5050620002bb9291505b5b80821115620002bb576000815560010162000369565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003bb57620003bb6200037f565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ec57620003ec6200037f565b604052919050565b60006001600160401b038211156200041057620004106200037f565b5060051b60200190565b80516001600160a01b03811681146200043257600080fd5b919050565b600082601f8301126200044957600080fd5b81516020620004626200045c83620003f4565b620003c1565b82815260059290921b840181019181810190868411156200048257600080fd5b8286015b84811015620004a8576200049a816200041a565b835291830191830162000486565b509695505050505050565b600082601f830112620004c557600080fd5b81516020620004d86200045c83620003f4565b82815260059290921b84018101918181019086841115620004f857600080fd5b8286015b84811015620004a85780516001600160e01b0319811681146200051f5760008081fd5b8352918301918301620004fc565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b9083019061014082860312156200056e57600080fd5b6200057862000395565b8251828111156200058857600080fd5b620005968782860162000437565b825250620005a7602084016200041a565b6020820152620005ba604084016200041a565b6040820152620005cd606084016200041a565b6060820152620005e0608084016200041a565b6080820152620005f360a084016200041a565b60a08201526200060660c084016200041a565b60c08201526200061960e084016200041a565b60e08201526101006200062e8185016200041a565b9082015261012083810151838111156200064757600080fd5b6200065588828701620004b3565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200069d57634e487b7160e01b600052601160045260246000fd5b5060010190565b61284780620006b46000396000f3fe60806040526004361061010e5760003560e01c8063b3aa39b6116100a5578063e3c5fc0411610074578063ec7bbea311610059578063ec7bbea31461042d578063f2fde38b14610448578063ffd9f5521461046857600080fd5b8063e3c5fc04146103b6578063e7c4d3741461040d57600080fd5b8063b3aa39b61461023b578063d8de6587146102b2578063ddf0b00914610369578063e200c8571461039657600080fd5b8063715018a6116100e1578063715018a6146101ba5780638da5cb5b146101cf578063982d64d414610204578063af640d0f1461021757600080fd5b80630f7921ed1461011357806319e3e59214610150578063212049481461017257806330f9a0f01461019f575b600080fd5b34801561011f57600080fd5b5061013361012e36600461183b565b610488565b604051610147989796959493929190611bad565b60405180910390f35b34801561015c57600080fd5b5061017061016b36600461183b565b6109b1565b005b34801561017e57600080fd5b5061019261018d36600461183b565b610a30565b6040516101479190611c03565b3480156101ab57600080fd5b5061017061016b3660046122c8565b3480156101c657600080fd5b50610170610a95565b3480156101db57600080fd5b5060015460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610147565b610170610212366004612379565b610aa9565b34801561022357600080fd5b5061022d60035481565b604051908152602001610147565b34801561024757600080fd5b5061025b61025636600461183b565b610b29565b60408051845173ffffffffffffffffffffffffffffffffffffffff908116825260209586015186830152845181169282019290925292840151606084015281511660808301529091015160a082015260c001610147565b3480156102be57600080fd5b50600554600654600754600854600954600a54600b54600c5461030a9773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e082015261010001610147565b34801561037557600080fd5b5061038961038436600461183b565b610c05565b604051610147919061239b565b3480156103a257600080fd5b506101926103b136600461183b565b6111af565b3480156103c257600080fd5b506103f86103d136600461183b565b6000908152600e602052604090206012015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610147565b34801561041957600080fd5b5061017061042836600461246b565b611212565b34801561043957600080fd5b50610170610212366004612379565b34801561045457600080fd5b506101706104633660046124b2565b61123f565b34801561047457600080fd5b50610170610483366004612560565b6112fb565b600e60205280600052604060002060009150905080600001604051806101200160405290816000820180546104bc9061267f565b80601f01602080910402602001604051908101604052809291908181526020018280546104e89061267f565b80156105355780601f1061050a57610100808354040283529160200191610535565b820191906000526020600020905b81548152906001019060200180831161051857829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156105c357602002820191906000526020600020905b8154815260200190600101908083116105af575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561061b57602002820191906000526020600020905b815481526020019060010190808311610607575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156106b857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161068d575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561072757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106fc575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561079657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161076b575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108305760008481526020908190208301805460408051828502810185019091528181529283018282801561081c57602002820191906000526020600020905b815481526020019060010190808311610808575b5050505050815260200190600101906107c4565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108c9576000848152602090819020830180546040805182850281018501909152818152928301828280156108b557602002820191906000526020600020905b8154815260200190600101908083116108a1575b50505050508152602001906001019061085d565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561095057602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561092e5761092e6119af565b81526020600192830181810494850194909303909202910180841161090f5790505b50505091909252505050905250600f820154601083015460118401546012909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906109de90839036906126d2565b600060405180830381855af49150503d8060008114610a19576040519150601f19603f3d011682016040523d82523d6000602084013e610a1e565b606091505b5050905080610a2c57600080fd5b5050565b6000818152600e6020908152604091829020600401805483518184028101840190945280845260609392830182828015610a8957602002820191906000526020600020905b815481526020019060010190808311610a75575b50505050509050919050565b610a9d611431565b610aa760006114b2565b565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff1690610ad690839036906126d2565b600060405180830381855af49150503d8060008114610b11576040519150601f19603f3d011682016040523d82523d6000602084013e610b16565b606091505b5050905080610b2457600080fd5b505050565b6040805180820190915260008082526020820152604080518082019091526000808252602082015260408051808201909152600080825260208201526008546040517fb3aa39b60000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff9091169063b3aa39b69060240160c060405180830381865afa158015610bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf8919061273d565b9250925092509193909250565b610c0d6115e1565b6000828152600e6020526040908190208151610240810190925280548290610120820190839082908290610c409061267f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6c9061267f565b8015610cb95780601f10610c8e57610100808354040283529160200191610cb9565b820191906000526020600020905b815481529060010190602001808311610c9c57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610d4757602002820191906000526020600020905b815481526020019060010190808311610d33575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610d9f57602002820191906000526020600020905b815481526020019060010190808311610d8b575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610e3c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e11575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610eab57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e80575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610f1a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610eef575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610fb457600084815260209081902083018054604080518285028101850190915281815292830182828015610fa057602002820191906000526020600020905b815481526020019060010190808311610f8c575b505050505081526020019060010190610f48565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561104d5760008481526020908190208301805460408051828502810185019091528181529283018282801561103957602002820191906000526020600020905b815481526020019060010190808311611025575b505050505081526020019060010190610fe1565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156110d457602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156110b2576110b26119af565b8152602060019283018181049485019490930390920291018084116110935790505b505050505081525050815250508152602001600e820180548060200260200160405190810160405280929190818152602001828054801561113457602002820191906000526020600020905b815481526020019060010190808311611120575b5050509183525050600f8201546020820152601082015460408201526011820154606082015260129091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600e6020908152604091829020600301805483518184028101840190945280845260609392830182828015610a895760200282019190600052602060002090815481526020019060010190808311610a755750505050509050919050565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff1690610ad690839036906126d2565b611247611431565b73ffffffffffffffffffffffffffffffffffffffff81166112ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6112f8816114b2565b50565b611303611431565b80518051829160049161131d918391602090910190611647565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805483169184169190911790556101008501516008850180549092169216919091179055610120830151805161141d92600985019201906116d1565b505081516101208301516112f89250611529565b60015473ffffffffffffffffffffffffffffffffffffffff163314610aa7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016112e6565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805182511461153757600080fd5b60005b8251811015610b245781818151811061155557611555612783565b60200260200101516002600085848151811061157357611573612783565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c0217905550806115da906127b2565b905061153a565b6040518061012001604052806115f5611778565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b8280548282559060005260206000209081019282156116c1579160200282015b828111156116c157825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611667565b506116cd929150611826565b5090565b828054828255906000526020600020906007016008900481019282156116c15791602002820160005b8382111561173b57835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026116fa565b801561176b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261173b565b50506116cd929150611826565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016118216040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156116cd5760008155600101611827565b60006020828403121561184d57600080fd5b5035919050565b6000815180845260005b8181101561187a5760208185018101518683018201520161185e565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156118e8578151875295820195908201906001016118cc565b509495945050505050565b600081518084526020808501945080840160005b838110156118e857815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611907565b600082825180855260208086019550808260051b84010181860160005b848110156119a2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189526119908383516118b8565b98840198925090830190600101611956565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526119f360c08501826118f3565b905060208084015185830382870152611a0c83826118f3565b92505060408401518583036040870152611a2683826118f3565b92505060608401518583036060870152611a408382611939565b92505060808401518583036080870152611a5a8382611939565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156119a25785516004808210611abd577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101611a7e565b60006101208251818552611ae682860182611854565b9150506020830151611b10602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611b38604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152611b5082826118b8565b91505060808301518482036080860152611b6a82826118b8565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611ba383826119de565b9695505050505050565b6000610100808352611bc18184018c611ad0565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020808252825182820181905260009190848201906040850190845b81811015611c3b57835183529284019291840191600101611c1f565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611c9957611c99611c47565b60405290565b604051610120810167ffffffffffffffff81118282101715611c9957611c99611c47565b604051610140810167ffffffffffffffff81118282101715611c9957611c99611c47565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d2e57611d2e611c47565b604052919050565b600067ffffffffffffffff821115611d5057611d50611c47565b5060051b60200190565b600082601f830112611d6b57600080fd5b813567ffffffffffffffff811115611d8557611d85611c47565b611db660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611ce7565b818152846020838601011115611dcb57600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146112f857600080fd5b8035611e1581611de8565b919050565b600082601f830112611e2b57600080fd5b81356020611e40611e3b83611d36565b611ce7565b82815260059290921b84018101918181019086841115611e5f57600080fd5b8286015b84811015611e7a5780358352918301918301611e63565b509695505050505050565b600082601f830112611e9657600080fd5b81356020611ea6611e3b83611d36565b82815260059290921b84018101918181019086841115611ec557600080fd5b8286015b84811015611e7a578035611edc81611de8565b8352918301918301611ec9565b600082601f830112611efa57600080fd5b81356020611f0a611e3b83611d36565b82815260059290921b84018101918181019086841115611f2957600080fd5b8286015b84811015611e7a57803567ffffffffffffffff811115611f4d5760008081fd5b611f5b8986838b0101611e1a565b845250918301918301611f2d565b600082601f830112611f7a57600080fd5b81356020611f8a611e3b83611d36565b82815260059290921b84018101918181019086841115611fa957600080fd5b8286015b84811015611e7a57803560048110611fc55760008081fd5b8352918301918301611fad565b600060c08284031215611fe457600080fd5b611fec611c76565b9050813567ffffffffffffffff8082111561200657600080fd5b61201285838601611e85565b8352602084013591508082111561202857600080fd5b61203485838601611e85565b6020840152604084013591508082111561204d57600080fd5b61205985838601611e85565b6040840152606084013591508082111561207257600080fd5b61207e85838601611ee9565b6060840152608084013591508082111561209757600080fd5b6120a385838601611ee9565b608084015260a08401359150808211156120bc57600080fd5b506120c984828501611f69565b60a08301525092915050565b600061012082840312156120e857600080fd5b6120f0611c9f565b9050813567ffffffffffffffff8082111561210a57600080fd5b61211685838601611d5a565b835261212460208501611e0a565b602084015261213560408501611e0a565b6040840152606084013591508082111561214e57600080fd5b61215a85838601611e1a565b6060840152608084013591508082111561217357600080fd5b61217f85838601611e1a565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156121b857600080fd5b6121c486828701611fd2565b8385015250505092915050565b803563ffffffff81168114611e1557600080fd5b80358015158114611e1557600080fd5b6000610120828403121561220857600080fd5b612210611c9f565b9050813567ffffffffffffffff8082111561222a57600080fd5b612236858386016120d5565b8352602084013591508082111561224c57600080fd5b5061225984828501611e1a565b60208301525060408201356040820152606082013560608201526080820135608082015261228960a083016121d1565b60a082015261229a60c083016121d1565b60c08201526122ab60e083016121d1565b60e08201526101006122be8184016121e5565b9082015292915050565b600060208083850312156122db57600080fd5b823567ffffffffffffffff808211156122f357600080fd5b818501915085601f83011261230757600080fd5b8135612315611e3b82611d36565b81815260059190911b8301840190848101908883111561233457600080fd5b8585015b8381101561236c578035858111156123505760008081fd5b61235e8b89838a01016121f5565b845250918601918601612338565b5098975050505050505050565b6000806040838503121561238c57600080fd5b50508035926020909101359150565b60208152600082516101208060208501526123ba610140850183611ad0565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160408601526123f583826118b8565b9250506040850151606085015260608501516080850152608085015160a085015260a085015161242d60c086018263ffffffff169052565b5060c085015163ffffffff811660e08601525060e08501516101006124598187018363ffffffff169052565b90950151151593019290925250919050565b6000806040838503121561247e57600080fd5b82359150602083013567ffffffffffffffff81111561249c57600080fd5b6124a8858286016121f5565b9150509250929050565b6000602082840312156124c457600080fd5b81356124cf81611de8565b9392505050565b600082601f8301126124e757600080fd5b813560206124f7611e3b83611d36565b82815260059290921b8401810191818101908684111561251657600080fd5b8286015b84811015611e7a5780357fffffffff00000000000000000000000000000000000000000000000000000000811681146125535760008081fd5b835291830191830161251a565b60006020828403121561257257600080fd5b813567ffffffffffffffff8082111561258a57600080fd5b90830190610140828603121561259f57600080fd5b6125a7611cc3565b8235828111156125b657600080fd5b6125c287828601611e85565b8252506125d160208401611e0a565b60208201526125e260408401611e0a565b60408201526125f360608401611e0a565b606082015261260460808401611e0a565b608082015261261560a08401611e0a565b60a082015261262660c08401611e0a565b60c082015261263760e08401611e0a565b60e082015261010061264a818501611e0a565b90820152610120838101358381111561266257600080fd5b61266e888287016124d6565b918301919091525095945050505050565b600181811c9082168061269357607f821691505b6020821081036126cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b6000604082840312156126f457600080fd5b6040516040810181811067ffffffffffffffff8211171561271757612717611c47565b8060405250809150825161272a81611de8565b8152602092830151920191909152919050565b600080600060c0848603121561275257600080fd5b61275c85856126e2565b925061276b85604086016126e2565b915061277a85608086016126e2565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361280a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220dc214f2c0eb06ef997b92f56a3fb517bde61b37ccbb4f91fdd482a8a8fba37b364736f6c63430008110033";

type QueuesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Queues__factory extends ContractFactory {
  constructor(...args: QueuesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Queues";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Queues> {
    return super.deploy(input, overrides || {}) as Promise<Queues>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Queues {
    return super.attach(address) as Queues;
  }
  connect(signer: Signer): Queues__factory {
    return super.connect(signer) as Queues__factory;
  }
  static readonly contractName: "Queues";
  public readonly contractName: "Queues";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesInterface {
    return new utils.Interface(_abi) as QueuesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Queues {
    return new Contract(address, _abi, signerOrProvider) as Queues;
  }
}
