/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Queues, QueuesInterface, QueuesConstructor } from "../Queues";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002cfb38038062002cfb8339810160408190526200003991620003c9565b8062000045336200012d565b600180558051600380546001600160a01b03199081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80549093169416939093179055610100830151805184936200011192600b929101906200023c565b50505061010081015162000125906200017d565b505062000518565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200023857600d6000838381518110620001a357620001a3620004da565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d6000848481518110620001f357620001f3620004da565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200023081620004f0565b905062000180565b5050565b82805482825590600052602060002090810192821562000294579160200282015b828111156200029457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200025d565b50620002a2929150620002a6565b5090565b5b80821115620002a25760008155600101620002a7565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620002f957620002f9620002bd565b60405290565b80516001600160a01b03811681146200031757600080fd5b919050565b600082601f8301126200032e57600080fd5b815160206001600160401b03808311156200034d576200034d620002bd565b8260051b604051601f19603f83011681018181108482111715620003755762000375620002bd565b6040529384528581018301938381019250878511156200039457600080fd5b83870191505b84821015620003be57620003ae82620002ff565b835291830191908301906200039a565b979650505050505050565b600060208284031215620003dc57600080fd5b81516001600160401b0380821115620003f457600080fd5b9083019061012082860312156200040a57600080fd5b62000414620002d3565b6200041f83620002ff565b81526200042f60208401620002ff565b60208201526200044260408401620002ff565b60408201526200045560608401620002ff565b60608201526200046860808401620002ff565b60808201526200047b60a08401620002ff565b60a08201526200048e60c08401620002ff565b60c0820152620004a160e08401620002ff565b60e08201526101008084015183811115620004bb57600080fd5b620004c9888287016200031c565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200051157634e487b7160e01b600052601160045260246000fd5b5060010190565b6127d380620005286000396000f3fe6080604052600436106101295760003560e01c8063af640d0f116100a5578063ddf0b00911610074578063e3c5fc0411610059578063e3c5fc0414610451578063ec7bbea3146104a8578063f2fde38b146104c357600080fd5b8063ddf0b00914610404578063e200c8571461043157600080fd5b8063af640d0f14610272578063b3aa39b614610296578063d63a8e111461030d578063d8de65871461034d57600080fd5b8063715018a6116100fc578063982d64d4116100e1578063982d64d41461021f578063ac766c4d14610232578063acb9671a1461025257600080fd5b8063715018a6146101d55780638da5cb5b146101ea57600080fd5b80630f7921ed1461012e57806319e3e5921461016b578063212049481461018d5780632df310b4146101ba575b600080fd5b34801561013a57600080fd5b5061014e61014936600461181c565b6104e3565b604051610162989796959493929190611b76565b60405180910390f35b34801561017757600080fd5b5061018b61018636600461181c565b610a05565b005b34801561019957600080fd5b506101ad6101a836600461181c565b610a8c565b6040516101629190611bcc565b3480156101c657600080fd5b5061018b6101863660046122cb565b3480156101e157600080fd5b5061018b610af1565b3480156101f657600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610162565b61018b61022d36600461237c565b610b05565b34801561023e57600080fd5b5061018b61024d36600461239e565b610b85565b34801561025e57600080fd5b5061018b61026d3660046123e5565b610bba565b34801561027e57600080fd5b5061028860025481565b604051908152602001610162565b3480156102a257600080fd5b506102b66102b136600461181c565b610cc2565b60408051845173ffffffffffffffffffffffffffffffffffffffff908116825260209586015186830152845181169282019290925292840151606084015281511660808301529091015160a082015260c001610162565b34801561031957600080fd5b5061033d6103283660046124df565b600d6020526000908152604090205460ff1681565b6040519015158152602001610162565b34801561035957600080fd5b50600354600454600554600654600754600854600954600a546103a59773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e082015261010001610162565b34801561041057600080fd5b5061042461041f36600461181c565b610d9e565b6040516101629190612543565b34801561043d57600080fd5b506101ad61044c36600461181c565b611375565b34801561045d57600080fd5b5061049361046c36600461181c565b6000908152600c602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610162565b3480156104b457600080fd5b5061018b61022d36600461237c565b3480156104cf57600080fd5b5061018b6104de3660046124df565b6113d8565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546105179061260b565b80601f01602080910402602001604051908101604052809291908181526020018280546105439061260b565b80156105905780601f1061056557610100808354040283529160200191610590565b820191906000526020600020905b81548152906001019060200180831161057357829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561061e57602002820191906000526020600020905b81548152602001906001019080831161060a575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561067657602002820191906000526020600020905b815481526020019060010190808311610662575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561071357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106e8575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561078257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610757575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156107f157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107c6575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561088b5760008481526020908190208301805460408051828502810185019091528181529283018282801561087757602002820191906000526020600020905b815481526020019060010190808311610863575b50505050508152602001906001019061081f565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109245760008481526020908190208301805460408051828502810185019091528181529283018282801561091057602002820191906000526020600020905b8154815260200190600101908083116108fc575b5050505050815260200190600101906108b8565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156109ab57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561098957610989611990565b81526020600192830181810494850194909303909202910180841161096a5790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b610a0d611491565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff1690610a3a908390369061265e565b600060405180830381855af49150503d8060008114610a75576040519150601f19603f3d011682016040523d82523d6000602084013e610a7a565b606091505b5050905080610a8857600080fd5b5050565b6000818152600c6020908152604091829020600401805483518184028101840190945280845260609392830182828015610ae557602002820191906000526020600020905b815481526020019060010190808311610ad1575b50505050509050919050565b610af9611491565b610b036000611512565b565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b32908390369061265e565b600060405180830381855af49150503d8060008114610b6d576040519150601f19603f3d011682016040523d82523d6000602084013e610b72565b606091505b5050905080610b8057600080fd5b505050565b610b8d611491565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b32908390369061265e565b610bc2611491565b8051600380547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a8054909316941693909317905561010083015180518493610cad92600b9291019061167d565b50905050610cbf816101000151611587565b50565b6040805180820190915260008082526020820152604080518082019091526000808252602082015260408051808201909152600080825260208201526006546040517fb3aa39b60000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff9091169063b3aa39b69060240160c060405180830381865afa158015610d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9191906126c9565b9250925092509193909250565b610da6611707565b6000828152600c6020526040908190208151610240810190925280548290610120820190839082908290610dd99061260b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e059061260b565b8015610e525780601f10610e2757610100808354040283529160200191610e52565b820191906000526020600020905b815481529060010190602001808311610e3557829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610ee057602002820191906000526020600020905b815481526020019060010190808311610ecc575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610f3857602002820191906000526020600020905b815481526020019060010190808311610f24575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610fd557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610faa575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561104457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611019575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156110b357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611088575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561114d5760008481526020908190208301805460408051828502810185019091528181529283018282801561113957602002820191906000526020600020905b815481526020019060010190808311611125575b5050505050815260200190600101906110e1565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156111e6576000848152602090819020830180546040805182850281018501909152818152928301828280156111d257602002820191906000526020600020905b8154815260200190600101908083116111be575b50505050508152602001906001019061117a565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561126d57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561124b5761124b611990565b81526020600192830181810494850194909303909202910180841161122c5790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e090940193919290919083018282801561135557602002820191906000526020600020906000905b82829054906101000a900460ff16600781111561133357611333611990565b8152602060019283018181049485019490930390920291018084116113145790505b50505091835250506013919091015460ff16151560209091015292915050565b6000818152600c6020908152604091829020600301805483518184028101840190945280845260609392830182828015610ae55760200282019190600052602060002090815481526020019060010190808311610ad15750505050509050919050565b6113e0611491565b73ffffffffffffffffffffffffffffffffffffffff8116611488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610cbf81611512565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161147f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015610a8857600d60008383815181106115a9576115a961270f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d60008484815181106116105761161061270f565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556116768161273e565b905061158a565b8280548282559060005260206000209081019282156116f7579160200282015b828111156116f757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061169d565b50611703929150611759565b5090565b60405180610120016040528061171b61176e565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b80821115611703576000815560010161175a565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016118176040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561182e57600080fd5b5035919050565b6000815180845260005b8181101561185b5760208185018101518683018201520161183f565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156118c9578151875295820195908201906001016118ad565b509495945050505050565b600081518084526020808501945080840160005b838110156118c957815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016118e8565b600082825180855260208086019550808260051b84010181860160005b84811015611983577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018952611971838351611899565b98840198925090830190600101611937565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526119d460c08501826118d4565b9050602080840151858303828701526119ed83826118d4565b92505060408401518583036040870152611a0783826118d4565b92505060608401518583036060870152611a21838261191a565b92505060808401518583036080870152611a3b838261191a565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611a8e57845160048110611a7857611a78611990565b8252938301936001929092019190830190611a5e565b509695505050505050565b60006101208251818552611aaf82860182611835565b9150506020830151611ad9602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611b01604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152611b198282611899565b91505060808301518482036080860152611b338282611899565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611b6c83826119bf565b9695505050505050565b6000610100808352611b8a8184018c611a99565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020808252825182820181905260009190848201906040850190845b81811015611c0457835183529284019291840191600101611be8565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611c6257611c62611c10565b60405290565b604051610120810167ffffffffffffffff81118282101715611c6257611c62611c10565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611cd357611cd3611c10565b604052919050565b600067ffffffffffffffff821115611cf557611cf5611c10565b5060051b60200190565b600082601f830112611d1057600080fd5b813567ffffffffffffffff811115611d2a57611d2a611c10565b611d5b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611c8c565b818152846020838601011115611d7057600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610cbf57600080fd5b8035611dba81611d8d565b919050565b600082601f830112611dd057600080fd5b81356020611de5611de083611cdb565b611c8c565b82815260059290921b84018101918181019086841115611e0457600080fd5b8286015b84811015611a8e5780358352918301918301611e08565b600082601f830112611e3057600080fd5b81356020611e40611de083611cdb565b82815260059290921b84018101918181019086841115611e5f57600080fd5b8286015b84811015611a8e578035611e7681611d8d565b8352918301918301611e63565b600082601f830112611e9457600080fd5b81356020611ea4611de083611cdb565b82815260059290921b84018101918181019086841115611ec357600080fd5b8286015b84811015611a8e57803567ffffffffffffffff811115611ee75760008081fd5b611ef58986838b0101611dbf565b845250918301918301611ec7565b600082601f830112611f1457600080fd5b81356020611f24611de083611cdb565b82815260059290921b84018101918181019086841115611f4357600080fd5b8286015b84811015611a8e57803560048110611f5f5760008081fd5b8352918301918301611f47565b600060c08284031215611f7e57600080fd5b611f86611c3f565b9050813567ffffffffffffffff80821115611fa057600080fd5b611fac85838601611e1f565b83526020840135915080821115611fc257600080fd5b611fce85838601611e1f565b60208401526040840135915080821115611fe757600080fd5b611ff385838601611e1f565b6040840152606084013591508082111561200c57600080fd5b61201885838601611e83565b6060840152608084013591508082111561203157600080fd5b61203d85838601611e83565b608084015260a084013591508082111561205657600080fd5b5061206384828501611f03565b60a08301525092915050565b6000610120828403121561208257600080fd5b61208a611c68565b9050813567ffffffffffffffff808211156120a457600080fd5b6120b085838601611cff565b83526120be60208501611daf565b60208401526120cf60408501611daf565b604084015260608401359150808211156120e857600080fd5b6120f485838601611dbf565b6060840152608084013591508082111561210d57600080fd5b61211985838601611dbf565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561215257600080fd5b61215e86828701611f6c565b8385015250505092915050565b803563ffffffff81168114611dba57600080fd5b600082601f83011261219057600080fd5b813560206121a0611de083611cdb565b82815260059290921b840181019181810190868411156121bf57600080fd5b8286015b84811015611a8e578035600881106121db5760008081fd5b83529183019183016121c3565b80358015158114611dba57600080fd5b6000610120828403121561220b57600080fd5b612213611c68565b9050813567ffffffffffffffff8082111561222d57600080fd5b6122398583860161206f565b83526020840135602084015260408401356040840152606084013560608401526122656080850161216b565b608084015261227660a0850161216b565b60a084015261228760c0850161216b565b60c084015260e08401359150808211156122a057600080fd5b506122ad8482850161217f565b60e0830152506101006122c18184016121e8565b9082015292915050565b600060208083850312156122de57600080fd5b823567ffffffffffffffff808211156122f657600080fd5b818501915085601f83011261230a57600080fd5b8135612318611de082611cdb565b81815260059190911b8301840190848101908883111561233757600080fd5b8585015b8381101561236f578035858111156123535760008081fd5b6123618b89838a01016121f8565b84525091860191860161233b565b5098975050505050505050565b6000806040838503121561238f57600080fd5b50508035926020909101359150565b600080604083850312156123b157600080fd5b82359150602083013567ffffffffffffffff8111156123cf57600080fd5b6123db858286016121f8565b9150509250929050565b6000602082840312156123f757600080fd5b813567ffffffffffffffff8082111561240f57600080fd5b90830190610120828603121561242457600080fd5b61242c611c68565b61243583611daf565b815261244360208401611daf565b602082015261245460408401611daf565b604082015261246560608401611daf565b606082015261247660808401611daf565b608082015261248760a08401611daf565b60a082015261249860c08401611daf565b60c08201526124a960e08401611daf565b60e082015261010080840135838111156124c257600080fd5b6124ce88828701611e1f565b918301919091525095945050505050565b6000602082840312156124f157600080fd5b81356124fc81611d8d565b9392505050565b600081518084526020808501945080840160005b838110156118c95781516008811061253157612531611990565b87529582019590820190600101612517565b6020815260008251610120806020850152612562610140850183611a99565b9150602085015160408501526040850151606085015260608501516080850152608085015161259960a086018263ffffffff169052565b5060a085015163ffffffff811660c08601525060c085015163ffffffff811660e08601525060e08501516101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086850301818701526125f98483612503565b96015115159190940152509192915050565b600181811c9082168061261f57607f821691505b602082108103612658577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b60006040828403121561268057600080fd5b6040516040810181811067ffffffffffffffff821117156126a3576126a3611c10565b806040525080915082516126b681611d8d565b8152602092830151920191909152919050565b600080600060c084860312156126de57600080fd5b6126e8858561266e565b92506126f7856040860161266e565b9150612706856080860161266e565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612796577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e63a5a8f1df498b5e9c966c941114861a425e58f9333720fc75568eaccf11e1964736f6c63430008110033";

type QueuesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Queues__factory extends ContractFactory {
  constructor(...args: QueuesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Queues";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Queues> {
    return super.deploy(input, overrides || {}) as Promise<Queues>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Queues {
    return super.attach(address) as Queues;
  }
  connect(signer: Signer): Queues__factory {
    return super.connect(signer) as Queues__factory;
  }
  static readonly contractName: "Queues";
  public readonly contractName: "Queues";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesInterface {
    return new utils.Interface(_abi) as QueuesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Queues {
    return new Contract(address, _abi, signerOrProvider) as Queues;
  }
}
