/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Queues, QueuesInterface, QueuesConstructor } from "../Queues";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "raceUploader",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "createdQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b5060405162002a1038038062002a10833981016040819052620000399162000703565b80516101408201516001600055829190620000543362000299565b80518251146200006357600080fd5b60005b82518110156200017c5760005b82828151811062000088576200008862000850565b602002602001015151811015620001685760026000858481518110620000b257620000b262000850565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ef57620000ef62000850565b602002602001015182815181106200010b576200010b62000850565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055620001608162000866565b905062000073565b50620001748162000866565b905062000066565b5050815180518392506004916200019991839160200190620002eb565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805483169184169190911790556101008501516008850180548316918416919091179055610120850151600985018054909216921691909117905561014083015180516200028d92600a850192019062000355565b5090505050506200088e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805482825590600052602060002090810192821562000343579160200282015b828111156200034357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200030c565b5062000351929150620003b5565b5090565b828054828255906000526020600020908101928215620003a7579160200282015b82811115620003a7578251805162000396918491602090910190620003cc565b509160200191906001019062000376565b50620003519291506200047a565b5b80821115620003515760008155600101620003b6565b82805482825590600052602060002090600701600890048101928215620003435791602002820160005b838211156200043957835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003f6565b80156200046b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000439565b505062000351929150620003b5565b80821115620003515760006200049182826200049b565b506001016200047a565b508054600082556007016008900490600052602060002090810190620004c29190620003b5565b50565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620005015762000501620004c5565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620005325762000532620004c5565b604052919050565b60006001600160401b03821115620005565762000556620004c5565b5060051b60200190565b80516001600160a01b03811681146200057857600080fd5b919050565b600082601f8301126200058f57600080fd5b81516020620005a8620005a2836200053a565b62000507565b82815260059290921b84018101918181019086841115620005c857600080fd5b8286015b84811015620005ee57620005e08162000560565b8352918301918301620005cc565b509695505050505050565b600082601f8301126200060b57600080fd5b815160206200061e620005a2836200053a565b828152600592831b85018201928282019190878511156200063e57600080fd5b8387015b85811015620006f65780516001600160401b03811115620006635760008081fd5b8801603f81018a13620006765760008081fd5b8581015160406200068b620005a2836200053a565b82815291851b8301810191888101908d841115620006a95760008081fd5b938201935b83851015620006e457845192506001600160e01b031983168314620006d35760008081fd5b8282529389019390890190620006ae565b88525050509385019350840162000642565b5090979650505050505050565b6000602082840312156200071657600080fd5b81516001600160401b03808211156200072e57600080fd5b9083019061016082860312156200074457600080fd5b6200074e620004db565b8251828111156200075e57600080fd5b6200076c878286016200057d565b8252506200077d6020840162000560565b6020820152620007906040840162000560565b6040820152620007a36060840162000560565b6060820152620007b66080840162000560565b6080820152620007c960a0840162000560565b60a0820152620007dc60c0840162000560565b60c0820152620007ef60e0840162000560565b60e08201526101006200080481850162000560565b908201526101206200081884820162000560565b9082015261014083810151838111156200083157600080fd5b6200083f88828701620005f9565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200088757634e487b7160e01b600052601160045260246000fd5b5060010190565b612172806200089e6000396000f3fe6080604052600436106101295760003560e01c8063982d64d4116100a5578063ddf0b00911610074578063e3c5fc0411610059578063e3c5fc0414610470578063ec7bbea3146104c7578063f2fde38b146104e257600080fd5b8063ddf0b00914610423578063e200c8571461045057600080fd5b8063982d64d4146102b0578063af640d0f146102c3578063b3aa39b6146102e7578063d8de65871461035e57600080fd5b80635b19e294116100fc578063857b29e5116100e1578063857b29e5146102405780638da5cb5b1461026057806390c140661461029557600080fd5b80635b19e294146101da578063715018a61461022b57600080fd5b80630f7921ed1461012e57806319e3e5921461016b578063212049481461018d5780633b930d0c146101ba575b600080fd5b34801561013a57600080fd5b5061014e6101493660046114df565b610502565b604051610162989796959493929190611654565b60405180910390f35b34801561017757600080fd5b5061018b6101863660046114df565b610711565b005b34801561019957600080fd5b506101ad6101a83660046114df565b610790565b60405161016291906116aa565b3480156101c657600080fd5b5061018b6101d5366004611991565b6107f5565b3480156101e657600080fd5b506101fa6101f5366004611ac2565b610945565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610162565b34801561023757600080fd5b5061018b61098b565b34801561024c57600080fd5b5061018b61025b366004611da3565b61099f565b34801561026c57600080fd5b5060015460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610162565b3480156102a157600080fd5b5061018b610186366004611dea565b61018b6102be366004611e9b565b610a1f565b3480156102cf57600080fd5b506102d960035481565b604051908152602001610162565b3480156102f357600080fd5b506103076103023660046114df565b610a4c565b60408051845173ffffffffffffffffffffffffffffffffffffffff908116825260209586015186830152845181169282019290925292840151606084015281511660808301529091015160a082015260c001610162565b34801561036a57600080fd5b50600554600654600754600854600954600a54600b54600c54600d546103bc9873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610162565b34801561042f57600080fd5b5061044361043e3660046114df565b610b28565b6040516101629190611ebd565b34801561045c57600080fd5b506101ad61046b3660046114df565b610db7565b34801561047c57600080fd5b506104b261048b3660046114df565b6000908152600f60205260409020600c015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610162565b3480156104d357600080fd5b5061018b6102be366004611e9b565b3480156104ee57600080fd5b5061018b6104fd366004611f8d565b610e1a565b600f602052806000526040600020600091509050806000016040518061010001604052908160008201805461053690611faa565b80601f016020809104026020016040519081016040528092919081815260200182805461056290611faa565b80156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561063d57602002820191906000526020600020905b815481526020019060010190808311610629575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561069557602002820191906000526020600020905b815481526020019060010190808311610681575b505050918352505060058201546020820152600682015460408201526007909101546060909101526009820154600a830154600b840154600c909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff169061073e9083903690611ffd565b600060405180830381855af49150503d8060008114610779576040519150601f19603f3d011682016040523d82523d6000602084013e61077e565b606091505b505090508061078c57600080fd5b5050565b6000818152600f60209081526040918290206004018054835181840281018401909452808452606093928301828280156107e957602002820191906000526020600020905b8154815260200190600101908083116107d5575b50505050509050919050565b6107fd610ed3565b80518051829160049161081791839160209091019061122c565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805483169184169190911790556101208501516009850180549092169216919091179055610140830151805161092e92600a85019201906112b6565b505081516101408301516109429250610f54565b50565b6002602052816000526040600020818154811061096157600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b610993610ed3565b61099d60006111b5565b565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906109cc9083903690611ffd565b600060405180830381855af49150503d8060008114610a07576040519150601f19603f3d011682016040523d82523d6000602084013e610a0c565b606091505b5050905080610a1a57600080fd5b505050565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16906109cc9083903690611ffd565b6040805180820190915260008082526020820152604080518082019091526000808252602082015260408051808201909152600080825260208201526008546040517fb3aa39b60000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff9091169063b3aa39b69060240160c060405180830381865afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190612068565b9250925092509193909250565b610b3061130f565b6000828152600f6020526040908190208151610220810190925280548290610120820190839082908290610b6390611faa565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8f90611faa565b8015610bdc5780601f10610bb157610100808354040283529160200191610bdc565b820191906000526020600020905b815481529060010190602001808311610bbf57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610c6a57602002820191906000526020600020905b815481526020019060010190808311610c56575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610cc257602002820191906000526020600020905b815481526020019060010190808311610cae575b505050505081526020016005820154815260200160068201548152602001600782015481525050815260200160088201805480602002602001604051908101604052809291908181526020018280548015610d3c57602002820191906000526020600020905b815481526020019060010190808311610d28575b505050918352505060098201546020820152600a8201546040820152600b8201546060820152600c9091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600f60209081526040918290206003018054835181840281018401909452808452606093928301828280156107e957602002820191906000526020600020908154815260200190600101908083116107d55750505050509050919050565b610e22610ed3565b73ffffffffffffffffffffffffffffffffffffffff8116610eca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610942816111b5565b60015473ffffffffffffffffffffffffffffffffffffffff16331461099d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ec1565b8051825114610f6257600080fd5b60005b8251811015610a1a5760005b828281518110610f8357610f836120ae565b6020026020010151518110156111a45760026000858481518110610fa957610fa96120ae565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106110c7576002600085848151811061100b5761100b6120ae565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061105f5761105f6120ae565b60200260200101518281518110611078576110786120ae565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055611194565b8282815181106110d9576110d96120ae565b602002602001015181815181106110f2576110f26120ae565b602002602001015160026000868581518110611110576111106120ae565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611163576111636120ae565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61119d816120dd565b9050610f71565b506111ae816120dd565b9050610f65565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280548282559060005260206000209081019282156112a6579160200282015b828111156112a657825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061124c565b506112b29291506113e1565b5090565b828054828255906000526020600020908101928215611303579160200282015b8281111561130357825180516112f39184916020909101906113f6565b50916020019190600101906112d6565b506112b292915061149d565b60405180610120016040528061138f60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b5b808211156112b257600081556001016113e2565b828054828255906000526020600020906007016008900481019282156112a65791602002820160005b8382111561146057835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261141f565b80156114905782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611460565b50506112b29291506113e1565b808211156112b25760006114b182826114ba565b5060010161149d565b50805460008255600701600890049060005260206000209081019061094291906113e1565b6000602082840312156114f157600080fd5b5035919050565b600081518084526020808501945080840160005b838110156115285781518752958201959082019060010161150c565b509495945050505050565b6000610100825181855280518083870152600092505b8083101561156b57602083830101516101208488010152602083019250611549565b610120925060008382880101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116860191505060208401516115ca602087018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408401516115f2604087018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608401518286830301606087015261160e838301826114f8565b925050506080830151848203608086015261162982826114f8565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b60006101008083526116688184018c611533565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020815260006116bd60208301846114f8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715611717576117176116c4565b60405290565b604051610100810167ffffffffffffffff81118282101715611717576117176116c4565b604051610120810167ffffffffffffffff81118282101715611717576117176116c4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117ac576117ac6116c4565b604052919050565b600067ffffffffffffffff8211156117ce576117ce6116c4565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461094257600080fd5b8035611805816117d8565b919050565b600082601f83011261181b57600080fd5b8135602061183061182b836117b4565b611765565b82815260059290921b8401810191818101908684111561184f57600080fd5b8286015b84811015611873578035611866816117d8565b8352918301918301611853565b509695505050505050565b600082601f83011261188f57600080fd5b8135602061189f61182b836117b4565b828152600592831b85018201928282019190878511156118be57600080fd5b8387015b8581101561198457803567ffffffffffffffff8111156118e25760008081fd5b8801603f81018a136118f45760008081fd5b85810135604061190661182b836117b4565b82815291851b8301810191888101908d8411156119235760008081fd5b938201935b8385101561197357843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146119635760008081fd5b8282529389019390890190611928565b8852505050938501935084016118c2565b5090979650505050505050565b6000602082840312156119a357600080fd5b813567ffffffffffffffff808211156119bb57600080fd5b9083019061016082860312156119d057600080fd5b6119d86116f3565b8235828111156119e757600080fd5b6119f38782860161180a565b825250611a02602084016117fa565b6020820152611a13604084016117fa565b6040820152611a24606084016117fa565b6060820152611a35608084016117fa565b6080820152611a4660a084016117fa565b60a0820152611a5760c084016117fa565b60c0820152611a6860e084016117fa565b60e0820152610100611a7b8185016117fa565b90820152610120611a8d8482016117fa565b908201526101408381013583811115611aa557600080fd5b611ab18882870161187e565b918301919091525095945050505050565b60008060408385031215611ad557600080fd5b8235611ae0816117d8565b946020939093013593505050565b600082601f830112611aff57600080fd5b813567ffffffffffffffff811115611b1957611b196116c4565b611b4a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611765565b818152846020838601011115611b5f57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611b8d57600080fd5b81356020611b9d61182b836117b4565b82815260059290921b84018101918181019086841115611bbc57600080fd5b8286015b848110156118735780358352918301918301611bc0565b60006101008284031215611bea57600080fd5b611bf261171d565b9050813567ffffffffffffffff80821115611c0c57600080fd5b611c1885838601611aee565b8352611c26602085016117fa565b6020840152611c37604085016117fa565b60408401526060840135915080821115611c5057600080fd5b611c5c85838601611b7c565b60608401526080840135915080821115611c7557600080fd5b50611c8284828501611b7c565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b803563ffffffff8116811461180557600080fd5b8035801515811461180557600080fd5b60006101208284031215611ce357600080fd5b611ceb611741565b9050813567ffffffffffffffff80821115611d0557600080fd5b611d1185838601611bd7565b83526020840135915080821115611d2757600080fd5b50611d3484828501611b7c565b602083015250604082013560408201526060820135606082015260808201356080820152611d6460a08301611cac565b60a0820152611d7560c08301611cac565b60c0820152611d8660e08301611cac565b60e0820152610100611d99818401611cc0565b9082015292915050565b60008060408385031215611db657600080fd5b82359150602083013567ffffffffffffffff811115611dd457600080fd5b611de085828601611cd0565b9150509250929050565b60006020808385031215611dfd57600080fd5b823567ffffffffffffffff80821115611e1557600080fd5b818501915085601f830112611e2957600080fd5b8135611e3761182b826117b4565b81815260059190911b83018401908481019088831115611e5657600080fd5b8585015b83811015611e8e57803585811115611e725760008081fd5b611e808b89838a0101611cd0565b845250918601918601611e5a565b5098975050505050505050565b60008060408385031215611eae57600080fd5b50508035926020909101359150565b6020815260008251610120806020850152611edc610140850183611533565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016040860152611f1783826114f8565b9250506040850151606085015260608501516080850152608085015160a085015260a0850151611f4f60c086018263ffffffff169052565b5060c085015163ffffffff811660e08601525060e0850151610100611f7b8187018363ffffffff169052565b90950151151593019290925250919050565b600060208284031215611f9f57600080fd5b81356116bd816117d8565b600181811c90821680611fbe57607f821691505b602082108103611ff7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b60006040828403121561201f57600080fd5b6040516040810181811067ffffffffffffffff82111715612042576120426116c4565b80604052508091508251612055816117d8565b8152602092830151920191909152919050565b600080600060c0848603121561207d57600080fd5b612087858561200d565b9250612096856040860161200d565b91506120a5856080860161200d565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612135577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122004483c307fa40def8a577ff299ff9fbfbecae0892c04493416818707ea9befdd64736f6c63430008110033";

type QueuesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Queues__factory extends ContractFactory {
  constructor(...args: QueuesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Queues";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Queues> {
    return super.deploy(input, overrides || {}) as Promise<Queues>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Queues {
    return super.attach(address) as Queues;
  }
  connect(signer: Signer): Queues__factory {
    return super.connect(signer) as Queues__factory;
  }
  static readonly contractName: "Queues";
  public readonly contractName: "Queues";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesInterface {
    return new utils.Interface(_abi) as QueuesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Queues {
    return new Contract(address, _abi, signerOrProvider) as Queues;
  }
}
