/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Params, ParamsInterface, GeneticsConstructor } from "../Params";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32[72]",
            name: "male",
            type: "uint32[72]",
          },
          {
            internalType: "uint32[72]",
            name: "female",
            type: "uint32[72]",
          },
          {
            internalType: "uint32",
            name: "maleGenesProbability",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "femaleGenesProbability",
            type: "uint32",
          },
          {
            internalType: "uint32[13]",
            name: "geneticSequenceSignature",
            type: "uint32[13]",
          },
          {
            internalType: "uint32[72]",
            name: "maxValues",
            type: "uint32[72]",
          },
        ],
        internalType: "struct GeneticsConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "uint32",
        name: "maleGenesProbability",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "femaleGenesProbability",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32[72]",
            name: "male",
            type: "uint32[72]",
          },
          {
            internalType: "uint32[72]",
            name: "female",
            type: "uint32[72]",
          },
          {
            internalType: "uint32",
            name: "maleGenesProbability",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "femaleGenesProbability",
            type: "uint32",
          },
          {
            internalType: "uint32[13]",
            name: "geneticSequenceSignature",
            type: "uint32[13]",
          },
          {
            internalType: "uint32[72]",
            name: "maxValues",
            type: "uint32[72]",
          },
        ],
        internalType: "struct GeneticsConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200114e3803806200114e83398181016040528101906200003791906200068c565b620000576200004b6200011a60201b60201c565b6200012260201b60201c565b80600160008201518160000190604862000073929190620001e6565b506020820151816009019060486200008d929190620001e6565b5060408201518160120160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160120160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160130190600d620000f592919062000290565b5060a0820151816015019060486200010f929190620001e6565b5090505050620006bf565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8260486007016008900481019282156200027d5791602002820160005b838211156200024957835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000203565b80156200027b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000249565b505b5090506200028c91906200033a565b5090565b82600d600701600890048101928215620003275791602002820160005b83821115620002f357835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302620002ad565b8015620003255782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002f3565b505b5090506200033691906200033a565b5090565b5b80821115620003555760008160009055506001016200033b565b5090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003b8826200036d565b810181811067ffffffffffffffff82111715620003da57620003d96200037e565b5b80604052505050565b6000620003ef62000359565b9050620003fd8282620003ad565b919050565b600080fd5b600067ffffffffffffffff8211156200042557620004246200037e565b5b602082029050919050565b600080fd5b600063ffffffff82169050919050565b620004508162000435565b81146200045c57600080fd5b50565b600081519050620004708162000445565b92915050565b60006200048d620004878462000407565b620003e3565b90508060208402830185811115620004aa57620004a962000430565b5b835b81811015620004d75780620004c288826200045f565b845260208401935050602081019050620004ac565b5050509392505050565b600082601f830112620004f957620004f862000402565b5b60486200050884828562000476565b91505092915050565b600067ffffffffffffffff8211156200052f576200052e6200037e565b5b602082029050919050565b6000620005516200054b8462000511565b620003e3565b905080602084028301858111156200056e576200056d62000430565b5b835b818110156200059b57806200058688826200045f565b84526020840193505060208101905062000570565b5050509392505050565b600082601f830112620005bd57620005bc62000402565b5b600d620005cc8482856200053a565b91505092915050565b6000611ce08284031215620005ef57620005ee62000368565b5b620005fb60c0620003e3565b905060006200060d84828501620004e1565b6000830152506109006200062484828501620004e1565b6020830152506112006200063b848285016200045f565b60408301525061122062000652848285016200045f565b6060830152506112406200066984828501620005a5565b6080830152506113e06200068084828501620004e1565b60a08301525092915050565b6000611ce08284031215620006a657620006a562000363565b5b6000620006b684828501620005d5565b91505092915050565b610a7f80620006cf6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a94725b014610084578063d8de6587146100a0578063f2fde38b146100bf575b600080fd5b6100646100db565b005b61006e6100ef565b60405161007b9190610572565b60405180910390f35b61009e6004803603810190610099919061087b565b610118565b005b6100a86101cf565b6040516100b69291906108b8565b60405180910390f35b6100d960048036038101906100d4919061090d565b610201565b005b6100e3610284565b6100ed6000610302565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8060016000820151816000019060486101329291906103ce565b5060208201518160090190604861014a9291906103ce565b5060408201518160120160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160120160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160130190600d6101b0929190610471565b5060a0820151816015019060486101c89291906103ce565b5090505050565b60018060120160009054906101000a900463ffffffff16908060120160049054906101000a900463ffffffff16905082565b610209610284565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f906109bd565b60405180910390fd5b61028181610302565b50565b61028c6103c6565b73ffffffffffffffffffffffffffffffffffffffff166102aa6100ef565b73ffffffffffffffffffffffffffffffffffffffff1614610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f790610a29565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8260486007016008900481019282156104605791602002820160005b8382111561042e57835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026103ea565b801561045e5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261042e565b505b50905061046d9190610514565b5090565b82600d6007016008900481019282156105035791602002820160005b838211156104d157835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261048d565b80156105015782816101000a81549063ffffffff02191690556004016020816003010492830192600103026104d1565b505b5090506105109190610514565b5090565b5b8082111561052d576000816000905550600101610515565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061055c82610531565b9050919050565b61056c81610551565b82525050565b60006020820190506105876000830184610563565b92915050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105ea826105a1565b810181811067ffffffffffffffff82111715610609576106086105b2565b5b80604052505050565b600061061c61058d565b905061062882826105e1565b919050565b600080fd5b600067ffffffffffffffff82111561064d5761064c6105b2565b5b602082029050919050565b600080fd5b600063ffffffff82169050919050565b6106768161065d565b811461068157600080fd5b50565b6000813590506106938161066d565b92915050565b60006106ac6106a784610632565b610612565b905080602084028301858111156106c6576106c5610658565b5b835b818110156106ef57806106db8882610684565b8452602084019350506020810190506106c8565b5050509392505050565b600082601f83011261070e5761070d61062d565b5b604861071b848285610699565b91505092915050565b600067ffffffffffffffff82111561073f5761073e6105b2565b5b602082029050919050565b600061075d61075884610724565b610612565b9050806020840283018581111561077757610776610658565b5b835b818110156107a0578061078c8882610684565b845260208401935050602081019050610779565b5050509392505050565b600082601f8301126107bf576107be61062d565b5b600d6107cc84828561074a565b91505092915050565b6000611ce082840312156107ec576107eb61059c565b5b6107f660c0610612565b90506000610806848285016106f9565b60008301525061090061081b848285016106f9565b60208301525061120061083084828501610684565b60408301525061122061084584828501610684565b60608301525061124061085a848285016107aa565b6080830152506113e061086f848285016106f9565b60a08301525092915050565b6000611ce0828403121561089257610891610597565b5b60006108a0848285016107d5565b91505092915050565b6108b28161065d565b82525050565b60006040820190506108cd60008301856108a9565b6108da60208301846108a9565b9392505050565b6108ea81610551565b81146108f557600080fd5b50565b600081359050610907816108e1565b92915050565b60006020828403121561092357610922610597565b5b6000610931848285016108f8565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109a760268361093a565b91506109b28261094b565b604082019050919050565b600060208201905081810360008301526109d68161099a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a1360208361093a565b9150610a1e826109dd565b602082019050919050565b60006020820190508181036000830152610a4281610a06565b905091905056fea26469706673582212203828ad549c3320de620f229a21463c5f48db0025fb8eb04e341f153587230cae64736f6c63430008110033";

type ParamsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParamsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Params__factory extends ContractFactory {
  constructor(...args: ParamsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Params";
  }

  deploy(
    input: GeneticsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Params> {
    return super.deploy(input, overrides || {}) as Promise<Params>;
  }
  getDeployTransaction(
    input: GeneticsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Params {
    return super.attach(address) as Params;
  }
  connect(signer: Signer): Params__factory {
    return super.connect(signer) as Params__factory;
  }
  static readonly contractName: "Params";
  public readonly contractName: "Params";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParamsInterface {
    return new utils.Interface(_abi) as ParamsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Params {
    return new Contract(address, _abi, signerOrProvider) as Params;
  }
}
