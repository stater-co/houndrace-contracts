/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lootboxes, LootboxesInterface, Constructor } from "../Lootboxes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "priceCurrency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "rewardContracts",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "rewardTypes",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "generated",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Box.Struct",
        name: "box",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "LootboxOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idFinish",
        type: "uint256",
      },
    ],
    name: "NewLootboxes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canBeOpened",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "priceCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setOpenStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b4838038062002b48833981016040819052620000349162000237565b60405180604001604052806011815260200170090deeadcc8a4c2c6ca4098dedee8c4def607b1b815250604051806040016040528060048152602001632429262160e11b815250620000956200008f6200014160201b60201c565b62000145565b6001620000a38382620003f4565b506002620000b28282620003f4565b505081518291506009908190620000ca9082620003f4565b5060208201516001820180546001600160a01b039283166001600160a01b0319918216179091556040840151600284018054918416919092161790556060830151600390920180546080909401511515600160a01b026001600160a81b0319909416929091169190911791909117905550620004c0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715620001d057620001d062000195565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000201576200020162000195565b604052919050565b80516001600160a01b03811681146200022157600080fd5b919050565b805180151581146200022157600080fd5b600060208083850312156200024b57600080fd5b82516001600160401b03808211156200026357600080fd5b9084019060a082870312156200027857600080fd5b62000282620001ab565b8251828111156200029257600080fd5b8301601f81018813620002a457600080fd5b805183811115620002b957620002b962000195565b620002cd601f8201601f19168701620001d6565b93508084528886828401011115620002e457600080fd5b60005b8181101562000304578281018701518582018801528601620002e7565b506000908401860152508181526200031e83850162000209565b84820152620003306040840162000209565b6040820152620003436060840162000209565b6060820152620003566080840162000226565b60808201529695505050505050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ef57600081815260208120601f850160051c81016020861015620003ca5750805b601f850160051c820191505b81811015620003eb57828155600101620003d6565b5050505b505050565b81516001600160401b0381111562000410576200041062000195565b620004288162000421845462000365565b84620003a1565b602080601f831160018114620004605760008415620004475750858301515b600019600386901b1c1916600185901b178555620003eb565b600085815260208120601f198616915b82811015620004915788860151825594840194600190910190840162000470565b5085821015620004b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61267880620004d06000396000f3fe6080604052600436106101055760003560e01c806301ffc9a71461010a57806306fdde031461013f578063081812fc14610161578063095ea7b314610199578063150b7a02146101bb578063156e29f6146101f457806323b872dd1461021457806342842e0e146102345780636352211e14610254578063690e7c091461027457806370a0823114610287578063715018a6146102b55780637c46a44b146102ca5780638da5cb5b146102ea57806395d89b41146102ff578063a22cb46514610314578063af640d0f14610334578063b88d4fde1461034a578063c87b56dd1461036a578063d8de65871461038a578063e985e9c5146103b0578063f2fde38b146103d0575b600080fd5b34801561011657600080fd5b5061012a6101253660046116ca565b6103f0565b60405190151581526020015b60405180910390f35b34801561014b57600080fd5b50610154610442565b6040516101369190611737565b34801561016d57600080fd5b5061018161017c36600461174a565b6104d4565b6040516001600160a01b039091168152602001610136565b3480156101a557600080fd5b506101b96101b436600461177f565b6104fb565b005b3480156101c757600080fd5b506101db6101d63660046117bf565b610615565b6040516001600160e01b03199091168152602001610136565b34801561020057600080fd5b506101b961020f36600461189a565b610626565b34801561022057600080fd5b506101b961022f3660046118cd565b61076d565b34801561024057600080fd5b506101b961024f3660046118cd565b61079e565b34801561026057600080fd5b5061018161026f36600461174a565b6107b9565b6101b961028236600461174a565b6107ee565b34801561029357600080fd5b506102a76102a2366004611909565b6109b3565b604051908152602001610136565b3480156102c157600080fd5b506101b9610a39565b3480156102d657600080fd5b506101b96102e5366004611934565b610a4d565b3480156102f657600080fd5b50610181610a73565b34801561030b57600080fd5b50610154610a82565b34801561032057600080fd5b506101b961032f36600461194f565b610a91565b34801561034057600080fd5b506102a760085481565b34801561035657600080fd5b506101b96103653660046117bf565b610a9c565b34801561037657600080fd5b5061015461038536600461174a565b610ad4565b34801561039657600080fd5b5061039f610bdc565b604051610136959493929190611982565b3480156103bc57600080fd5b5061012a6103cb3660046119c8565b610c9c565b3480156103dc57600080fd5b506101b96103eb366004611909565b610cca565b60006001600160e01b031982166380ac58cd60e01b148061042157506001600160e01b03198216635b5e139f60e01b145b8061043c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060018054610451906119f2565b80601f016020809104026020016040519081016040528092919081815260200182805461047d906119f2565b80156104ca5780601f1061049f576101008083540402835291602001916104ca565b820191906000526020600020905b8154815290600101906020018083116104ad57829003601f168201915b5050505050905090565b60006104df82610d43565b506000908152600560205260409020546001600160a01b031690565b6000610506826107b9565b9050806001600160a01b0316836001600160a01b0316036105785760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061059457506105948133610c9c565b6106065760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161056f565b6106108383610d68565b505050565b630a85bd0160e11b5b949350505050565b61062e610dd6565b60085460005b828110156107385761064833600854610e35565b6106e16008546009600001805461065e906119f2565b80601f016020809104026020016040519081016040528092919081815260200182805461068a906119f2565b80156106d75780601f106106ac576101008083540402835291602001916106d7565b820191906000526020600020905b8154815290600101906020018083116106ba57829003601f168201915b5050505050610f55565b600880546000908152600d602052604080822080546001600160a01b0319166001600160a01b038a16179055825482528120600401869055815461072490611a42565b9091555061073181611a42565b9050610634565b5060085460405182907fe929bb466f0257bc8400388f631be46b0a21b612148f8e8df8b8651a9c67ded690600090a350505050565b6107773382610fd9565b6107935760405162461bcd60e51b815260040161056f90611a5b565b610610838383611037565b61061083838360405180602001604052806000815250610a9c565b6000818152600360205260408120546001600160a01b03168061043c5760405162461bcd60e51b815260040161056f90611aa9565b600c54600160a01b900460ff1661080457600080fd5b3361080e826107b9565b6001600160a01b03161461082157600080fd5b604080516001808252818301909252600091602080830190803683375050506000838152600d602052604081206004015482519293509183919061086757610867611adb565b602090810291909101810191909152600b546000848152600d9092526040909120546001600160a01b039182169163c01f59c29116156108a85760006108bb565b6000848152600d60205260409020600401545b600b54600c546000878152600d60208181526040808420548151858152808401909252938b90529190526001600160a01b0393841693928316929091169087821561090757600261090a565b60035b6040518863ffffffff1660e01b815260040161092b96959493929190611b4e565b6000604051808303818588803b15801561094457600080fd5b505af1158015610958573d6000803e3d6000fd5b5050506000848152600d60205260409081902090513393508592507fdea66968d17839c462a2eac0fd30fc9ebbd1b371851ea8f95f2f5165133021b09161099e9161231c565b60405180910390a36109af826111c1565b5050565b60006001600160a01b038216610a1d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161056f565b506001600160a01b031660009081526004602052604090205490565b610a41610dd6565b610a4b6000611201565b565b610a55610dd6565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031690565b606060028054610451906119f2565b6109af338383611251565b610aa63383610fd9565b610ac25760405162461bcd60e51b815260040161056f90611a5b565b610ace8484848461131b565b50505050565b6060610adf82610d43565b60008281526007602052604081208054610af8906119f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b24906119f2565b8015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b505050505090506000610b8f60408051602081019091526000815290565b90508051600003610ba1575092915050565b815115610bd3578082604051602001610bbb9291906123d6565b60405160208183030381529060405292505050919050565b61061e8461134e565b600980548190610beb906119f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c17906119f2565b8015610c645780601f10610c3957610100808354040283529160200191610c64565b820191906000526020600020905b815481529060010190602001808311610c4757829003601f168201915b505050506001830154600284015460039094015492936001600160a01b0391821693908216925090811690600160a01b900460ff1685565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b610cd2610dd6565b6001600160a01b038116610d375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161056f565b610d4081611201565b50565b610d4c816113c2565b610d405760405162461bcd60e51b815260040161056f90611aa9565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d9d826107b9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b33610ddf610a73565b6001600160a01b031614610a4b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056f565b6001600160a01b038216610e8b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161056f565b610e94816113c2565b15610ee05760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015260640161056f565b6001600160a01b0382166000908152600460205260408120805460019290610f09908490612405565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020612623833981519152908290a45050565b610f5e826113c2565b610fc15760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161056f565b60008281526007602052604090206106108282612466565b600080610fe5836107b9565b9050806001600160a01b0316846001600160a01b0316148061100c575061100c8185610c9c565b8061061e5750836001600160a01b0316611025846104d4565b6001600160a01b031614949350505050565b826001600160a01b031661104a826107b9565b6001600160a01b0316146110ae5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161056f565b6001600160a01b0382166111105760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161056f565b61111b600082610d68565b6001600160a01b0383166000908152600460205260408120805460019290611144908490612525565b90915550506001600160a01b0382166000908152600460205260408120805460019290611172908490612405565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061262383398151915291a4505050565b6111ca816113df565b600081815260076020526040902080546111e3906119f2565b159050610d40576000818152600760205260408120610d4091611666565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036112ae5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161056f565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611326848484611037565b61133284848484611468565b610ace5760405162461bcd60e51b815260040161056f90612538565b606061135982610d43565b600061137060408051602081019091526000815290565b9050600081511161139057604051806020016040528060008152506113bb565b8061139a84611566565b6040516020016113ab9291906123d6565b6040516020818303038152906040525b9392505050565b6000908152600360205260409020546001600160a01b0316151590565b60006113ea826107b9565b90506113f7600083610d68565b6001600160a01b0381166000908152600460205260408120805460019290611420908490612525565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020612623833981519152908390a45050565b60006001600160a01b0384163b1561155e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906114ac90339089908890889060040161258a565b6020604051808303816000875af19250505080156114e7575060408051601f3d908101601f191682019092526114e4918101906125c7565b60015b611544573d808015611515576040519150601f19603f3d011682016040523d82523d6000602084013e61151a565b606091505b50805160000361153c5760405162461bcd60e51b815260040161056f90612538565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061061e565b50600161061e565b60608160000361158d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156115b757806115a181611a42565b91506115b09050600a836125fa565b9150611591565b6000816001600160401b038111156115d1576115d16117a9565b6040519080825280601f01601f1916602001820160405280156115fb576020820181803683370190505b5090505b841561061e57611610600183612525565b915061161d600a8661260e565b611628906030612405565b60f81b81838151811061163d5761163d611adb565b60200101906001600160f81b031916908160001a90535061165f600a866125fa565b94506115ff565b508054611672906119f2565b6000825580601f10611682575050565b601f016020900490600052602060002090810190610d4091905b808211156116b0576000815560010161169c565b5090565b6001600160e01b031981168114610d4057600080fd5b6000602082840312156116dc57600080fd5b81356113bb816116b4565b60005b838110156117025781810151838201526020016116ea565b50506000910152565b600081518084526117238160208601602086016116e7565b601f01601f19169290920160200192915050565b6020815260006113bb602083018461170b565b60006020828403121561175c57600080fd5b5035919050565b80356001600160a01b038116811461177a57600080fd5b919050565b6000806040838503121561179257600080fd5b61179b83611763565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156117d557600080fd5b6117de85611763565b93506117ec60208601611763565b92506040850135915060608501356001600160401b038082111561180f57600080fd5b818701915087601f83011261182357600080fd5b813581811115611835576118356117a9565b604051601f8201601f19908116603f0116810190838211818310171561185d5761185d6117a9565b816040528281528a602084870101111561187657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000606084860312156118af57600080fd5b6118b884611763565b95602085013595506040909401359392505050565b6000806000606084860312156118e257600080fd5b6118eb84611763565b92506118f960208501611763565b9150604084013590509250925092565b60006020828403121561191b57600080fd5b6113bb82611763565b8035801515811461177a57600080fd5b60006020828403121561194657600080fd5b6113bb82611924565b6000806040838503121561196257600080fd5b61196b83611763565b915061197960208401611924565b90509250929050565b60a08152600061199560a083018861170b565b6001600160a01b039687166020840152948616604083015250919093166060820152911515608090920191909152919050565b600080604083850312156119db57600080fd5b6119e483611763565b915061197960208401611763565b600181811c90821680611a0657607f821691505b602082108103611a2657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611a5457611a54611a2c565b5060010190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015611b2157815187529582019590820190600101611b05565b509495945050505050565b60048110611b4a57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090611b8290830186611af1565b8281036080840152611b948186611af1565b915050611ba460a0830184611b2c565b979650505050505050565b6000815480845260208085019450836000528060002060005b83811015611b215781546001600160a01b031687529582019560019182019101611bc8565b6000815480845260208085019450836000528060002060005b83811015611b2157815487529582019560019182019101611c06565b805480835260008281526020808220940193909190825b82601f82011015611eb957815460ff611c5488828416611b2c565b6020611c67818a01838560081c16611b2c565b6040611c7a818b01848660101c16611b2c565b6060611c8d818c01858760181c16611b2c565b6080611c9f818d018688871c16611b2c565b60a09350611cb4848d01868860281c16611b2c565b60c0611cc7818e01878960301c16611b2c565b60e0611cda818f01888a60381c16611b2c565b611cec6101008f01888a881c16611b2c565b611cff6101208f01888a60481c16611b2c565b611d126101408f01888a60501c16611b2c565b611d256101608f01888a60581c16611b2c565b611d376101808f01888a871c16611b2c565b611d4a6101a08f01888a60681c16611b2c565b611d5d6101c08f01888a60701c16611b2c565b611d706101e08f01888a60781c16611b2c565b611d826102008f01888a861c16611b2c565b611d956102208f01888a60881c16611b2c565b611da86102408f01888a60901c16611b2c565b611dbb6102608f01888a60981c16611b2c565b611dcd6102808f01888a891c16611b2c565b611de06102a08f01888a60a81c16611b2c565b611df36102c08f01888a60b01c16611b2c565b611e066102e08f01888a60b81c16611b2c565b611e186103008f01888a851c16611b2c565b611e2b6103208f01888a60c81c16611b2c565b611e3e6103408f01888a60d01c16611b2c565b611e516103608f01888a60d81c16611b2c565b611e636103808f01888a841c16611b2c565b505050505050611e7c6103a08901828460e81c16611b2c565b611e8f6103c08901828460f01c16611b2c565b50611ea16103e088018260f81c611b2c565b50610400959095019460019190910190602001611c39565b90549082811015611edc57611ed18660ff8416611b2c565b602095909501946001015b82811015611eff57611ef48660ff8460081c16611b2c565b602095909501946001015b82811015611f2257611f178660ff8460101c16611b2c565b602095909501946001015b82811015611f4557611f3a8660ff8460181c16611b2c565b602095909501946001015b82811015611f6857611f5d8660ff8460201c16611b2c565b602095909501946001015b82811015611f8b57611f808660ff8460281c16611b2c565b602095909501946001015b82811015611fae57611fa38660ff8460301c16611b2c565b602095909501946001015b82811015611fd157611fc68660ff8460381c16611b2c565b602095909501946001015b82811015611ff457611fe98660ff8460401c16611b2c565b602095909501946001015b828110156120175761200c8660ff8460481c16611b2c565b602095909501946001015b8281101561203a5761202f8660ff8460501c16611b2c565b602095909501946001015b8281101561205d576120528660ff8460581c16611b2c565b602095909501946001015b82811015612080576120758660ff8460601c16611b2c565b602095909501946001015b828110156120a3576120988660ff8460681c16611b2c565b602095909501946001015b828110156120c6576120bb8660ff8460701c16611b2c565b602095909501946001015b828110156120e9576120de8660ff8460781c16611b2c565b602095909501946001015b8281101561210c576121018660ff8460801c16611b2c565b602095909501946001015b8281101561212f576121248660ff8460881c16611b2c565b602095909501946001015b82811015612152576121478660ff8460901c16611b2c565b602095909501946001015b828110156121755761216a8660ff8460981c16611b2c565b602095909501946001015b828110156121985761218d8660ff8460a01c16611b2c565b602095909501946001015b828110156121bb576121b08660ff8460a81c16611b2c565b602095909501946001015b828110156121de576121d38660ff8460b01c16611b2c565b602095909501946001015b82811015612201576121f68660ff8460b81c16611b2c565b602095909501946001015b82811015612224576122198660ff8460c01c16611b2c565b602095909501946001015b828110156122475761223c8660ff8460c81c16611b2c565b602095909501946001015b8281101561226a5761225f8660ff8460d01c16611b2c565b602095909501946001015b8281101561228d576122828660ff8460d81c16611b2c565b602095909501946001015b828110156122b0576122a58660ff8460e01c16611b2c565b602095909501946001015b828110156122d3576122c88660ff8460e81c16611b2c565b602095909501946001015b828110156122f6576122eb8660ff8460f01c16611b2c565b602095909501946001015b828110156123125761230b868360f81c611b2c565b6020860195505b5093949350505050565b602081526123456020820161233884546001600160a01b031690565b6001600160a01b03169052565b60e06040820152600061235f610100830160018501611baf565b601f19808483030160608501526123798260028701611bed565b9150808483030160808501526123928260038701611bed565b9150600485015460a0850152808483030160c0850152506123b68160058601611c22565b90506123c6600685015460ff1690565b80151560e0850152509392505050565b600083516123e88184602088016116e7565b8351908301906123fc8183602088016116e7565b01949350505050565b8082018082111561043c5761043c611a2c565b601f82111561061057600081815260208120601f850160051c8101602086101561243f5750805b601f850160051c820191505b8181101561245e5782815560010161244b565b505050505050565b81516001600160401b0381111561247f5761247f6117a9565b6124938161248d84546119f2565b84612418565b602080601f8311600181146124c857600084156124b05750858301515b600019600386901b1c1916600185901b17855561245e565b600085815260208120601f198616915b828110156124f7578886015182559484019460019091019084016124d8565b50858210156125155787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561043c5761043c611a2c565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906125bd9083018461170b565b9695505050505050565b6000602082840312156125d957600080fd5b81516113bb816116b4565b634e487b7160e01b600052601260045260246000fd5b600082612609576126096125e4565b500490565b60008261261d5761261d6125e4565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220287a145ceec934dbf53759c4a8049cb76391b0e312a154702312fc3f83a0bcd964736f6c63430008100033";

type LootboxesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootboxesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lootboxes__factory extends ContractFactory {
  constructor(...args: LootboxesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lootboxes";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lootboxes> {
    return super.deploy(input, overrides || {}) as Promise<Lootboxes>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Lootboxes {
    return super.attach(address) as Lootboxes;
  }
  connect(signer: Signer): Lootboxes__factory {
    return super.connect(signer) as Lootboxes__factory;
  }
  static readonly contractName: "Lootboxes";
  public readonly contractName: "Lootboxes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootboxesInterface {
    return new utils.Interface(_abi) as LootboxesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lootboxes {
    return new Contract(address, _abi, signerOrProvider) as Lootboxes;
  }
}
