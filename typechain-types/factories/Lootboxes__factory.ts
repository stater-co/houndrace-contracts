/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lootboxes, LootboxesInterface, Constructor } from "../Lootboxes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "priceCurrency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "rewardContracts",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "rewardTypes",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "generated",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Box.Struct",
        name: "box",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "LootboxOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idFinish",
        type: "uint256",
      },
    ],
    name: "NewLootboxes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canBeOpened",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "priceCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setOpenStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d0338038062002d03833981016040819052620000349162000237565b60405180604001604052806011815260200170090deeadcc8a4c2c6ca4098dedee8c4def607b1b815250604051806040016040528060048152602001632429262160e11b815250620000956200008f6200014160201b60201c565b62000145565b6001620000a38382620003f4565b506002620000b28282620003f4565b505081518291506009908190620000ca9082620003f4565b5060208201516001820180546001600160a01b039283166001600160a01b0319918216179091556040840151600284018054918416919092161790556060830151600390920180546080909401511515600160a01b026001600160a81b0319909416929091169190911791909117905550620004c0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715620001d057620001d062000195565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000201576200020162000195565b604052919050565b80516001600160a01b03811681146200022157600080fd5b919050565b805180151581146200022157600080fd5b600060208083850312156200024b57600080fd5b82516001600160401b03808211156200026357600080fd5b9084019060a082870312156200027857600080fd5b62000282620001ab565b8251828111156200029257600080fd5b8301601f81018813620002a457600080fd5b805183811115620002b957620002b962000195565b620002cd601f8201601f19168701620001d6565b93508084528886828401011115620002e457600080fd5b60005b8181101562000304578281018701518582018801528601620002e7565b506000908401860152508181526200031e83850162000209565b84820152620003306040840162000209565b6040820152620003436060840162000209565b6060820152620003566080840162000226565b60808201529695505050505050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ef57600081815260208120601f850160051c81016020861015620003ca5750805b601f850160051c820191505b81811015620003eb57828155600101620003d6565b5050505b505050565b81516001600160401b0381111562000410576200041062000195565b620004288162000421845462000365565b84620003a1565b602080601f831160018114620004605760008415620004475750858301515b600019600386901b1c1916600185901b178555620003eb565b600085815260208120601f198616915b82811015620004915788860151825594840194600190910190840162000470565b5085821015620004b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61283380620004d06000396000f3fe6080604052600436106101105760003560e01c806301ffc9a71461011557806306fdde031461014a578063081812fc1461016c578063095ea7b3146101a4578063150b7a02146101c6578063156e29f6146101ff57806323b872dd1461021f578063310239051461023f57806342842e0e1461025f5780636352211e1461027f578063690e7c091461029f57806370a08231146102b2578063715018a6146102e05780637c46a44b146102f55780638da5cb5b1461031557806395d89b411461032a578063a22cb4651461033f578063af640d0f1461035f578063b88d4fde14610375578063c87b56dd14610395578063d8de6587146103b5578063e985e9c5146103db578063f2fde38b146103fb575b600080fd5b34801561012157600080fd5b50610135610130366004611783565b61041b565b60405190151581526020015b60405180910390f35b34801561015657600080fd5b5061015f61046d565b60405161014191906117f0565b34801561017857600080fd5b5061018c610187366004611803565b6104ff565b6040516001600160a01b039091168152602001610141565b3480156101b057600080fd5b506101c46101bf366004611838565b610526565b005b3480156101d257600080fd5b506101e66101e1366004611915565b610640565b6040516001600160e01b03199091168152602001610141565b34801561020b57600080fd5b506101c461021a366004611990565b610651565b34801561022b57600080fd5b506101c461023a3660046119c3565b610798565b34801561024b57600080fd5b506101c461025a366004611a0f565b6107c9565b34801561026b57600080fd5b506101c461027a3660046119c3565b610857565b34801561028b57600080fd5b5061018c61029a366004611803565b610872565b6101c46102ad366004611803565b6108a7565b3480156102be57600080fd5b506102d26102cd366004611ad4565b610a6c565b604051908152602001610141565b3480156102ec57600080fd5b506101c4610af2565b34801561030157600080fd5b506101c4610310366004611aef565b610b06565b34801561032157600080fd5b5061018c610b2c565b34801561033657600080fd5b5061015f610b3b565b34801561034b57600080fd5b506101c461035a366004611b0a565b610b4a565b34801561036b57600080fd5b506102d260085481565b34801561038157600080fd5b506101c4610390366004611915565b610b55565b3480156103a157600080fd5b5061015f6103b0366004611803565b610b8d565b3480156103c157600080fd5b506103ca610c95565b604051610141959493929190611b3d565b3480156103e757600080fd5b506101356103f6366004611b83565b610d55565b34801561040757600080fd5b506101c4610416366004611ad4565b610d83565b60006001600160e01b031982166380ac58cd60e01b148061044c57506001600160e01b03198216635b5e139f60e01b145b8061046757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461047c90611bad565b80601f01602080910402602001604051908101604052809291908181526020018280546104a890611bad565b80156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b5050505050905090565b600061050a82610dfc565b506000908152600560205260409020546001600160a01b031690565b600061053182610872565b9050806001600160a01b0316836001600160a01b0316036105a35760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105bf57506105bf8133610d55565b6106315760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161059a565b61063b8383610e21565b505050565b630a85bd0160e11b5b949350505050565b610659610e8f565b60085460005b828110156107635761067333600854610eee565b61070c6008546009600001805461068990611bad565b80601f01602080910402602001604051908101604052809291908181526020018280546106b590611bad565b80156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b505050505061100e565b600880546000908152600d602052604080822080546001600160a01b0319166001600160a01b038a16179055825482528120600401869055815461074f90611bfd565b9091555061075c81611bfd565b905061065f565b5060085460405182907fe929bb466f0257bc8400388f631be46b0a21b612148f8e8df8b8651a9c67ded690600090a350505050565b6107a23382611092565b6107be5760405162461bcd60e51b815260040161059a90611c16565b61063b8383836110f0565b6107d1610e8f565b8051819060099081906107e49082611cb2565b5060208201516001820180546001600160a01b039283166001600160a01b0319918216179091556040840151600284018054918416919092161790556060830151600390920180546080909401511515600160a01b026001600160a81b0319909416929091169190911791909117905550565b61063b83838360405180602001604052806000815250610b55565b6000818152600360205260408120546001600160a01b0316806104675760405162461bcd60e51b815260040161059a90611d71565b600c54600160a01b900460ff166108bd57600080fd5b336108c782610872565b6001600160a01b0316146108da57600080fd5b604080516001808252818301909252600091602080830190803683375050506000838152600d602052604081206004015482519293509183919061092057610920611da3565b602090810291909101810191909152600b546000848152600d9092526040909120546001600160a01b039182169163c01f59c2911615610961576000610974565b6000848152600d60205260409020600401545b600b54600c546000878152600d60208181526040808420548151858152808401909252938b90529190526001600160a01b039384169392831692909116908782156109c05760026109c3565b60035b6040518863ffffffff1660e01b81526004016109e496959493929190611e16565b6000604051808303818588803b1580156109fd57600080fd5b505af1158015610a11573d6000803e3d6000fd5b5050506000848152600d60205260409081902090513393508592507fdea66968d17839c462a2eac0fd30fc9ebbd1b371851ea8f95f2f5165133021b091610a57916125e4565b60405180910390a3610a688261127a565b5050565b60006001600160a01b038216610ad65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161059a565b506001600160a01b031660009081526004602052604090205490565b610afa610e8f565b610b0460006112ba565b565b610b0e610e8f565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031690565b60606002805461047c90611bad565b610a6833838361130a565b610b5f3383611092565b610b7b5760405162461bcd60e51b815260040161059a90611c16565b610b87848484846113d4565b50505050565b6060610b9882610dfc565b60008281526007602052604081208054610bb190611bad565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdd90611bad565b8015610c2a5780601f10610bff57610100808354040283529160200191610c2a565b820191906000526020600020905b815481529060010190602001808311610c0d57829003601f168201915b505050505090506000610c4860408051602081019091526000815290565b90508051600003610c5a575092915050565b815115610c8c578082604051602001610c7492919061269e565b60405160208183030381529060405292505050919050565b61064984611407565b600980548190610ca490611bad565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd090611bad565b8015610d1d5780601f10610cf257610100808354040283529160200191610d1d565b820191906000526020600020905b815481529060010190602001808311610d0057829003601f168201915b505050506001830154600284015460039094015492936001600160a01b0391821693908216925090811690600160a01b900460ff1685565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b610d8b610e8f565b6001600160a01b038116610df05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059a565b610df9816112ba565b50565b610e058161147b565b610df95760405162461bcd60e51b815260040161059a90611d71565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e5682610872565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b33610e98610b2c565b6001600160a01b031614610b045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161059a565b6001600160a01b038216610f445760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161059a565b610f4d8161147b565b15610f995760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015260640161059a565b6001600160a01b0382166000908152600460205260408120805460019290610fc29084906126cd565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392906000805160206127de833981519152908290a45050565b6110178261147b565b61107a5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161059a565b600082815260076020526040902061063b8282611cb2565b60008061109e83610872565b9050806001600160a01b0316846001600160a01b031614806110c557506110c58185610d55565b806106495750836001600160a01b03166110de846104ff565b6001600160a01b031614949350505050565b826001600160a01b031661110382610872565b6001600160a01b0316146111675760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161059a565b6001600160a01b0382166111c95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161059a565b6111d4600082610e21565b6001600160a01b03831660009081526004602052604081208054600192906111fd9084906126e0565b90915550506001600160a01b038216600090815260046020526040812080546001929061122b9084906126cd565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716916000805160206127de83398151915291a4505050565b61128381611498565b6000818152600760205260409020805461129c90611bad565b159050610df9576000818152600760205260408120610df99161171f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036113675760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161059a565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6113df8484846110f0565b6113eb84848484611521565b610b875760405162461bcd60e51b815260040161059a906126f3565b606061141282610dfc565b600061142960408051602081019091526000815290565b905060008151116114495760405180602001604052806000815250611474565b806114538461161f565b60405160200161146492919061269e565b6040516020818303038152906040525b9392505050565b6000908152600360205260409020546001600160a01b0316151590565b60006114a382610872565b90506114b0600083610e21565b6001600160a01b03811660009081526004602052604081208054600192906114d99084906126e0565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b038416906000805160206127de833981519152908390a45050565b60006001600160a01b0384163b1561161757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611565903390899088908890600401612745565b6020604051808303816000875af19250505080156115a0575060408051601f3d908101601f1916820190925261159d91810190612782565b60015b6115fd573d8080156115ce576040519150601f19603f3d011682016040523d82523d6000602084013e6115d3565b606091505b5080516000036115f55760405162461bcd60e51b815260040161059a906126f3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610649565b506001610649565b6060816000036116465750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611670578061165a81611bfd565b91506116699050600a836127b5565b915061164a565b6000816001600160401b0381111561168a5761168a611862565b6040519080825280601f01601f1916602001820160405280156116b4576020820181803683370190505b5090505b8415610649576116c96001836126e0565b91506116d6600a866127c9565b6116e19060306126cd565b60f81b8183815181106116f6576116f6611da3565b60200101906001600160f81b031916908160001a905350611718600a866127b5565b94506116b8565b50805461172b90611bad565b6000825580601f1061173b575050565b601f016020900490600052602060002090810190610df991905b808211156117695760008155600101611755565b5090565b6001600160e01b031981168114610df957600080fd5b60006020828403121561179557600080fd5b81356114748161176d565b60005b838110156117bb5781810151838201526020016117a3565b50506000910152565b600081518084526117dc8160208601602086016117a0565b601f01601f19169290920160200192915050565b60208152600061147460208301846117c4565b60006020828403121561181557600080fd5b5035919050565b80356001600160a01b038116811461183357600080fd5b919050565b6000806040838503121561184b57600080fd5b6118548361181c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561189a5761189a611862565b60405290565b60006001600160401b03808411156118ba576118ba611862565b604051601f8501601f19908116603f011681019082821181831017156118e2576118e2611862565b816040528093508581528686860111156118fb57600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561192b57600080fd5b6119348561181c565b93506119426020860161181c565b92506040850135915060608501356001600160401b0381111561196457600080fd5b8501601f8101871361197557600080fd5b611984878235602084016118a0565b91505092959194509250565b6000806000606084860312156119a557600080fd5b6119ae8461181c565b95602085013595506040909401359392505050565b6000806000606084860312156119d857600080fd5b6119e18461181c565b92506119ef6020850161181c565b9150604084013590509250925092565b8035801515811461183357600080fd5b600060208284031215611a2157600080fd5b81356001600160401b0380821115611a3857600080fd5b9083019060a08286031215611a4c57600080fd5b611a54611878565b823582811115611a6357600080fd5b83019150601f82018613611a7657600080fd5b611a85868335602085016118a0565b8152611a936020840161181c565b6020820152611aa46040840161181c565b6040820152611ab56060840161181c565b6060820152611ac6608084016119ff565b608082015295945050505050565b600060208284031215611ae657600080fd5b6114748261181c565b600060208284031215611b0157600080fd5b611474826119ff565b60008060408385031215611b1d57600080fd5b611b268361181c565b9150611b34602084016119ff565b90509250929050565b60a081526000611b5060a08301886117c4565b6001600160a01b039687166020840152948616604083015250919093166060820152911515608090920191909152919050565b60008060408385031215611b9657600080fd5b611b9f8361181c565b9150611b346020840161181c565b600181811c90821680611bc157607f821691505b602082108103611be157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611c0f57611c0f611be7565b5060010190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b601f82111561063b57600081815260208120601f850160051c81016020861015611c8b5750805b601f850160051c820191505b81811015611caa57828155600101611c97565b505050505050565b81516001600160401b03811115611ccb57611ccb611862565b611cdf81611cd98454611bad565b84611c64565b602080601f831160018114611d145760008415611cfc5750858301515b600019600386901b1c1916600185901b178555611caa565b600085815260208120601f198616915b82811015611d4357888601518255948401946001909101908401611d24565b5085821015611d615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015611de957815187529582019590820190600101611dcd565b509495945050505050565b60048110611e1257634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090611e4a90830186611db9565b8281036080840152611e5c8186611db9565b915050611e6c60a0830184611df4565b979650505050505050565b6000815480845260208085019450836000528060002060005b83811015611de95781546001600160a01b031687529582019560019182019101611e90565b6000815480845260208085019450836000528060002060005b83811015611de957815487529582019560019182019101611ece565b805480835260008281526020808220940193909190825b82601f8201101561218157815460ff611f1c88828416611df4565b6020611f2f818a01838560081c16611df4565b6040611f42818b01848660101c16611df4565b6060611f55818c01858760181c16611df4565b6080611f67818d018688871c16611df4565b60a09350611f7c848d01868860281c16611df4565b60c0611f8f818e01878960301c16611df4565b60e0611fa2818f01888a60381c16611df4565b611fb46101008f01888a881c16611df4565b611fc76101208f01888a60481c16611df4565b611fda6101408f01888a60501c16611df4565b611fed6101608f01888a60581c16611df4565b611fff6101808f01888a871c16611df4565b6120126101a08f01888a60681c16611df4565b6120256101c08f01888a60701c16611df4565b6120386101e08f01888a60781c16611df4565b61204a6102008f01888a861c16611df4565b61205d6102208f01888a60881c16611df4565b6120706102408f01888a60901c16611df4565b6120836102608f01888a60981c16611df4565b6120956102808f01888a891c16611df4565b6120a86102a08f01888a60a81c16611df4565b6120bb6102c08f01888a60b01c16611df4565b6120ce6102e08f01888a60b81c16611df4565b6120e06103008f01888a851c16611df4565b6120f36103208f01888a60c81c16611df4565b6121066103408f01888a60d01c16611df4565b6121196103608f01888a60d81c16611df4565b61212b6103808f01888a841c16611df4565b5050505050506121446103a08901828460e81c16611df4565b6121576103c08901828460f01c16611df4565b506121696103e088018260f81c611df4565b50610400959095019460019190910190602001611f01565b905490828110156121a4576121998660ff8416611df4565b602095909501946001015b828110156121c7576121bc8660ff8460081c16611df4565b602095909501946001015b828110156121ea576121df8660ff8460101c16611df4565b602095909501946001015b8281101561220d576122028660ff8460181c16611df4565b602095909501946001015b82811015612230576122258660ff8460201c16611df4565b602095909501946001015b82811015612253576122488660ff8460281c16611df4565b602095909501946001015b828110156122765761226b8660ff8460301c16611df4565b602095909501946001015b828110156122995761228e8660ff8460381c16611df4565b602095909501946001015b828110156122bc576122b18660ff8460401c16611df4565b602095909501946001015b828110156122df576122d48660ff8460481c16611df4565b602095909501946001015b82811015612302576122f78660ff8460501c16611df4565b602095909501946001015b828110156123255761231a8660ff8460581c16611df4565b602095909501946001015b828110156123485761233d8660ff8460601c16611df4565b602095909501946001015b8281101561236b576123608660ff8460681c16611df4565b602095909501946001015b8281101561238e576123838660ff8460701c16611df4565b602095909501946001015b828110156123b1576123a68660ff8460781c16611df4565b602095909501946001015b828110156123d4576123c98660ff8460801c16611df4565b602095909501946001015b828110156123f7576123ec8660ff8460881c16611df4565b602095909501946001015b8281101561241a5761240f8660ff8460901c16611df4565b602095909501946001015b8281101561243d576124328660ff8460981c16611df4565b602095909501946001015b82811015612460576124558660ff8460a01c16611df4565b602095909501946001015b82811015612483576124788660ff8460a81c16611df4565b602095909501946001015b828110156124a65761249b8660ff8460b01c16611df4565b602095909501946001015b828110156124c9576124be8660ff8460b81c16611df4565b602095909501946001015b828110156124ec576124e18660ff8460c01c16611df4565b602095909501946001015b8281101561250f576125048660ff8460c81c16611df4565b602095909501946001015b82811015612532576125278660ff8460d01c16611df4565b602095909501946001015b828110156125555761254a8660ff8460d81c16611df4565b602095909501946001015b828110156125785761256d8660ff8460e01c16611df4565b602095909501946001015b8281101561259b576125908660ff8460e81c16611df4565b602095909501946001015b828110156125be576125b38660ff8460f01c16611df4565b602095909501946001015b828110156125da576125d3868360f81c611df4565b6020860195505b5093949350505050565b6020815261260d6020820161260084546001600160a01b031690565b6001600160a01b03169052565b60e060408201526000612627610100830160018501611e77565b601f19808483030160608501526126418260028701611eb5565b91508084830301608085015261265a8260038701611eb5565b9150600485015460a0850152808483030160c08501525061267e8160058601611eea565b905061268e600685015460ff1690565b80151560e0850152509392505050565b600083516126b08184602088016117a0565b8351908301906126c48183602088016117a0565b01949350505050565b8082018082111561046757610467611be7565b8181038181111561046757610467611be7565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612778908301846117c4565b9695505050505050565b60006020828403121561279457600080fd5b81516114748161176d565b634e487b7160e01b600052601260045260246000fd5b6000826127c4576127c461279f565b500490565b6000826127d8576127d861279f565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206c9784f944f48636cd85254fb383dd7c343106dc3e56ec9dea1c8777bdb8d7f664736f6c63430008100033";

type LootboxesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootboxesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lootboxes__factory extends ContractFactory {
  constructor(...args: LootboxesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lootboxes";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lootboxes> {
    return super.deploy(input, overrides || {}) as Promise<Lootboxes>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Lootboxes {
    return super.attach(address) as Lootboxes;
  }
  connect(signer: Signer): Lootboxes__factory {
    return super.connect(signer) as Lootboxes__factory;
  }
  static readonly contractName: "Lootboxes";
  public readonly contractName: "Lootboxes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootboxesInterface {
    return new utils.Interface(_abi) as LootboxesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lootboxes {
    return new Contract(address, _abi, signerOrProvider) as Lootboxes;
  }
}
