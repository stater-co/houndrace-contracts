/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lootboxes, LootboxesInterface, Constructor } from "../Lootboxes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NewLootBox",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canBeOpened",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "hound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchasePrice",
            type: "uint256",
          },
        ],
        internalType: "struct Box.Struct[]",
        name: "boxes",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setOpenStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200256738038062002567833981016040819052620000349162000237565b60405180604001604052806011815260200170090deeadcc8a4c2c6ca4098dedee8c4def607b1b815250604051806040016040528060048152602001632429262160e11b815250620000956200008f6200014160201b60201c565b62000145565b6001620000a38382620003f4565b506002620000b28282620003f4565b505081518291506009908190620000ca9082620003f4565b5060208201516001820180546001600160a01b039283166001600160a01b0319918216179091556040840151600284018054918416919092161790556060830151600390920180546080909401511515600160a01b026001600160a81b0319909416929091169190911791909117905550620004c0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715620001d057620001d062000195565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000201576200020162000195565b604052919050565b80516001600160a01b03811681146200022157600080fd5b919050565b805180151581146200022157600080fd5b600060208083850312156200024b57600080fd5b82516001600160401b03808211156200026357600080fd5b9084019060a082870312156200027857600080fd5b62000282620001ab565b8251828111156200029257600080fd5b8301601f81018813620002a457600080fd5b805183811115620002b957620002b962000195565b620002cd601f8201601f19168701620001d6565b93508084528886828401011115620002e457600080fd5b60005b8181101562000304578281018701518582018801528601620002e7565b506000908401860152508181526200031e83850162000209565b84820152620003306040840162000209565b6040820152620003436060840162000209565b6060820152620003566080840162000226565b60808201529695505050505050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ef57600081815260208120601f850160051c81016020861015620003ca5750805b601f850160051c820191505b81811015620003eb57828155600101620003d6565b5050505b505050565b81516001600160401b0381111562000410576200041062000195565b620004288162000421845462000365565b84620003a1565b602080601f831160018114620004605760008415620004475750858301515b600019600386901b1c1916600185901b178555620003eb565b600085815260208120601f198616915b82811015620004915788860151825594840194600190910190840162000470565b5085821015620004b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61209780620004d06000396000f3fe6080604052600436106101055760003560e01c806301ffc9a71461010a57806306fdde031461013f578063081812fc14610161578063095ea7b314610199578063150b7a02146101bb57806323b872dd146101f457806342842e0e146102145780636352211e14610234578063690e7c091461025457806370a0823114610267578063715018a6146102955780637c46a44b146102aa5780638da5cb5b146102ca57806395d89b41146102df578063a22cb465146102f4578063af640d0f14610314578063b88d4fde1461032a578063c87b56dd1461034a578063d8de65871461036a578063db60fc9214610390578063e985e9c5146103b0578063f2fde38b146103d0575b600080fd5b34801561011657600080fd5b5061012a6101253660046117a7565b6103f0565b60405190151581526020015b60405180910390f35b34801561014b57600080fd5b50610154610442565b6040516101369190611814565b34801561016d57600080fd5b5061018161017c366004611827565b6104d4565b6040516001600160a01b039091168152602001610136565b3480156101a557600080fd5b506101b96101b436600461185c565b6104fb565b005b3480156101c757600080fd5b506101db6101d636600461194b565b610615565b6040516001600160e01b03199091168152602001610136565b34801561020057600080fd5b506101b961020f3660046119c6565b610626565b34801561022057600080fd5b506101b961022f3660046119c6565b610657565b34801561024057600080fd5b5061018161024f366004611827565b610672565b6101b9610262366004611827565b6106a7565b34801561027357600080fd5b50610287610282366004611a02565b610884565b604051908152602001610136565b3480156102a157600080fd5b506101b961090a565b3480156102b657600080fd5b506101b96102c5366004611a2d565b61091e565b3480156102d657600080fd5b50610181610944565b3480156102eb57600080fd5b50610154610953565b34801561030057600080fd5b506101b961030f366004611a48565b610962565b34801561032057600080fd5b5061028760085481565b34801561033657600080fd5b506101b961034536600461194b565b61096d565b34801561035657600080fd5b50610154610365366004611827565b6109a5565b34801561037657600080fd5b5061037f610aad565b604051610136959493929190611a7b565b34801561039c57600080fd5b506101b96103ab366004611ac1565b610b6d565b3480156103bc57600080fd5b5061012a6103cb366004611bf5565b610d79565b3480156103dc57600080fd5b506101b96103eb366004611a02565b610da7565b60006001600160e01b031982166380ac58cd60e01b148061042157506001600160e01b03198216635b5e139f60e01b145b8061043c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461045190611c1f565b80601f016020809104026020016040519081016040528092919081815260200182805461047d90611c1f565b80156104ca5780601f1061049f576101008083540402835291602001916104ca565b820191906000526020600020905b8154815290600101906020018083116104ad57829003601f168201915b5050505050905090565b60006104df82610e20565b506000908152600560205260409020546001600160a01b031690565b600061050682610672565b9050806001600160a01b0316836001600160a01b0316036105785760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061059457506105948133610d79565b6106065760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161056f565b6106108383610e45565b505050565b630a85bd0160e11b5b949350505050565b6106303382610eb3565b61064c5760405162461bcd60e51b815260040161056f90611c59565b610610838383610f11565b6106108383836040518060200160405280600081525061096d565b6000818152600360205260408120546001600160a01b03168061043c5760405162461bcd60e51b815260040161056f90611ca7565b600c54600160a01b900460ff166106bd57600080fd5b604080516001808252818301909252600091602080830190803683375050506000838152600d602052604081206003015482519293509183919061070357610703611cd9565b602090810291909101810191909152600b546000848152600d9092526040909120600101546001600160a01b039182169163c01f59c291161561074757600061075a565b6000848152600d60205260409020600301545b600b54600c546000878152600d60208181526040808420600101548151858152808401909252938b90529190526001600160a01b039384169392831692909116908782156107a95760026107ac565b60035b6040518863ffffffff1660e01b81526004016107cd96959493929190611d2a565b6000604051808303818588803b1580156107e657600080fd5b505af11580156107fa573d6000803e3d6000fd5b5050600a546000868152600d6020526040908190206002015490516323b872dd60e01b81526001600160a01b0390921694506323b872dd935061084592503091339190600401611da2565b600060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506108808261109b565b5050565b60006001600160a01b0382166108ee5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161056f565b506001600160a01b031660009081526004602052604090205490565b6109126110db565b61091c600061113a565b565b6109266110db565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031690565b60606002805461045190611c1f565b61088033838361118a565b6109773383610eb3565b6109935760405162461bcd60e51b815260040161056f90611c59565b61099f84848484611254565b50505050565b60606109b082610e20565b600082815260076020526040812080546109c990611c1f565b80601f01602080910402602001604051908101604052809291908181526020018280546109f590611c1f565b8015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b505050505090506000610a6060408051602081019091526000815290565b90508051600003610a72575092915050565b815115610aa4578082604051602001610a8c929190611dc6565b60405160208183030381529060405292505050919050565b61061e84611287565b600980548190610abc90611c1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae890611c1f565b8015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b505050506001830154600284015460039094015492936001600160a01b0391821693908216925090811690600160a01b900460ff1685565b610b756110db565b60005b815181101561088057600a5482516001600160a01b03909116906342842e0e9033903090869086908110610bae57610bae611cd9565b6020026020010151604001516040518463ffffffff1660e01b8152600401610bd893929190611da2565b600060405180830381600087803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b50505050610c16336008546112fb565b610caf60085460096000018054610c2c90611c1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5890611c1f565b8015610ca55780601f10610c7a57610100808354040283529160200191610ca5565b820191906000526020600020905b815481529060010190602001808311610c8857829003601f168201915b505050505061141b565b818181518110610cc157610cc1611cd9565b6020908102919091018101516008546000908152600d909252604090912081518190610ced9082611e43565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604080830151600283015560609092015160039091015560085490517f1259f6622fe1924279f68a86e3357c7eacbdd119671aa96e56817afa0a75659590600090a2600860008154610d6590611f18565b90915550610d7281611f18565b9050610b78565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b610daf6110db565b6001600160a01b038116610e145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161056f565b610e1d8161113a565b50565b610e298161149f565b610e1d5760405162461bcd60e51b815260040161056f90611ca7565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e7a82610672565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ebf83610672565b9050806001600160a01b0316846001600160a01b03161480610ee65750610ee68185610d79565b8061061e5750836001600160a01b0316610eff846104d4565b6001600160a01b031614949350505050565b826001600160a01b0316610f2482610672565b6001600160a01b031614610f885760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161056f565b6001600160a01b038216610fea5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161056f565b610ff5600082610e45565b6001600160a01b038316600090815260046020526040812080546001929061101e908490611f31565b90915550506001600160a01b038216600090815260046020526040812080546001929061104c908490611f44565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061204283398151915291a4505050565b6110a4816114bc565b600081815260076020526040902080546110bd90611c1f565b159050610e1d576000818152600760205260408120610e1d91611743565b336110e4610944565b6001600160a01b03161461091c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036111e75760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161056f565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61125f848484610f11565b61126b84848484611545565b61099f5760405162461bcd60e51b815260040161056f90611f57565b606061129282610e20565b60006112a960408051602081019091526000815290565b905060008151116112c957604051806020016040528060008152506112f4565b806112d384611643565b6040516020016112e4929190611dc6565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166113515760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161056f565b61135a8161149f565b156113a65760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015260640161056f565b6001600160a01b03821660009081526004602052604081208054600192906113cf908490611f44565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020612042833981519152908290a45050565b6114248261149f565b6114875760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161056f565b60008281526007602052604090206106108282611e43565b6000908152600360205260409020546001600160a01b0316151590565b60006114c782610672565b90506114d4600083610e45565b6001600160a01b03811660009081526004602052604081208054600192906114fd908490611f31565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020612042833981519152908390a45050565b60006001600160a01b0384163b1561163b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611589903390899088908890600401611fa9565b6020604051808303816000875af19250505080156115c4575060408051601f3d908101601f191682019092526115c191810190611fe6565b60015b611621573d8080156115f2576040519150601f19603f3d011682016040523d82523d6000602084013e6115f7565b606091505b5080516000036116195760405162461bcd60e51b815260040161056f90611f57565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061061e565b50600161061e565b60608160000361166a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611694578061167e81611f18565b915061168d9050600a83612019565b915061166e565b6000816001600160401b038111156116ae576116ae611886565b6040519080825280601f01601f1916602001820160405280156116d8576020820181803683370190505b5090505b841561061e576116ed600183611f31565b91506116fa600a8661202d565b611705906030611f44565b60f81b81838151811061171a5761171a611cd9565b60200101906001600160f81b031916908160001a90535061173c600a86612019565b94506116dc565b50805461174f90611c1f565b6000825580601f1061175f575050565b601f016020900490600052602060002090810190610e1d91905b8082111561178d5760008155600101611779565b5090565b6001600160e01b031981168114610e1d57600080fd5b6000602082840312156117b957600080fd5b81356112f481611791565b60005b838110156117df5781810151838201526020016117c7565b50506000910152565b600081518084526118008160208601602086016117c4565b601f01601f19169290920160200192915050565b6020815260006112f460208301846117e8565b60006020828403121561183957600080fd5b5035919050565b80356001600160a01b038116811461185757600080fd5b919050565b6000806040838503121561186f57600080fd5b61187883611840565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156118be576118be611886565b60405290565b604051601f8201601f191681016001600160401b03811182821017156118ec576118ec611886565b604052919050565b60006001600160401b0383111561190d5761190d611886565b611920601f8401601f19166020016118c4565b905082815283838301111561193457600080fd5b828260208301376000602084830101529392505050565b6000806000806080858703121561196157600080fd5b61196a85611840565b935061197860208601611840565b92506040850135915060608501356001600160401b0381111561199a57600080fd5b8501601f810187136119ab57600080fd5b6119ba878235602084016118f4565b91505092959194509250565b6000806000606084860312156119db57600080fd5b6119e484611840565b92506119f260208501611840565b9150604084013590509250925092565b600060208284031215611a1457600080fd5b6112f482611840565b8035801515811461185757600080fd5b600060208284031215611a3f57600080fd5b6112f482611a1d565b60008060408385031215611a5b57600080fd5b611a6483611840565b9150611a7260208401611a1d565b90509250929050565b60a081526000611a8e60a08301886117e8565b6001600160a01b039687166020840152948616604083015250919093166060820152911515608090920191909152919050565b60006020808385031215611ad457600080fd5b82356001600160401b0380821115611aeb57600080fd5b818501915085601f830112611aff57600080fd5b813581811115611b1157611b11611886565b8060051b611b208582016118c4565b9182528381018501918581019089841115611b3a57600080fd5b86860192505b83831015611be857823585811115611b585760008081fd5b86016080818c03601f1901811315611b705760008081fd5b611b7861189c565b8983013588811115611b8a5760008081fd5b8301603f81018e13611b9c5760008081fd5b6040611bae8f8d8401358385016118f4565b8352611bbb818601611840565b838d0152606085810135918401919091529290930135918101919091528352509186019190860190611b40565b9998505050505050505050565b60008060408385031215611c0857600080fd5b611c1183611840565b9150611a7260208401611840565b600181811c90821680611c3357607f821691505b602082108103611c5357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015611d1f57815187529582019590820190600101611d03565b509495945050505050565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090611d5e90830186611cef565b8281036080840152611d708186611cef565b91505060048310611d9157634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008351611dd88184602088016117c4565b835190830190611dec8183602088016117c4565b01949350505050565b601f82111561061057600081815260208120601f850160051c81016020861015611e1c5750805b601f850160051c820191505b81811015611e3b57828155600101611e28565b505050505050565b81516001600160401b03811115611e5c57611e5c611886565b611e7081611e6a8454611c1f565b84611df5565b602080601f831160018114611ea55760008415611e8d5750858301515b600019600386901b1c1916600185901b178555611e3b565b600085815260208120601f198616915b82811015611ed457888601518255948401946001909101908401611eb5565b5085821015611ef25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201611f2a57611f2a611f02565b5060010190565b8181038181111561043c5761043c611f02565b8082018082111561043c5761043c611f02565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fdc908301846117e8565b9695505050505050565b600060208284031215611ff857600080fd5b81516112f481611791565b634e487b7160e01b600052601260045260246000fd5b60008261202857612028612003565b500490565b60008261203c5761203c612003565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c9743f9625294017a58a2f1d315f0012da440637640812632275a3afb3b85c9c64736f6c63430008100033";

type LootboxesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootboxesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lootboxes__factory extends ContractFactory {
  constructor(...args: LootboxesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lootboxes";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lootboxes> {
    return super.deploy(input, overrides || {}) as Promise<Lootboxes>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Lootboxes {
    return super.attach(address) as Lootboxes;
  }
  connect(signer: Signer): Lootboxes__factory {
    return super.connect(signer) as Lootboxes__factory;
  }
  static readonly contractName: "Lootboxes";
  public readonly contractName: "Lootboxes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootboxesInterface {
    return new utils.Interface(_abi) as LootboxesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lootboxes {
    return new Contract(address, _abi, signerOrProvider) as Lootboxes;
  }
}
