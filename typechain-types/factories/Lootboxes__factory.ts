/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lootboxes, LootboxesInterface, Constructor } from "../Lootboxes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NewLootBox",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canBeOpened",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "hound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchasePrice",
            type: "uint256",
          },
        ],
        internalType: "struct Box.Struct[]",
        name: "boxes",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200250a3803806200250a833981016040819052620000349162000243565b6040518060400160405280601381526020017f486f756e6452616365204c6f6f74626f78657300000000000000000000000000815250604051806040016040528060048152602001632429262160e11b815250620000a16200009b6200014d60201b60201c565b62000151565b6001620000af83826200040b565b506002620000be82826200040b565b505081518291506009908190620000d690826200040b565b5060208201516001820180546001600160a01b039283166001600160a01b0319918216179091556040840151600284018054918416919092161790556060830151600390920180546080909401511515600160a01b026001600160a81b0319909416929091169190911791909117905550620004d7565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715620001dc57620001dc620001a1565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200020d576200020d620001a1565b604052919050565b80516001600160a01b03811681146200022d57600080fd5b919050565b805180151581146200022d57600080fd5b600060208083850312156200025757600080fd5b82516001600160401b03808211156200026f57600080fd5b9084019060a082870312156200028457600080fd5b6200028e620001b7565b8251828111156200029e57600080fd5b8301601f81018813620002b057600080fd5b805183811115620002c557620002c5620001a1565b620002d9601f8201601f19168701620001e2565b93508084528886828401011115620002f057600080fd5b60005b8181101562000310578281018701518582018801528601620002f3565b81811115620003225760008783870101525b5050508181526200033584840162000215565b84820152620003476040840162000215565b60408201526200035a6060840162000215565b60608201526200036d6080840162000232565b60808201529695505050505050565b600181811c908216806200039157607f821691505b602082108103620003b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040657600081815260208120601f850160051c81016020861015620003e15750805b601f850160051c820191505b818110156200040257828155600101620003ed565b5050505b505050565b81516001600160401b03811115620004275762000427620001a1565b6200043f816200043884546200037c565b84620003b8565b602080601f8311600181146200047757600084156200045e5750858301515b600019600386901b1c1916600185901b17855562000402565b600085815260208120601f198616915b82811015620004a85788860151825594840194600190910190840162000487565b5085821015620004c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61202380620004e76000396000f3fe6080604052600436106100fa5760003560e01c806301ffc9a7146100ff57806306fdde0314610134578063081812fc14610156578063095ea7b31461018e578063150b7a02146101b057806323b872dd146101e957806342842e0e146102095780636352211e14610229578063690e7c091461024957806370a082311461025c578063715018a61461028a5780638da5cb5b1461029f57806395d89b41146102b4578063a22cb465146102c9578063af640d0f146102e9578063b88d4fde146102ff578063c87b56dd1461031f578063d8de65871461033f578063db60fc9214610365578063e985e9c514610385578063f2fde38b146103a5575b600080fd5b34801561010b57600080fd5b5061011f61011a366004611756565b6103c5565b60405190151581526020015b60405180910390f35b34801561014057600080fd5b50610149610417565b60405161012b91906117cb565b34801561016257600080fd5b506101766101713660046117de565b6104a9565b6040516001600160a01b03909116815260200161012b565b34801561019a57600080fd5b506101ae6101a9366004611813565b6104d0565b005b3480156101bc57600080fd5b506101d06101cb366004611902565b6105ea565b6040516001600160e01b0319909116815260200161012b565b3480156101f557600080fd5b506101ae61020436600461197d565b6105fb565b34801561021557600080fd5b506101ae61022436600461197d565b61062c565b34801561023557600080fd5b506101766102443660046117de565b610647565b6101ae6102573660046117de565b61067c565b34801561026857600080fd5b5061027c6102773660046119b9565b610859565b60405190815260200161012b565b34801561029657600080fd5b506101ae6108df565b3480156102ab57600080fd5b506101766108f3565b3480156102c057600080fd5b50610149610902565b3480156102d557600080fd5b506101ae6102e43660046119d4565b610911565b3480156102f557600080fd5b5061027c60085481565b34801561030b57600080fd5b506101ae61031a366004611902565b61091c565b34801561032b57600080fd5b5061014961033a3660046117de565b610954565b34801561034b57600080fd5b50610354610a5c565b60405161012b959493929190611a10565b34801561037157600080fd5b506101ae610380366004611a56565b610b1c565b34801561039157600080fd5b5061011f6103a0366004611b8a565b610d28565b3480156103b157600080fd5b506101ae6103c03660046119b9565b610d56565b60006001600160e01b031982166380ac58cd60e01b14806103f657506001600160e01b03198216635b5e139f60e01b145b8061041157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461042690611bbd565b80601f016020809104026020016040519081016040528092919081815260200182805461045290611bbd565b801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b5050505050905090565b60006104b482610dcf565b506000908152600560205260409020546001600160a01b031690565b60006104db82610647565b9050806001600160a01b0316836001600160a01b03160361054d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061056957506105698133610d28565b6105db5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610544565b6105e58383610df4565b505050565b630a85bd0160e11b5b949350505050565b6106053382610e62565b6106215760405162461bcd60e51b815260040161054490611bf7565b6105e5838383610ec0565b6105e58383836040518060200160405280600081525061091c565b6000818152600360205260408120546001600160a01b0316806104115760405162461bcd60e51b815260040161054490611c45565b600c54600160a01b900460ff1661069257600080fd5b604080516001808252818301909252600091602080830190803683375050506000838152600d60205260408120600301548251929350918391906106d8576106d8611c77565b602090810291909101810191909152600b546000848152600d9092526040909120600101546001600160a01b039182169163400f959f91161561071c57600061072f565b6000848152600d60205260409020600301545b600b54600c546000878152600d60208181526040808420600101548151858152808401909252938b90529190526001600160a01b0393841693928316929091169087821561077e576002610781565b60035b6040518863ffffffff1660e01b81526004016107a296959493929190611cc8565b6000604051808303818588803b1580156107bb57600080fd5b505af11580156107cf573d6000803e3d6000fd5b5050600a546000868152600d6020526040908190206002015490516323b872dd60e01b81526001600160a01b0390921694506323b872dd935061081a92503091339190600401611d25565b600060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506108558261104a565b5050565b60006001600160a01b0382166108c35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610544565b506001600160a01b031660009081526004602052604090205490565b6108e761108a565b6108f160006110e9565b565b6000546001600160a01b031690565b60606002805461042690611bbd565b610855338383611139565b6109263383610e62565b6109425760405162461bcd60e51b815260040161054490611bf7565b61094e84848484611203565b50505050565b606061095f82610dcf565b6000828152600760205260408120805461097890611bbd565b80601f01602080910402602001604051908101604052809291908181526020018280546109a490611bbd565b80156109f15780601f106109c6576101008083540402835291602001916109f1565b820191906000526020600020905b8154815290600101906020018083116109d457829003601f168201915b505050505090506000610a0f60408051602081019091526000815290565b90508051600003610a21575092915050565b815115610a53578082604051602001610a3b929190611d49565b60405160208183030381529060405292505050919050565b6105f384611236565b600980548190610a6b90611bbd565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9790611bbd565b8015610ae45780601f10610ab957610100808354040283529160200191610ae4565b820191906000526020600020905b815481529060010190602001808311610ac757829003601f168201915b505050506001830154600284015460039094015492936001600160a01b0391821693908216925090811690600160a01b900460ff1685565b610b2461108a565b60005b815181101561085557600a5482516001600160a01b03909116906342842e0e9033903090869086908110610b5d57610b5d611c77565b6020026020010151604001516040518463ffffffff1660e01b8152600401610b8793929190611d25565b600060405180830381600087803b158015610ba157600080fd5b505af1158015610bb5573d6000803e3d6000fd5b50505050610bc5336008546112aa565b610c5e60085460096000018054610bdb90611bbd565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0790611bbd565b8015610c545780601f10610c2957610100808354040283529160200191610c54565b820191906000526020600020905b815481529060010190602001808311610c3757829003601f168201915b50505050506113ca565b818181518110610c7057610c70611c77565b6020908102919091018101516008546000908152600d909252604090912081518190610c9c9082611dc6565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604080830151600283015560609092015160039091015560085490517f1259f6622fe1924279f68a86e3357c7eacbdd119671aa96e56817afa0a75659590600090a2600860008154610d1490611e9b565b90915550610d2181611e9b565b9050610b27565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b610d5e61108a565b6001600160a01b038116610dc35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610544565b610dcc816110e9565b50565b610dd88161144e565b610dcc5760405162461bcd60e51b815260040161054490611c45565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e2982610647565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e6e83610647565b9050806001600160a01b0316846001600160a01b03161480610e955750610e958185610d28565b806105f35750836001600160a01b0316610eae846104a9565b6001600160a01b031614949350505050565b826001600160a01b0316610ed382610647565b6001600160a01b031614610f375760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610544565b6001600160a01b038216610f995760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610544565b610fa4600082610df4565b6001600160a01b0383166000908152600460205260408120805460019290610fcd908490611eb4565b90915550506001600160a01b0382166000908152600460205260408120805460019290610ffb908490611ecb565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b038681169182179092559151849391871691600080516020611fce83398151915291a4505050565b6110538161146b565b6000818152600760205260409020805461106c90611bbd565b159050610dcc576000818152600760205260408120610dcc916116f2565b336110936108f3565b6001600160a01b0316146108f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610544565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036111965760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610544565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61120e848484610ec0565b61121a848484846114f4565b61094e5760405162461bcd60e51b815260040161054490611ee3565b606061124182610dcf565b600061125860408051602081019091526000815290565b9050600081511161127857604051806020016040528060008152506112a3565b80611282846115f2565b604051602001611293929190611d49565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166113005760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610544565b6113098161144e565b156113555760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610544565b6001600160a01b038216600090815260046020526040812080546001929061137e908490611ecb565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020611fce833981519152908290a45050565b6113d38261144e565b6114365760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610544565b60008281526007602052604090206105e58282611dc6565b6000908152600360205260409020546001600160a01b0316151590565b600061147682610647565b9050611483600083610df4565b6001600160a01b03811660009081526004602052604081208054600192906114ac908490611eb4565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020611fce833981519152908390a45050565b60006001600160a01b0384163b156115ea57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611538903390899088908890600401611f35565b6020604051808303816000875af1925050508015611573575060408051601f3d908101601f1916820190925261157091810190611f72565b60015b6115d0573d8080156115a1576040519150601f19603f3d011682016040523d82523d6000602084013e6115a6565b606091505b5080516000036115c85760405162461bcd60e51b815260040161054490611ee3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506105f3565b5060016105f3565b6060816000036116195750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611643578061162d81611e9b565b915061163c9050600a83611fa5565b915061161d565b6000816001600160401b0381111561165d5761165d61183d565b6040519080825280601f01601f191660200182016040528015611687576020820181803683370190505b5090505b84156105f35761169c600183611eb4565b91506116a9600a86611fb9565b6116b4906030611ecb565b60f81b8183815181106116c9576116c9611c77565b60200101906001600160f81b031916908160001a9053506116eb600a86611fa5565b945061168b565b5080546116fe90611bbd565b6000825580601f1061170e575050565b601f016020900490600052602060002090810190610dcc91905b8082111561173c5760008155600101611728565b5090565b6001600160e01b031981168114610dcc57600080fd5b60006020828403121561176857600080fd5b81356112a381611740565b60005b8381101561178e578181015183820152602001611776565b8381111561094e5750506000910152565b600081518084526117b7816020860160208601611773565b601f01601f19169290920160200192915050565b6020815260006112a3602083018461179f565b6000602082840312156117f057600080fd5b5035919050565b80356001600160a01b038116811461180e57600080fd5b919050565b6000806040838503121561182657600080fd5b61182f836117f7565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156118755761187561183d565b60405290565b604051601f8201601f191681016001600160401b03811182821017156118a3576118a361183d565b604052919050565b60006001600160401b038311156118c4576118c461183d565b6118d7601f8401601f191660200161187b565b90508281528383830111156118eb57600080fd5b828260208301376000602084830101529392505050565b6000806000806080858703121561191857600080fd5b611921856117f7565b935061192f602086016117f7565b92506040850135915060608501356001600160401b0381111561195157600080fd5b8501601f8101871361196257600080fd5b611971878235602084016118ab565b91505092959194509250565b60008060006060848603121561199257600080fd5b61199b846117f7565b92506119a9602085016117f7565b9150604084013590509250925092565b6000602082840312156119cb57600080fd5b6112a3826117f7565b600080604083850312156119e757600080fd5b6119f0836117f7565b915060208301358015158114611a0557600080fd5b809150509250929050565b60a081526000611a2360a083018861179f565b6001600160a01b039687166020840152948616604083015250919093166060820152911515608090920191909152919050565b60006020808385031215611a6957600080fd5b82356001600160401b0380821115611a8057600080fd5b818501915085601f830112611a9457600080fd5b813581811115611aa657611aa661183d565b8060051b611ab585820161187b565b9182528381018501918581019089841115611acf57600080fd5b86860192505b83831015611b7d57823585811115611aed5760008081fd5b86016080818c03601f1901811315611b055760008081fd5b611b0d611853565b8983013588811115611b1f5760008081fd5b8301603f81018e13611b315760008081fd5b6040611b438f8d8401358385016118ab565b8352611b508186016117f7565b838d0152606085810135918401919091529290930135918101919091528352509186019190860190611ad5565b9998505050505050505050565b60008060408385031215611b9d57600080fd5b611ba6836117f7565b9150611bb4602084016117f7565b90509250929050565b600181811c90821680611bd157607f821691505b602082108103611bf157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015611cbd57815187529582019590820190600101611ca1565b509495945050505050565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090611cfc90830186611c8d565b8281036080840152611d0e8186611c8d565b91505060ff831660a0830152979650505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008351611d5b818460208801611773565b835190830190611d6f818360208801611773565b01949350505050565b601f8211156105e557600081815260208120601f850160051c81016020861015611d9f5750805b601f850160051c820191505b81811015611dbe57828155600101611dab565b505050505050565b81516001600160401b03811115611ddf57611ddf61183d565b611df381611ded8454611bbd565b84611d78565b602080601f831160018114611e285760008415611e105750858301515b600019600386901b1c1916600185901b178555611dbe565b600085815260208120601f198616915b82811015611e5757888601518255948401946001909101908401611e38565b5085821015611e755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201611ead57611ead611e85565b5060010190565b600082821015611ec657611ec6611e85565b500390565b60008219821115611ede57611ede611e85565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f689083018461179f565b9695505050505050565b600060208284031215611f8457600080fd5b81516112a381611740565b634e487b7160e01b600052601260045260246000fd5b600082611fb457611fb4611f8f565b500490565b600082611fc857611fc8611f8f565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b106b3857537fec3410410c4726848e377ffaf2ba062380a98f5e0cdcdf09b6464736f6c634300080f0033";

type LootboxesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootboxesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lootboxes__factory extends ContractFactory {
  constructor(...args: LootboxesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lootboxes";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lootboxes> {
    return super.deploy(input, overrides || {}) as Promise<Lootboxes>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Lootboxes {
    return super.attach(address) as Lootboxes;
  }
  connect(signer: Signer): Lootboxes__factory {
    return super.connect(signer) as Lootboxes__factory;
  }
  static readonly contractName: "Lootboxes";
  public readonly contractName: "Lootboxes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootboxesInterface {
    return new utils.Interface(_abi) as LootboxesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lootboxes {
    return new Contract(address, _abi, signerOrProvider) as Lootboxes;
  }
}
