/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lootboxes, LootboxesInterface, Constructor } from "../Lootboxes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NewLootBox",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canBeOpened",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "hound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchasePrice",
            type: "uint256",
          },
        ],
        internalType: "struct Box.Struct[]",
        name: "boxes",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setOpenStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200269b3803806200269b833981016040819052620000349162000243565b6040518060400160405280601381526020017f486f756e6452616365204c6f6f74626f78657300000000000000000000000000815250604051806040016040528060048152602001632429262160e11b815250620000a16200009b6200014d60201b60201c565b62000151565b6001620000af838262000400565b506002620000be828262000400565b505081518291506009908190620000d6908262000400565b5060208201516001820180546001600160a01b039283166001600160a01b0319918216179091556040840151600284018054918416919092161790556060830151600390920180546080909401511515600160a01b026001600160a81b0319909416929091169190911791909117905550620004cc565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715620001dc57620001dc620001a1565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200020d576200020d620001a1565b604052919050565b80516001600160a01b03811681146200022d57600080fd5b919050565b805180151581146200022d57600080fd5b600060208083850312156200025757600080fd5b82516001600160401b03808211156200026f57600080fd5b9084019060a082870312156200028457600080fd5b6200028e620001b7565b8251828111156200029e57600080fd5b8301601f81018813620002b057600080fd5b805183811115620002c557620002c5620001a1565b620002d9601f8201601f19168701620001e2565b93508084528886828401011115620002f057600080fd5b60005b8181101562000310578281018701518582018801528601620002f3565b506000908401860152508181526200032a83850162000215565b848201526200033c6040840162000215565b60408201526200034f6060840162000215565b6060820152620003626080840162000232565b60808201529695505050505050565b600181811c908216806200038657607f821691505b602082108103620003a757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003fb57600081815260208120601f850160051c81016020861015620003d65750805b601f850160051c820191505b81811015620003f757828155600101620003e2565b5050505b505050565b81516001600160401b038111156200041c576200041c620001a1565b62000434816200042d845462000371565b84620003ad565b602080601f8311600181146200046c5760008415620004535750858301515b600019600386901b1c1916600185901b178555620003f7565b600085815260208120601f198616915b828110156200049d578886015182559484019460019091019084016200047c565b5085821015620004bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6121bf80620004dc6000396000f3fe6080604052600436106101055760003560e01c806301ffc9a71461010a57806306fdde031461013f578063081812fc14610161578063095ea7b31461018e578063150b7a02146101b057806323b872dd146101e957806342842e0e146102095780636352211e14610229578063690e7c091461024957806370a082311461025c578063715018a61461028a5780637c46a44b1461029f5780638da5cb5b146102bf57806395d89b41146102d4578063a22cb465146102e9578063af640d0f14610309578063b88d4fde1461031f578063c87b56dd1461033f578063d8de65871461035f578063db60fc9214610385578063e985e9c5146103a5578063f2fde38b146103c5575b600080fd5b34801561011657600080fd5b5061012a6101253660046118d6565b6103e5565b60405190151581526020015b60405180910390f35b34801561014b57600080fd5b50610154610437565b6040516101369190611943565b34801561016d57600080fd5b5061018161017c366004611956565b6104c9565b604051610136919061196f565b34801561019a57600080fd5b506101ae6101a936600461199f565b6104f0565b005b3480156101bc57600080fd5b506101d06101cb366004611a8e565b61060a565b6040516001600160e01b03199091168152602001610136565b3480156101f557600080fd5b506101ae610204366004611b09565b61061b565b34801561021557600080fd5b506101ae610224366004611b09565b61064c565b34801561023557600080fd5b50610181610244366004611956565b610667565b6101ae610257366004611956565b61069c565b34801561026857600080fd5b5061027c610277366004611b45565b61090a565b604051908152602001610136565b34801561029657600080fd5b506101ae610990565b3480156102ab57600080fd5b506101ae6102ba366004611b70565b6109a4565b3480156102cb57600080fd5b506101816109ca565b3480156102e057600080fd5b506101546109d9565b3480156102f557600080fd5b506101ae610304366004611b8b565b6109e8565b34801561031557600080fd5b5061027c60085481565b34801561032b57600080fd5b506101ae61033a366004611a8e565b6109f3565b34801561034b57600080fd5b5061015461035a366004611956565b610a2b565b34801561036b57600080fd5b50610374610b33565b604051610136959493929190611bbe565b34801561039157600080fd5b506101ae6103a0366004611c04565b610bf3565b3480156103b157600080fd5b5061012a6103c0366004611d38565b610dff565b3480156103d157600080fd5b506101ae6103e0366004611b45565b610e2d565b60006001600160e01b031982166380ac58cd60e01b148061041657506001600160e01b03198216635b5e139f60e01b145b8061043157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461044690611d62565b80601f016020809104026020016040519081016040528092919081815260200182805461047290611d62565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b60006104d482610ea6565b506000908152600560205260409020546001600160a01b031690565b60006104fb82610667565b9050806001600160a01b0316836001600160a01b03160361056d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061058957506105898133610dff565b6105fb5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610564565b6106058383610ecb565b505050565b630a85bd0160e11b5b949350505050565b6106253382610f39565b6106415760405162461bcd60e51b815260040161056490611d9c565b610605838383610f97565b610605838383604051806020016040528060008152506109f3565b6000818152600360205260408120546001600160a01b0316806104315760405162461bcd60e51b815260040161056490611dea565b600c54600160a01b900460ff166106b257600080fd5b604080516001808252818301909252600091602080830190803683375050506000838152600d60205260408120600301548251929350918391906106f8576106f8611e1c565b60200260200101818152505061070d34611121565b6000828152600d6020526040902060010154610731906001600160a01b0316611166565b6000828152600d602052604090206003015461074c90611121565b600b54610761906001600160a01b0316611166565b600c54610776906001600160a01b0316611166565b6107998160008151811061078c5761078c611e1c565b6020026020010151611121565b600b546000838152600d60205260409020600101546001600160a01b039182169163400f959f9116156107cd5760006107e0565b6000848152600d60205260409020600301545b600b54600c546000878152600d60208181526040808420600101548151858152808401909252938b90529190526001600160a01b0393841693928316929091169087821561082f576002610832565b60035b6040518863ffffffff1660e01b815260040161085396959493929190611e6d565b6000604051808303818588803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b5050600a546000868152600d6020526040908190206002015490516323b872dd60e01b81526001600160a01b0390921694506323b872dd93506108cb92503091339190600401611eca565b600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050610906826111a9565b5050565b60006001600160a01b0382166109745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610564565b506001600160a01b031660009081526004602052604090205490565b6109986111e9565b6109a26000611248565b565b6109ac6111e9565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031690565b60606002805461044690611d62565b610906338383611298565b6109fd3383610f39565b610a195760405162461bcd60e51b815260040161056490611d9c565b610a2584848484611362565b50505050565b6060610a3682610ea6565b60008281526007602052604081208054610a4f90611d62565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7b90611d62565b8015610ac85780601f10610a9d57610100808354040283529160200191610ac8565b820191906000526020600020905b815481529060010190602001808311610aab57829003601f168201915b505050505090506000610ae660408051602081019091526000815290565b90508051600003610af8575092915050565b815115610b2a578082604051602001610b12929190611eee565b60405160208183030381529060405292505050919050565b61061384611395565b600980548190610b4290611d62565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6e90611d62565b8015610bbb5780601f10610b9057610100808354040283529160200191610bbb565b820191906000526020600020905b815481529060010190602001808311610b9e57829003601f168201915b505050506001830154600284015460039094015492936001600160a01b0391821693908216925090811690600160a01b900460ff1685565b610bfb6111e9565b60005b815181101561090657600a5482516001600160a01b03909116906342842e0e9033903090869086908110610c3457610c34611e1c565b6020026020010151604001516040518463ffffffff1660e01b8152600401610c5e93929190611eca565b600060405180830381600087803b158015610c7857600080fd5b505af1158015610c8c573d6000803e3d6000fd5b50505050610c9c33600854611409565b610d3560085460096000018054610cb290611d62565b80601f0160208091040260200160405190810160405280929190818152602001828054610cde90611d62565b8015610d2b5780601f10610d0057610100808354040283529160200191610d2b565b820191906000526020600020905b815481529060010190602001808311610d0e57829003601f168201915b5050505050611529565b818181518110610d4757610d47611e1c565b6020908102919091018101516008546000908152600d909252604090912081518190610d739082611f6b565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604080830151600283015560609092015160039091015560085490517f1259f6622fe1924279f68a86e3357c7eacbdd119671aa96e56817afa0a75659590600090a2600860008154610deb90612040565b90915550610df881612040565b9050610bfe565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b610e356111e9565b6001600160a01b038116610e9a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610564565b610ea381611248565b50565b610eaf816115ad565b610ea35760405162461bcd60e51b815260040161056490611dea565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f0082610667565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610f4583610667565b9050806001600160a01b0316846001600160a01b03161480610f6c5750610f6c8185610dff565b806106135750836001600160a01b0316610f85846104c9565b6001600160a01b031614949350505050565b826001600160a01b0316610faa82610667565b6001600160a01b03161461100e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610564565b6001600160a01b0382166110705760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610564565b61107b600082610ecb565b6001600160a01b03831660009081526004602052604081208054600192906110a4908490612059565b90915550506001600160a01b03821660009081526004602052604081208054600192906110d290849061206c565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061216a83398151915291a4505050565b610ea38160405160240161113791815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790526115ca565b610ea38160405160240161117a919061196f565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526115ca565b6111b2816115eb565b600081815260076020526040902080546111cb90611d62565b159050610ea3576000818152600760205260408120610ea391611872565b336111f26109ca565b6001600160a01b0316146109a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610564565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036112f55760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610564565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61136d848484610f97565b61137984848484611674565b610a255760405162461bcd60e51b81526004016105649061207f565b60606113a082610ea6565b60006113b760408051602081019091526000815290565b905060008151116113d75760405180602001604052806000815250611402565b806113e184611772565b6040516020016113f2929190611eee565b6040516020818303038152906040525b9392505050565b6001600160a01b03821661145f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610564565b611468816115ad565b156114b45760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610564565b6001600160a01b03821660009081526004602052604081208054600192906114dd90849061206c565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b038616908117909155905183929060008051602061216a833981519152908290a45050565b611532826115ad565b6115955760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610564565b60008281526007602052604090206106058282611f6b565b6000908152600360205260409020546001600160a01b0316151590565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006115f682610667565b9050611603600083610ecb565b6001600160a01b038116600090815260046020526040812080546001929061162c908490612059565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b0384169060008051602061216a833981519152908390a45050565b60006001600160a01b0384163b1561176a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906116b89033908990889088906004016120d1565b6020604051808303816000875af19250505080156116f3575060408051601f3d908101601f191682019092526116f09181019061210e565b60015b611750573d808015611721576040519150601f19603f3d011682016040523d82523d6000602084013e611726565b606091505b5080516000036117485760405162461bcd60e51b81526004016105649061207f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610613565b506001610613565b6060816000036117995750506040805180820190915260018152600360fc1b602082015290565b8160005b81156117c357806117ad81612040565b91506117bc9050600a83612141565b915061179d565b6000816001600160401b038111156117dd576117dd6119c9565b6040519080825280601f01601f191660200182016040528015611807576020820181803683370190505b5090505b84156106135761181c600183612059565b9150611829600a86612155565b61183490603061206c565b60f81b81838151811061184957611849611e1c565b60200101906001600160f81b031916908160001a90535061186b600a86612141565b945061180b565b50805461187e90611d62565b6000825580601f1061188e575050565b601f016020900490600052602060002090810190610ea391905b808211156118bc57600081556001016118a8565b5090565b6001600160e01b031981168114610ea357600080fd5b6000602082840312156118e857600080fd5b8135611402816118c0565b60005b8381101561190e5781810151838201526020016118f6565b50506000910152565b6000815180845261192f8160208601602086016118f3565b601f01601f19169290920160200192915050565b6020815260006114026020830184611917565b60006020828403121561196857600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461199a57600080fd5b919050565b600080604083850312156119b257600080fd5b6119bb83611983565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611a0157611a016119c9565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611a2f57611a2f6119c9565b604052919050565b60006001600160401b03831115611a5057611a506119c9565b611a63601f8401601f1916602001611a07565b9050828152838383011115611a7757600080fd5b828260208301376000602084830101529392505050565b60008060008060808587031215611aa457600080fd5b611aad85611983565b9350611abb60208601611983565b92506040850135915060608501356001600160401b03811115611add57600080fd5b8501601f81018713611aee57600080fd5b611afd87823560208401611a37565b91505092959194509250565b600080600060608486031215611b1e57600080fd5b611b2784611983565b9250611b3560208501611983565b9150604084013590509250925092565b600060208284031215611b5757600080fd5b61140282611983565b8035801515811461199a57600080fd5b600060208284031215611b8257600080fd5b61140282611b60565b60008060408385031215611b9e57600080fd5b611ba783611983565b9150611bb560208401611b60565b90509250929050565b60a081526000611bd160a0830188611917565b6001600160a01b039687166020840152948616604083015250919093166060820152911515608090920191909152919050565b60006020808385031215611c1757600080fd5b82356001600160401b0380821115611c2e57600080fd5b818501915085601f830112611c4257600080fd5b813581811115611c5457611c546119c9565b8060051b611c63858201611a07565b9182528381018501918581019089841115611c7d57600080fd5b86860192505b83831015611d2b57823585811115611c9b5760008081fd5b86016080818c03601f1901811315611cb35760008081fd5b611cbb6119df565b8983013588811115611ccd5760008081fd5b8301603f81018e13611cdf5760008081fd5b6040611cf18f8d840135838501611a37565b8352611cfe818601611983565b838d0152606085810135918401919091529290930135918101919091528352509186019190860190611c83565b9998505050505050505050565b60008060408385031215611d4b57600080fd5b611d5483611983565b9150611bb560208401611983565b600181811c90821680611d7657607f821691505b602082108103611d9657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015611e6257815187529582019590820190600101611e46565b509495945050505050565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090611ea190830186611e32565b8281036080840152611eb38186611e32565b91505060ff831660a0830152979650505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008351611f008184602088016118f3565b835190830190611f148183602088016118f3565b01949350505050565b601f82111561060557600081815260208120601f850160051c81016020861015611f445750805b601f850160051c820191505b81811015611f6357828155600101611f50565b505050505050565b81516001600160401b03811115611f8457611f846119c9565b611f9881611f928454611d62565b84611f1d565b602080601f831160018114611fcd5760008415611fb55750858301515b600019600386901b1c1916600185901b178555611f63565b600085815260208120601f198616915b82811015611ffc57888601518255948401946001909101908401611fdd565b508582101561201a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016120525761205261202a565b5060010190565b818103818111156104315761043161202a565b808201808211156104315761043161202a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061210490830184611917565b9695505050505050565b60006020828403121561212057600080fd5b8151611402816118c0565b634e487b7160e01b600052601260045260246000fd5b6000826121505761215061212b565b500490565b6000826121645761216461212b565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220eca8e3179b78eff09dc740169242996ae6fac32effd83ef1ec80e02d98018b6464736f6c63430008100033";

type LootboxesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootboxesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lootboxes__factory extends ContractFactory {
  constructor(...args: LootboxesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lootboxes";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lootboxes> {
    return super.deploy(input, overrides || {}) as Promise<Lootboxes>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Lootboxes {
    return super.attach(address) as Lootboxes;
  }
  connect(signer: Signer): Lootboxes__factory {
    return super.connect(signer) as Lootboxes__factory;
  }
  static readonly contractName: "Lootboxes";
  public readonly contractName: "Lootboxes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootboxesInterface {
    return new utils.Interface(_abi) as LootboxesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lootboxes {
    return new Contract(address, _abi, signerOrProvider) as Lootboxes;
  }
}
