/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lootboxes, LootboxesInterface, Constructor } from "../Lootboxes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "rewardContracts",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "rewardTypes",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "generated",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Box.Struct",
        name: "box",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "LootboxOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idFinish",
        type: "uint256",
      },
    ],
    name: "NewLootboxes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canBeOpened",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setOpenStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027de380380620027de8339810160408190526200003491620001a5565b60405180604001604052806011815260200170090deeadcc8a4c2c6ca4098dedee8c4def607b1b815250604051806040016040528060048152602001632429262160e11b815250620000956200008f6200011e60201b60201c565b62000122565b6001620000a38382620002c2565b506002620000b28282620002c2565b50508151600980546001600160a01b039283166001600160a01b0319918216179091556020840151600a8054918416919092161790556040830151600b80546060909501511515600160a01b026001600160a81b0319909516919092161792909217909155506200038e565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001a057600080fd5b919050565b600060808284031215620001b857600080fd5b604051608081016001600160401b0381118282101715620001dd57620001dd62000172565b604052620001eb8362000188565b8152620001fb6020840162000188565b60208201526200020e6040840162000188565b6040820152606083015180151581146200022757600080fd5b60608201529392505050565b600181811c908216806200024857607f821691505b6020821081036200026957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002bd57600081815260208120601f850160051c81016020861015620002985750805b601f850160051c820191505b81811015620002b957828155600101620002a4565b5050505b505050565b81516001600160401b03811115620002de57620002de62000172565b620002f681620002ef845462000233565b846200026f565b602080601f8311600181146200032e5760008415620003155750858301515b600019600386901b1c1916600185901b178555620002b9565b600085815260208120601f198616915b828110156200035f578886015182559484019460019091019084016200033e565b50858210156200037e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612440806200039e6000396000f3fe6080604052600436106101105760003560e01c806301ffc9a71461011557806306fdde031461014a578063081812fc1461016c578063095ea7b3146101a4578063150b7a02146101c657806319e78d08146101ff57806323b872dd1461021f57806342842e0e1461023f5780636352211e1461025f578063690e7c091461027f57806370a0823114610292578063715018a6146102c057806377097fc8146102d55780637c46a44b146102f55780638da5cb5b1461031557806395d89b411461032a578063a22cb4651461033f578063af640d0f1461035f578063b88d4fde14610375578063c87b56dd14610395578063d8de6587146103b5578063e985e9c514610424578063f2fde38b14610444575b600080fd5b34801561012157600080fd5b506101356101303660046114ec565b610464565b60405190151581526020015b60405180910390f35b34801561015657600080fd5b5061015f6104b6565b6040516101419190611559565b34801561017857600080fd5b5061018c61018736600461156c565b610548565b6040516001600160a01b039091168152602001610141565b3480156101b057600080fd5b506101c46101bf3660046115a1565b61056f565b005b3480156101d257600080fd5b506101e66101e1366004611656565b610689565b6040516001600160e01b03199091168152602001610141565b34801561020b57600080fd5b506101c461021a3660046116e1565b61069a565b34801561022b57600080fd5b506101c461023a36600461175d565b610706565b34801561024b57600080fd5b506101c461025a36600461175d565b610737565b34801561026b57600080fd5b5061018c61027a36600461156c565b610752565b6101c461028d36600461156c565b610787565b34801561029e57600080fd5b506102b26102ad366004611799565b61080f565b604051908152602001610141565b3480156102cc57600080fd5b506101c4610895565b3480156102e157600080fd5b506101c46102f03660046117b4565b6108a9565b34801561030157600080fd5b506101c461031036600461180e565b61092e565b34801561032157600080fd5b5061018c610954565b34801561033657600080fd5b5061015f610963565b34801561034b57600080fd5b506101c461035a366004611829565b610972565b34801561036b57600080fd5b506102b260085481565b34801561038157600080fd5b506101c4610390366004611656565b610981565b3480156103a157600080fd5b5061015f6103b036600461156c565b6109b9565b3480156103c157600080fd5b50600954600a54600b546103ef926001600160a01b039081169281169190811690600160a01b900460ff1684565b60405161014194939291906001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b34801561043057600080fd5b5061013561043f36600461185c565b610ac1565b34801561045057600080fd5b506101c461045f366004611799565b610aef565b60006001600160e01b031982166380ac58cd60e01b148061049557506001600160e01b03198216635b5e139f60e01b145b806104b057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546104c590611886565b80601f01602080910402602001604051908101604052809291908181526020018280546104f190611886565b801561053e5780601f106105135761010080835404028352916020019161053e565b820191906000526020600020905b81548152906001019060200180831161052157829003601f168201915b5050505050905090565b600061055382610b65565b506000908152600560205260409020546001600160a01b031690565b600061057a82610752565b9050806001600160a01b0316836001600160a01b0316036105ec5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061060857506106088133610ac1565b61067a5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105e3565b6106848383610b8a565b505050565b630a85bd0160e11b5b949350505050565b6106a2610bf8565b8051600980546001600160a01b039283166001600160a01b0319918216179091556020830151600a8054918416919092161790556040820151600b80546060909401511515600160a01b026001600160a81b03199094169190921617919091179055565b6107103382610c57565b61072c5760405162461bcd60e51b81526004016105e3906118c0565b610684838383610cb5565b61068483838360405180602001604052806000815250610981565b6000818152600360205260408120546001600160a01b0316806104b05760405162461bcd60e51b81526004016105e39061190e565b600b54600160a01b900460ff1661079d57600080fd5b336107a782610752565b6001600160a01b0316146107ba57600080fd5b6000818152600c6020526040908190209051339183917f27391ec415d85088ffd20ad5068567ee61306cf14e3cb02f1a709f43e6e1fdcf916107fb9161209c565b60405180910390a361080c81610e3f565b50565b60006001600160a01b0382166108795760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105e3565b506001600160a01b031660009081526004602052604090205490565b61089d610bf8565b6108a76000610e7f565b565b6108b1610bf8565b60085460005b838110156108fa576108cb33600854610ecf565b6108d760085484610fef565b6008600081546108e69061216f565b909155506108f38161216f565b90506108b7565b5060085460405182907fe929bb466f0257bc8400388f631be46b0a21b612148f8e8df8b8651a9c67ded690600090a3505050565b610936610bf8565b600b8054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031690565b6060600280546104c590611886565b61097d338383611073565b5050565b61098b3383610c57565b6109a75760405162461bcd60e51b81526004016105e3906118c0565b6109b38484848461113d565b50505050565b60606109c482610b65565b600082815260076020526040812080546109dd90611886565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0990611886565b8015610a565780601f10610a2b57610100808354040283529160200191610a56565b820191906000526020600020905b815481529060010190602001808311610a3957829003601f168201915b505050505090506000610a7460408051602081019091526000815290565b90508051600003610a86575092915050565b815115610ab8578082604051602001610aa0929190612188565b60405160208183030381529060405292505050919050565b61069284611170565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b610af7610bf8565b6001600160a01b038116610b5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e3565b61080c81610e7f565b610b6e816111e4565b61080c5760405162461bcd60e51b81526004016105e39061190e565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bbf82610752565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b33610c01610954565b6001600160a01b0316146108a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e3565b600080610c6383610752565b9050806001600160a01b0316846001600160a01b03161480610c8a5750610c8a8185610ac1565b806106925750836001600160a01b0316610ca384610548565b6001600160a01b031614949350505050565b826001600160a01b0316610cc882610752565b6001600160a01b031614610d2c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105e3565b6001600160a01b038216610d8e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105e3565b610d99600082610b8a565b6001600160a01b0383166000908152600460205260408120805460019290610dc29084906121b7565b90915550506001600160a01b0382166000908152600460205260408120805460019290610df09084906121ca565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716916000805160206123eb83398151915291a4505050565b610e4881611201565b60008181526007602052604090208054610e6190611886565b15905061080c57600081815260076020526040812061080c91611488565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610f255760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105e3565b610f2e816111e4565b15610f7a5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b60448201526064016105e3565b6001600160a01b0382166000908152600460205260408120805460019290610fa39084906121ca565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392906000805160206123eb833981519152908290a45050565b610ff8826111e4565b61105b5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016105e3565b6000828152600760205260409020610684828261222b565b816001600160a01b0316836001600160a01b0316036110d05760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016105e3565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611148848484610cb5565b6111548484848461128a565b6109b35760405162461bcd60e51b81526004016105e3906122ea565b606061117b82610b65565b600061119260408051602081019091526000815290565b905060008151116111b257604051806020016040528060008152506111dd565b806111bc84611388565b6040516020016111cd929190612188565b6040516020818303038152906040525b9392505050565b6000908152600360205260409020546001600160a01b0316151590565b600061120c82610752565b9050611219600083610b8a565b6001600160a01b03811660009081526004602052604081208054600192906112429084906121b7565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b038416906000805160206123eb833981519152908390a45050565b60006001600160a01b0384163b1561138057604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112ce90339089908890889060040161233c565b6020604051808303816000875af1925050508015611309575060408051601f3d908101601f1916820190925261130691810190612379565b60015b611366573d808015611337576040519150601f19603f3d011682016040523d82523d6000602084013e61133c565b606091505b50805160000361135e5760405162461bcd60e51b81526004016105e3906122ea565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610692565b506001610692565b6060816000036113af5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113d957806113c38161216f565b91506113d29050600a836123ac565b91506113b3565b6000816001600160401b038111156113f3576113f36115cb565b6040519080825280601f01601f19166020018201604052801561141d576020820181803683370190505b5090505b8415610692576114326001836121b7565b915061143f600a866123c0565b61144a9060306121ca565b60f81b81838151811061145f5761145f6123d4565b60200101906001600160f81b031916908160001a905350611481600a866123ac565b9450611421565b50805461149490611886565b6000825580601f106114a4575050565b601f01602090049060005260206000209081019061080c91905b808211156114d257600081556001016114be565b5090565b6001600160e01b03198116811461080c57600080fd5b6000602082840312156114fe57600080fd5b81356111dd816114d6565b60005b8381101561152457818101518382015260200161150c565b50506000910152565b60008151808452611545816020860160208601611509565b601f01601f19169290920160200192915050565b6020815260006111dd602083018461152d565b60006020828403121561157e57600080fd5b5035919050565b80356001600160a01b038116811461159c57600080fd5b919050565b600080604083850312156115b457600080fd5b6115bd83611585565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b03808411156115fb576115fb6115cb565b604051601f8501601f19908116603f01168101908282118183101715611623576116236115cb565b8160405280935085815286868601111561163c57600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561166c57600080fd5b61167585611585565b935061168360208601611585565b92506040850135915060608501356001600160401b038111156116a557600080fd5b8501601f810187136116b657600080fd5b6116c5878235602084016115e1565b91505092959194509250565b8035801515811461159c57600080fd5b6000608082840312156116f357600080fd5b604051608081016001600160401b0381118282101715611715576117156115cb565b60405261172183611585565b815261172f60208401611585565b602082015261174060408401611585565b6040820152611751606084016116d1565b60608201529392505050565b60008060006060848603121561177257600080fd5b61177b84611585565b925061178960208501611585565b9150604084013590509250925092565b6000602082840312156117ab57600080fd5b6111dd82611585565b600080604083850312156117c757600080fd5b8235915060208301356001600160401b038111156117e457600080fd5b8301601f810185136117f557600080fd5b611804858235602084016115e1565b9150509250929050565b60006020828403121561182057600080fd5b6111dd826116d1565b6000806040838503121561183c57600080fd5b61184583611585565b9150611853602084016116d1565b90509250929050565b6000806040838503121561186f57600080fd5b61187883611585565b915061185360208401611585565b600181811c9082168061189a57607f821691505b6020821081036118ba57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6000815480845260208085019450836000528060002060005b8381101561197557815487529582019560019182019101611959565b509495945050505050565b6004811061199e57634e487b7160e01b600052602160045260246000fd5b9052565b805480835260008281526020808220940193909190825b82601f82011015611c3957815460ff6119d488828416611980565b60206119e7818a01838560081c16611980565b60406119fa818b01848660101c16611980565b6060611a0d818c01858760181c16611980565b6080611a1f818d018688871c16611980565b60a09350611a34848d01868860281c16611980565b60c0611a47818e01878960301c16611980565b60e0611a5a818f01888a60381c16611980565b611a6c6101008f01888a881c16611980565b611a7f6101208f01888a60481c16611980565b611a926101408f01888a60501c16611980565b611aa56101608f01888a60581c16611980565b611ab76101808f01888a871c16611980565b611aca6101a08f01888a60681c16611980565b611add6101c08f01888a60701c16611980565b611af06101e08f01888a60781c16611980565b611b026102008f01888a861c16611980565b611b156102208f01888a60881c16611980565b611b286102408f01888a60901c16611980565b611b3b6102608f01888a60981c16611980565b611b4d6102808f01888a891c16611980565b611b606102a08f01888a60a81c16611980565b611b736102c08f01888a60b01c16611980565b611b866102e08f01888a60b81c16611980565b611b986103008f01888a851c16611980565b611bab6103208f01888a60c81c16611980565b611bbe6103408f01888a60d01c16611980565b611bd16103608f01888a60d81c16611980565b611be36103808f01888a841c16611980565b505050505050611bfc6103a08901828460e81c16611980565b611c0f6103c08901828460f01c16611980565b50611c216103e088018260f81c611980565b506104009590950194600191909101906020016119b9565b90549082811015611c5c57611c518660ff8416611980565b602095909501946001015b82811015611c7f57611c748660ff8460081c16611980565b602095909501946001015b82811015611ca257611c978660ff8460101c16611980565b602095909501946001015b82811015611cc557611cba8660ff8460181c16611980565b602095909501946001015b82811015611ce857611cdd8660ff8460201c16611980565b602095909501946001015b82811015611d0b57611d008660ff8460281c16611980565b602095909501946001015b82811015611d2e57611d238660ff8460301c16611980565b602095909501946001015b82811015611d5157611d468660ff8460381c16611980565b602095909501946001015b82811015611d7457611d698660ff8460401c16611980565b602095909501946001015b82811015611d9757611d8c8660ff8460481c16611980565b602095909501946001015b82811015611dba57611daf8660ff8460501c16611980565b602095909501946001015b82811015611ddd57611dd28660ff8460581c16611980565b602095909501946001015b82811015611e0057611df58660ff8460601c16611980565b602095909501946001015b82811015611e2357611e188660ff8460681c16611980565b602095909501946001015b82811015611e4657611e3b8660ff8460701c16611980565b602095909501946001015b82811015611e6957611e5e8660ff8460781c16611980565b602095909501946001015b82811015611e8c57611e818660ff8460801c16611980565b602095909501946001015b82811015611eaf57611ea48660ff8460881c16611980565b602095909501946001015b82811015611ed257611ec78660ff8460901c16611980565b602095909501946001015b82811015611ef557611eea8660ff8460981c16611980565b602095909501946001015b82811015611f1857611f0d8660ff8460a01c16611980565b602095909501946001015b82811015611f3b57611f308660ff8460a81c16611980565b602095909501946001015b82811015611f5e57611f538660ff8460b01c16611980565b602095909501946001015b82811015611f8157611f768660ff8460b81c16611980565b602095909501946001015b82811015611fa457611f998660ff8460c01c16611980565b602095909501946001015b82811015611fc757611fbc8660ff8460c81c16611980565b602095909501946001015b82811015611fea57611fdf8660ff8460d01c16611980565b602095909501946001015b8281101561200d576120028660ff8460d81c16611980565b602095909501946001015b82811015612030576120258660ff8460e01c16611980565b602095909501946001015b82811015612053576120488660ff8460e81c16611980565b602095909501946001015b828110156120765761206b8660ff8460f01c16611980565b602095909501946001015b828110156120925761208b868360f81c611980565b6020860195505b5093949350505050565b602080825260a082820152825460c08301819052600084815282812090929160e0850190845b818110156120e75783546001600160a01b0316835260019384019392850192016120c2565b5050601f199250828582030160408601526121058160018801611940565b9150508184820301606085015261211f8160028701611940565b90508184820301608085015261213881600387016119a2565b915050612149600485015460ff1690565b80151560a0850152509392505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161218157612181612159565b5060010190565b6000835161219a818460208801611509565b8351908301906121ae818360208801611509565b01949350505050565b818103818111156104b0576104b0612159565b808201808211156104b0576104b0612159565b601f82111561068457600081815260208120601f850160051c810160208610156122045750805b601f850160051c820191505b8181101561222357828155600101612210565b505050505050565b81516001600160401b03811115612244576122446115cb565b612258816122528454611886565b846121dd565b602080601f83116001811461228d57600084156122755750858301515b600019600386901b1c1916600185901b178555612223565b600085815260208120601f198616915b828110156122bc5788860151825594840194600190910190840161229d565b50858210156122da5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061236f9083018461152d565b9695505050505050565b60006020828403121561238b57600080fd5b81516111dd816114d6565b634e487b7160e01b600052601260045260246000fd5b6000826123bb576123bb612396565b500490565b6000826123cf576123cf612396565b500690565b634e487b7160e01b600052603260045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220339245d321d32db97381c6e6251238ed4e57cf608b1c2336dba4577e8d932ff264736f6c63430008100033";

type LootboxesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootboxesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lootboxes__factory extends ContractFactory {
  constructor(...args: LootboxesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lootboxes";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lootboxes> {
    return super.deploy(input, overrides || {}) as Promise<Lootboxes>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Lootboxes {
    return super.attach(address) as Lootboxes;
  }
  connect(signer: Signer): Lootboxes__factory {
    return super.connect(signer) as Lootboxes__factory;
  }
  static readonly contractName: "Lootboxes";
  public readonly contractName: "Lootboxes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootboxesInterface {
    return new utils.Interface(_abi) as LootboxesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lootboxes {
    return new Contract(address, _abi, signerOrProvider) as Lootboxes;
  }
}
