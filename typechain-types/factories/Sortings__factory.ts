/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sortings, SortingsInterface } from "../Sortings";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "power",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "players",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "rankPlayers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61059d61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80633e96a35b1461003a575b600080fd5b61004d610048366004610358565b610064565b60405161005b929190610407565b60405180910390f35b606080838380820361007d578688935093505050610267565b600088600261008c8989610464565b610096919061047d565b6100a090896104b8565b815181106100b0576100b06104cb565b602002602001015190505b81831161022f575b808984815181106100d6576100d66104cb565b602002602001015111156100f657826100ee816104fa565b9350506100c3565b888281518110610108576101086104cb565b6020026020010151811115610129578161012181610532565b9250506100f6565b81831161022a57888281518110610142576101426104cb565b602002602001015189848151811061015c5761015c6104cb565b60200260200101518a8581518110610176576101766104cb565b602002602001018b858151811061018f5761018f6104cb565b60200260200101828152508281525050508782815181106101b2576101b26104cb565b60200260200101518884815181106101cc576101cc6104cb565b60200260200101518985815181106101e6576101e66104cb565b602002602001018a85815181106101ff576101ff6104cb565b60209081029190910101919091525282610218816104fa565b935050818061022690610532565b9250505b6100bb565b818710156102465761024389898985610064565b50505b8583101561025d5761025a89898589610064565b50505b8789945094505050505b94509492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126102b057600080fd5b8135602067ffffffffffffffff808311156102cd576102cd610270565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110848211171561031057610310610270565b60405293845285810183019383810192508785111561032e57600080fd5b83870191505b8482101561034d57813583529183019190830190610334565b979650505050505050565b6000806000806080858703121561036e57600080fd5b843567ffffffffffffffff8082111561038657600080fd5b6103928883890161029f565b955060208701359150808211156103a857600080fd5b506103b58782880161029f565b949794965050505060408301359260600135919050565b600081518084526020808501945080840160005b838110156103fc578151875295820195908201906001016103e0565b509495945050505050565b60408152600061041a60408301856103cc565b828103602084015261042c81856103cc565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561047757610477610435565b92915050565b6000826104b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8082018082111561047757610477610435565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361052b5761052b610435565b5060010190565b60008161054157610541610435565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122011ee490fb39ed0a3006bb4824b64824f5893776c3e0bcf9c928e286c55d0da3e64736f6c63430008110033";

type SortingsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SortingsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sortings__factory extends ContractFactory {
  constructor(...args: SortingsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Sortings";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Sortings> {
    return super.deploy(overrides || {}) as Promise<Sortings>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Sortings {
    return super.attach(address) as Sortings;
  }
  connect(signer: Signer): Sortings__factory {
    return super.connect(signer) as Sortings__factory;
  }
  static readonly contractName: "Sortings";
  public readonly contractName: "Sortings";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SortingsInterface {
    return new utils.Interface(_abi) as SortingsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Sortings {
    return new Contract(address, _abi, signerOrProvider) as Sortings;
  }
}
