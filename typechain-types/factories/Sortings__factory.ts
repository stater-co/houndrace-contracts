/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sortings, SortingsInterface } from "../Sortings";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "power",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "players",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "rankPlayers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610797610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80633e96a35b1461003a575b600080fd5b610054600480360381019061004f9190610436565b61006b565b604051610062929190610593565b60405180910390f35b6060806000849050600084905080820361008c57868893509350505061028a565b6000886002888861009d91906105f9565b6100a7919061065c565b886100b2919061068d565b815181106100c3576100c26106c1565b5b602002602001015190505b818311610252575b808984815181106100ea576100e96106c1565b5b6020026020010151111561010b578280610103906106f0565b9350506100d6565b5b88828151811061011f5761011e6106c1565b5b602002602001015181111561014157818061013990610738565b92505061010c565b81831161024d5788828151811061015b5761015a6106c1565b5b6020026020010151898481518110610176576101756106c1565b5b60200260200101518a8581518110610191576101906106c1565b5b602002602001018b85815181106101ab576101aa6106c1565b5b60200260200101828152508281525050508782815181106101cf576101ce6106c1565b5b60200260200101518884815181106101ea576101e96106c1565b5b6020026020010151898581518110610205576102046106c1565b5b602002602001018a858151811061021f5761021e6106c1565b5b6020026020010182815250828152505050828061023b906106f0565b935050818061024990610738565b9250505b6100ce565b81871015610269576102668989898561006b565b50505b858310156102805761027d8989858961006b565b50505b8789945094505050505b94509492505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102f5826102ac565b810181811067ffffffffffffffff82111715610314576103136102bd565b5b80604052505050565b6000610327610293565b905061033382826102ec565b919050565b600067ffffffffffffffff821115610353576103526102bd565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61037c81610369565b811461038757600080fd5b50565b60008135905061039981610373565b92915050565b60006103b26103ad84610338565b61031d565b905080838252602082019050602084028301858111156103d5576103d4610364565b5b835b818110156103fe57806103ea888261038a565b8452602084019350506020810190506103d7565b5050509392505050565b600082601f83011261041d5761041c6102a7565b5b813561042d84826020860161039f565b91505092915050565b600080600080608085870312156104505761044f61029d565b5b600085013567ffffffffffffffff81111561046e5761046d6102a2565b5b61047a87828801610408565b945050602085013567ffffffffffffffff81111561049b5761049a6102a2565b5b6104a787828801610408565b93505060406104b88782880161038a565b92505060606104c98782880161038a565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61050a81610369565b82525050565b600061051c8383610501565b60208301905092915050565b6000602082019050919050565b6000610540826104d5565b61054a81856104e0565b9350610555836104f1565b8060005b8381101561058657815161056d8882610510565b975061057883610528565b925050600181019050610559565b5085935050505092915050565b600060408201905081810360008301526105ad8185610535565b905081810360208301526105c18184610535565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061060482610369565b915061060f83610369565b9250828203905081811115610627576106266105ca565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061066782610369565b915061067283610369565b9250826106825761068161062d565b5b828204905092915050565b600061069882610369565b91506106a383610369565b92508282019050808211156106bb576106ba6105ca565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006106fb82610369565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361072d5761072c6105ca565b5b600182019050919050565b600061074382610369565b915060008203610756576107556105ca565b5b60018203905091905056fea2646970667358221220df0ecf444c73ee7f8ffdbdae26d85c3333971df4edcef247b9be0b8d554f5aa664736f6c63430008110033";

type SortingsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SortingsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sortings__factory extends ContractFactory {
  constructor(...args: SortingsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Sortings";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Sortings> {
    return super.deploy(overrides || {}) as Promise<Sortings>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Sortings {
    return super.attach(address) as Sortings;
  }
  connect(signer: Signer): Sortings__factory {
    return super.connect(signer) as Sortings__factory;
  }
  static readonly contractName: "Sortings";
  public readonly contractName: "Sortings";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SortingsInterface {
    return new utils.Interface(_abi) as SortingsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Sortings {
    return new Contract(address, _abi, signerOrProvider) as Sortings;
  }
}
