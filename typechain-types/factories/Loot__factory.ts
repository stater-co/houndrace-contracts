/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Loot, LootInterface, Constructor } from "../Loot";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "lootBoxURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "secondLootBoxURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeOpened",
            type: "bool",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NewLootBox",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "lootBoxURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "secondLootBoxURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canBeOpened",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootboxes",
    outputs: [
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "hounds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
        ],
        internalType: "struct Box.Struct[]",
        name: "boxes",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028e8380380620028e883398101604081905262000034916200028a565b80516020820151620000463362000103565b600162000054838262000428565b50600262000063828262000428565b5050815182915060099081906200007b908262000428565b506020820151600182019062000092908262000428565b5060408201516002820190620000a9908262000428565b5060608201516003820190620000c0908262000428565b5060808201516004909101805460a0909301511515600160a01b026001600160a81b03199093166001600160a01b039092169190911791909117905550620004f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156200018e576200018e62000153565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620001bf57620001bf62000153565b604052919050565b600082601f830112620001d957600080fd5b81516001600160401b03811115620001f557620001f562000153565b60206200020b601f8301601f1916820162000194565b82815285828487010111156200022057600080fd5b60005b838110156200024057858101830151828201840152820162000223565b83811115620002525760008385840101525b5095945050505050565b80516001600160a01b03811681146200027457600080fd5b919050565b805180151581146200027457600080fd5b6000602082840312156200029d57600080fd5b81516001600160401b0380821115620002b557600080fd5b9083019060c08286031215620002ca57600080fd5b620002d462000169565b825182811115620002e457600080fd5b620002f287828601620001c7565b8252506020830151828111156200030857600080fd5b6200031687828601620001c7565b6020830152506040830151828111156200032f57600080fd5b6200033d87828601620001c7565b6040830152506060830151828111156200035657600080fd5b6200036487828601620001c7565b60608301525062000378608084016200025c565b60808201526200038b60a0840162000279565b60a082015295945050505050565b600181811c90821680620003ae57607f821691505b602082108103620003cf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200042357600081815260208120601f850160051c81016020861015620003fe5750805b601f850160051c820191505b818110156200041f578281556001016200040a565b5050505b505050565b81516001600160401b0381111562000444576200044462000153565b6200045c8162000455845462000399565b84620003d5565b602080601f8311600181146200049457600084156200047b5750858301515b600019600386901b1c1916600185901b1785556200041f565b600085815260208120601f198616915b82811015620004c557888601518255948401946001909101908401620004a4565b5085821015620004e45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6123e480620005046000396000f3fe6080604052600436106101055760003560e01c806301ffc9a71461010a57806306fdde031461013f578063081812fc14610161578063095ea7b314610199578063150b7a02146101bb57806323b872dd146101f45780632a24e1771461021457806342842e0e146102435780636352211e14610263578063690e7c091461028357806370a0823114610296578063715018a6146102c45780638da5cb5b146102d957806395d89b41146102ee578063a22cb46514610303578063aad9c1d314610323578063af640d0f14610343578063b88d4fde14610359578063c87b56dd14610379578063d8de658714610399578063e985e9c5146103c0578063f2fde38b146103e0575b600080fd5b34801561011657600080fd5b5061012a610125366004611a96565b610400565b60405190151581526020015b60405180910390f35b34801561014b57600080fd5b50610154610452565b6040516101369190611b0b565b34801561016d57600080fd5b5061018161017c366004611b1e565b6104e4565b6040516001600160a01b039091168152602001610136565b3480156101a557600080fd5b506101b96101b4366004611b53565b61050b565b005b3480156101c757600080fd5b506101db6101d6366004611c42565b610625565b6040516001600160e01b03199091168152602001610136565b34801561020057600080fd5b506101b961020f366004611cbd565b610636565b34801561022057600080fd5b5061023461022f366004611b1e565b610667565b60405161013693929190611cf9565b34801561024f57600080fd5b506101b961025e366004611cbd565b61071b565b34801561026f57600080fd5b5061018161027e366004611b1e565b610736565b6101b9610291366004611b1e565b61076b565b3480156102a257600080fd5b506102b66102b1366004611d27565b610ae1565b604051908152602001610136565b3480156102d057600080fd5b506101b9610b67565b3480156102e557600080fd5b50610181610b7b565b3480156102fa57600080fd5b50610154610b8a565b34801561030f57600080fd5b506101b961031e366004611d50565b610b99565b34801561032f57600080fd5b506101b961033e366004611e15565b610ba8565b34801561034f57600080fd5b506102b660085481565b34801561036557600080fd5b506101b9610374366004611c42565b610bee565b34801561038557600080fd5b50610154610394366004611b1e565b610c26565b3480156103a557600080fd5b506103ae610d2e565b60405161013696959493929190611f55565b3480156103cc57600080fd5b5061012a6103db366004611fc6565b610f86565b3480156103ec57600080fd5b506101b96103fb366004611d27565b610fb4565b60006001600160e01b031982166380ac58cd60e01b148061043157506001600160e01b03198216635b5e139f60e01b145b8061044c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461046190611ff9565b80601f016020809104026020016040519081016040528092919081815260200182805461048d90611ff9565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b5050505050905090565b60006104ef8261102a565b506000908152600560205260409020546001600160a01b031690565b600061051682610736565b9050806001600160a01b0316836001600160a01b0316036105885760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105a457506105a48133610f86565b6106165760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161057f565b610620838361104f565b505050565b630a85bd0160e11b5b949350505050565b61064033826110bd565b61065c5760405162461bcd60e51b815260040161057f90612033565b61062083838361111b565b600e6020526000908152604090208054819061068290611ff9565b80601f01602080910402602001604051908101604052809291908181526020018280546106ae90611ff9565b80156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b50505050600183015460039093015491926001600160a01b031691905083565b61062083838360405180602001604052806000815250610bee565b6000818152600360205260408120546001600160a01b03168061044c5760405162461bcd60e51b815260040161057f90612081565b600d54600160a01b900460ff16801561079457506000818152600e602052604090206002015415155b61079d57600080fd5b6000818152600e60205260409020600101546001600160a01b03161561084f576000818152600e602052604090819020600181015460039091015491516323b872dd60e01b81526001600160a01b03909116916323b872dd916108079133913091906004016120b3565b6020604051808303816000875af1158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a91906120d7565b610865565b6000818152600e60205260409020600301543410155b61086e57600080fd5b600d546000828152600e6020526040902060020180546001600160a01b03909216916323b872dd9130913391906108a79060019061210a565b815481106108b7576108b7612121565b90600052602060002001546040518463ffffffff1660e01b81526004016108e0939291906120b3565b600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b5050506000828152600e60205260409020600201546001915061093290829061210a565b10610a2a576000818152600e602090815260408083206002018054825181850281018501909352808352919290919083018282801561099057602002820191906000526020600020905b81548152602001906001019080831161097c575b5050506000858152600e602052604081209394506109b49360020192509050611a02565b60005b600182516109c5919061210a565b811015610a2357600e60008481526020019081526020016000206002018282815181106109f4576109f4612121565b60209081029190910181015182546001810184556000938452919092200155610a1c81612137565b90506109b7565b5050610a47565b6000818152600e60205260408120610a4791600290910190611a02565b610ade8160096003018054610a5b90611ff9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8790611ff9565b8015610ad45780601f10610aa957610100808354040283529160200191610ad4565b820191906000526020600020905b815481529060010190602001808311610ab757829003601f168201915b50505050506112a5565b50565b60006001600160a01b038216610b4b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161057f565b506001600160a01b031660009081526004602052604090205490565b610b6f611329565b610b796000611388565b565b6000546001600160a01b031690565b60606002805461046190611ff9565b610ba43383836113d8565b5050565b610bb0611329565b60005b8151811015610ba457610bde828281518110610bd157610bd1612121565b60200260200101516114a2565b610be781612137565b9050610bb3565b610bf833836110bd565b610c145760405162461bcd60e51b815260040161057f90612033565b610c2084848484611620565b50505050565b6060610c318261102a565b60008281526007602052604081208054610c4a90611ff9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7690611ff9565b8015610cc35780601f10610c9857610100808354040283529160200191610cc3565b820191906000526020600020905b815481529060010190602001808311610ca657829003601f168201915b505050505090506000610ce160408051602081019091526000815290565b90508051600003610cf3575092915050565b815115610d25578082604051602001610d0d929190612150565b60405160208183030381529060405292505050919050565b61062e84611653565b600980548190610d3d90611ff9565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6990611ff9565b8015610db65780601f10610d8b57610100808354040283529160200191610db6565b820191906000526020600020905b815481529060010190602001808311610d9957829003601f168201915b505050505090806001018054610dcb90611ff9565b80601f0160208091040260200160405190810160405280929190818152602001828054610df790611ff9565b8015610e445780601f10610e1957610100808354040283529160200191610e44565b820191906000526020600020905b815481529060010190602001808311610e2757829003601f168201915b505050505090806002018054610e5990611ff9565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8590611ff9565b8015610ed25780601f10610ea757610100808354040283529160200191610ed2565b820191906000526020600020905b815481529060010190602001808311610eb557829003601f168201915b505050505090806003018054610ee790611ff9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1390611ff9565b8015610f605780601f10610f3557610100808354040283529160200191610f60565b820191906000526020600020905b815481529060010190602001808311610f4357829003601f168201915b505050600490930154919250506001600160a01b0381169060ff600160a01b9091041686565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b610fbc611329565b6001600160a01b0381166110215760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057f565b610ade81611388565b611033816116c7565b610ade5760405162461bcd60e51b815260040161057f90612081565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061108482610736565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806110c983610736565b9050806001600160a01b0316846001600160a01b031614806110f057506110f08185610f86565b8061062e5750836001600160a01b0316611109846104e4565b6001600160a01b031614949350505050565b826001600160a01b031661112e82610736565b6001600160a01b0316146111925760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161057f565b6001600160a01b0382166111f45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161057f565b6111ff60008261104f565b6001600160a01b038316600090815260046020526040812080546001929061122890849061210a565b90915550506001600160a01b038216600090815260046020526040812080546001929061125690849061217f565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061238f83398151915291a4505050565b6112ae826116c7565b6113115760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161057f565b600082815260076020526040902061062082826121e5565b33611332610b7b565b6001600160a01b031614610b795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036114355760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161057f565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60005b81604001515181101561154c57600d54604083015180516001600160a01b03909216916342842e0e913391309190869081106114e3576114e3612121565b60200260200101516040518463ffffffff1660e01b8152600401611509939291906120b3565b600060405180830381600087803b15801561152357600080fd5b505af1158015611537573d6000803e3d6000fd5b505050508061154590612137565b90506114a5565b50611559336008546116e4565b61156f60085460096002018054610a5b90611ff9565b6008546000908152600e602052604090208151829190819061159190826121e5565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516115d09260028501920190611a20565b50606091909101516003909101556008546040517f1259f6622fe1924279f68a86e3357c7eacbdd119671aa96e56817afa0a75659590600090a260086000815461161990612137565b9091555050565b61162b84848461111b565b61163784848484611804565b610c205760405162461bcd60e51b815260040161057f906122a4565b606061165e8261102a565b600061167560408051602081019091526000815290565b9050600081511161169557604051806020016040528060008152506116c0565b8061169f84611902565b6040516020016116b0929190612150565b6040516020818303038152906040525b9392505050565b6000908152600360205260409020546001600160a01b0316151590565b6001600160a01b03821661173a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161057f565b611743816116c7565b1561178f5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015260640161057f565b6001600160a01b03821660009081526004602052604081208054600192906117b890849061217f565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b038616908117909155905183929060008051602061238f833981519152908290a45050565b60006001600160a01b0384163b156118fa57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118489033908990889088906004016122f6565b6020604051808303816000875af1925050508015611883575060408051601f3d908101601f1916820190925261188091810190612333565b60015b6118e0573d8080156118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b5080516000036118d85760405162461bcd60e51b815260040161057f906122a4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061062e565b50600161062e565b6060816000036119295750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611953578061193d81612137565b915061194c9050600a83612366565b915061192d565b6000816001600160401b0381111561196d5761196d611b7d565b6040519080825280601f01601f191660200182016040528015611997576020820181803683370190505b5090505b841561062e576119ac60018361210a565b91506119b9600a8661237a565b6119c490603061217f565b60f81b8183815181106119d9576119d9612121565b60200101906001600160f81b031916908160001a9053506119fb600a86612366565b945061199b565b5080546000825590600052602060002090810190610ade9190611a6b565b828054828255906000526020600020908101928215611a5b579160200282015b82811115611a5b578251825591602001919060010190611a40565b50611a67929150611a6b565b5090565b5b80821115611a675760008155600101611a6c565b6001600160e01b031981168114610ade57600080fd5b600060208284031215611aa857600080fd5b81356116c081611a80565b60005b83811015611ace578181015183820152602001611ab6565b83811115610c205750506000910152565b60008151808452611af7816020860160208601611ab3565b601f01601f19169290920160200192915050565b6020815260006116c06020830184611adf565b600060208284031215611b3057600080fd5b5035919050565b80356001600160a01b0381168114611b4e57600080fd5b919050565b60008060408385031215611b6657600080fd5b611b6f83611b37565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611bb557611bb5611b7d565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611be357611be3611b7d565b604052919050565b60006001600160401b03831115611c0457611c04611b7d565b611c17601f8401601f1916602001611bbb565b9050828152838383011115611c2b57600080fd5b828260208301376000602084830101529392505050565b60008060008060808587031215611c5857600080fd5b611c6185611b37565b9350611c6f60208601611b37565b92506040850135915060608501356001600160401b03811115611c9157600080fd5b8501601f81018713611ca257600080fd5b611cb187823560208401611beb565b91505092959194509250565b600080600060608486031215611cd257600080fd5b611cdb84611b37565b9250611ce960208501611b37565b9150604084013590509250925092565b606081526000611d0c6060830186611adf565b6001600160a01b039490941660208301525060400152919050565b600060208284031215611d3957600080fd5b6116c082611b37565b8015158114610ade57600080fd5b60008060408385031215611d6357600080fd5b611d6c83611b37565b91506020830135611d7c81611d42565b809150509250929050565b60006001600160401b03821115611da057611da0611b7d565b5060051b60200190565b600082601f830112611dbb57600080fd5b81356020611dd0611dcb83611d87565b611bbb565b82815260059290921b84018101918181019086841115611def57600080fd5b8286015b84811015611e0a5780358352918301918301611df3565b509695505050505050565b60006020808385031215611e2857600080fd5b82356001600160401b0380821115611e3f57600080fd5b818501915085601f830112611e5357600080fd5b8135611e61611dcb82611d87565b81815260059190911b83018401908481019088831115611e8057600080fd5b8585015b83811015611f4857803585811115611e9b57600080fd5b86016080818c03601f19011215611eb25760008081fd5b611eba611b93565b8882013587811115611ecc5760008081fd5b8201603f81018d13611ede5760008081fd5b6040611ef08e8c840135838501611beb565b8352611efd818501611b37565b8b840152606091508184013589811115611f175760008081fd5b611f258f8d83880101611daa565b918401919091525060809290920135918101919091528352918601918601611e84565b5098975050505050505050565b60c081526000611f6860c0830189611adf565b8281036020840152611f7a8189611adf565b90508281036040840152611f8e8188611adf565b90508281036060840152611fa28187611adf565b6001600160a01b03959095166080840152505090151560a090910152949350505050565b60008060408385031215611fd957600080fd5b611fe283611b37565b9150611ff060208401611b37565b90509250929050565b600181811c9082168061200d57607f821691505b60208210810361202d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156120e957600080fd5b81516116c081611d42565b634e487b7160e01b600052601160045260246000fd5b60008282101561211c5761211c6120f4565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018201612149576121496120f4565b5060010190565b60008351612162818460208801611ab3565b835190830190612176818360208801611ab3565b01949350505050565b60008219821115612192576121926120f4565b500190565b601f82111561062057600081815260208120601f850160051c810160208610156121be5750805b601f850160051c820191505b818110156121dd578281556001016121ca565b505050505050565b81516001600160401b038111156121fe576121fe611b7d565b6122128161220c8454611ff9565b84612197565b602080601f831160018114612247576000841561222f5750858301515b600019600386901b1c1916600185901b1785556121dd565b600085815260208120601f198616915b8281101561227657888601518255948401946001909101908401612257565b50858210156122945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061232990830184611adf565b9695505050505050565b60006020828403121561234557600080fd5b81516116c081611a80565b634e487b7160e01b600052601260045260246000fd5b60008261237557612375612350565b500490565b60008261238957612389612350565b50069056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205e959b6cdcd4e2b4375dd69a9889b2692295e5934cb5e5136b5f9a432b98c3d664736f6c634300080f0033";

type LootConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Loot__factory extends ContractFactory {
  constructor(...args: LootConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Loot";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Loot> {
    return super.deploy(input, overrides || {}) as Promise<Loot>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Loot {
    return super.attach(address) as Loot;
  }
  connect(signer: Signer): Loot__factory {
    return super.connect(signer) as Loot__factory;
  }
  static readonly contractName: "Loot";
  public readonly contractName: "Loot";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootInterface {
    return new utils.Interface(_abi) as LootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Loot {
    return new Contract(address, _abi, signerOrProvider) as Loot;
  }
}
