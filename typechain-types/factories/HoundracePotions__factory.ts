/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HoundracePotions,
  HoundracePotionsInterface,
} from "../HoundracePotions";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010aa380380620010aa833981016040819052620000349162000182565b6200003f3362000065565b60046200004d83826200027b565b5060056200005c82826200027b565b50505062000347565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000dd57600080fd5b81516001600160401b0380821115620000fa57620000fa620000b5565b604051601f8301601f19908116603f01168101908282118183101715620001255762000125620000b5565b816040528381526020925086838588010111156200014257600080fd5b600091505b8382101562000166578582018301518183018401529082019062000147565b83821115620001785760008385830101525b9695505050505050565b600080604083850312156200019657600080fd5b82516001600160401b0380821115620001ae57600080fd5b620001bc86838701620000cb565b93506020850151915080821115620001d357600080fd5b50620001e285828601620000cb565b9150509250929050565b600181811c908216806200020157607f821691505b6020821081036200022257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027657600081815260208120601f850160051c81016020861015620002515750805b601f850160051c820191505b8181101562000272578281556001016200025d565b5050505b505050565b81516001600160401b03811115620002975762000297620000b5565b620002af81620002a88454620001ec565b8462000228565b602080601f831160018114620002e75760008415620002ce5750858301515b600019600386901b1c1916600185901b17855562000272565b600085815260208120601f198616915b828110156200031857888601518255948401946001909101908401620002f7565b5085821015620003375787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d5380620003576000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca578063095ea7b3146100e857806318160ddd1461010b57806323b872dd1461011d578063313ce56714610130578063395093511461013f57806340c10f191461015257806370a0823114610167578063715018a6146101905780638da5cb5b1461019857806395d89b41146101ad578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db578063f2fde38b14610214575b600080fd5b6100d2610227565b6040516100df9190610b7a565b60405180910390f35b6100fb6100f6366004610bb0565b6102b9565b60405190151581526020016100df565b6003545b6040519081526020016100df565b6100fb61012b366004610bda565b6102cf565b604051601281526020016100df565b6100fb61014d366004610bb0565b610448565b610165610160366004610bb0565b610484565b005b61010f610175366004610c16565b6001600160a01b031660009081526001602052604090205490565b610165610559565b6101a061056d565b6040516100df9190610c31565b6100d261057c565b6100fb6101c3366004610bb0565b61058b565b6100fb6101d6366004610bb0565b610624565b61010f6101e9366004610c45565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610165610222366004610c16565b610631565b60606004805461023690610c78565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610c78565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b60006102c63384846106aa565b50600192915050565b60006102fa60405180604001604052806008815260200167021b0b63632b91d160c51b8152506107ce565b61030333610811565b61030e848484610854565b610333604051806040016040528060048152602001636f6b203160e01b8152506107ce565b6001600160a01b03841660009081526002602090815260408083203384528252918290205482518084019093526005835264037b59019160dd1b9183019190915290610380908285610a11565b828110156103e65760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61040b604051806040016040528060048152602001636f6b203360e01b8152506107ce565b61041885338584036106aa565b61043d604051806040016040528060048152602001631bdac80d60e21b8152506107ce565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102c691859061047f908690610cb2565b6106aa565b61048c610a5d565b6001600160a01b0382166104e25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103dd565b80600360008282546104f49190610cb2565b90915550506001600160a01b03821660009081526001602052604081208054839290610521908490610cb2565b90915550506040518181526001600160a01b03831690600090600080516020610cfe8339815191529060200160405180910390a35050565b610561610a5d565b61056b6000610abc565b565b6000546001600160a01b031690565b60606005805461023690610c78565b3360009081526002602090815260408083206001600160a01b03861684529091528120548281101561060d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dd565b61061a33858584036106aa565b5060019392505050565b60006102c6338484610854565b610639610a5d565b6001600160a01b03811661069e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b6106a781610abc565b50565b6001600160a01b03831661070c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dd565b6001600160a01b03821661076d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6106a7816040516024016107e29190610b7a565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610b0c565b6106a7816040516024016108259190610c31565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610b0c565b6001600160a01b0383166108b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b03821661091a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b038316600090815260016020526040902054818110156109925760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dd565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906109c9908490610cb2565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610cfe83398151915284604051610a0391815260200190565b60405180910390a350505050565b610a58838383604051602401610a2993929190610cd8565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052610b0c565b505050565b33610a6661056d565b6001600160a01b03161461056b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b81811015610b5357602081850181015186830182015201610b37565b81811115610b65576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b8d6020830184610b2d565b9392505050565b80356001600160a01b0381168114610bab57600080fd5b919050565b60008060408385031215610bc357600080fd5b610bcc83610b94565b946020939093013593505050565b600080600060608486031215610bef57600080fd5b610bf884610b94565b9250610c0660208501610b94565b9150604084013590509250925092565b600060208284031215610c2857600080fd5b610b8d82610b94565b6001600160a01b0391909116815260200190565b60008060408385031215610c5857600080fd5b610c6183610b94565b9150610c6f60208401610b94565b90509250929050565b600181811c90821680610c8c57607f821691505b602082108103610cac57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610cd357634e487b7160e01b600052601160045260246000fd5b500190565b606081526000610ceb6060830186610b2d565b6020830194909452506040015291905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220050a73443710a2ec7443d662127b9dcccbf8bac57117ff131614dbd7c068aabe64736f6c634300080f0033";

type HoundracePotionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoundracePotionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HoundracePotions__factory extends ContractFactory {
  constructor(...args: HoundracePotionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "HoundracePotions";
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HoundracePotions> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<HoundracePotions>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): HoundracePotions {
    return super.attach(address) as HoundracePotions;
  }
  connect(signer: Signer): HoundracePotions__factory {
    return super.connect(signer) as HoundracePotions__factory;
  }
  static readonly contractName: "HoundracePotions";
  public readonly contractName: "HoundracePotions";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoundracePotionsInterface {
    return new utils.Interface(_abi) as HoundracePotionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HoundracePotions {
    return new Contract(address, _abi, signerOrProvider) as HoundracePotions;
  }
}
