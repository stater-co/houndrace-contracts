/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Generator,
  GeneratorInterface,
  GeneratorConstructor,
} from "../Generator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "allowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "generate",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "participants",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "terrain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "theRandomness",
        type: "uint256",
      },
    ],
    name: "simulateClassicRace",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001abf38038062001abf8339810160408190526200003491620001ac565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e0830151600880548316918416919091179055610100909201516009805490931691161790555062000277565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405161012081016001600160401b03811182821017156200018957634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001a757600080fd5b919050565b60006101208284031215620001c057600080fd5b620001ca62000157565b620001d5836200018f565b8152620001e5602084016200018f565b6020820152620001f8604084016200018f565b60408201526200020b606084016200018f565b60608201526200021e608084016200018f565b60808201526200023160a084016200018f565b60a08201526200024460c084016200018f565b60c08201526200025760e084016200018f565b60e08201526101006200026c8185016200018f565b908201529392505050565b61183880620002876000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c857806393380e78146100f0578063d8de658714610111578063f2fde38b146101c957600080fd5b80633a4057f614610082578063715018a6146100ab57806377479c9c146100b5575b600080fd5b610095610090366004610d07565b6101dc565b6040516100a2919061104b565b60405180910390f35b6100b3610281565b005b6100b36100c33660046111a8565b610295565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a2565b6101036100fe36600461125e565b610384565b6040516100a29291906112ac565b6001546002546003546004546005546006546007546008546009546101629873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e0830152909116610100820152610120016100a2565b6100b36101d73660046112d1565b610452565b6101e4610604565b600554604051600091829173ffffffffffffffffffffffffffffffffffffffff9091169061021590839036906112f5565b600060405180830381855af49150503d8060008114610250576040519150601f19603f3d011682016040523d82523d6000602084013e610255565b606091505b50915091508161026457600080fd5b8080602001905181019061027891906115f7565b95945050505050565b61028961050e565b610293600061058f565b565b61029d61050e565b8051600180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e083015160088054831691841691909117905561010090920151600980549093169116179055565b6007546040517f93380e78000000000000000000000000000000000000000000000000000000008152606091829173ffffffffffffffffffffffffffffffffffffffff909116906393380e78906103e390889088908890600401611779565b600060405180830381865afa158015610400573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610446919081019061179e565b91509150935093915050565b61045a61050e565b73ffffffffffffffffffffffffffffffffffffffff8116610502576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61050b8161058f565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f9565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060800160405280610617610632565b81526020016000815260200160008152602001606081525090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016106db6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610732576107326106e0565b60405290565b604051610120810167ffffffffffffffff81118282101715610732576107326106e0565b6040516080810167ffffffffffffffff81118282101715610732576107326106e0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107c6576107c66106e0565b604052919050565b600067ffffffffffffffff8211156107e8576107e86106e0565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261082557600080fd5b8135610838610833826107ce565b61077f565b81815284602083860101111561084d57600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461050b57600080fd5b80356108978161086a565b919050565b600067ffffffffffffffff8211156108b6576108b66106e0565b5060051b60200190565b600082601f8301126108d157600080fd5b813560206108e16108338361089c565b82815260059290921b8401810191818101908684111561090057600080fd5b8286015b8481101561091b5780358352918301918301610904565b509695505050505050565b600082601f83011261093757600080fd5b813560206109476108338361089c565b82815260059290921b8401810191818101908684111561096657600080fd5b8286015b8481101561091b57803561097d8161086a565b835291830191830161096a565b600082601f83011261099b57600080fd5b813560206109ab6108338361089c565b82815260059290921b840181019181810190868411156109ca57600080fd5b8286015b8481101561091b57803567ffffffffffffffff8111156109ee5760008081fd5b6109fc8986838b01016108c0565b8452509183019183016109ce565b6004811061050b57600080fd5b600082601f830112610a2857600080fd5b81356020610a386108338361089c565b82815260059290921b84018101918181019086841115610a5757600080fd5b8286015b8481101561091b578035610a6e81610a0a565b8352918301918301610a5b565b600060c08284031215610a8d57600080fd5b610a9561070f565b9050813567ffffffffffffffff80821115610aaf57600080fd5b610abb85838601610926565b83526020840135915080821115610ad157600080fd5b610add85838601610926565b60208401526040840135915080821115610af657600080fd5b610b0285838601610926565b60408401526060840135915080821115610b1b57600080fd5b610b278583860161098a565b60608401526080840135915080821115610b4057600080fd5b610b4c8583860161098a565b608084015260a0840135915080821115610b6557600080fd5b50610b7284828501610a17565b60a08301525092915050565b60006101208284031215610b9157600080fd5b610b99610738565b9050813567ffffffffffffffff80821115610bb357600080fd5b610bbf85838601610814565b8352610bcd6020850161088c565b6020840152610bde6040850161088c565b60408401526060840135915080821115610bf757600080fd5b610c03858386016108c0565b60608401526080840135915080821115610c1c57600080fd5b610c28858386016108c0565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115610c6157600080fd5b610c6d86828701610a7b565b8385015250505092915050565b803563ffffffff8116811461089757600080fd5b600082601f830112610c9f57600080fd5b81356020610caf6108338361089c565b82815260059290921b84018101918181019086841115610cce57600080fd5b8286015b8481101561091b57803560078110610cea5760008081fd5b8352918301918301610cd2565b8035801515811461089757600080fd5b60008060408385031215610d1a57600080fd5b823567ffffffffffffffff80821115610d3257600080fd5b908401906101208287031215610d4757600080fd5b610d4f610738565b823582811115610d5e57600080fd5b610d6a88828601610b7e565b825250602083013560208201526040830135604082015260608301356060820152610d9760808401610c7a565b6080820152610da860a08401610c7a565b60a0820152610db960c08401610c7a565b60c082015260e083013582811115610dd057600080fd5b610ddc88828601610c8e565b60e0830152506101009150610df2828401610cf7565b9181019190915295602094909401359450505050565b60005b83811015610e23578181015183820152602001610e0b565b50506000910152565b60008151808452610e44816020860160208601610e08565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015610ea657815187529582019590820190600101610e8a565b509495945050505050565b600081518084526020808501945080840160005b83811015610ea657815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610ec5565b600081518084526020808501808196508360051b8101915082860160005b85811015610f3f578284038952610f2d848351610e76565b98850198935090840190600101610f15565b5091979650505050505050565b6000815160c08452610f6160c0850182610eb1565b905060208084015185830382870152610f7a8382610eb1565b92505060408401518583036040870152610f948382610eb1565b92505060608401518583036060870152610fae8382610ef7565b92505060808401518583036080870152610fc88382610ef7565b60a08681015188830391890191909152805180835290840194506000925090830190825b8181101561103e578551600480821061102b577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101610fec565b5090979650505050505050565b60208152600082516080602084015280516101208060a08601526110736101c0860183610e2c565b9150602083015161109c60c087018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015173ffffffffffffffffffffffffffffffffffffffff811660e08701525060608301517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff606101008188860301818901526110fb8584610e76565b9450608086015192508188860301848901526111178584610e76565b60a08701516101408a015260c08701516101608a015260e08701516101808a01529501518786039091016101a0880152939250611158915082905083610f4c565b915050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526102788282610e2c565b600061012082840312156111bb57600080fd5b6111c3610738565b6111cc8361088c565b81526111da6020840161088c565b60208201526111eb6040840161088c565b60408201526111fc6060840161088c565b606082015261120d6080840161088c565b608082015261121e60a0840161088c565b60a082015261122f60c0840161088c565b60c082015261124060e0840161088c565b60e082015261010061125381850161088c565b908201529392505050565b60008060006060848603121561127357600080fd5b833567ffffffffffffffff81111561128a57600080fd5b611296868287016108c0565b9660208601359650604090950135949350505050565b6040815260006112bf6040830185610e76565b82810360208401526102788185610e76565b6000602082840312156112e357600080fd5b81356112ee8161086a565b9392505050565b8183823760009101908152919050565b600082601f83011261131657600080fd5b8151611324610833826107ce565b81815284602083860101111561133957600080fd5b61134a826020830160208701610e08565b949350505050565b80516108978161086a565b600082601f83011261136e57600080fd5b8151602061137e6108338361089c565b82815260059290921b8401810191818101908684111561139d57600080fd5b8286015b8481101561091b57805183529183019183016113a1565b600082601f8301126113c957600080fd5b815160206113d96108338361089c565b82815260059290921b840181019181810190868411156113f857600080fd5b8286015b8481101561091b57805161140f8161086a565b83529183019183016113fc565b600082601f83011261142d57600080fd5b8151602061143d6108338361089c565b82815260059290921b8401810191818101908684111561145c57600080fd5b8286015b8481101561091b57805167ffffffffffffffff8111156114805760008081fd5b61148e8986838b010161135d565b845250918301918301611460565b600082601f8301126114ad57600080fd5b815160206114bd6108338361089c565b82815260059290921b840181019181810190868411156114dc57600080fd5b8286015b8481101561091b5780516114f381610a0a565b83529183019183016114e0565b600060c0828403121561151257600080fd5b61151a61070f565b9050815167ffffffffffffffff8082111561153457600080fd5b611540858386016113b8565b8352602084015191508082111561155657600080fd5b611562858386016113b8565b6020840152604084015191508082111561157b57600080fd5b611587858386016113b8565b604084015260608401519150808211156115a057600080fd5b6115ac8583860161141c565b606084015260808401519150808211156115c557600080fd5b6115d18583860161141c565b608084015260a08401519150808211156115ea57600080fd5b50610b728482850161149c565b60006020828403121561160957600080fd5b815167ffffffffffffffff8082111561162157600080fd5b908301906080828603121561163557600080fd5b61163d61075c565b82518281111561164c57600080fd5b8301610120818803121561165f57600080fd5b611667610738565b81518481111561167657600080fd5b61168289828501611305565b82525061169160208301611352565b60208201526116a260408301611352565b60408201526060820151848111156116b957600080fd5b6116c58982850161135d565b6060830152506080820151848111156116dd57600080fd5b6116e98982850161135d565b60808301525060a082015160a082015260c082015160c082015260e082015160e0820152610100808301518581111561172157600080fd5b61172d8a828601611500565b8284015250508083525050602083015160208201526040830151604082015260608301518281111561175e57600080fd5b61176a87828601611305565b60608301525095945050505050565b60608152600061178c6060830186610e76565b60208301949094525060400152919050565b600080604083850312156117b157600080fd5b825167ffffffffffffffff808211156117c957600080fd5b6117d58683870161135d565b935060208501519150808211156117eb57600080fd5b506117f88582860161135d565b915050925092905056fea264697066735822122058ef66517ffa44e7ce4fc852d1d87539ba87ab39e6b6c32838bb0f217b67d30c64736f6c63430008110033";

type GeneratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Generator__factory extends ContractFactory {
  constructor(...args: GeneratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Generator";
  }

  deploy(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Generator> {
    return super.deploy(input, overrides || {}) as Promise<Generator>;
  }
  getDeployTransaction(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Generator {
    return super.attach(address) as Generator;
  }
  connect(signer: Signer): Generator__factory {
    return super.connect(signer) as Generator__factory;
  }
  static readonly contractName: "Generator";
  public readonly contractName: "Generator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneratorInterface {
    return new utils.Interface(_abi) as GeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Generator {
    return new Contract(address, _abi, signerOrProvider) as Generator;
  }
}
