/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Hounds, HoundsInterface, Constructor } from "../Hounds";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "staminaRefillCurrency",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "staminaLastUpdate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staminaRefill1x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint32",
                    name: "staminaValue",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "staminaPerTimeUnit",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "staminaCap",
                    type: "uint32",
                  },
                ],
                internalType: "struct Hound.Stamina",
                name: "stamina",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "breedingFeeCurrency",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "breedingCooldownCurrency",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "lastBreed",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "breedingCooldown",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "breedingFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "breedingCooldownTimeUnit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "refillBreedingCooldownCost",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "availableToBreed",
                    type: "bool",
                  },
                ],
                internalType: "struct Hound.Breeding",
                name: "breeding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maleParent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "femaleParent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "generation",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "birthDate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "specie",
                    type: "uint256",
                  },
                  {
                    internalType: "uint32[72]",
                    name: "geneticSequence",
                    type: "uint32[72]",
                  },
                  {
                    internalType: "string",
                    name: "extensionTraits",
                    type: "string",
                  },
                ],
                internalType: "struct Hound.Identity",
                name: "identity",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "token_uri",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "runningOn",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "custom",
                    type: "bool",
                  },
                ],
                internalType: "struct Hound.Profile",
                name: "profile",
                type: "tuple",
              },
            ],
            internalType: "struct Hound.Struct",
            name: "defaultHound",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "restricted",
                type: "address",
              },
              {
                internalType: "address",
                name: "minter",
                type: "address",
              },
              {
                internalType: "address",
                name: "houndsModifier",
                type: "address",
              },
              {
                internalType: "address",
                name: "zerocost",
                type: "address",
              },
              {
                internalType: "address",
                name: "hounds",
                type: "address",
              },
              {
                internalType: "address",
                name: "payments",
                type: "address",
              },
              {
                internalType: "address",
                name: "shop",
                type: "address",
              },
              {
                internalType: "address",
                name: "races",
                type: "address",
              },
              {
                internalType: "address",
                name: "genetics",
                type: "address",
              },
              {
                internalType: "address",
                name: "alphadune",
                type: "address",
              },
            ],
            internalType: "struct ConstructorBoilerplate.Struct",
            name: "boilerplate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "currency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedCostCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedFee",
                type: "uint256",
              },
            ],
            internalType: "struct ConstructorFees.Struct",
            name: "fees",
            type: "tuple",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "parent1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parent2",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "specie",
                type: "uint256",
              },
              {
                internalType: "uint32[72]",
                name: "geneticSequence",
                type: "uint32[72]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "token_uri",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "runningOn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "custom",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Profile",
            name: "profile",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Hound.Struct",
        name: "offspring",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "BreedHound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "HoundBreedable",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "HoundBreedingStatusUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "HoundQueueStatusUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stamina",
        type: "uint32",
      },
    ],
    name: "HoundStaminaUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "specie",
                type: "uint256",
              },
              {
                internalType: "uint32[72]",
                name: "geneticSequence",
                type: "uint32[72]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "token_uri",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "runningOn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "custom",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Profile",
            name: "profile",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Hound.Struct",
        name: "hound",
        type: "tuple",
      },
    ],
    name: "NewHound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "payed",
        type: "uint256",
      },
    ],
    name: "boostHoundBreeding",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "payed",
        type: "uint256",
      },
    ],
    name: "boostHoundStamina",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound2",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "specie",
                type: "uint256",
              },
              {
                internalType: "uint32[72]",
                name: "geneticSequence",
                type: "uint32[72]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "token_uri",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "runningOn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "custom",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Profile",
            name: "profile",
            type: "tuple",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "defaultHound",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "minter",
            type: "address",
          },
          {
            internalType: "address",
            name: "houndsModifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "shop",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
        ],
        internalType: "struct ConstructorBoilerplate.Struct",
        name: "boilerplate",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedCostCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "breedCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedFee",
            type: "uint256",
          },
        ],
        internalType: "struct ConstructorFees.Struct",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "getBreedCosts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MicroPayment.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "hound",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "specie",
                type: "uint256",
              },
              {
                internalType: "uint32[72]",
                name: "geneticSequence",
                type: "uint32[72]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "token_uri",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "runningOn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "custom",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Profile",
            name: "profile",
            type: "tuple",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "houndOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hounds",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct Hound.Stamina",
        name: "stamina",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Breeding",
        name: "breeding",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "specie",
            type: "uint256",
          },
          {
            internalType: "uint32[72]",
            name: "geneticSequence",
            type: "uint32[72]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct Hound.Identity",
        name: "identity",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "runningOn",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Profile",
        name: "profile",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "onId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "specie",
                type: "uint256",
              },
              {
                internalType: "uint32[72]",
                name: "geneticSequence",
                type: "uint32[72]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "token_uri",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "runningOn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "custom",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Profile",
            name: "profile",
            type: "tuple",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "theHound",
        type: "tuple",
      },
    ],
    name: "initializeHound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matingSeason",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "putHoundForBreed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "staminaRefillCurrency",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "staminaLastUpdate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staminaRefill1x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint32",
                    name: "staminaValue",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "staminaPerTimeUnit",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "staminaCap",
                    type: "uint32",
                  },
                ],
                internalType: "struct Hound.Stamina",
                name: "stamina",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "breedingFeeCurrency",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "breedingCooldownCurrency",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "lastBreed",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "breedingCooldown",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "breedingFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "breedingCooldownTimeUnit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "refillBreedingCooldownCost",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "availableToBreed",
                    type: "bool",
                  },
                ],
                internalType: "struct Hound.Breeding",
                name: "breeding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maleParent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "femaleParent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "generation",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "birthDate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "specie",
                    type: "uint256",
                  },
                  {
                    internalType: "uint32[72]",
                    name: "geneticSequence",
                    type: "uint32[72]",
                  },
                  {
                    internalType: "string",
                    name: "extensionTraits",
                    type: "string",
                  },
                ],
                internalType: "struct Hound.Identity",
                name: "identity",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "token_uri",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "runningOn",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "custom",
                    type: "bool",
                  },
                ],
                internalType: "struct Hound.Profile",
                name: "profile",
                type: "tuple",
              },
            ],
            internalType: "struct Hound.Struct",
            name: "defaultHound",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "restricted",
                type: "address",
              },
              {
                internalType: "address",
                name: "minter",
                type: "address",
              },
              {
                internalType: "address",
                name: "houndsModifier",
                type: "address",
              },
              {
                internalType: "address",
                name: "zerocost",
                type: "address",
              },
              {
                internalType: "address",
                name: "hounds",
                type: "address",
              },
              {
                internalType: "address",
                name: "payments",
                type: "address",
              },
              {
                internalType: "address",
                name: "shop",
                type: "address",
              },
              {
                internalType: "address",
                name: "races",
                type: "address",
              },
              {
                internalType: "address",
                name: "genetics",
                type: "address",
              },
              {
                internalType: "address",
                name: "alphadune",
                type: "address",
              },
            ],
            internalType: "struct ConstructorBoilerplate.Struct",
            name: "boilerplate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "currency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedCostCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedFee",
                type: "uint256",
              },
            ],
            internalType: "struct ConstructorFees.Struct",
            name: "fees",
            type: "tuple",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_matingSeason",
        type: "bool",
      },
    ],
    name: "setMatingSeason",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "runningOn",
        type: "uint256",
      },
    ],
    name: "updateHoundRunning",
    outputs: [
      {
        internalType: "uint256",
        name: "ranOn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "amount",
        type: "uint32",
      },
    ],
    name: "updateHoundStamina",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type HoundsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoundsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hounds__factory extends ContractFactory {
  constructor(...args: HoundsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Hounds";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Hounds> {
    return super.deploy(input, overrides || {}) as Promise<Hounds>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Hounds {
    return super.attach(address) as Hounds;
  }
  connect(signer: Signer): Hounds__factory {
    return super.connect(signer) as Hounds__factory;
  }
  static readonly contractName: "Hounds";
  public readonly contractName: "Hounds";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoundsInterface {
    return new utils.Interface(_abi) as HoundsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Hounds {
    return new Contract(address, _abi, signerOrProvider) as Hounds;
  }
}
