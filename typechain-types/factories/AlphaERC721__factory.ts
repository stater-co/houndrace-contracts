/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AlphaERC721, AlphaERC721Interface } from "../AlphaERC721";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
        ],
        internalType: "struct AlphaERC721.Constructor",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dd638038062001dd6833981016040819052620000349162000138565b805160009062000045908262000279565b5060208101516001906200005a908262000279565b505062000345565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620000a357620000a362000062565b604052919050565b600082601f830112620000bd57600080fd5b81516001600160401b03811115620000d957620000d962000062565b6020620000ef601f8301601f1916820162000078565b82815285828487010111156200010457600080fd5b60005b838110156200012457858101830151828201840152820162000107565b506000928101909101919091529392505050565b6000602082840312156200014b57600080fd5b81516001600160401b03808211156200016357600080fd5b90830190604082860312156200017857600080fd5b60405160408101818110838211171562000196576200019662000062565b604052825182811115620001a957600080fd5b620001b787828601620000ab565b825250602083015182811115620001cd57600080fd5b620001db87828601620000ab565b60208301525095945050505050565b600181811c90821680620001ff57607f821691505b6020821081036200022057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027457600081815260208120601f850160051c810160208610156200024f5750805b601f850160051c820191505b8181101562000270578281556001016200025b565b5050505b505050565b81516001600160401b0381111562000295576200029562000062565b620002ad81620002a68454620001ea565b8462000226565b602080601f831160018114620002e55760008415620002cc5750858301515b600019600386901b1c1916600185901b17855562000270565b600085815260208120601f198616915b828110156200031657888601518255948401946001909101908401620002f5565b5085821015620003355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a8180620003556000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb465146101ee578063b88d4fde14610201578063c87b56dd14610214578063e985e9c51461022757600080fd5b806370a08231146101b25780638832e6e3146101d357806395d89b41146101e657600080fd5b8063095ea7b3116100c8578063095ea7b31461016457806323b872dd1461017957806342842e0e1461018c5780636352211e1461019f57600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046114e7565b610270565b60405190151581526020015b60405180910390f35b61011f610355565b60405161010e9190611572565b61013f61013a366004611585565b6103e7565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b6101776101723660046115c7565b6104ac565b005b6101776101873660046115f1565b61062f565b61017761019a3660046115f1565b6106b6565b61013f6101ad366004611585565b6106d1565b6101c56101c036600461162d565b610769565b60405190815260200161010e565b6101776101e1366004611722565b61081d565b61011f6108a6565b6101776101fc366004611779565b6108b5565b61017761020f3660046117b5565b6108c4565b61011f610222366004611585565b610952565b61010261023536600461181d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061030357507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061034f57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461036490611850565b80601f016020809104026020016040519081016040528092919081815260200182805461039090611850565b80156103dd5780601f106103b2576101008083540402835291602001916103dd565b820191906000526020600020905b8154815290600101906020018083116103c057829003601f168201915b5050505050905090565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff166104835760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006104b7826106d1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361055a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015260840161047a565b3373ffffffffffffffffffffffffffffffffffffffff821614806105ae575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b6106205760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161047a565b61062a8383610a55565b505050565b6106393382610af5565b6106ab5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161047a565b61062a838383610c4b565b61062a838383604051806020016040528060008152506108c4565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff168061034f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161047a565b600073ffffffffffffffffffffffffffffffffffffffff82166107f45760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161047a565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6108278383610e7e565b610834600084848461100c565b61062a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161047a565b60606001805461036490611850565b6108c03383836111e5565b5050565b6108ce3383610af5565b6109405760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161047a565b61094c848484846112f8565b50505050565b60008181526002602052604090205460609073ffffffffffffffffffffffffffffffffffffffff166109ec5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161047a565b6000610a0360408051602081019091526000815290565b90506000815111610a235760405180602001604052806000815250610a4e565b80610a2d84611381565b604051602001610a3e9291906118a3565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610aaf826106d1565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16610b8c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606482015260840161047a565b6000610b97836106d1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c0657508373ffffffffffffffffffffffffffffffffffffffff16610bee846103e7565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c43575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610c6b826106d1565b73ffffffffffffffffffffffffffffffffffffffff1614610cf45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606482015260840161047a565b73ffffffffffffffffffffffffffffffffffffffff8216610d7c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161047a565b610d87600082610a55565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805460019290610dbd908490611901565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805460019290610df8908490611914565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ee15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161047a565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610f535760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161047a565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805460019290610f89908490611914565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600073ffffffffffffffffffffffffffffffffffffffff84163b156111da576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290611083903390899088908890600401611927565b6020604051808303816000875af19250505080156110dc575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110d991810190611970565b60015b61118f573d80801561110a576040519150601f19603f3d011682016040523d82523d6000602084013e61110f565b606091505b5080516000036111875760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161047a565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610c43565b506001949350505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112605760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161047a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611303848484610c4b565b61130f8484848461100c565b61094c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161047a565b6060816000036113c457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156113ee57806113d88161198d565b91506113e79050600a836119f4565b91506113c8565b60008167ffffffffffffffff81111561140957611409611648565b6040519080825280601f01601f191660200182016040528015611433576020820181803683370190505b5090505b8415610c4357611448600183611901565b9150611455600a86611a08565b611460906030611914565b60f81b81838151811061147557611475611a1c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506114af600a866119f4565b9450611437565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146114e457600080fd5b50565b6000602082840312156114f957600080fd5b8135610a4e816114b6565b60005b8381101561151f578181015183820152602001611507565b50506000910152565b60008151808452611540816020860160208601611504565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610a4e6020830184611528565b60006020828403121561159757600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146115c257600080fd5b919050565b600080604083850312156115da57600080fd5b6115e38361159e565b946020939093013593505050565b60008060006060848603121561160657600080fd5b61160f8461159e565b925061161d6020850161159e565b9150604084013590509250925092565b60006020828403121561163f57600080fd5b610a4e8261159e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261168857600080fd5b813567ffffffffffffffff808211156116a3576116a3611648565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156116e9576116e9611648565b8160405283815286602085880101111561170257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561173757600080fd5b6117408461159e565b925060208401359150604084013567ffffffffffffffff81111561176357600080fd5b61176f86828701611677565b9150509250925092565b6000806040838503121561178c57600080fd5b6117958361159e565b9150602083013580151581146117aa57600080fd5b809150509250929050565b600080600080608085870312156117cb57600080fd5b6117d48561159e565b93506117e26020860161159e565b925060408501359150606085013567ffffffffffffffff81111561180557600080fd5b61181187828801611677565b91505092959194509250565b6000806040838503121561183057600080fd5b6118398361159e565b91506118476020840161159e565b90509250929050565b600181811c9082168061186457607f821691505b60208210810361189d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600083516118b5818460208801611504565b8351908301906118c9818360208801611504565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561034f5761034f6118d2565b8082018082111561034f5761034f6118d2565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526119666080830184611528565b9695505050505050565b60006020828403121561198257600080fd5b8151610a4e816114b6565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119be576119be6118d2565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611a0357611a036119c5565b500490565b600082611a1757611a176119c5565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220c0b599e155be1d25bc0f80ead3408047745ef2c81692f432e39c8ba94fe4807c64736f6c63430008110033";

type AlphaERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlphaERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlphaERC721__factory extends ContractFactory {
  constructor(...args: AlphaERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AlphaERC721";
  }

  deploy(
    input: AlphaERC721.ConstructorStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AlphaERC721> {
    return super.deploy(input, overrides || {}) as Promise<AlphaERC721>;
  }
  getDeployTransaction(
    input: AlphaERC721.ConstructorStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): AlphaERC721 {
    return super.attach(address) as AlphaERC721;
  }
  connect(signer: Signer): AlphaERC721__factory {
    return super.connect(signer) as AlphaERC721__factory;
  }
  static readonly contractName: "AlphaERC721";
  public readonly contractName: "AlphaERC721";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlphaERC721Interface {
    return new utils.Interface(_abi) as AlphaERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlphaERC721 {
    return new Contract(address, _abi, signerOrProvider) as AlphaERC721;
  }
}
