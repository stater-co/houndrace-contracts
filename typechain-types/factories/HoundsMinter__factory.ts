/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HoundsMinter,
  HoundsMinterInterface,
  Constructor,
} from "../HoundsMinter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "incubator",
                type: "address",
              },
              {
                internalType: "address",
                name: "staterApi",
                type: "address",
              },
              {
                internalType: "address",
                name: "payments",
                type: "address",
              },
              {
                internalType: "address",
                name: "restricted",
                type: "address",
              },
              {
                internalType: "address",
                name: "minter",
                type: "address",
              },
              {
                internalType: "address",
                name: "hounds",
                type: "address",
              },
              {
                internalType: "address",
                name: "houndModifier",
                type: "address",
              },
              {
                internalType: "address",
                name: "shop",
                type: "address",
              },
            ],
            internalType: "struct ConstructorBoilerplate.Struct",
            name: "boilerplate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "breedCostCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "refillStaminaCostCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "refillBreedingCostCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
            ],
            internalType: "struct ConstructorFees.Struct",
            name: "fees",
            type: "tuple",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Hound.Struct",
        name: "hound",
        type: "tuple",
      },
    ],
    name: "BreedHound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "HoundBreedable",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "HoundBreedingStatusUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "HoundQueueStatusUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stamina",
        type: "uint32",
      },
    ],
    name: "HoundStaminaUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Hound.Struct",
        name: "hound",
        type: "tuple",
      },
    ],
    name: "NewHound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
    ],
    name: "NewTokenUri",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound2",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "staterApi",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "minter",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "houndModifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "shop",
            type: "address",
          },
        ],
        internalType: "struct ConstructorBoilerplate.Struct",
        name: "boilerplate",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedCostCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "refillStaminaCostCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "refillBreedingCostCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "breedCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
        ],
        internalType: "struct ConstructorFees.Struct",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound2",
        type: "uint256",
      },
    ],
    name: "getBreedCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "hound",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "houndOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hounds",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct Hound.Statistics",
        name: "statistics",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefill1xCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerHour",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct Hound.Stamina",
        name: "stamina",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Breeding",
        name: "breeding",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
        ],
        internalType: "struct Hound.Identity",
        name: "identity",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "token_uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "custom",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matingSeason",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "incubator",
                type: "address",
              },
              {
                internalType: "address",
                name: "staterApi",
                type: "address",
              },
              {
                internalType: "address",
                name: "payments",
                type: "address",
              },
              {
                internalType: "address",
                name: "restricted",
                type: "address",
              },
              {
                internalType: "address",
                name: "minter",
                type: "address",
              },
              {
                internalType: "address",
                name: "hounds",
                type: "address",
              },
              {
                internalType: "address",
                name: "houndModifier",
                type: "address",
              },
              {
                internalType: "address",
                name: "shop",
                type: "address",
              },
            ],
            internalType: "struct ConstructorBoilerplate.Struct",
            name: "boilerplate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "breedCostCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "refillStaminaCostCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "refillBreedingCostCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
            ],
            internalType: "struct ConstructorFees.Struct",
            name: "fees",
            type: "tuple",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_matingSeason",
        type: "bool",
      },
    ],
    name: "setMatingSeason",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260016007553480156200001657600080fd5b506040516200492538038062004925833981016040819052620000399162000709565b805160208201518291906200004e3362000221565b60016200005c838262000884565b5060026200006b828262000884565b50505060408101516200007e9062000271565b80518190600a90819062000093908262000884565b5060208201516001820190620000aa908262000884565b5060408201518051620000c891600284019160209091019062000330565b5060608281015180516003840180546001600160a01b03199081166001600160a01b039384161790915560208084015160048701805484169185169190911790556040808501516005880180548516918616919091179055848601516006880180548516918616919091179055608080860151600789018054861691871691909117905560a08087015160088a018054871691881691909117905560c08088015160098b018054881691891691909117905560e097880151600a8b0180548816918916919091179055998201518051600b8b018054881691891691909117905593840151600c8a018054871691881691909117905591830151600d89018054861691871691909117905595820151600e8801805490941694169390931790915592830151600f850155820151601084015592810151601183015591820151601282015561010090910151601390910155506200098e9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200032c576008600083838151811062000297576200029762000950565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560086000848481518110620002e757620002e762000950565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620003248162000966565b905062000274565b5050565b82805482825590600052602060002090810192821562000388579160200282015b828111156200038857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000351565b50620003969291506200039a565b5090565b5b808211156200039657600081556001016200039b565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620003ed57620003ed620003b1565b60405290565b60405160a081016001600160401b0381118282101715620003ed57620003ed620003b1565b604051601f8201601f191681016001600160401b0381118282101715620004435762000443620003b1565b604052919050565b600082601f8301126200045d57600080fd5b81516001600160401b03811115620004795762000479620003b1565b60206200048f601f8301601f1916820162000418565b8281528582848701011115620004a457600080fd5b60005b83811015620004c4578581018301518282018401528201620004a7565b83811115620004d65760008385840101525b5095945050505050565b80516001600160a01b0381168114620004f857600080fd5b919050565b600082601f8301126200050f57600080fd5b815160206001600160401b038211156200052d576200052d620003b1565b8160051b6200053e82820162000418565b92835284810182019282810190878511156200055957600080fd5b83870192505b8483101562000583576200057383620004e0565b825291830191908301906200055f565b979650505050505050565b6000610100808385031215620005a357600080fd5b604051908101906001600160401b0382118183101715620005c857620005c8620003b1565b81604052809250620005da84620004e0565b8152620005ea60208501620004e0565b6020820152620005fd60408501620004e0565b60408201526200061060608501620004e0565b60608201526200062360808501620004e0565b60808201526200063660a08501620004e0565b60a08201526200064960c08501620004e0565b60c08201526200065c60e08501620004e0565b60e0820152505092915050565b600061012082840312156200067d57600080fd5b62000687620003c7565b90506200069482620004e0565b8152620006a460208301620004e0565b6020820152620006b760408301620004e0565b6040820152620006ca60608301620004e0565b60608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b6000602082840312156200071c57600080fd5b81516001600160401b03808211156200073457600080fd5b9083019061028082860312156200074a57600080fd5b62000754620003f3565b8251828111156200076457600080fd5b62000772878286016200044b565b8252506020830151828111156200078857600080fd5b62000796878286016200044b565b602083015250604083015182811115620007af57600080fd5b620007bd87828601620004fd565b604083015250620007d286606085016200058e565b6060820152620007e786610160850162000669565b608082015295945050505050565b600181811c908216806200080a57607f821691505b6020821081036200082b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200087f57600081815260208120601f850160051c810160208610156200085a5750805b601f850160051c820191505b818110156200087b5782815560010162000866565b5050505b505050565b81516001600160401b03811115620008a057620008a0620003b1565b620008b881620008b18454620007f5565b8462000831565b602080601f831160018114620008f05760008415620008d75750858301515b600019600386901b1c1916600185901b1785556200087b565b600085815260208120601f198616915b82811015620009215788860151825594840194600190910190840162000900565b5085821015620009405787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016200098757634e487b7160e01b600052601160045260246000fd5b5060010190565b613f87806200099e6000396000f3fe6080604052600436106101535760003560e01c806301ffc9a71461015c57806306fdde0314610191578063081812fc146101b35780630907a308146101e0578063095ea7b31461020e578063150b7a021461022e57806323b872dd1461026757806330ace5ff1461028757806342842e0e146102b45780635c80b448146102d45780636189ef9b146102f45780636352211e1461030e57806370a082311461032e578063715018a61461034e5780638da5cb5b1461036357806395d89b411461037857806399bd486e1461038d578063a22cb465146103ad578063af640d0f146103cd578063b88d4fde146103e3578063c87b56dd14610403578063d63a8e1114610423578063d8de658714610453578063dadddaaf14610478578063e115234314610498578063e985e9c5146104b8578063ead05876146104d8578063ebe733bb146104eb578063f2fde38b1461051f57005b3661015a57005b005b34801561016857600080fd5b5061017c6101773660046129f9565b61053f565b60405190151581526020015b60405180910390f35b34801561019d57600080fd5b506101a6610591565b6040516101889190612a6e565b3480156101bf57600080fd5b506101d36101ce366004612a81565b610623565b6040516101889190612aa7565b3480156101ec57600080fd5b506102006101fb366004612abb565b61064a565b604051908152602001610188565b34801561021a57600080fd5b5061015a610229366004612b02565b61069c565b34801561023a57600080fd5b5061024e610249366004612c8c565b6107b6565b6040516001600160e01b03199091168152602001610188565b34801561027357600080fd5b5061015a610282366004612d0b565b6107c7565b34801561029357600080fd5b506102a76102a2366004612a81565b6107f8565b6040516101889190612e80565b3480156102c057600080fd5b5061015a6102cf366004612d0b565b610b7e565b3480156102e057600080fd5b5061015a6102ef366004612f4e565b610b99565b34801561030057600080fd5b50601e5461017c9060ff1681565b34801561031a57600080fd5b506101d3610329366004612a81565b610bb4565b34801561033a57600080fd5b50610200610349366004612f6b565b610be9565b34801561035a57600080fd5b5061015a610c6f565b34801561036f57600080fd5b506101d3610c83565b34801561038457600080fd5b506101a6610c92565b34801561039957600080fd5b5061015a6103a836600461316e565b610ca1565b3480156103b957600080fd5b5061015a6103c8366004613248565b610e4d565b3480156103d957600080fd5b5061020060075481565b3480156103ef57600080fd5b5061015a6103fe366004612c8c565b610e5c565b34801561040f57600080fd5b506101a661041e366004612a81565b610e94565b34801561042f57600080fd5b5061017c61043e366004612f6b565b60086020526000908152604090205460ff1681565b34801561045f57600080fd5b50610468610f39565b60405161018894939291906132f2565b34801561048457600080fd5b506101d3610493366004612a81565b6112e1565b3480156104a457600080fd5b5061015a6104b3366004612a81565b6112ec565b3480156104c457600080fd5b5061017c6104d33660046133b5565b6113d7565b61015a6104e6366004612abb565b611405565b3480156104f757600080fd5b5061050b610506366004612a81565b611c8c565b6040516101889897969594939291906133e3565b34801561052b57600080fd5b5061015a61053a366004612f6b565b611fd5565b60006001600160e01b031982166380ac58cd60e01b148061057057506001600160e01b03198216635b5e139f60e01b145b8061058b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546105a090613469565b80601f01602080910402602001604051908101604052809291908181526020018280546105cc90613469565b80156106195780601f106105ee57610100808354040283529160200191610619565b820191906000526020600020905b8154815290600101906020018083116105fc57829003601f168201915b5050505050905090565b600061062e8261204b565b506000908152600560205260409020546001600160a01b031690565b60003361065684610bb4565b6001600160a01b03161461066957600080fd5b600082815260096020526040902060080154601a5460195461068b91906134b9565b61069591906134b9565b9392505050565b60006106a782610bb4565b9050806001600160a01b0316836001600160a01b0316036107195760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610735575061073581336113d7565b6107a75760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610710565b6107b1838361207f565b505050565b630a85bd0160e11b5b949350505050565b6107d133826120ed565b6107ed5760405162461bcd60e51b8152600401610710906134d1565b6107b183838361214b565b610800612849565b600082815260096020818152604080842081516101808101835281546001600160401b038082166101008401908152600160401b8084048316610120860152600160801b84048316610140860152600160c01b9093049091166101608401528252835160c0808201865260018501546001600160a01b039081168352600286015483890152600386015483880152600486015463ffffffff808216606080870191909152600160201b83048216608080880191909152969092041660a080860191909152868a019490945287519384018852600587015484526006870154848a01526007870154909116838801526008860154838201529785015460ff161515828401528386019190915284519081018552600a840180548252600b85015496820196909652600c84015481860152600d8401548188015284516106c081019586905292979396880195909490939185019291600e8801916036918390855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161095f57905050505050508152602001600b820180546109b490613469565b80601f01602080910402602001604051908101604052809291908181526020018280546109e090613469565b8015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b820191906000526020600020905b815481529060010190602001808311610a1057829003601f168201915b5050505050815250508152602001601682018054610a4a90613469565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7690613469565b8015610ac35780601f10610a9857610100808354040283529160200191610ac3565b820191906000526020600020905b815481529060010190602001808311610aa657829003601f168201915b50505050508152602001601782018054610adc90613469565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0890613469565b8015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b50505091835250506018820154602082015260199091015460ff16151560409091015292915050565b6107b183838360405180602001604052806000815250610e5c565b610ba16122e7565b601e805460ff1916911515919091179055565b6000818152600360205260408120546001600160a01b03168061058b5760405162461bcd60e51b81526004016107109061351f565b60006001600160a01b038216610c535760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610710565b506001600160a01b031660009081526004602052604090205490565b610c776122e7565b610c816000612346565b565b6000546001600160a01b031690565b6060600280546105a090613469565b610ca96122e7565b610cb68160400151612396565b80518190600a908190610cc9908261359f565b5060208201516001820190610cde908261359f565b5060408201518051610cfa91600284019160209091019061290e565b5060608281015180516003840180546001600160a01b03199081166001600160a01b039384161790915560208084015160048701805484169185169190911790556040808501516005880180548516918616919091179055848601516006880180548516918616919091179055608080860151600789018054861691871691909117905560a08087015160088a018054871691881691909117905560c08088015160098b018054881691891691909117905560e097880151600a8b0180548816918916919091179055998201518051600b8b018054881691891691909117905593840151600c8a018054871691881691909117905591830151600d89018054861691871691909117905595820151600e8801805490941694169390931790915592830151600f85015582015160108401559281015160118301559182015160128201556101009091015160139091015550565b610e58338383612447565b5050565b610e6633836120ed565b610e825760405162461bcd60e51b8152600401610710906134d1565b610e8e84848484612511565b50505050565b6000818152600960205260409020601701805460609190610eb490613469565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee090613469565b8015610f2d5780601f10610f0257610100808354040283529160200191610f2d565b820191906000526020600020905b815481529060010190602001808311610f1057829003601f168201915b50505050509050919050565b600a80548190610f4890613469565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7490613469565b8015610fc15780601f10610f9657610100808354040283529160200191610fc1565b820191906000526020600020905b815481529060010190602001808311610fa457829003601f168201915b505050505090806001018054610fd690613469565b80601f016020809104026020016040519081016040528092919081815260200182805461100290613469565b801561104f5780601f106110245761010080835404028352916020019161104f565b820191906000526020600020905b81548152906001019060200180831161103257829003601f168201915b50505050509080600301604051806101000160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016004820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016005820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016006820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016007820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815250509080600b01604051806101200160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905084565b600061058b82610bb4565b6112f46122e7565b4781111561135c5760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b6064820152608401610710565b611364610c83565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506113d45760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b6044820152606401610710565b50565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b601e5460ff1680156114385750600081815260096020526040902060068101546005909101544291611436916134b9565b105b80156114655750600082815260096020526040902060068101546005909101544291611463916134b9565b105b80156114805750600082815260096020526040902060180154155b801561149b5750600081815260096020526040902060180154155b801561154257506000828152600960205260409020600e015463ffffffff600160201b9091041660011480156114ef57506000818152600960205260409020600e0154600160201b900463ffffffff166002145b8061154257506000828152600960205260409020600e0154600160201b900463ffffffff16600214801561154257506000818152600960205260409020600e015463ffffffff600160201b909104166001145b801561155e57503361155383610bb4565b6001600160a01b0316145b61156757600080fd5b61157033612544565b601e546115889060ff1661158384610bb4565b612587565b60408051600180825281830190925260009160208083019080368337505050600083815260096020526040902060080154601a5460195492935090916115ce91906134b9565b6115d891906134b9565b816000815181106115eb576115eb61365e565b6020026020010181815250506116226040518060400160405280600a8152602001694f4b2021212066726f6d60b01b8152506125d7565b61162b33612544565b61164e816000815181106116415761164161365e565b602002602001015161261a565b61167a6040518060400160405280600b81526020016a4f4b2021212076616c756560a81b8152506125d7565b6116833461261a565b60408051808201909152600681526503a3434b99d160d51b60208201526015546116b691906001600160a01b031661265f565b6116d7604051806060016040528060218152602001613f10602191396125d7565b600f546015546001600160a01b039182169163400f959f9116156116fc576000611718565b8260008151811061170f5761170f61365e565b60200260200101515b600f5460155460408051600081526020810190915233926001600160a01b0390811692169087821561174b57600261174e565b60035b6040518863ffffffff1660e01b815260040161176f969594939291906136af565b6000604051808303818588803b15801561178857600080fd5b505af115801561179c573d6000803e3d6000fd5b50505050506117c2604051806060016040528060218152602001613f10602191396125d7565b601a54815182906000906117d8576117d861365e565b60200260200101818152505061182e6040518060400160405280600e81526020016d03a3432b71039b2b73234b7339d160951b815250826000815181106118215761182161365e565b60200260200101516126a4565b61184f604051806060016040528060218152602001613ece602191396125d7565b601654611864906001600160a01b0316612544565b61186d3461261a565b6118764761261a565b61189c348260008151811061188d5761188d61365e565b602002602001015111156126e9565b600f54600e546016546040805160008152602081019091526001600160a01b039384169363400f959f938593908216929116908682156118dd5760026118e0565b60035b6040518763ffffffff1660e01b8152600401611901969594939291906136af565b600060405180830381600087803b15801561191b57600080fd5b505af115801561192f573d6000803e3d6000fd5b50505050611954604051806060016040528060218152602001613ece602191396125d7565b6016546001600160a01b03161561196c576000611970565b601a545b6015546001600160a01b03161561198857600061198c565b6019545b61199691906134b9565b3410156119a257600080fd5b6119ab83610bb4565b6001600160a01b03166119bd83610bb4565b6001600160a01b031614611b6c576000828152600960205260409020600701546001600160a01b0316156119f2576000611a05565b6000828152600960205260409020600801545b6016546001600160a01b031615611a1d576000611a21565b601a545b6015546001600160a01b031615611a39576000611a3d565b6019545b611a4791906134b9565b611a5191906134b9565b341015611a5d57600080fd5b600082815260096020526040812060080154825190918391611a8157611a8161365e565b602002602001018181525050611aae604051806060016040528060218152602001613eef602191396125d7565b600f546001600160a01b031663400f959f81611ac985610bb4565b6015546040805160008152602081019091526001600160a01b0390911690868215611af5576002611af8565b60035b6040518763ffffffff1660e01b8152600401611b19969594939291906136af565b600060405180830381600087803b158015611b3357600080fd5b505af1158015611b47573d6000803e3d6000fd5b50505050611b6c604051806060016040528060218152602001613eef602191396125d7565b611b8d604051806060016040528060218152602001613f31602191396125d7565b60008281526009602052604080822042600580830182905587855283852090810191909155600d5486855292516385b7dd8960e01b81526001600160a01b03909316926385b7dd8992611be8928992909189916004016139d1565b600060405180830381865afa158015611c05573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c2d9190810190613c99565b9050336001600160a01b03166007547f069430662e1cbb6340f28e5752b0d22a4a533756becbf4ff5520f9f50b23b8e983604051611c6b9190612e80565b60405180910390a3600760008154611c8290613da5565b9091555050505050565b600960208181526000928352604080842081516080808201845282546001600160401b038082168452600160401b808304821685890152600160801b8304821685880152600160c01b90920416606080850191909152855160c0808201885260018701546001600160a01b0390811683526002880154838b01526003880154838a0152600488015463ffffffff80821685870152600160201b820481168589015295900490941660a08084019190915288519081018952600588015481526006880154818b01526007880154909416848901526008870154848401529886015460ff1615158385015286519889018752600a860180548a52600b870154988a0198909852600c86015489880152600d8601549189019190915285516106c081019687905293989097919694959194939285019291600e870191603691908390855b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611dcd57905050505050508152602001600b82018054611e2290613469565b80601f0160208091040260200160405190810160405280929190818152602001828054611e4e90613469565b8015611e9b5780601f10611e7057610100808354040283529160200191611e9b565b820191906000526020600020905b815481529060010190602001808311611e7e57829003601f168201915b50505050508152505090806016018054611eb490613469565b80601f0160208091040260200160405190810160405280929190818152602001828054611ee090613469565b8015611f2d5780601f10611f0257610100808354040283529160200191611f2d565b820191906000526020600020905b815481529060010190602001808311611f1057829003601f168201915b505050505090806017018054611f4290613469565b80601f0160208091040260200160405190810160405280929190818152602001828054611f6e90613469565b8015611fbb5780601f10611f9057610100808354040283529160200191611fbb565b820191906000526020600020905b815481529060010190602001808311611f9e57829003601f168201915b50505050601883015460199093015491929160ff16905088565b611fdd6122e7565b6001600160a01b0381166120425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610710565b6113d481612346565b6000818152600360205260409020546001600160a01b03166113d45760405162461bcd60e51b81526004016107109061351f565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906120b482610bb4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806120f983610bb4565b9050806001600160a01b0316846001600160a01b03161480612120575061212081856113d7565b806107bf5750836001600160a01b031661213984610623565b6001600160a01b031614949350505050565b826001600160a01b031661215e82610bb4565b6001600160a01b0316146121c25760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610710565b6001600160a01b0382166122245760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610710565b61222f60008261207f565b6001600160a01b0383166000908152600460205260408120805460019290612258908490613dbe565b90915550506001600160a01b03821660009081526004602052604081208054600192906122869084906134b9565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b336122f0610c83565b6001600160a01b031614610c815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610710565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015610e5857600860008383815181106123b8576123b861365e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600860008484815181106124055761240561365e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561244081613da5565b9050612399565b816001600160a01b0316836001600160a01b0316036124a45760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610710565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61251c84848461214b565b6125288484848461272a565b610e8e5760405162461bcd60e51b815260040161071090613dd5565b6113d4816040516024016125589190612aa7565b60408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052612828565b60405182151560248201526001600160a01b0382166044820152610e589060640160408051601f198184030181529190526020810180516001600160e01b031663853c484960e01b179052612828565b6113d4816040516024016125eb9190612a6e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052612828565b6113d48160405160240161263091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052612828565b610e588282604051602401612675929190613e27565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052612828565b610e5882826040516024016126ba929190613e51565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052612828565b60405181151560248201526113d49060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b179052612828565b60006001600160a01b0384163b1561282057604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061276e903390899088908890600401613e73565b6020604051808303816000875af19250505080156127a9575060408051601f3d908101601f191682019092526127a691810190613eb0565b60015b612806573d8080156127d7576040519150601f19603f3d011682016040523d82523d6000602084013e6127dc565b606091505b5080516000036127fe5760405162461bcd60e51b815260040161071090613dd5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107bf565b5060016107bf565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040805161018081019091526000610100820181815261012083018290526101408301829052610160830191909152819081526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291019081526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291019081526020016128ea612973565b81526020016060815260200160608152602001600081526020016000151581525090565b828054828255906000526020600020908101928215612963579160200282015b8281111561296357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061292e565b5061296f9291506129af565b5090565b6040518060c00160405280600081526020016000815260200160008152602001600081526020016129a26129c4565b8152602001606081525090565b5b8082111561296f57600081556001016129b0565b604051806106c001604052806036906020820280368337509192915050565b6001600160e01b0319811681146113d457600080fd5b600060208284031215612a0b57600080fd5b8135610695816129e3565b60005b83811015612a31578181015183820152602001612a19565b83811115610e8e5750506000910152565b60008151808452612a5a816020860160208601612a16565b601f01601f19169290920160200192915050565b6020815260006106956020830184612a42565b600060208284031215612a9357600080fd5b5035919050565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b60008060408385031215612ace57600080fd5b50508035926020909101359150565b6001600160a01b03811681146113d457600080fd5b8035612afd81612add565b919050565b60008060408385031215612b1557600080fd5b8235612b2081612add565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612b6757612b67612b2e565b60405290565b60405161012081016001600160401b0381118282101715612b6757612b67612b2e565b60405160a081016001600160401b0381118282101715612b6757612b67612b2e565b60405160c081016001600160401b0381118282101715612b6757612b67612b2e565b6040516106c081016001600160401b0381118282101715612b6757612b67612b2e565b604051601f8201601f191681016001600160401b0381118282101715612c1f57612c1f612b2e565b604052919050565b60006001600160401b03821115612c4057612c40612b2e565b50601f01601f191660200190565b6000612c61612c5c84612c27565b612bf7565b9050828152838383011115612c7557600080fd5b828260208301376000602084830101529392505050565b60008060008060808587031215612ca257600080fd5b8435612cad81612add565b93506020850135612cbd81612add565b92506040850135915060608501356001600160401b03811115612cdf57600080fd5b8501601f81018713612cf057600080fd5b612cff87823560208401612c4e565b91505092959194509250565b600080600060608486031215612d2057600080fd5b8335612d2b81612add565b92506020840135612d3b81612add565b929592945050506040919091013590565b80516001600160401b03908116835260208083015182169084015260408281015182169084015260609182015116910152565b80516001600160a01b03168252602080820151908301526040808201519083015260608082015163ffffffff9081169184019190915260808083015182169084015260a09182015116910152565b80518252602080820151908301526040808201516001600160a01b031690830152606080820151908301526080908101511515910152565b60006107608251845260208084015181860152604084015160408601526060840151606086015260808401516080860160005b6036811015612e5b57825163ffffffff1682529183019190830190600101612e38565b5050505060a083015181610740860152612e7782860182612a42565b95945050505050565b60208152612e92602082018351612d4c565b60006020830151612ea660a0840182612d7f565b506040830151612eba610160840182612dcd565b50606083015161028080610200850152612ed86102a0850183612e05565b91506080850151601f198086850301610220870152612ef78483612a42565b935060a08701519150808685030161024087015250612f168382612a42565b92505060c085015161026085015260e0850151612f368286018215159052565b5090949350505050565b80151581146113d457600080fd5b600060208284031215612f6057600080fd5b813561069581612f40565b600060208284031215612f7d57600080fd5b813561069581612add565b600082601f830112612f9957600080fd5b61069583833560208501612c4e565b600082601f830112612fb957600080fd5b813560206001600160401b03821115612fd457612fd4612b2e565b8160051b612fe3828201612bf7565b9283528481018201928281019087851115612ffd57600080fd5b83870192505b8483101561302557823561301681612add565b82529183019190830190613003565b979650505050505050565b6000610100828403121561304357600080fd5b61304b612b44565b9050813561305881612add565b8152602082013561306881612add565b602082015261307960408301612af2565b604082015261308a60608301612af2565b606082015261309b60808301612af2565b60808201526130ac60a08301612af2565b60a08201526130bd60c08301612af2565b60c08201526130ce60e08301612af2565b60e082015292915050565b600061012082840312156130ec57600080fd5b6130f4612b6d565b90506130ff82612af2565b815261310d60208301612af2565b602082015261311e60408301612af2565b604082015261312f60608301612af2565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525092915050565b60006020828403121561318057600080fd5b81356001600160401b038082111561319757600080fd5b9083019061028082860312156131ac57600080fd5b6131b4612b90565b8235828111156131c357600080fd5b6131cf87828601612f88565b8252506020830135828111156131e457600080fd5b6131f087828601612f88565b60208301525060408301358281111561320857600080fd5b61321487828601612fa8565b6040830152506132278660608501613030565b606082015261323a8661016085016130d9565b608082015295945050505050565b6000806040838503121561325b57600080fd5b823561326681612add565b9150602083013561327681612f40565b809150509250929050565b60018060a01b038082511683528060208301511660208401528060408301511660408401525060608101516132b96060840182612a9a565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b600061026080835261330681840188612a42565b9050828103602084015261331a8187612a42565b91505060018060a01b0380855116604084015280602086015116606084015280604086015116608084015250606084015161335860a0840182612a9a565b50608084015161336b60c0840182612a9a565b5060a084015161337e60e0840182612a9a565b5060c0840151613392610100840182612a9a565b5060e08401516133a6610120840182612a9a565b50612e77610140830184613281565b600080604083850312156133c857600080fd5b82356133d381612add565b9150602083013561327681612add565b60006102806133f2838c612d4c565b6133ff608084018b612d7f565b61340d61014084018a612dcd565b806101e084015261342081840189612e05565b90508281036102008401526134358188612a42565b905082810361022084015261344a8187612a42565b6102408401959095525050901515610260909101529695505050505050565b600181811c9082168061347d57607f821691505b60208210810361349d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156134cc576134cc6134a3565b500190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b601f8211156107b157600081815260208120601f850160051c810160208610156135785750805b601f850160051c820191505b8181101561359757828155600101613584565b505050505050565b81516001600160401b038111156135b8576135b8612b2e565b6135cc816135c68454613469565b84613551565b602080601f83116001811461360157600084156135e95750858301515b600019600386901b1c1916600185901b178555613597565b600085815260208120601f198616915b8281101561363057888601518255948401946001909101908401613611565b508582101561364e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156136a457815187529582019590820190600101613688565b509495945050505050565b6001600160a01b03878116825286811660208301528516604082015260c0606082018190526000906136e390830186613674565b82810360808401526136f58186613674565b91505060ff831660a0830152979650505050505050565b6000815461371981613469565b80855260206001838116801561373657600181146137505761377e565b60ff1985168884015283151560051b88018301955061377e565b866000528260002060005b858110156137765781548a820186015290830190840161375b565b890184019650505b505050505092915050565b60006107608254845260018084015460208181880152600286015491506040828189015260038701549250606083818a0152608093508389016004890160005b603660078201101561383857815463ffffffff808216855281881c81168886015281871c81168786015281861c81168686015281891c81168986015260a082811c82169086015260c082811c9091169085015260e090811c9084015261010090920191908701906008016137c9565b505463ffffffff808216835281861c81168684015281851c81168584015281841c81168484015281871c81168784015260a082811c82169084015290965050505050505050806107408501526107bf818501600b850161370c565b80546001600160401b038082168452604082811c82166020860152608083901c9091169084015260c01c6060830152600061028060018301546001600160a01b03166080850152600283015460a0850152600383015460c0850152600483015463ffffffff80821660e0870152602082901c811661010087015260409190911c166101208501526005830154610140850152600683015461016085015260078301546001600160a01b031661018085015260088301546101a0850152600983015460ff1615156101c0850152806101e0850152613975818501600a8501613789565b905083810361020085015261398d816016850161370c565b90508381036102208501526139a5816017850161370c565b905060188301546102408501526139c0601984015460ff1690565b801515610260860152509392505050565b8481526080602082015260006139ea6080830186613893565b84604084015282810360608401526130258185613893565b80516001600160401b0381168114612afd57600080fd5b600060808284031215613a2b57600080fd5b604051608081016001600160401b0381118282101715613a4d57613a4d612b2e565b604052905080613a5c83613a02565b8152613a6a60208401613a02565b6020820152613a7b60408401613a02565b6040820152613a8c60608401613a02565b60608201525092915050565b805163ffffffff81168114612afd57600080fd5b600060c08284031215613abe57600080fd5b613ac6612bb2565b90508151613ad381612add565b808252506020820151602082015260408201516040820152613af760608301613a98565b6060820152613b0860808301613a98565b6080820152613b1960a08301613a98565b60a082015292915050565b8051612afd81612f40565b600060a08284031215613b4157600080fd5b613b49612b90565b905081518152602082015160208201526040820151613b6781612add565b6040820152606082810151908201526080820151613b8481612f40565b608082015292915050565b600082601f830112613ba057600080fd5b8151613bae612c5c82612c27565b818152846020838601011115613bc357600080fd5b6107bf826020830160208701612a16565b60006107608284031215613be757600080fd5b613bef612bb2565b90508151815260208083015181830152604083015160408301526060830151606083015283609f840112613c2257600080fd5b613c2a612bd4565b80610740850186811115613c3d57600080fd5b608086015b81811015613c6057613c5381613a98565b8452928401928401613c42565b506080850191909152519150506001600160401b03811115613c8157600080fd5b613c8d84828501613b8f565b60a08301525092915050565b600060208284031215613cab57600080fd5b81516001600160401b0380821115613cc257600080fd5b908301906102808286031215613cd757600080fd5b613cdf612b44565b613ce98684613a19565b8152613cf88660808501613aac565b6020820152613d0b866101408501613b2f565b60408201526101e083015182811115613d2357600080fd5b613d2f87828601613bd4565b60608301525061020083015182811115613d4857600080fd5b613d5487828601613b8f565b60808301525061022083015182811115613d6d57600080fd5b613d7987828601613b8f565b60a08301525061024083015160c0820152613d976102608401613b24565b60e082015295945050505050565b600060018201613db757613db76134a3565b5060010190565b600082821015613dd057613dd06134a3565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b604081526000613e3a6040830185612a42565b905060018060a01b03831660208301529392505050565b604081526000613e646040830185612a42565b90508260208301529392505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613ea690830184612a42565b9695505050505050565b600060208284031215613ec257600080fd5b8151610695816129e356fe3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d2032203d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d2033203d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d2031203d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d2034203d3d3d3d3d3d3d3d3d3d3d3d3d3d3da2646970667358221220d6d07cc62749cd27ccf2e6bf694e739c301cc7fdc95159cb1f35f75b9c2c0f5f64736f6c634300080f0033";

type HoundsMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoundsMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HoundsMinter__factory extends ContractFactory {
  constructor(...args: HoundsMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "HoundsMinter";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HoundsMinter> {
    return super.deploy(input, overrides || {}) as Promise<HoundsMinter>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): HoundsMinter {
    return super.attach(address) as HoundsMinter;
  }
  connect(signer: Signer): HoundsMinter__factory {
    return super.connect(signer) as HoundsMinter__factory;
  }
  static readonly contractName: "HoundsMinter";
  public readonly contractName: "HoundsMinter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoundsMinterInterface {
    return new utils.Interface(_abi) as HoundsMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HoundsMinter {
    return new Contract(address, _abi, signerOrProvider) as HoundsMinter;
  }
}
