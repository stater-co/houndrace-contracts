/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Gamification,
  GamificationInterface,
  Constructor,
} from "../Gamification";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "defaultBreeding",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "defaultStamina",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStamina",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStaminaBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsBreeding",
    outputs: [
      {
        internalType: "address",
        name: "breedingFeeCurrency",
        type: "address",
      },
      {
        internalType: "address",
        name: "breedingCooldownCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastBreed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldown",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldownTimeUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillBreedingCooldownCost",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "availableToBreed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStamina",
    outputs: [
      {
        internalType: "address",
        name: "staminaRefillCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "staminaLastUpdate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "staminaRefill1x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillStaminaCooldownCost",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "staminaValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaPerTimeUnit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCap",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint32[54]",
        name: "genetics",
        type: "uint32[54]",
      },
    ],
    name: "initializeHoundGamingStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "breeding",
        type: "tuple",
      },
    ],
    name: "setBreeding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "stamina",
        type: "tuple",
      },
    ],
    name: "setStamina",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017eb380380620017eb83398101604081905262000034916200052d565b806200004033620001ae565b80518051600180546001600160a01b039283166001600160a01b03199182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e0909901516008805491151560ff19909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff908116680100000000000000000263ffffffff60401b19958216640100000000026001600160401b031990981691909216179590951792909216939093179093559183015180518493926200015a92600e92910190620002bd565b506060820151600e820180546001600160a01b03199081166001600160a01b0393841617909155608090930151600f909201805490931691161790556040810151620001a690620001fe565b5050620006b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015620002b9576011600083838151811062000224576200022462000673565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff16156011600084848151811062000274576200027462000673565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002b18162000689565b905062000201565b5050565b82805482825590600052602060002090810192821562000315579160200282015b828111156200031557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002de565b506200032392915062000327565b5090565b5b8082111562000323576000815560010162000328565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156200037957620003796200033e565b60405290565b60405161010081016001600160401b03811182821017156200037957620003796200033e565b80516001600160a01b0381168114620003bd57600080fd5b919050565b805163ffffffff81168114620003bd57600080fd5b600060e08284031215620003ea57600080fd5b60405160e081016001600160401b03811182821017156200040f576200040f6200033e565b6040529050806200042083620003a5565b81526020830151602082015260408301516040820152606083015160608201526200044e60808401620003c2565b60808201526200046160a08401620003c2565b60a08201526200047460c08401620003c2565b60c08201525092915050565b600082601f8301126200049257600080fd5b815160206001600160401b0380831115620004b157620004b16200033e565b8260051b604051601f19603f83011681018181108482111715620004d957620004d96200033e565b604052938452858101830193838101925087851115620004f857600080fd5b83870191505b8482101562000522576200051282620003a5565b83529183019190830190620004fe565b979650505050505050565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b908301908185036102408112156200056f57600080fd5b6200057962000354565b610100808312156200058a57600080fd5b620005946200037f565b9250620005a185620003a5565b8352620005b160208601620003a5565b602084015260408501516040840152606085015160608401526080850151608084015260a085015160a084015260c085015160c084015260e08501518015158114620005fc57600080fd5b60e08401528282526200061288868301620003d7565b6020830152506101e08401519150828211156200062e57600080fd5b6200063c8783860162000480565b6040820152620006506102008501620003a5565b6060820152620006646102208501620003a5565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620006aa57634e487b7160e01b600052601160045260246000fd5b5060010190565b61112a80620006c16000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c80630ad47e1e146100bf5780632c85e863146100d4578063408c3b2e146100fe5780634aecebf31461011e5780635815d8bf1461013157806366bec164146101da5780636f27089f146101e8578063715018a614610296578063797202661461029e5780638da5cb5b146102b1578063d63a8e11146102d1578063d8de658714610304578063e6225630146103f6578063f2fde38b14610416575b600080fd5b6100d26100cd366004610bf3565b610429565b005b6100e76100e2366004610c85565b61049c565b6040516100f5929190610d52565b60405180910390f35b61011161010c366004610c85565b6105a4565b6040516100f59190610d75565b6100d261012c366004610e2a565b61062b565b61019261013f366004610c85565b601360205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b03968716979590961695939492939192909160ff1688565b604080516001600160a01b03998a168152989097166020890152958701949094526060860192909252608085015260a084015260c0830152151560e0820152610100016100f5565b6100d261012c366004610ef5565b61024b6101f6366004610c85565b601260205260009081526040902080546001820154600283015460038401546004909401546001600160a01b0390931693919290919063ffffffff80821691600160201b8104821691600160401b9091041687565b604080516001600160a01b039098168852602088019690965294860193909352606085019190915263ffffffff908116608085015290811660a08401521660c082015260e0016100f5565b6100d261064b565b6100d26102ac366004610f1a565b61065f565b6102b96107c5565b6040516001600160a01b0390911681526020016100f5565b6102f46102df36600461103c565b60116020526000908152604090205460ff1681565b60405190151581526020016100f5565b60408051610100810182526001546001600160a01b03908116825260025481166020808401919091526003548385015260045460608085019190915260055460808086019190915260065460a08087019190915260075460c08088019190915260085460ff16151560e0808901919091528851908101895260095487168152600a5495810195909552600b5497850197909752600c5492840192909252600d5463ffffffff80821692850192909252600160201b8104821692840192909252600160401b9091041693810193909352600f546010546103e69492918216911684565b6040516100f59493929190611057565b610409610404366004610c85565b6107d4565b6040516100f59190611099565b6100d261042436600461103c565b610858565b6010546040516000916001600160a01b03169061044990839036906110a7565b600060405180830381855af49150503d8060008114610484576040519150601f19603f3d011682016040523d82523d6000602084013e610489565b606091505b505090508061049757600080fd5b505050565b6104a4610a3a565b6104ac610a76565b505060009081526012602090815260408083206013835292819020815160e0808201845285546001600160a01b03908116835260018088015484880152600280890154858801526003808a015460608088019190915260049a8b015463ffffffff8082166080808b0191909152600160201b8304821660a0808c0191909152600160401b90930490911660c0808b01919091528b5161010081018d528b5489168152968b01549097169b86019b909b5292880154988401989098528601549682019690965296840154958701959095526005830154938601939093526006820154938501939093526007015460ff1615159083015291565b6105ac610a76565b5060009081526013602090815260409182902082516101008101845281546001600160a01b039081168252600183015416928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c082015260079091015460ff16151560e082015290565b600f546040516000916001600160a01b03169061044990839036906110a7565b6106536108d6565b61065d6000610935565b565b6106676108d6565b6106748160400151610985565b80518051600180546001600160a01b039283166001600160a01b03199182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e0909901516008805491151560ff19909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff908116600160401b0263ffffffff60401b19958216600160201b026001600160401b0319909816919092161795909517929092169390931790935591830151805184939261078692600e92910190610acf565b506060820151600e820180546001600160a01b03199081166001600160a01b0393841617909155608090930151600f9092018054909316911617905550565b6000546001600160a01b031690565b6107dc610a3a565b50600090815260126020908152604091829020825160e08101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260049091015463ffffffff8082166080840152600160201b8204811660a0840152600160401b9091041660c082015290565b6108606108d6565b6001600160a01b0381166108ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6108d381610935565b50565b336108df6107c5565b6001600160a01b03161461065d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108c1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015610a3657601160008383815181106109a7576109a76110b7565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615601160008484815181106109f4576109f46110b7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610a2f816110cd565b9050610988565b5050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b828054828255906000526020600020908101928215610b24579160200282015b82811115610b2457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610aef565b50610b30929150610b34565b5090565b5b80821115610b305760008155600101610b35565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715610b8257610b82610b49565b60405290565b60405160a081016001600160401b0381118282101715610b8257610b82610b49565b604051601f8201601f191681016001600160401b0381118282101715610bd257610bd2610b49565b604052919050565b803563ffffffff81168114610bee57600080fd5b919050565b6000806106e0808486031215610c0857600080fd5b83359250602085603f860112610c1d57600080fd5b6040516106c081016001600160401b0381118282101715610c4057610c40610b49565b604052918501918087841115610c5557600080fd5b8287015b84811015610c7757610c6a81610bda565b8252908301908301610c59565b509497909650945050505050565b600060208284031215610c9757600080fd5b5035919050565b80516001600160a01b0316825260208082015190830152604080820151908301526060808201519083015260808082015163ffffffff9081169184019190915260a08281015182169084015260c09182015116910152565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b6101e08101610d618285610c9e565b610d6e60e0830184610cf6565b9392505050565b6101008101610d848284610cf6565b92915050565b80356001600160a01b0381168114610bee57600080fd5b60006101008284031215610db457600080fd5b610dbc610b5f565b9050610dc782610d8a565b8152610dd560208301610d8a565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e08201358015158114610e1f57600080fd5b60e082015292915050565b6000806101208385031215610e3e57600080fd5b82359150610e4f8460208501610da1565b90509250929050565b600060e08284031215610e6a57600080fd5b60405160e081016001600160401b0381118282101715610e8c57610e8c610b49565b604052905080610e9b83610d8a565b8152602083013560208201526040830135604082015260608301356060820152610ec760808401610bda565b6080820152610ed860a08401610bda565b60a0820152610ee960c08401610bda565b60c08201525092915050565b6000806101008385031215610f0957600080fd5b82359150610e4f8460208501610e58565b60006020808385031215610f2d57600080fd5b82356001600160401b0380821115610f4457600080fd5b908401906102408287031215610f5957600080fd5b610f61610b88565b610f6b8784610da1565b8152610f7b876101008501610e58565b848201526101e083013582811115610f9257600080fd5b8301601f81018813610fa357600080fd5b803583811115610fb557610fb5610b49565b8060051b9350610fc6868501610baa565b818152938201860193868101908a861115610fe057600080fd5b928701925b8584101561100557610ff684610d8a565b82529287019290870190610fe5565b60408501525061101b9150506102008401610d8a565b606082015261102d6102208401610d8a565b60808201529695505050505050565b60006020828403121561104e57600080fd5b610d6e82610d8a565b61022081016110668287610cf6565b611074610100830186610c9e565b6001600160a01b039384166101e0830152919092166102009092019190915292915050565b60e08101610d848284610c9e565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016110ed57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212208b2d223ce32c5abbf2b7110f3b58e24c79d2ffe31b96b0b5f1118ad899bd545964736f6c63430008110033";

type GamificationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GamificationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gamification__factory extends ContractFactory {
  constructor(...args: GamificationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Gamification";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gamification> {
    return super.deploy(input, overrides || {}) as Promise<Gamification>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Gamification {
    return super.attach(address) as Gamification;
  }
  connect(signer: Signer): Gamification__factory {
    return super.connect(signer) as Gamification__factory;
  }
  static readonly contractName: "Gamification";
  public readonly contractName: "Gamification";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GamificationInterface {
    return new utils.Interface(_abi) as GamificationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gamification {
    return new Contract(address, _abi, signerOrProvider) as Gamification;
  }
}
