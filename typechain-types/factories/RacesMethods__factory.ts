/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002993380380620029938339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b6124a380620004f06000396000f3fe6080604052600436106100c75760003560e01c8063b8f1835911610074578063e200c8571161004e578063e200c857146102bd578063f2fde38b146102ea578063fcf696351461030a57600080fd5b8063b8f18359146101b5578063d63a8e11146101d5578063d8de65871461021557600080fd5b80639ad2e2b0116100a55780639ad2e2b014610151578063af640d0f14610164578063b7dda85e1461018857600080fd5b8063715018a6146100cc5780637bbc469e146100e35780638da5cb5b1461011c575b600080fd5b3480156100d857600080fd5b506100e161032a565b005b3480156100ef57600080fd5b506101036100fe366004611692565b61033e565b6040516101139493929190611a1e565b60405180910390f35b34801561012857600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b6100e161015f366004611e44565b6108b2565b34801561017057600080fd5b5061017a60015481565b604051908152602001610113565b34801561019457600080fd5b506101a86101a3366004611692565b610a18565b6040516101139190611e81565b3480156101c157600080fd5b506100e16101d0366004611ef5565b610fa4565b3480156101e157600080fd5b506102056101f0366004611fda565b600b6020526000908152604090205460ff1681565b6040519015158152602001610113565b34801561022157600080fd5b506002546003546004546005546006546007546008546102679673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610113565b3480156102c957600080fd5b506102dd6102d8366004611692565b611188565b6040516101139190611ffc565b3480156102f657600080fd5b506100e1610305366004611fda565b6111ed565b34801561031657600080fd5b506100e1610325366004612226565b6112a9565b610332611421565b61033c60006114a2565b565b600a602052806000526040600020600091509050806000016040518061012001604052908160008201805461037290612329565b80601f016020809104026020016040519081016040528092919081815260200182805461039e90612329565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561047957602002820191906000526020600020905b815481526020019060010190808311610465575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104d157602002820191906000526020600020905b8154815260200190600101908083116104bd575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561056e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610543575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105dd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105b2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561064c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610621575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106e6576000848152602090819020830180546040805182850281018501909152818152928301828280156106d257602002820191906000526020600020905b8154815260200190600101908083116106be575b50505050508152602001906001019061067a565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561077f5760008481526020908190208301805460408051828502810185019091528181529283018282801561076b57602002820191906000526020600020905b815481526020019060010190808311610757575b505050505081526020019060010190610713565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561080657602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107e4576107e4611806565b8152602060019283018181049485019490930390920291018084116107c55790505b505050505081525050815250509080600e01549080600f01549080601001805461082f90612329565b80601f016020809104026020016040519081016040528092919081815260200182805461085b90612329565b80156108a85780601f1061087d576101008083540402835291602001916108a8565b820191906000526020600020905b81548152906001019060200180831161088b57829003601f168201915b5050505050905084565b336000908152600b602052604090205460ff166108ce57600080fd5b60005b815151811015610a14576005548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c29190849081106109125761091261237c565b6020026020010151846020015184815181106109305761093061237c565b60200260200101518560400151858151811061094e5761094e61237c565b60200260200101518660600151868151811061096c5761096c61237c565b60200260200101518760800151878151811061098a5761098a61237c565b60200260200101518860a0015188815181106109a8576109a861237c565b60200260200101516040518763ffffffff1660e01b81526004016109d1969594939291906123ab565b600060405180830381600087803b1580156109eb57600080fd5b505af11580156109ff573d6000803e3d6000fd5b5050505080610a0d9061240e565b90506108d1565b5050565b610a20611517565b6000828152600a60205260409081902081516101a08101909252805482906080820190839082908290610a5290612329565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7e90612329565b8015610acb5780601f10610aa057610100808354040283529160200191610acb565b820191906000526020600020905b815481529060010190602001808311610aae57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610b5957602002820191906000526020600020905b815481526020019060010190808311610b45575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610bb157602002820191906000526020600020905b815481526020019060010190808311610b9d575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610c4e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c23575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610cbd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c92575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610d2c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610d01575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610dc657600084815260209081902083018054604080518285028101850190915281815292830182828015610db257602002820191906000526020600020905b815481526020019060010190808311610d9e575b505050505081526020019060010190610d5a565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e5f57600084815260209081902083018054604080518285028101850190915281815292830182828015610e4b57602002820191906000526020600020905b815481526020019060010190808311610e37575b505050505081526020019060010190610df3565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610ee657602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610ec457610ec4611806565b815260206001928301818104948501949093039092029101808411610ea55790505b505050505081525050815250508152602001600e8201548152602001600f8201548152602001601082018054610f1b90612329565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4790612329565b8015610f945780601f10610f6957610100808354040283529160200191610f94565b820191906000526020600020905b815481529060010190602001808311610f7757829003601f168201915b5050505050815250509050919050565b610fac611421565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e08301518051849361108292600992910190611545565b5090505060005b8160e0015151811015610a1457600b60008360e0015183815181106110b0576110b061237c565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e00151848151811061111b5761111b61237c565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556111818161240e565b9050611089565b6000818152600a60209081526040918290206003018054835181840281018401909452808452606093928301828280156111e157602002820191906000526020600020905b8154815260200190600101908083116111cd575b50505050509050919050565b6111f5611421565b73ffffffffffffffffffffffffffffffffffffffff811661129d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6112a6816114a2565b50565b336000908152600b602052604090205460ff166112c557600080fd5b816001547f47f7986237041bdc83e87c72847c74f0009ce4afeb78edcf0e7296d1ad5201e66040518060800160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e001518152602001876000015161010001518152508152602001868152602001600081526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040516114029190611e81565b60405180910390a36001600081546114199061240e565b909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611294565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051806080016040528061152a6115cf565b81526020016000815260200160008152602001606081525090565b8280548282559060005260206000209081019282156115bf579160200282015b828111156115bf57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611565565b506115cb92915061167d565b5090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016116786040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156115cb576000815560010161167e565b6000602082840312156116a457600080fd5b5035919050565b6000815180845260005b818110156116d1576020818501810151868301820152016116b5565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561173f57815187529582019590820190600101611723565b509495945050505050565b600081518084526020808501945080840160005b8381101561173f57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161175e565b600082825180855260208086019550808260051b84010181860160005b848110156117f9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189526117e783835161170f565b988401989250908301906001016117ad565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061186c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261188560c085018261174a565b90506020808401518583038287015261189e838261174a565b925050604084015185830360408701526118b8838261174a565b925050606084015185830360608701526118d28382611790565b925050608084015185830360808701526118ec8382611790565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561193657611922828651611835565b93830193600192909201919083019061190f565b509695505050505050565b60006101208251818552611957828601826116ab565b9150506020830151611981602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516119a9604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526119c1828261170f565b915050608083015184820360808601526119db828261170f565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611a148382611870565b9695505050505050565b608081526000611a316080830187611941565b8560208401528460408401528281036060840152611a4f81856116ab565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611aac57611aac611a5a565b60405290565b604051610100810167ffffffffffffffff81118282101715611aac57611aac611a5a565b604051610120810167ffffffffffffffff81118282101715611aac57611aac611a5a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611b4157611b41611a5a565b604052919050565b600067ffffffffffffffff821115611b6357611b63611a5a565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b9157600080fd5b919050565b600082601f830112611ba757600080fd5b81356020611bbc611bb783611b49565b611afa565b82815260059290921b84018101918181019086841115611bdb57600080fd5b8286015b8481101561193657611bf081611b6d565b8352918301918301611bdf565b600082601f830112611c0e57600080fd5b81356020611c1e611bb783611b49565b82815260059290921b84018101918181019086841115611c3d57600080fd5b8286015b848110156119365780358352918301918301611c41565b600082601f830112611c6957600080fd5b81356020611c79611bb783611b49565b82815260059290921b84018101918181019086841115611c9857600080fd5b8286015b8481101561193657803567ffffffffffffffff811115611cbc5760008081fd5b611cca8986838b0101611bfd565b845250918301918301611c9c565b600082601f830112611ce957600080fd5b81356020611cf9611bb783611b49565b82815260059290921b84018101918181019086841115611d1857600080fd5b8286015b8481101561193657803560048110611d345760008081fd5b8352918301918301611d1c565b600060c08284031215611d5357600080fd5b611d5b611a89565b9050813567ffffffffffffffff80821115611d7557600080fd5b611d8185838601611b96565b83526020840135915080821115611d9757600080fd5b611da385838601611b96565b60208401526040840135915080821115611dbc57600080fd5b611dc885838601611b96565b60408401526060840135915080821115611de157600080fd5b611ded85838601611c58565b60608401526080840135915080821115611e0657600080fd5b611e1285838601611c58565b608084015260a0840135915080821115611e2b57600080fd5b50611e3884828501611cd8565b60a08301525092915050565b600060208284031215611e5657600080fd5b813567ffffffffffffffff811115611e6d57600080fd5b611e7984828501611d41565b949350505050565b602081526000825160806020840152611e9d60a0840182611941565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016080850152611eec82826116ab565b95945050505050565b600060208284031215611f0757600080fd5b813567ffffffffffffffff80821115611f1f57600080fd5b908301906101008286031215611f3457600080fd5b611f3c611ab2565b611f4583611b6d565b8152611f5360208401611b6d565b6020820152611f6460408401611b6d565b6040820152611f7560608401611b6d565b6060820152611f8660808401611b6d565b6080820152611f9760a08401611b6d565b60a0820152611fa860c08401611b6d565b60c082015260e083013582811115611fbf57600080fd5b611fcb87828601611b96565b60e08301525095945050505050565b600060208284031215611fec57600080fd5b611ff582611b6d565b9392505050565b602081526000611ff5602083018461170f565b600082601f83011261202057600080fd5b813567ffffffffffffffff81111561203a5761203a611a5a565b61206b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611afa565b81815284602083860101111561208057600080fd5b816020850160208301376000918101602001919091529392505050565b600061012082840312156120b057600080fd5b6120b8611ad6565b9050813567ffffffffffffffff808211156120d257600080fd5b6120de8583860161200f565b83526120ec60208501611b6d565b60208401526120fd60408501611b6d565b6040840152606084013591508082111561211657600080fd5b61212285838601611bfd565b6060840152608084013591508082111561213b57600080fd5b61214785838601611bfd565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561218057600080fd5b61218c86828701611d41565b8385015250505092915050565b803563ffffffff81168114611b9157600080fd5b600082601f8301126121be57600080fd5b813560206121ce611bb783611b49565b82815260059290921b840181019181810190868411156121ed57600080fd5b8286015b84811015611936578035600881106122095760008081fd5b83529183019183016121f1565b80358015158114611b9157600080fd5b6000806040838503121561223957600080fd5b82359150602083013567ffffffffffffffff8082111561225857600080fd5b90840190610120828703121561226d57600080fd5b612275611ad6565b82358281111561228457600080fd5b6122908882860161209d565b8252506020830135602082015260408301356040820152606083013560608201526122bd60808401612199565b60808201526122ce60a08401612199565b60a08201526122df60c08401612199565b60c082015260e0830135828111156122f657600080fd5b612302888286016121ad565b60e0830152506101009150612318828401612216565b828201528093505050509250929050565b600181811c9082168061233d57607f821691505b602082108103612376577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c060608301526123ec60c083018661170f565b82810360808401526123fe818661170f565b915050611a4f60a0830184611835565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612466577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e6fe6f025bca451ba473c78ffad2f57f299bf712409d4ec2511f748875b0b86d64736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
