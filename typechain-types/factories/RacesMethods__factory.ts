/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b506040516200357a3803806200357a8339810160408190526200003891620003ea565b806200004433620001fc565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a929101906200024c565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015620001f357600d6000836101000151838151811062000159576200015962000511565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110620001ae57620001ae62000511565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001eb8162000527565b90506200012c565b5050506200054f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b805180151581146200032757600080fd5b600060208284031215620003fd57600080fd5b81516001600160401b03808211156200041557600080fd5b9083019061014082860312156200042b57600080fd5b62000435620002e3565b62000440836200030f565b815262000450602084016200030f565b602082015262000463604084016200030f565b604082015262000476606084016200030f565b606082015262000489608084016200030f565b60808201526200049c60a084016200030f565b60a0820152620004af60c084016200030f565b60c0820152620004c260e084016200030f565b60e08201526101008084015183811115620004dc57600080fd5b620004ea888287016200032c565b828401525050610120915062000502828401620003d9565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200054857634e487b7160e01b600052601160045260246000fd5b5060010190565b61301b806200055f6000396000f3fe6080604052600436106100b85760003560e01c806326e42cf4146100bd5780632a546a38146100df5780633f16e358146101c5578063680adc37146101d8578063715018a6146102605780637bbc469e146102755780638da5cb5b146102a9578063af640d0f146102d6578063b7dda85e146102fa578063c691c1c614610327578063d63a8e1114610347578063d8de658714610387578063e115234314610434578063e200c85714610454578063f2fde38b14610481575b600080fd5b3480156100c957600080fd5b506100dd6100d8366004611be7565b6104a1565b005b3480156100eb57600080fd5b506101796100fa366004611cf4565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600e6020908152604091829020825160808101845290546001600160401b038082168352600160401b8204811693830193909352600160801b8104831693820193909352600160c01b90920416606082015290565b6040516101bc919081516001600160401b039081168252602080840151821690830152604083810151821690830152606092830151169181019190915260800190565b60405180910390f35b6100dd6101d3366004611f6a565b610650565b3480156101e457600080fd5b5061022d6101f3366004611cf4565b600e602052600090815260409020546001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b03958616815293851660208501529184169183019190915290911660608201526080016101bc565b34801561026c57600080fd5b506100dd6107e5565b34801561028157600080fd5b50610295610290366004611cf4565b6107f9565b6040516101bc98979695949392919061218e565b3480156102b557600080fd5b506102be610c35565b6040516001600160a01b0390911681526020016101bc565b3480156102e257600080fd5b506102ec60015481565b6040519081526020016101bc565b34801561030657600080fd5b5061031a610315366004611cf4565b610c44565b6040516101bc9190612203565b34801561033357600080fd5b506100dd61034236600461233a565b611110565b34801561035357600080fd5b5061037761036236600461248d565b600d6020526000908152604090205460ff1681565b60405190151581526020016101bc565b34801561039357600080fd5b50600254600354600454600554600654600754600854600954600b546103d9986001600160a01b0390811698811697811696811695811694811693811692169060ff1689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c084015290921660e0820152901515610100820152610120016101bc565b34801561044057600080fd5b506100dd61044f366004611cf4565b61154f565b34801561046057600080fd5b5061047461046f366004611cf4565b61163f565b6040516101bc91906124b1565b34801561048d57600080fd5b506100dd61049c36600461248d565b6116a4565b6104a961171a565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361056f92600a929101906117c9565b5061012091909101516009909101805460ff191691151591909117905560005b8161010001515181101561064c57600d600083610100015183815181106105b8576105b86124c4565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d6000846101000151848151811061060a5761060a6124c4565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610645816124da565b905061058f565b5050565b336000908152600d602052604090205460ff1661066c57600080fd5b60005b81515181101561064c57600754825180516000926001600160a01b031691908490811061069e5761069e6124c4565b6020026020010151846020015184815181106106bc576106bc6124c4565b6020026020010151856040015185815181106106da576106da6124c4565b6020026020010151866060015186815181106106f8576106f86124c4565b602002602001015187608001518781518110610716576107166124c4565b60200260200101518860a001518881518110610734576107346124c4565b602002602001015160405160240161075196959493929190612501565b60408051601f198184030181529181526020820180516001600160e01b031663400f959f60e01b179052516107869190612561565b600060405180830381855af49150503d80600081146107c1576040519150601f19603f3d011682016040523d82523d6000602084013e6107c6565b606091505b50509050806107d457600080fd5b506107de816124da565b905061066f565b6107ed61171a565b6107f76000611779565b565b600c602052600090815260409020805481906108149061257d565b80601f01602080910402602001604051908101604052809291908181526020018280546108409061257d565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b50505060018401546003850154600486015460058701546040805160068a01805460e0602082028401810190945260c083018181529a9b6001600160a01b039098169a9699509497509295949093849284919084018282801561091957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108fb575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561097b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161095d575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156109dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109bf575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a7757600084815260209081902083018054604080518285028101850190915281815292830182828015610a6357602002820191906000526020600020905b815481526020019060010190808311610a4f575b505050505081526020019060010190610a0b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b1057600084815260209081902083018054604080518285028101850190915281815292830182828015610afc57602002820191906000526020600020905b815481526020019060010190808311610ae8575b505050505081526020019060010190610aa4565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610b9357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610b565790505b5050505050815250509080600c01549080600d018054610bb29061257d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bde9061257d565b8015610c2b5780601f10610c0057610100808354040283529160200191610c2b565b820191906000526020600020905b815481529060010190602001808311610c0e57829003601f168201915b5050505050905088565b6000546001600160a01b031690565b610c4c61182e565b6000828152600c60205260409081902081516101208101909252805482908290610c759061257d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca19061257d565b8015610cee5780601f10610cc357610100808354040283529160200191610cee565b820191906000526020600020905b815481529060010190602001808311610cd157829003601f168201915b505050918352505060018201546001600160a01b03166020808301919091526002830180546040805182850281018501825282815294019392830182828015610d5657602002820191906000526020600020905b815481526020019060010190808311610d42575b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610de657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dc8575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e4857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e2a575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610eaa57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e8c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f4457600084815260209081902083018054604080518285028101850190915281815292830182828015610f3057602002820191906000526020600020905b815481526020019060010190808311610f1c575b505050505081526020019060010190610ed8565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610fdd57600084815260209081902083018054604080518285028101850190915281815292830182828015610fc957602002820191906000526020600020905b815481526020019060010190808311610fb5575b505050505081526020019060010190610f71565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561106057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116110235790505b5050505050815250508152602001600c8201548152602001600d820180546110879061257d565b80601f01602080910402602001604051908101604052809291908181526020018280546110b39061257d565b80156111005780601f106110d557610100808354040283529160200191611100565b820191906000526020600020905b8154815290600101906020018083116110e357829003601f168201915b5050505050815250509050919050565b336000908152600d602052604090205460ff1661112c57600080fd5b600b5460ff16156114105760065460405163d8c521bf60e01b81526001600160a01b039091169063d8c521bf9061116990859085906004016125b7565b600060405180830381865afa158015611186573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ae919081019061299a565b6001546000908152600c60205260409020815181906111cd9082612aff565b506020828101516001830180546001600160a01b0319166001600160a01b039092169190911790556040830151805161120c92600285019201906118ba565b50606082015160038201556080820151600482015560a0820151600582015560c0820151805180516006840191611248918391602001906117c9565b50602082810151805161126192600185019201906117c9565b506040820151805161127d9160028401916020909101906117c9565b50606082015180516112999160038401916020909101906118f5565b50608082015180516112b59160048401916020909101906118f5565b5060a082015180516112d191600584019160209091019061194e565b50505060e0820151600c820155610100820151600d8201906112f39082612aff565b5090505060005b8260200151518110156113c257600454602084015180516001600160a01b039092169163894f39fc919084908110611334576113346124c4565b6020026020010151846040518363ffffffff1660e01b8152600401611363929190918252602082015260400190565b6020604051808303816000875af1158015611382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a69190612bbe565b6000036113b257600080fd5b6113bb816124da565b90506112fa565b506001546000818152600c60205260409081902090517fdeac4b75274224a1b860c0caee5b72450aea68ad014cfa51df709ab425da417f9161140391612f11565b60405180910390a2611538565b6001546040805161012081018252845181526003546060860151925163666d638d60e11b81527fabf9a9f55436fcab94967775cab48bb9102d7a183c116e1f2aed1f263df682cb9360208401926001600160a01b03169163ccdac71a9161147d9160040190815260200190565b602060405180830381865afa15801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be9190612fc8565b6001600160a01b03168152602001856020015181526020018560600151815260200185608001518152602001600081526020018561010001518152602001848152602001604051806040016040528060048152602001630307830360e41b81525081525060405161152f9190612203565b60405180910390a25b600160008154611547906124da565b909155505050565b61155761171a565b478111156115c45760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6115cc610c35565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061163c5760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016115bb565b50565b6000818152600c602090815260409182902060020180548351818402810184019094528084526060939283018282801561169857602002820191906000526020600020905b815481526020019060010190808311611684575b50505050509050919050565b6116ac61171a565b6001600160a01b0381166117115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016115bb565b61163c81611779565b33611723610c35565b6001600160a01b0316146107f75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016115bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561181e579160200282015b8281111561181e57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906117e9565b5061182a9291506119f4565b5090565b6040518061012001604052806060815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016118a66040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b82805482825590600052602060002090810192821561181e579160200282015b8281111561181e5782518255916020019190600101906118da565b828054828255906000526020600020908101928215611942579160200282015b8281111561194257825180516119329184916020909101906118ba565b5091602001919060010190611915565b5061182a929150611a09565b8280548282559060005260206000209060070160089004810192821561181e5791602002820160005b838211156119bb57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302611977565b80156119eb5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026119bb565b505061182a9291505b5b8082111561182a57600081556001016119f5565b8082111561182a576000611a1d8282611a26565b50600101611a09565b508054600082559060005260206000209081019061163c91906119f4565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715611a7d57611a7d611a44565b60405290565b60405160c081016001600160401b0381118282101715611a7d57611a7d611a44565b60405161018081016001600160401b0381118282101715611a7d57611a7d611a44565b60405161012081016001600160401b0381118282101715611a7d57611a7d611a44565b604051601f8201601f191681016001600160401b0381118282101715611b1357611b13611a44565b604052919050565b6001600160a01b038116811461163c57600080fd5b8035611b3b81611b1b565b919050565b60006001600160401b03821115611b5957611b59611a44565b5060051b60200190565b600082601f830112611b7457600080fd5b81356020611b89611b8483611b40565b611aeb565b82815260059290921b84018101918181019086841115611ba857600080fd5b8286015b84811015611bcc578035611bbf81611b1b565b8352918301918301611bac565b509695505050505050565b80358015158114611b3b57600080fd5b600060208284031215611bf957600080fd5b81356001600160401b0380821115611c1057600080fd5b908301906101408286031215611c2557600080fd5b611c2d611a5a565b611c3683611b30565b8152611c4460208401611b30565b6020820152611c5560408401611b30565b6040820152611c6660608401611b30565b6060820152611c7760808401611b30565b6080820152611c8860a08401611b30565b60a0820152611c9960c08401611b30565b60c0820152611caa60e08401611b30565b60e08201526101008084013583811115611cc357600080fd5b611ccf88828701611b63565b8284015250506101209150611ce5828401611bd7565b91810191909152949350505050565b600060208284031215611d0657600080fd5b5035919050565b600082601f830112611d1e57600080fd5b81356020611d2e611b8483611b40565b82815260059290921b84018101918181019086841115611d4d57600080fd5b8286015b84811015611bcc5780358352918301918301611d51565b600082601f830112611d7957600080fd5b81356020611d89611b8483611b40565b82815260059290921b84018101918181019086841115611da857600080fd5b8286015b84811015611bcc5780356001600160401b03811115611dcb5760008081fd5b611dd98986838b0101611d0d565b845250918301918301611dac565b63ffffffff8116811461163c57600080fd5b8035611b3b81611de7565b600082601f830112611e1557600080fd5b81356020611e25611b8483611b40565b82815260059290921b84018101918181019086841115611e4457600080fd5b8286015b84811015611bcc578035611e5b81611de7565b8352918301918301611e48565b600060c08284031215611e7a57600080fd5b611e82611a83565b905081356001600160401b0380821115611e9b57600080fd5b611ea785838601611b63565b83526020840135915080821115611ebd57600080fd5b611ec985838601611b63565b60208401526040840135915080821115611ee257600080fd5b611eee85838601611b63565b60408401526060840135915080821115611f0757600080fd5b611f1385838601611d68565b60608401526080840135915080821115611f2c57600080fd5b611f3885838601611d68565b608084015260a0840135915080821115611f5157600080fd5b50611f5e84828501611e04565b60a08301525092915050565b600060208284031215611f7c57600080fd5b81356001600160401b03811115611f9257600080fd5b611f9e84828501611e68565b949350505050565b60005b83811015611fc1578181015183820152602001611fa9565b50506000910152565b60008151808452611fe2816020860160208601611fa6565b601f01601f19169290920160200192915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b8381101561203c5781516001600160a01b031687529582019590820190600101612017565b509495945050505050565b600081518084526020808501945080840160005b8381101561203c5781518752958201959082019060010161205b565b6000815180845260208085019450848260051b860182860160005b858110156120bc5783830389526120aa838351612047565b98850198925090840190600101612092565b5090979650505050505050565b6000815160c084526120de60c0850182612003565b9050602080840151858303828701526120f78382612003565b925050604084015185830360408701526121118382612003565b9250506060840151858303606087015261212b8382612077565b925050608084015185830360808701526121458382612077565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611bcc57845163ffffffff168252938301936001929092019190830190612168565b60006101008083526121a28184018c611fca565b6001600160a01b038b166020850152604084018a9052606084018990526080840188905283810360a085015290506121da81876120c9565b90508460c084015282810360e08401526121f48185611fca565b9b9a5050505050505050505050565b6020815260008251610120806020850152612222610140850183611fca565b915060208501516122366040860182611ff6565b506040850151601f19808685030160608701526122538483612047565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e087015261228e84836120c9565b60e08801516101008881019190915288015187820390920184880152935090506122b88382611fca565b9695505050505050565b60006001600160401b038211156122db576122db611a44565b50601f01601f191660200190565b600082601f8301126122fa57600080fd5b8135612308611b84826122c2565b81815284602083860101111561231d57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561234d57600080fd5b82356001600160401b038082111561236457600080fd5b90840190610180828703121561237957600080fd5b612381611aa5565b82358281111561239057600080fd5b61239c888286016122e9565b8252506020830135828111156123b157600080fd5b6123bd88828601611d0d565b6020830152506040830135828111156123d557600080fd5b6123e188828601611d0d565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100808401358381111561242d57600080fd5b61243989828701611e68565b828401525050610120915061244f828401611df9565b828201526101409150612463828401611df9565b828201526101609150612477828401611bd7565b9181019190915295602094909401359450505050565b60006020828403121561249f57600080fd5b81356124aa81611b1b565b9392505050565b6020815260006124aa6020830184612047565b634e487b7160e01b600052603260045260246000fd5b6000600182016124fa57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b03878116825286811660208301528516604082015260c06060820181905260009061253590830186612047565b82810360808401526125478186612047565b91505063ffffffff831660a0830152979650505050505050565b60008251612573818460208701611fa6565b9190910192915050565b600181811c9082168061259157607f821691505b6020821081036125b157634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600083516101808060408501526125d66101c0850183611fca565b91506020860151603f19808685030160608701526125f48483612047565b935060408801519150808685030160808701526126118483612047565b9350606088015160a0870152608088015160c087015260a088015160e087015260c08801519150610100828188015260e089015192506101208381890152818a01519350610140915082888703018289015261266d86856120c9565b9550808a0151935050610160915061268c8288018463ffffffff169052565b88015163ffffffff1692860192909252509094015115156101a0830152506020015290565b600082601f8301126126c257600080fd5b81516126d0611b84826122c2565b8181528460208386010111156126e557600080fd5b611f9e826020830160208701611fa6565b8051611b3b81611b1b565b600082601f83011261271257600080fd5b81516020612722611b8483611b40565b82815260059290921b8401810191818101908684111561274157600080fd5b8286015b84811015611bcc5780518352918301918301612745565b600082601f83011261276d57600080fd5b8151602061277d611b8483611b40565b82815260059290921b8401810191818101908684111561279c57600080fd5b8286015b84811015611bcc5780516127b381611b1b565b83529183019183016127a0565b600082601f8301126127d157600080fd5b815160206127e1611b8483611b40565b82815260059290921b8401810191818101908684111561280057600080fd5b8286015b84811015611bcc5780516001600160401b038111156128235760008081fd5b6128318986838b0101612701565b845250918301918301612804565b600082601f83011261285057600080fd5b81516020612860611b8483611b40565b82815260059290921b8401810191818101908684111561287f57600080fd5b8286015b84811015611bcc57805161289681611de7565b8352918301918301612883565b600060c082840312156128b557600080fd5b6128bd611a83565b82519091506001600160401b03808211156128d757600080fd5b6128e38583860161275c565b835260208401519150808211156128f957600080fd5b6129058583860161275c565b6020840152604084015191508082111561291e57600080fd5b61292a8583860161275c565b6040840152606084015191508082111561294357600080fd5b61294f858386016127c0565b6060840152608084015191508082111561296857600080fd5b612974858386016127c0565b608084015260a084015191508082111561298d57600080fd5b50611f5e8482850161283f565b6000602082840312156129ac57600080fd5b81516001600160401b03808211156129c357600080fd5b9083019061012082860312156129d857600080fd5b6129e0611ac8565b8251828111156129ef57600080fd5b6129fb878286016126b1565b825250612a0a602084016126f6565b6020820152604083015182811115612a2157600080fd5b612a2d87828601612701565b604083015250606083015160608201526080830151608082015260a083015160a082015260c083015182811115612a6357600080fd5b612a6f878286016128a3565b60c08301525060e083015160e08201526101008084015183811115612a9357600080fd5b612a9f888287016126b1565b918301919091525095945050505050565b601f821115612afa57600081815260208120601f850160051c81016020861015612ad75750805b601f850160051c820191505b81811015612af657828155600101612ae3565b5050505b505050565b81516001600160401b03811115612b1857612b18611a44565b612b2c81612b26845461257d565b84612ab0565b602080601f831160018114612b615760008415612b495750858301515b600019600386901b1c1916600185901b178555612af6565b600085815260208120601f198616915b82811015612b9057888601518255948401946001909101908401612b71565b5085821015612bae5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612bd057600080fd5b5051919050565b60008154612be48161257d565b808552602060018381168015612c015760018114612c1b57612c49565b60ff1985168884015283151560051b880183019550612c49565b866000528260002060005b85811015612c415781548a8201860152908301908401612c26565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b8381101561203c57815487529582019560019182019101612c6d565b6000815480845260208085019450836000528060002060005b8381101561203c5781546001600160a01b031687529582019560019182019101612ca2565b600082825480855260208086019550808260051b840101856000528160002060005b848110156120bc57858303601f19018952612d048383612c54565b98840198925060019182019101612ce9565b60c082526000612d2960c0840183612c89565b6001602085830381870152612d4083838701612c89565b9250604086840381880152612d588460028801612c89565b9350606087850381890152612d708560038901612cc7565b94506080888603818a0152612d888660048a01612cc7565b95506005880160a08a8803818c0152878254612da8818b90815260200190565b6000948552602085209a5091505b80600785011015612e2657895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c90830152988801986008939093019261010090910190612db6565b98549880841015612e435763ffffffff8a16825292880192908701905b80841015612e5f5789881c63ffffffff16825292880192908701905b80841015612e7b5789871c63ffffffff16825292880192908701905b80841015612e975789861c63ffffffff16825292880192908701905b80841015612eb35789851c63ffffffff16825292880192908701905b80841015612ecf5789831c63ffffffff16825292880192908701905b80841015612eed5760c08a901c63ffffffff16825292880192908701905b80841015612f015760e08a901c8252908701905b509b9a5050505050505050505050565b602081526000610120806020840152612f2e610140840185612bd7565b60018501546001600160a01b0316612f496040860182611ff6565b50601f1980858303016060860152612f648260028801612c54565b915060038601546080860152600486015460a0860152600586015460c0860152808583030160e0860152612f9b8260068801612d16565b9150600c86015461010086015280858303018386015250612fbf81600d8701612bd7565b95945050505050565b600060208284031215612fda57600080fd5b81516124aa81611b1b56fea26469706673582212204dbf2fa7d351a0510d1698102b8db1f540921356e021c57ffebc40bf4b249f2564736f6c63430008100033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
