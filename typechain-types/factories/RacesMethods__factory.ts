/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002d0538038062002d0583398101604081905262000039916200050f565b80516101008201518291906200004f33620001e7565b80518251146200005e57600080fd5b60005b8251811015620000f85781818151811062000080576200008062000634565b602002602001015160016000858481518110620000a157620000a162000634565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f0906200064a565b905062000061565b505081518051839250600391620001159183916020019062000237565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051620001db9260088501920190620002a1565b50905050505062000672565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d9291506200034a565b5090565b828054828255906000526020600020906007016008900481019282156200028f5791602002820160005b838211156200030e57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002cb565b8015620003405782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200030e565b50506200029d9291505b5b808211156200029d57600081556001016200034b565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200039d576200039d62000361565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ce57620003ce62000361565b604052919050565b60006001600160401b03821115620003f257620003f262000361565b5060051b60200190565b80516001600160a01b03811681146200041457600080fd5b919050565b600082601f8301126200042b57600080fd5b81516020620004446200043e83620003d6565b620003a3565b82815260059290921b840181019181810190868411156200046457600080fd5b8286015b848110156200048a576200047c81620003fc565b835291830191830162000468565b509695505050505050565b600082601f830112620004a757600080fd5b81516020620004ba6200043e83620003d6565b82815260059290921b84018101918181019086841115620004da57600080fd5b8286015b848110156200048a5780516001600160e01b031981168114620005015760008081fd5b8352918301918301620004de565b6000602082840312156200052257600080fd5b81516001600160401b03808211156200053a57600080fd5b9083019061012082860312156200055057600080fd5b6200055a62000377565b8251828111156200056a57600080fd5b620005788782860162000419565b8252506200058960208401620003fc565b60208201526200059c60408401620003fc565b6040820152620005af60608401620003fc565b6060820152620005c260808401620003fc565b6080820152620005d560a08401620003fc565b60a0820152620005e860c08401620003fc565b60c0820152620005fb60e08401620003fc565b60e082015261010080840151838111156200061557600080fd5b620006238882870162000495565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200066b57634e487b7160e01b600052601160045260246000fd5b5060010190565b61268380620006826000396000f3fe6080604052600436106100d25760003560e01c80639cce37c61161007f578063b7dda85e11610059578063b7dda85e14610297578063d8de6587146102c4578063e200c8571461036c578063f2fde38b1461039957600080fd5b80639cce37c6146101af578063aa4daabd14610253578063af640d0f1461027357600080fd5b80637bbc469e116100b05780637bbc469e1461012e5780638da5cb5b146101675780639ad2e2b01461019c57600080fd5b8063357d5142146100d757806365913d77146100f9578063715018a614610119575b600080fd5b3480156100e357600080fd5b506100f76100f2366004611a1e565b6103b9565b005b34801561010557600080fd5b506100f7610114366004611e77565b61047e565b34801561012557600080fd5b506100f761061e565b34801561013a57600080fd5b5061014e610149366004611f7a565b610632565b60405161015e94939291906122da565b60405180910390f35b34801561017357600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015e565b6100f76101aa366004612316565b610ba6565b3480156101bb57600080fd5b5061021a6101ca366004612353565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff0000000000000000000000000000000000000000000000000000000093841681529290911660208301520161015e565b34801561025f57600080fd5b506100f761026e366004612375565b610d34565b34801561027f57600080fd5b5061028960025481565b60405190815260200161015e565b3480156102a357600080fd5b506102b76102b2366004611f7a565b610e45565b60405161015e9190612482565b3480156102d057600080fd5b50600454600554600654600754600854600954600a546103169673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e00161015e565b34801561037857600080fd5b5061038c610387366004611f7a565b6113d1565b60405161015e91906124f6565b3480156103a557600080fd5b506100f76103b4366004612353565b611436565b6103c16114f2565b80518251146103cf57600080fd5b60005b8251811015610479578181815181106103ed576103ed612509565b60200260200101516001600085848151811061040b5761040b612509565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c02179055508061047290612538565b90506103d2565b505050565b3360009081526001602052604081205460e01b7fffffffff00000000000000000000000000000000000000000000000000000000908116913516146104c257600080fd5b816002547f47f7986237041bdc83e87c72847c74f0009ce4afeb78edcf0e7296d1ad5201e66040518060800160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e001518152602001876000015161010001518152508152602001868152602001600081526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040516105ff9190612482565b60405180910390a360026000815461061690612538565b909155505050565b6106266114f2565b6106306000611573565b565b600c602052806000526040600020600091509050806000016040518061012001604052908160008201805461066690612597565b80601f016020809104026020016040519081016040528092919081815260200182805461069290612597565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561076d57602002820191906000526020600020905b815481526020019060010190808311610759575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156107c557602002820191906000526020600020905b8154815260200190600101908083116107b1575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561086257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610837575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156108d157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116108a6575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561094057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610915575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156109da576000848152602090819020830180546040805182850281018501909152818152928301828280156109c657602002820191906000526020600020905b8154815260200190600101908083116109b2575b50505050508152602001906001019061096e565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610a7357600084815260209081902083018054604080518285028101850190915281815292830182828015610a5f57602002820191906000526020600020905b815481526020019060010190808311610a4b575b505050505081526020019060010190610a07565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610afa57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610ad857610ad86120cd565b815260206001928301818104948501949093039092029101808411610ab95790505b505050505081525050815250509080600e01549080600f015490806010018054610b2390612597565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4f90612597565b8015610b9c5780601f10610b7157610100808354040283529160200191610b9c565b820191906000526020600020905b815481529060010190602001808311610b7f57829003601f168201915b5050505050905084565b3360009081526001602052604081205460e01b7fffffffff0000000000000000000000000000000000000000000000000000000090811691351614610bea57600080fd5b60005b815151811015610d30576007548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c2919084908110610c2e57610c2e612509565b602002602001015184602001518481518110610c4c57610c4c612509565b602002602001015185604001518581518110610c6a57610c6a612509565b602002602001015186606001518681518110610c8857610c88612509565b602002602001015187608001518781518110610ca657610ca6612509565b60200260200101518860a001518881518110610cc457610cc4612509565b60200260200101516040518763ffffffff1660e01b8152600401610ced969594939291906125ea565b600060405180830381600087803b158015610d0757600080fd5b505af1158015610d1b573d6000803e3d6000fd5b5050505080610d2990612538565b9050610bed565b5050565b610d3c6114f2565b805180518291600391610d569183916020909101906115e8565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610e3f9260088501920190611672565b50505050565b610e4d611719565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610e7f90612597565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90612597565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610f8657602002820191906000526020600020905b815481526020019060010190808311610f72575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610fde57602002820191906000526020600020905b815481526020019060010190808311610fca575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561107b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611050575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156110ea57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110bf575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561115957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161112e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111f3576000848152602090819020830180546040805182850281018501909152818152928301828280156111df57602002820191906000526020600020905b8154815260200190600101908083116111cb575b505050505081526020019060010190611187565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561128c5760008481526020908190208301805460408051828502810185019091528181529283018282801561127857602002820191906000526020600020905b815481526020019060010190808311611264575b505050505081526020019060010190611220565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561131357602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156112f1576112f16120cd565b8152602060019283018181049485019490930390920291018084116112d25790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461134890612597565b80601f016020809104026020016040519081016040528092919081815260200182805461137490612597565b80156113c15780601f10611396576101008083540402835291602001916113c1565b820191906000526020600020905b8154815290600101906020018083116113a457829003601f168201915b5050505050815250509050919050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561142a57602002820191906000526020600020905b815481526020019060010190808311611416575b50505050509050919050565b61143e6114f2565b73ffffffffffffffffffffffffffffffffffffffff81166114e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6114ef81611573565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610630576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114dd565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611662579160200282015b8281111561166257825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611608565b5061166e929150611747565b5090565b828054828255906000526020600020906007016008900481019282156116625791602002820160005b838211156116dc57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261169b565b801561170c5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026116dc565b505061166e929150611747565b604051806080016040528061172c61175c565b81526020016000815260200160008152602001606081525090565b5b8082111561166e5760008155600101611748565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016118056040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561185c5761185c61180a565b60405290565b604051610120810167ffffffffffffffff8111828210171561185c5761185c61180a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118cd576118cd61180a565b604052919050565b600067ffffffffffffffff8211156118ef576118ef61180a565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461191d57600080fd5b919050565b600082601f83011261193357600080fd5b81356020611948611943836118d5565b611886565b82815260059290921b8401810191818101908684111561196757600080fd5b8286015b848110156119895761197c816118f9565b835291830191830161196b565b509695505050505050565b600082601f8301126119a557600080fd5b813560206119b5611943836118d5565b82815260059290921b840181019181810190868411156119d457600080fd5b8286015b848110156119895780357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a115760008081fd5b83529183019183016119d8565b60008060408385031215611a3157600080fd5b823567ffffffffffffffff80821115611a4957600080fd5b611a5586838701611922565b93506020850135915080821115611a6b57600080fd5b50611a7885828601611994565b9150509250929050565b600082601f830112611a9357600080fd5b813567ffffffffffffffff811115611aad57611aad61180a565b611ade60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611886565b818152846020838601011115611af357600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611b2157600080fd5b81356020611b31611943836118d5565b82815260059290921b84018101918181019086841115611b5057600080fd5b8286015b848110156119895780358352918301918301611b54565b600082601f830112611b7c57600080fd5b81356020611b8c611943836118d5565b82815260059290921b84018101918181019086841115611bab57600080fd5b8286015b8481101561198957803567ffffffffffffffff811115611bcf5760008081fd5b611bdd8986838b0101611b10565b845250918301918301611baf565b600082601f830112611bfc57600080fd5b81356020611c0c611943836118d5565b82815260059290921b84018101918181019086841115611c2b57600080fd5b8286015b8481101561198957803560048110611c475760008081fd5b8352918301918301611c2f565b600060c08284031215611c6657600080fd5b611c6e611839565b9050813567ffffffffffffffff80821115611c8857600080fd5b611c9485838601611922565b83526020840135915080821115611caa57600080fd5b611cb685838601611922565b60208401526040840135915080821115611ccf57600080fd5b611cdb85838601611922565b60408401526060840135915080821115611cf457600080fd5b611d0085838601611b6b565b60608401526080840135915080821115611d1957600080fd5b611d2585838601611b6b565b608084015260a0840135915080821115611d3e57600080fd5b50611d4b84828501611beb565b60a08301525092915050565b60006101208284031215611d6a57600080fd5b611d72611862565b9050813567ffffffffffffffff80821115611d8c57600080fd5b611d9885838601611a82565b8352611da6602085016118f9565b6020840152611db7604085016118f9565b60408401526060840135915080821115611dd057600080fd5b611ddc85838601611b10565b60608401526080840135915080821115611df557600080fd5b611e0185838601611b10565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611e3a57600080fd5b611e4686828701611c54565b8385015250505092915050565b803563ffffffff8116811461191d57600080fd5b8035801515811461191d57600080fd5b60008060408385031215611e8a57600080fd5b82359150602083013567ffffffffffffffff80821115611ea957600080fd5b908401906101208287031215611ebe57600080fd5b611ec6611862565b823582811115611ed557600080fd5b611ee188828601611d57565b825250602083013582811115611ef657600080fd5b611f0288828601611b10565b602083015250604083013560408201526060830135606082015260808301356080820152611f3260a08401611e53565b60a0820152611f4360c08401611e53565b60c0820152611f5460e08401611e53565b60e08201526101009150611f69828401611e67565b828201528093505050509250929050565b600060208284031215611f8c57600080fd5b5035919050565b6000815180845260005b81811015611fb957602081850181015186830182015201611f9d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156120275781518752958201959082019060010161200b565b509495945050505050565b600081518084526020808501945080840160005b8381101561202757815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612046565b600081518084526020808501808196508360051b8101915082860160005b858110156120c05782840389526120ae848351611ff7565b98850198935090840190600101612096565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612133577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261214c60c0850182612032565b9050602080840151858303828701526121658382612032565b9250506040840151858303604087015261217f8382612032565b925050606084015185830360608701526121998382612078565b925050608084015185830360808701526121b38382612078565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611989576121e98286516120fc565b9383019360019290920191908301906121d6565b6000610120825181855261221382860182611f93565b915050602083015161223d602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612265604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261227d8282611ff7565b915050608083015184820360808601526122978282611ff7565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526122d08382612137565b9695505050505050565b6080815260006122ed60808301876121fd565b856020840152846040840152828103606084015261230b8185611f93565b979650505050505050565b60006020828403121561232857600080fd5b813567ffffffffffffffff81111561233f57600080fd5b61234b84828501611c54565b949350505050565b60006020828403121561236557600080fd5b61236e826118f9565b9392505050565b60006020828403121561238757600080fd5b813567ffffffffffffffff8082111561239f57600080fd5b9083019061012082860312156123b457600080fd5b6123bc611862565b8235828111156123cb57600080fd5b6123d787828601611922565b8252506123e6602084016118f9565b60208201526123f7604084016118f9565b6040820152612408606084016118f9565b6060820152612419608084016118f9565b608082015261242a60a084016118f9565b60a082015261243b60c084016118f9565b60c082015261244c60e084016118f9565b60e0820152610100808401358381111561246557600080fd5b61247188828701611994565b918301919091525095945050505050565b60208152600082516080602084015261249e60a08401826121fd565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526124ed8282611f93565b95945050505050565b60208152600061236e6020830184611ff7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612590577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c908216806125ab57607f821691505b6020821081036125e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261262b60c0830186611ff7565b828103608084015261263d8186611ff7565b91505061230b60a08301846120fc56fea26469706673582212209e52a85879927e6acb7c03257edfac9e569b957ff58af795ea5fe799273e93c264736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
