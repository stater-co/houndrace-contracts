/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raceFee",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620035b6380380620035b68339810160408190526200003891620003f4565b80620000443362000206565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000256565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b81610100015151811015620001fd57600e6000836101000151838151811062000163576200016362000528565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110620001b857620001b862000528565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001f5816200053e565b905062000136565b50505062000566565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002ae579160200282015b82811115620002ae57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000277565b50620002bc929150620002c0565b5090565b5b80821115620002bc5760008155600101620002c1565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620003135762000313620002d7565b60405290565b80516001600160a01b03811681146200033157600080fd5b919050565b600082601f8301126200034857600080fd5b815160206001600160401b0380831115620003675762000367620002d7565b8260051b604051601f19603f830116810181811084821117156200038f576200038f620002d7565b604052938452858101830193838101925087851115620003ae57600080fd5b83870191505b84821015620003d857620003c88262000319565b83529183019190830190620003b4565b979650505050505050565b805180151581146200033157600080fd5b6000602082840312156200040757600080fd5b81516001600160401b03808211156200041f57600080fd5b9083019061016082860312156200043557600080fd5b6200043f620002ed565b6200044a8362000319565b81526200045a6020840162000319565b60208201526200046d6040840162000319565b6040820152620004806060840162000319565b6060820152620004936080840162000319565b6080820152620004a660a0840162000319565b60a0820152620004b960c0840162000319565b60c0820152620004cc60e0840162000319565b60e08201526101008084015183811115620004e657600080fd5b620004f48882870162000336565b82840152505061012091508183015182820152610140915062000519828401620003e3565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200055f57634e487b7160e01b600052601160045260246000fd5b5060010190565b61304080620005766000396000f3fe6080604052600436106100b85760003560e01c80632a546a38146100bd5780633f16e358146101a3578063680adc37146101b8578063715018a6146102405780637bbc469e146102555780638da5cb5b14610289578063af640d0f146102b6578063b7dda85e146102da578063c4bdc7e714610307578063c691c1c614610327578063d63a8e1114610347578063d8de658714610387578063e115234314610442578063e200c85714610462578063f2fde38b1461048f575b600080fd5b3480156100c957600080fd5b506101576100d8366004611a5c565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600f6020908152604091829020825160808101845290546001600160401b038082168352600160401b8204811693830193909352600160801b8104831693820193909352600160c01b90920416606082015290565b60405161019a919081516001600160401b039081168252602080840151821690830152604083810151821690830152606092830151169181019190915260800190565b60405180910390f35b6101b66101b1366004611e65565b6104af565b005b3480156101c457600080fd5b5061020d6101d3366004611a5c565b600f602052600090815260409020546001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b039586168152938516602085015291841691830191909152909116606082015260800161019a565b34801561024c57600080fd5b506101b6610648565b34801561026157600080fd5b50610275610270366004611a5c565b61065c565b60405161019a98979695949392919061208c565b34801561029557600080fd5b5061029e610a98565b6040516001600160a01b03909116815260200161019a565b3480156102c257600080fd5b506102cc60015481565b60405190815260200161019a565b3480156102e657600080fd5b506102fa6102f5366004611a5c565b610aa7565b60405161019a9190612101565b34801561031357600080fd5b506101b66103223660046121d0565b610f73565b34801561033357600080fd5b506101b6610342366004612362565b611128565b34801561035357600080fd5b506103776103623660046124b5565b600e6020526000908152604090205460ff1681565b604051901515815260200161019a565b34801561039357600080fd5b50600254600354600454600554600654600754600854600954600b54600c546103dd996001600160a01b039081169981169881169781169681169581169481169316919060ff168a565b604080516001600160a01b039b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c085015290931660e08301526101008201929092529015156101208201526101400161019a565b34801561044e57600080fd5b506101b661045d366004611a5c565b611567565b34801561046e57600080fd5b5061048261047d366004611a5c565b611657565b60405161019a91906124d9565b34801561049b57600080fd5b506101b66104aa3660046124b5565b6116bc565b336000908152600e602052604090205460ff166104cb57600080fd5b60005b81515181101561064457600754825180516000926001600160a01b03169190849081106104fd576104fd6124ec565b60200260200101518460200151848151811061051b5761051b6124ec565b602002602001015185604001518581518110610539576105396124ec565b602002602001015186606001518681518110610557576105576124ec565b602002602001015187608001518781518110610575576105756124ec565b60200260200101518860a001518881518110610593576105936124ec565b60200260200101516040516024016105b096959493929190612502565b60408051601f198184030181529181526020820180516001600160e01b031663400f959f60e01b179052516105e59190612562565b600060405180830381855af49150503d8060008114610620576040519150601f19603f3d011682016040523d82523d6000602084013e610625565b606091505b505090508061063357600080fd5b5061063d8161257e565b90506104ce565b5050565b610650611732565b61065a6000611791565b565b600d60205260009081526040902080548190610677906125a5565b80601f01602080910402602001604051908101604052809291908181526020018280546106a3906125a5565b80156106f05780601f106106c5576101008083540402835291602001916106f0565b820191906000526020600020905b8154815290600101906020018083116106d357829003601f168201915b50505060018401546003850154600486015460058701546040805160068a01805460e0602082028401810190945260c083018181529a9b6001600160a01b039098169a9699509497509295949093849284919084018282801561077c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161075e575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156107de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107c0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561084057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610822575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108da576000848152602090819020830180546040805182850281018501909152818152928301828280156108c657602002820191906000526020600020905b8154815260200190600101908083116108b2575b50505050508152602001906001019061086e565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109735760008481526020908190208301805460408051828502810185019091528181529283018282801561095f57602002820191906000526020600020905b81548152602001906001019080831161094b575b505050505081526020019060010190610907565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156109f657602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116109b95790505b5050505050815250509080600c01549080600d018054610a15906125a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a41906125a5565b8015610a8e5780601f10610a6357610100808354040283529160200191610a8e565b820191906000526020600020905b815481529060010190602001808311610a7157829003601f168201915b5050505050905088565b6000546001600160a01b031690565b610aaf6117e1565b6000828152600d60205260409081902081516101208101909252805482908290610ad8906125a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b04906125a5565b8015610b515780601f10610b2657610100808354040283529160200191610b51565b820191906000526020600020905b815481529060010190602001808311610b3457829003601f168201915b505050918352505060018201546001600160a01b03166020808301919091526002830180546040805182850281018501825282815294019392830182828015610bb957602002820191906000526020600020905b815481526020019060010190808311610ba5575b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610c4957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c2b575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610cab57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c8d575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610d0d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610cef575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610da757600084815260209081902083018054604080518285028101850190915281815292830182828015610d9357602002820191906000526020600020905b815481526020019060010190808311610d7f575b505050505081526020019060010190610d3b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e4057600084815260209081902083018054604080518285028101850190915281815292830182828015610e2c57602002820191906000526020600020905b815481526020019060010190808311610e18575b505050505081526020019060010190610dd4565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610ec357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610e865790505b5050505050815250508152602001600c8201548152602001600d82018054610eea906125a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610f16906125a5565b8015610f635780601f10610f3857610100808354040283529160200191610f63565b820191906000526020600020905b815481529060010190602001808311610f4657829003601f168201915b5050505050815250509050919050565b610f7b611732565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361104192600a9291019061186d565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b8161010001515181101561064457600e60008361010001518381518110611094576110946124ec565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e600084610100015184815181106110e6576110e66124ec565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556111218161257e565b905061106b565b336000908152600e602052604090205460ff1661114457600080fd5b600c5460ff16156114285760065460405163d8c521bf60e01b81526001600160a01b039091169063d8c521bf9061118190859085906004016125df565b600060405180830381865afa15801561119e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111c691908101906129c2565b6001546000908152600d60205260409020815181906111e59082612b27565b506020828101516001830180546001600160a01b0319166001600160a01b039092169190911790556040830151805161122492600285019201906118d2565b50606082015160038201556080820151600482015560a0820151600582015560c08201518051805160068401916112609183916020019061186d565b506020828101518051611279926001850192019061186d565b506040820151805161129591600284019160209091019061186d565b50606082015180516112b191600384019160209091019061190d565b50608082015180516112cd91600484019160209091019061190d565b5060a082015180516112e9916005840191602090910190611966565b50505060e0820151600c820155610100820151600d82019061130b9082612b27565b5090505060005b8260200151518110156113da57600454602084015180516001600160a01b039092169163894f39fc91908490811061134c5761134c6124ec565b6020026020010151846040518363ffffffff1660e01b815260040161137b929190918252602082015260400190565b6020604051808303816000875af115801561139a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113be9190612be6565b6000036113ca57600080fd5b6113d38161257e565b9050611312565b506001546000818152600d60205260409081902090517fdeac4b75274224a1b860c0caee5b72450aea68ad014cfa51df709ab425da417f9161141b91612f36565b60405180910390a2611550565b6001546040805161012081018252845181526003546060860151925163666d638d60e11b81527fabf9a9f55436fcab94967775cab48bb9102d7a183c116e1f2aed1f263df682cb9360208401926001600160a01b03169163ccdac71a916114959160040190815260200190565b602060405180830381865afa1580156114b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d69190612fed565b6001600160a01b03168152602001856020015181526020018560600151815260200185608001518152602001600081526020018561010001518152602001848152602001604051806040016040528060048152602001630307830360e41b8152508152506040516115479190612101565b60405180910390a25b60016000815461155f9061257e565b909155505050565b61156f611732565b478111156115dc5760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6115e4610a98565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506116545760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016115d3565b50565b6000818152600d60209081526040918290206002018054835181840281018401909452808452606093928301828280156116b057602002820191906000526020600020905b81548152602001906001019080831161169c575b50505050509050919050565b6116c4611732565b6001600160a01b0381166117295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016115d3565b61165481611791565b3361173b610a98565b6001600160a01b03161461065a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016115d3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061012001604052806060815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016118596040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b8280548282559060005260206000209081019282156118c2579160200282015b828111156118c257825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061188d565b506118ce929150611a0c565b5090565b8280548282559060005260206000209081019282156118c2579160200282015b828111156118c25782518255916020019190600101906118f2565b82805482825590600052602060002090810192821561195a579160200282015b8281111561195a578251805161194a9184916020909101906118d2565b509160200191906001019061192d565b506118ce929150611a21565b828054828255906000526020600020906007016008900481019282156118c25791602002820160005b838211156119d357835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261198f565b8015611a035782816101000a81549063ffffffff02191690556004016020816003010492830192600103026119d3565b50506118ce9291505b5b808211156118ce5760008155600101611a0d565b808211156118ce576000611a358282611a3e565b50600101611a21565b50805460008255906000526020600020908101906116549190611a0c565b600060208284031215611a6e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611aad57611aad611a75565b60405290565b60405161016081016001600160401b0381118282101715611aad57611aad611a75565b60405161018081016001600160401b0381118282101715611aad57611aad611a75565b60405161012081016001600160401b0381118282101715611aad57611aad611a75565b604051601f8201601f191681016001600160401b0381118282101715611b4457611b44611a75565b604052919050565b60006001600160401b03821115611b6557611b65611a75565b5060051b60200190565b6001600160a01b038116811461165457600080fd5b8035611b8f81611b6f565b919050565b600082601f830112611ba557600080fd5b81356020611bba611bb583611b4c565b611b1c565b82815260059290921b84018101918181019086841115611bd957600080fd5b8286015b84811015611bfd578035611bf081611b6f565b8352918301918301611bdd565b509695505050505050565b600082601f830112611c1957600080fd5b81356020611c29611bb583611b4c565b82815260059290921b84018101918181019086841115611c4857600080fd5b8286015b84811015611bfd5780358352918301918301611c4c565b600082601f830112611c7457600080fd5b81356020611c84611bb583611b4c565b82815260059290921b84018101918181019086841115611ca357600080fd5b8286015b84811015611bfd5780356001600160401b03811115611cc65760008081fd5b611cd48986838b0101611c08565b845250918301918301611ca7565b63ffffffff8116811461165457600080fd5b8035611b8f81611ce2565b600082601f830112611d1057600080fd5b81356020611d20611bb583611b4c565b82815260059290921b84018101918181019086841115611d3f57600080fd5b8286015b84811015611bfd578035611d5681611ce2565b8352918301918301611d43565b600060c08284031215611d7557600080fd5b611d7d611a8b565b905081356001600160401b0380821115611d9657600080fd5b611da285838601611b94565b83526020840135915080821115611db857600080fd5b611dc485838601611b94565b60208401526040840135915080821115611ddd57600080fd5b611de985838601611b94565b60408401526060840135915080821115611e0257600080fd5b611e0e85838601611c63565b60608401526080840135915080821115611e2757600080fd5b611e3385838601611c63565b608084015260a0840135915080821115611e4c57600080fd5b50611e5984828501611cff565b60a08301525092915050565b600060208284031215611e7757600080fd5b81356001600160401b03811115611e8d57600080fd5b611e9984828501611d63565b949350505050565b60005b83811015611ebc578181015183820152602001611ea4565b50506000910152565b60008151808452611edd816020860160208601611ea1565b601f01601f19169290920160200192915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b83811015611f375781516001600160a01b031687529582019590820190600101611f12565b509495945050505050565b600081518084526020808501945080840160005b83811015611f3757815187529582019590820190600101611f56565b600081518084526020808501808196508360051b8101915082860160005b85811015611fba578284038952611fa8848351611f42565b98850198935090840190600101611f90565b5091979650505050505050565b6000815160c08452611fdc60c0850182611efe565b905060208084015185830382870152611ff58382611efe565b9250506040840151858303604087015261200f8382611efe565b925050606084015185830360608701526120298382611f72565b925050608084015185830360808701526120438382611f72565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611bfd57845163ffffffff168252938301936001929092019190830190612066565b60006101008083526120a08184018c611ec5565b6001600160a01b038b166020850152604084018a9052606084018990526080840188905283810360a085015290506120d88187611fc7565b90508460c084015282810360e08401526120f28185611ec5565b9b9a5050505050505050505050565b6020815260008251610120806020850152612120610140850183611ec5565b915060208501516121346040860182611ef1565b506040850151601f19808685030160608701526121518483611f42565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e087015261218c8483611fc7565b60e08801516101008881019190915288015187820390920184880152935090506121b68382611ec5565b9695505050505050565b80358015158114611b8f57600080fd5b6000602082840312156121e257600080fd5b81356001600160401b03808211156121f957600080fd5b90830190610160828603121561220e57600080fd5b612216611ab3565b61221f83611b84565b815261222d60208401611b84565b602082015261223e60408401611b84565b604082015261224f60608401611b84565b606082015261226060808401611b84565b608082015261227160a08401611b84565b60a082015261228260c08401611b84565b60c082015261229360e08401611b84565b60e082015261010080840135838111156122ac57600080fd5b6122b888828701611b94565b8284015250506101209150818301358282015261014091506122db8284016121c0565b91810191909152949350505050565b60006001600160401b0382111561230357612303611a75565b50601f01601f191660200190565b600082601f83011261232257600080fd5b8135612330611bb5826122ea565b81815284602083860101111561234557600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561237557600080fd5b82356001600160401b038082111561238c57600080fd5b9084019061018082870312156123a157600080fd5b6123a9611ad6565b8235828111156123b857600080fd5b6123c488828601612311565b8252506020830135828111156123d957600080fd5b6123e588828601611c08565b6020830152506040830135828111156123fd57600080fd5b61240988828601611c08565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100808401358381111561245557600080fd5b61246189828701611d63565b8284015250506101209150612477828401611cf4565b82820152610140915061248b828401611cf4565b82820152610160915061249f8284016121c0565b9181019190915295602094909401359450505050565b6000602082840312156124c757600080fd5b81356124d281611b6f565b9392505050565b6020815260006124d26020830184611f42565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03878116825286811660208301528516604082015260c06060820181905260009061253690830186611f42565b82810360808401526125488186611f42565b91505063ffffffff831660a0830152979650505050505050565b60008251612574818460208701611ea1565b9190910192915050565b60006001820161259e57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806125b957607f821691505b6020821081036125d957634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600083516101808060408501526125fe6101c0850183611ec5565b91506020860151603f198086850301606087015261261c8483611f42565b935060408801519150808685030160808701526126398483611f42565b9350606088015160a0870152608088015160c087015260a088015160e087015260c08801519150610100828188015260e089015192506101208381890152818a0151935061014091508288870301828901526126958685611fc7565b9550808a015193505061016091506126b48288018463ffffffff169052565b88015163ffffffff1692860192909252509094015115156101a0830152506020015290565b600082601f8301126126ea57600080fd5b81516126f8611bb5826122ea565b81815284602083860101111561270d57600080fd5b611e99826020830160208701611ea1565b8051611b8f81611b6f565b600082601f83011261273a57600080fd5b8151602061274a611bb583611b4c565b82815260059290921b8401810191818101908684111561276957600080fd5b8286015b84811015611bfd578051835291830191830161276d565b600082601f83011261279557600080fd5b815160206127a5611bb583611b4c565b82815260059290921b840181019181810190868411156127c457600080fd5b8286015b84811015611bfd5780516127db81611b6f565b83529183019183016127c8565b600082601f8301126127f957600080fd5b81516020612809611bb583611b4c565b82815260059290921b8401810191818101908684111561282857600080fd5b8286015b84811015611bfd5780516001600160401b0381111561284b5760008081fd5b6128598986838b0101612729565b84525091830191830161282c565b600082601f83011261287857600080fd5b81516020612888611bb583611b4c565b82815260059290921b840181019181810190868411156128a757600080fd5b8286015b84811015611bfd5780516128be81611ce2565b83529183019183016128ab565b600060c082840312156128dd57600080fd5b6128e5611a8b565b82519091506001600160401b03808211156128ff57600080fd5b61290b85838601612784565b8352602084015191508082111561292157600080fd5b61292d85838601612784565b6020840152604084015191508082111561294657600080fd5b61295285838601612784565b6040840152606084015191508082111561296b57600080fd5b612977858386016127e8565b6060840152608084015191508082111561299057600080fd5b61299c858386016127e8565b608084015260a08401519150808211156129b557600080fd5b50611e5984828501612867565b6000602082840312156129d457600080fd5b81516001600160401b03808211156129eb57600080fd5b908301906101208286031215612a0057600080fd5b612a08611af9565b825182811115612a1757600080fd5b612a23878286016126d9565b825250612a326020840161271e565b6020820152604083015182811115612a4957600080fd5b612a5587828601612729565b604083015250606083015160608201526080830151608082015260a083015160a082015260c083015182811115612a8b57600080fd5b612a97878286016128cb565b60c08301525060e083015160e08201526101008084015183811115612abb57600080fd5b612ac7888287016126d9565b918301919091525095945050505050565b601f821115612b2257600081815260208120601f850160051c81016020861015612aff5750805b601f850160051c820191505b81811015612b1e57828155600101612b0b565b5050505b505050565b81516001600160401b03811115612b4057612b40611a75565b612b5481612b4e84546125a5565b84612ad8565b602080601f831160018114612b895760008415612b715750858301515b600019600386901b1c1916600185901b178555612b1e565b600085815260208120601f198616915b82811015612bb857888601518255948401946001909101908401612b99565b5085821015612bd65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612bf857600080fd5b5051919050565b60008154612c0c816125a5565b808552602060018381168015612c295760018114612c4357612c71565b60ff1985168884015283151560051b880183019550612c71565b866000528260002060005b85811015612c695781548a8201860152908301908401612c4e565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b83811015611f3757815487529582019560019182019101612c95565b6000815480845260208085019450836000528060002060005b83811015611f375781546001600160a01b031687529582019560019182019101612cca565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015611fba578284038952612d298483612c7c565b98850198935060019182019101612d12565b60c082526000612d4e60c0840183612cb1565b6001602085830381870152612d6583838701612cb1565b9250604086840381880152612d7d8460028801612cb1565b9350606087850381890152612d958560038901612cef565b94506080888603818a0152612dad8660048a01612cef565b95506005880160a08a8803818c0152878254612dcd818b90815260200190565b6000948552602085209a5091505b80600785011015612e4b57895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c90830152988801986008939093019261010090910190612ddb565b98549880841015612e685763ffffffff8a16825292880192908701905b80841015612e845789881c63ffffffff16825292880192908701905b80841015612ea05789871c63ffffffff16825292880192908701905b80841015612ebc5789861c63ffffffff16825292880192908701905b80841015612ed85789851c63ffffffff16825292880192908701905b80841015612ef45789831c63ffffffff16825292880192908701905b80841015612f125760c08a901c63ffffffff16825292880192908701905b80841015612f265760e08a901c8252908701905b509b9a5050505050505050505050565b602081526000610120806020840152612f53610140840185612bff565b60018501546001600160a01b0316612f6e6040860182611ef1565b50601f1980858303016060860152612f898260028801612c7c565b915060038601546080860152600486015460a0860152600586015460c0860152808583030160e0860152612fc08260068801612d3b565b9150600c86015461010086015280858303018386015250612fe481600d8701612bff565b95945050505050565b600060208284031215612fff57600080fd5b81516124d281611b6f56fea2646970667358221220b1530cd8f089defb196952cb5ac7020f672f76c786d75c61a24a76271fb0be2764736f6c63430008100033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
