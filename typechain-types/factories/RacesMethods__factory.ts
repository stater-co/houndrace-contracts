/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162003369380380620033698339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b612b2880620008416000396000f3fe6080604052600436106100c75760003560e01c80639ad2e2b011610074578063d8de65871161004e578063d8de658714610243578063e200c857146102eb578063f2fde38b1461031857600080fd5b80639ad2e2b0146101df578063af640d0f146101f2578063b7dda85e1461021657600080fd5b80637bbc469e116100a55780637bbc469e146101595780638da5cb5b1461018a57806393de70e8146101bf57600080fd5b80635b19e294146100cc5780635bd4fd0514610122578063715018a614610144575b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611c8c565b610338565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561012e57600080fd5b5061014261013d366004611fbb565b61037e565b005b34801561015057600080fd5b506101426106f2565b34801561016557600080fd5b506101796101743660046120be565b610706565b6040516101199594939291906123fe565b34801561019657600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b3480156101cb57600080fd5b506101426101da3660046125c4565b610c76565b6101426101ed3660046127ba565b610d98565b3480156101fe57600080fd5b5061020860025481565b604051908152602001610119565b34801561022257600080fd5b506102366102313660046120be565b610fab565b60405161011991906128db565b34801561024f57600080fd5b50600454600554600654600754600854600954600a546102959673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610119565b3480156102f757600080fd5b5061030b6103063660046120be565b611536565b604051610119919061296e565b34801561032457600080fd5b50610142610333366004612988565b61159b565b6001602052816000526040600020818154811061035457600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6000805b3360009081526001602052604090205481101561043b57336000908152600160205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106103df576103df6129a3565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361042b57600191505b610434816129d2565b9050610382565b508061044657600080fd5b826002547fce80cf09ed20b34c425247387f74a1e40ad68a43456fa447aba48ddffb359ea36040518060a00160405280604051806101000160405280886000015160000151815260200188600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200188600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200188600001516060015181526020018860000151608001518152602001886000015160a001518152602001886000015160c001518152602001886000015160e001518152508152602001878152602001600081526020016040518060400160405280600481526020017f307830300000000000000000000000000000000000000000000000000000000081525081526020016040518060c00160405280600067ffffffffffffffff81111561058e5761058e611cb6565b6040519080825280602002602001820160405280156105b7578160200160208202803683370190505b50815260200160006040519080825280602002602001820160405280156105e8578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610619578160200160208202803683370190505b508152602001600060405190808252806020026020018201604052801561065457816020015b606081526020019060019003908161063f5790505b508152602001600060405190808252806020026020018201604052801561068f57816020015b606081526020019060019003908161067a5790505b50815260200160006040519080825280602002602001820160405280156106c0578160200160208202803683370190505b50905290526040516106d291906128db565b60405180910390a36002600081546106e9906129d2565b90915550505050565b6106fa611654565b61070460006116d5565b565b600c602052806000526040600020600091509050806000016040518061010001604052908160008201805461073a90612a31565b80601f016020809104026020016040519081016040528092919081815260200182805461076690612a31565b80156107b35780601f10610788576101008083540402835291602001916107b3565b820191906000526020600020905b81548152906001019060200180831161079657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561084157602002820191906000526020600020905b81548152602001906001019080831161082d575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561089957602002820191906000526020600020905b815481526020019060010190808311610885575b5050505050815260200160058201548152602001600682015481526020016007820154815250509080600801549080600901549080600a0180546108dc90612a31565b80601f016020809104026020016040519081016040528092919081815260200182805461090890612a31565b80156109555780601f1061092a57610100808354040283529160200191610955565b820191906000526020600020905b81548152906001019060200180831161093857829003601f168201915b50505050509080600b016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156109d057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116109a5575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a3f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a14575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610aae57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a83575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b4857600084815260209081902083018054604080518285028101850190915281815292830182828015610b3457602002820191906000526020600020905b815481526020019060010190808311610b20575b505050505081526020019060010190610adc565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610be157600084815260209081902083018054604080518285028101850190915281815292830182828015610bcd57602002820191906000526020600020905b815481526020019060010190808311610bb9575b505050505081526020019060010190610b75565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610c6857602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610c4657610c466122ce565b815260206001928301818104948501949093039092029101808411610c275790505b505050505081525050905085565b610c7e611654565b805180518291600391610c989183916020909101906119ab565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610d819260088501920190611a35565b50508151610100830151610d95925061174a565b50565b6000805b33600090815260016020526040902054811015610e5557336000908152600160205260408120805491357fffffffff00000000000000000000000000000000000000000000000000000000169183908110610df957610df96129a3565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610e4557600191505b610e4e816129d2565b9050610d9c565b5080610e6057600080fd5b60005b825151811015610fa6576007548351805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c2919084908110610ea457610ea46129a3565b602002602001015185602001518481518110610ec257610ec26129a3565b602002602001015186604001518581518110610ee057610ee06129a3565b602002602001015187606001518681518110610efe57610efe6129a3565b602002602001015188608001518781518110610f1c57610f1c6129a3565b60200260200101518960a001518881518110610f3a57610f3a6129a3565b60200260200101516040518763ffffffff1660e01b8152600401610f6396959493929190612a84565b600060405180830381600087803b158015610f7d57600080fd5b505af1158015610f91573d6000803e3d6000fd5b5050505080610f9f906129d2565b9050610e63565b505050565b610fb3611a8e565b6000828152600c60205260409081902081516101a081019092528054829060a0820190839082908290610fe590612a31565b80601f016020809104026020016040519081016040528092919081815260200182805461101190612a31565b801561105e5780601f106110335761010080835404028352916020019161105e565b820191906000526020600020905b81548152906001019060200180831161104157829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156110ec57602002820191906000526020600020905b8154815260200190600101908083116110d8575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561114457602002820191906000526020600020905b815481526020019060010190808311611130575b50505050508152602001600582015481526020016006820154815260200160078201548152505081526020016008820154815260200160098201548152602001600a8201805461119390612a31565b80601f01602080910402602001604051908101604052809291908181526020018280546111bf90612a31565b801561120c5780601f106111e15761010080835404028352916020019161120c565b820191906000526020600020905b8154815290600101906020018083116111ef57829003601f168201915b50505050508152602001600b82016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561128b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611260575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156112fa57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116112cf575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561136957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161133e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611403576000848152602090819020830180546040805182850281018501909152818152928301828280156113ef57602002820191906000526020600020905b8154815260200190600101908083116113db575b505050505081526020019060010190611397565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561149c5760008481526020908190208301805460408051828502810185019091528181529283018282801561148857602002820191906000526020600020905b815481526020019060010190808311611474575b505050505081526020019060010190611430565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561152357602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611501576115016122ce565b8152602060019283018181049485019490930390920291018084116114e25790505b5050509190925250505090525092915050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561158f57602002820191906000526020600020905b81548152602001906001019080831161157b575b50505050509050919050565b6115a3611654565b73ffffffffffffffffffffffffffffffffffffffff811661164b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610d95816116d5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610704576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611642565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461175857600080fd5b60005b8251811015610fa65760005b828281518110611779576117796129a3565b60200260200101515181101561199a576001600085848151811061179f5761179f6129a3565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106118bd5760016000858481518110611801576118016129a3565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838381518110611855576118556129a3565b6020026020010151828151811061186e5761186e6129a3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c9190910291909117905561198a565b8282815181106118cf576118cf6129a3565b602002602001015181815181106118e8576118e86129a3565b602002602001015160016000868581518110611906576119066129a3565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611959576119596129a3565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b611993816129d2565b9050611767565b506119a4816129d2565b905061175b565b828054828255906000526020600020908101928215611a25579160200282015b82811115611a2557825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906119cb565b50611a31929150611b65565b5090565b828054828255906000526020600020908101928215611a82579160200282015b82811115611a825782518051611a72918491602090910190611b7a565b5091602001919060010190611a55565b50611a31929150611c21565b6040518060a00160405280611b0d60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b8152602001600081526020016000815260200160608152602001611b606040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b80821115611a315760008155600101611b66565b82805482825590600052602060002090600701600890048101928215611a255791602002820160005b83821115611be457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302611ba3565b8015611c145782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611be4565b5050611a31929150611b65565b80821115611a31576000611c358282611c3e565b50600101611c21565b508054600082556007016008900490600052602060002090810190610d959190611b65565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c8757600080fd5b919050565b60008060408385031215611c9f57600080fd5b611ca883611c63565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611d0957611d09611cb6565b60405290565b604051610120810167ffffffffffffffff81118282101715611d0957611d09611cb6565b60405160c0810167ffffffffffffffff81118282101715611d0957611d09611cb6565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d9d57611d9d611cb6565b604052919050565b600082601f830112611db657600080fd5b813567ffffffffffffffff811115611dd057611dd0611cb6565b611e0160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611d56565b818152846020838601011115611e1657600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611e4d57611e4d611cb6565b5060051b60200190565b600082601f830112611e6857600080fd5b81356020611e7d611e7883611e33565b611d56565b82815260059290921b84018101918181019086841115611e9c57600080fd5b8286015b84811015611eb75780358352918301918301611ea0565b509695505050505050565b60006101008284031215611ed557600080fd5b611edd611ce5565b9050813567ffffffffffffffff80821115611ef757600080fd5b611f0385838601611da5565b8352611f1160208501611c63565b6020840152611f2260408501611c63565b60408401526060840135915080821115611f3b57600080fd5b611f4785838601611e57565b60608401526080840135915080821115611f6057600080fd5b50611f6d84828501611e57565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b803563ffffffff81168114611c8757600080fd5b80358015158114611c8757600080fd5b60008060408385031215611fce57600080fd5b82359150602083013567ffffffffffffffff80821115611fed57600080fd5b90840190610120828703121561200257600080fd5b61200a611d0f565b82358281111561201957600080fd5b61202588828601611ec2565b82525060208301358281111561203a57600080fd5b61204688828601611e57565b60208301525060408301356040820152606083013560608201526080830135608082015261207660a08401611f97565b60a082015261208760c08401611f97565b60c082015261209860e08401611f97565b60e082015261010091506120ad828401611fab565b828201528093505050509250929050565b6000602082840312156120d057600080fd5b5035919050565b6000815180845260005b818110156120fd576020818501810151868301820152016120e1565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561216b5781518752958201959082019060010161214f565b509495945050505050565b6000610100825181855261218c828601826120d7565b91505073ffffffffffffffffffffffffffffffffffffffff602084015116602085015260408301516121d6604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526121ee828261213b565b91505060808301518482036080860152612208828261213b565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b600081518084526020808501945080840160005b8381101561216b57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612247565b600081518084526020808501808196508360051b8101915082860160005b858110156122c15782840389526122af84835161213b565b98850198935090840190600101612297565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612334577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261234d60c0850182612233565b9050602080840151858303828701526123668382612233565b925050604084015185830360408701526123808382612233565b9250506060840151858303606087015261239a8382612279565b925050608084015185830360808701526123b48382612279565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611eb7576123ea8286516122fd565b9383019360019290920191908301906123d7565b60a08152600061241160a0830188612176565b866020840152856040840152828103606084015261242f81866120d7565b905082810360808401526124438185612338565b98975050505050505050565b600082601f83011261246057600080fd5b81356020612470611e7883611e33565b82815260059290921b8401810191818101908684111561248f57600080fd5b8286015b84811015611eb7576124a481611c63565b8352918301918301612493565b600082601f8301126124c257600080fd5b813560206124d2611e7883611e33565b828152600592831b85018201928282019190878511156124f157600080fd5b8387015b858110156125b757803567ffffffffffffffff8111156125155760008081fd5b8801603f81018a136125275760008081fd5b858101356040612539611e7883611e33565b82815291851b8301810191888101908d8411156125565760008081fd5b938201935b838510156125a657843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146125965760008081fd5b828252938901939089019061255b565b8852505050938501935084016124f5565b5090979650505050505050565b6000602082840312156125d657600080fd5b813567ffffffffffffffff808211156125ee57600080fd5b90830190610120828603121561260357600080fd5b61260b611d0f565b82358281111561261a57600080fd5b6126268782860161244f565b82525061263560208401611c63565b602082015261264660408401611c63565b604082015261265760608401611c63565b606082015261266860808401611c63565b608082015261267960a08401611c63565b60a082015261268a60c08401611c63565b60c082015261269b60e08401611c63565b60e082015261010080840135838111156126b457600080fd5b6126c0888287016124b1565b918301919091525095945050505050565b600082601f8301126126e257600080fd5b813560206126f2611e7883611e33565b82815260059290921b8401810191818101908684111561271157600080fd5b8286015b84811015611eb757803567ffffffffffffffff8111156127355760008081fd5b6127438986838b0101611e57565b845250918301918301612715565b600082601f83011261276257600080fd5b81356020612772611e7883611e33565b82815260059290921b8401810191818101908684111561279157600080fd5b8286015b84811015611eb7578035600481106127ad5760008081fd5b8352918301918301612795565b6000602082840312156127cc57600080fd5b813567ffffffffffffffff808211156127e457600080fd5b9083019060c082860312156127f857600080fd5b612800611d33565b82358281111561280f57600080fd5b61281b8782860161244f565b82525060208301358281111561283057600080fd5b61283c8782860161244f565b60208301525060408301358281111561285457600080fd5b6128608782860161244f565b60408301525060608301358281111561287857600080fd5b612884878286016126d1565b60608301525060808301358281111561289c57600080fd5b6128a8878286016126d1565b60808301525060a0830135828111156128c057600080fd5b6128cc87828601612751565b60a08301525095945050505050565b602081526000825160a060208401526128f760c0840182612176565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08085840301608086015261294783836120d7565b925060808601519150808584030160a0860152506129658282612338565b95945050505050565b602081526000612981602083018461213b565b9392505050565b60006020828403121561299a57600080fd5b61298182611c63565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c90821680612a4557607f821691505b602082108103612a7e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c06060830152612ac560c083018661213b565b8281036080840152612ad7818661213b565b915050612ae760a08301846122fd565b97965050505050505056fea264697066735822122020984dec821b8c527941e2275893824c3a3288f6cf2b32d854ce16cd1767a18064736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
