/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002ba638038062002ba68339810160408190526200003891620003c0565b806200004433620001e3565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000233565b5090505060005b81610100015151811015620001da57600c60008361010001518381518110620001405762000140620004d1565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600c60008461010001518481518110620001955762000195620004d1565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001d281620004e7565b905062000113565b5050506200050f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028b579160200282015b828111156200028b57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000254565b50620002999291506200029d565b5090565b5b808211156200029957600081556001016200029e565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620002f057620002f0620002b4565b60405290565b80516001600160a01b03811681146200030e57600080fd5b919050565b600082601f8301126200032557600080fd5b815160206001600160401b0380831115620003445762000344620002b4565b8260051b604051601f19603f830116810181811084821117156200036c576200036c620002b4565b6040529384528581018301938381019250878511156200038b57600080fd5b83870191505b84821015620003b557620003a582620002f6565b8352918301919083019062000391565b979650505050505050565b600060208284031215620003d357600080fd5b81516001600160401b0380821115620003eb57600080fd5b9083019061012082860312156200040157600080fd5b6200040b620002ca565b6200041683620002f6565b81526200042660208401620002f6565b60208201526200043960408401620002f6565b60408201526200044c60608401620002f6565b60608201526200045f60808401620002f6565b60808201526200047260a08401620002f6565b60a08201526200048560c08401620002f6565b60c08201526200049860e08401620002f6565b60e08201526101008084015183811115620004b257600080fd5b620004c08882870162000313565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200050857634e487b7160e01b600052601160045260246000fd5b5060010190565b612687806200051f6000396000f3fe6080604052600436106100dd5760003560e01c8063af640d0f1161007f578063d8de658711610059578063d8de6587146103e2578063e200c85714610499578063f2fde38b146104c6578063fcf69635146104e657600080fd5b8063af640d0f14610351578063b7dda85e14610375578063d63a8e11146103a257600080fd5b80637bbc469e116100bb5780637bbc469e146102b95780638da5cb5b146102e95780639ad2e2b01461031e578063acb9671a1461033157600080fd5b80632a546a38146100e2578063680adc37146101f1578063715018a6146102a2575b600080fd5b3480156100ee57600080fd5b506101a46100fd366004611885565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600d60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516101e89190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b3480156101fd57600080fd5b5061026e61020c366004611885565b600d6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff958616815293851660208501529184169183019190915290911660608201526080016101e8565b3480156102ae57600080fd5b506102b7610506565b005b3480156102c557600080fd5b506102d96102d4366004611885565b61051a565b6040516101e89493929190611c11565b3480156102f557600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e8565b6102b761032c366004612013565b610a8e565b34801561033d57600080fd5b506102b761034c366004612050565b610bf4565b34801561035d57600080fd5b5061036760015481565b6040519081526020016101e8565b34801561038157600080fd5b50610395610390366004611885565b610df0565b6040516101e8919061214a565b3480156103ae57600080fd5b506103d26103bd3660046121be565b600c6020526000908152604090205460ff1681565b60405190151581526020016101e8565b3480156103ee57600080fd5b5060025460035460045460055460065460075460085460095461043a9773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e0820152610100016101e8565b3480156104a557600080fd5b506104b96104b4366004611885565b61137c565b6040516101e891906121e0565b3480156104d257600080fd5b506102b76104e13660046121be565b6113e1565b3480156104f257600080fd5b506102b761050136600461240a565b61149d565b61050e611614565b6105186000611695565b565b600b602052806000526040600020600091509050806000016040518061012001604052908160008201805461054e9061250d565b80601f016020809104026020016040519081016040528092919081815260200182805461057a9061250d565b80156105c75780601f1061059c576101008083540402835291602001916105c7565b820191906000526020600020905b8154815290600101906020018083116105aa57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561065557602002820191906000526020600020905b815481526020019060010190808311610641575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156106ad57602002820191906000526020600020905b815481526020019060010190808311610699575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561074a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161071f575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156107b957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161078e575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561082857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107fd575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108c2576000848152602090819020830180546040805182850281018501909152818152928301828280156108ae57602002820191906000526020600020905b81548152602001906001019080831161089a575b505050505081526020019060010190610856565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561095b5760008481526020908190208301805460408051828502810185019091528181529283018282801561094757602002820191906000526020600020905b815481526020019060010190808311610933575b5050505050815260200190600101906108ef565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156109e257602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156109c0576109c06119f9565b8152602060019283018181049485019490930390920291018084116109a15790505b505050505081525050815250509080600e01549080600f015490806010018054610a0b9061250d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a379061250d565b8015610a845780601f10610a5957610100808354040283529160200191610a84565b820191906000526020600020905b815481529060010190602001808311610a6757829003601f168201915b5050505050905084565b336000908152600c602052604090205460ff16610aaa57600080fd5b60005b815151811015610bf0576006548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c2919084908110610aee57610aee612560565b602002602001015184602001518481518110610b0c57610b0c612560565b602002602001015185604001518581518110610b2a57610b2a612560565b602002602001015186606001518681518110610b4857610b48612560565b602002602001015187608001518781518110610b6657610b66612560565b60200260200101518860a001518881518110610b8457610b84612560565b60200260200101516040518763ffffffff1660e01b8152600401610bad9695949392919061258f565b600060405180830381600087803b158015610bc757600080fd5b505af1158015610bdb573d6000803e3d6000fd5b5050505080610be9906125f2565b9050610aad565b5050565b610bfc611614565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e085015160098054909316941693909317905561010083015180518493610ce792600a9291019061170a565b5090505060005b81610100015151811015610bf057600c60008361010001518381518110610d1757610d17612560565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600c60008461010001518481518110610d8357610d83612560565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610de9816125f2565b9050610cee565b610df8611794565b6000828152600b60205260409081902081516101a08101909252805482906080820190839082908290610e2a9061250d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e569061250d565b8015610ea35780601f10610e7857610100808354040283529160200191610ea3565b820191906000526020600020905b815481529060010190602001808311610e8657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610f3157602002820191906000526020600020905b815481526020019060010190808311610f1d575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610f8957602002820191906000526020600020905b815481526020019060010190808311610f75575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561102657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ffb575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561109557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161106a575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561110457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110d9575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561119e5760008481526020908190208301805460408051828502810185019091528181529283018282801561118a57602002820191906000526020600020905b815481526020019060010190808311611176575b505050505081526020019060010190611132565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112375760008481526020908190208301805460408051828502810185019091528181529283018282801561122357602002820191906000526020600020905b81548152602001906001019080831161120f575b5050505050815260200190600101906111cb565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156112be57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561129c5761129c6119f9565b81526020600192830181810494850194909303909202910180841161127d5790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546112f39061250d565b80601f016020809104026020016040519081016040528092919081815260200182805461131f9061250d565b801561136c5780601f106113415761010080835404028352916020019161136c565b820191906000526020600020905b81548152906001019060200180831161134f57829003601f168201915b5050505050815250509050919050565b6000818152600b60209081526040918290206003018054835181840281018401909452808452606093928301828280156113d557602002820191906000526020600020905b8154815260200190600101908083116113c1575b50505050509050919050565b6113e9611614565b73ffffffffffffffffffffffffffffffffffffffff8116611491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61149a81611695565b50565b336000908152600c602052604090205460ff166114b957600080fd5b816001547f47f7986237041bdc83e87c72847c74f0009ce4afeb78edcf0e7296d1ad5201e66040518060800160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e0015181526020018760000151610100015181525081526020014281526020018681526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040516115f5919061214a565b60405180910390a360016000815461160c906125f2565b909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611488565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611784579160200282015b8281111561178457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061172a565b506117909291506117c2565b5090565b60405180608001604052806117a76117d7565b81526020016000815260200160008152602001606081525090565b5b8082111561179057600081556001016117c3565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016118806040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561189757600080fd5b5035919050565b6000815180845260005b818110156118c4576020818501810151868301820152016118a8565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561193257815187529582019590820190600101611916565b509495945050505050565b600081518084526020808501945080840160005b8381101561193257815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611951565b600082825180855260208086019550808260051b84010181860160005b848110156119ec577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189526119da838351611902565b988401989250908301906001016119a0565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611a5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c08452611a7860c085018261193d565b905060208084015185830382870152611a91838261193d565b92505060408401518583036040870152611aab838261193d565b92505060608401518583036060870152611ac58382611983565b92505060808401518583036080870152611adf8382611983565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611b2957611b15828651611a28565b938301936001929092019190830190611b02565b509695505050505050565b60006101208251818552611b4a8286018261189e565b9150506020830151611b74602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611b9c604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152611bb48282611902565b91505060808301518482036080860152611bce8282611902565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611c078382611a63565b9695505050505050565b608081526000611c246080830187611b34565b8560208401528460408401528281036060840152611c42818561189e565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611c9f57611c9f611c4d565b60405290565b604051610120810167ffffffffffffffff81118282101715611c9f57611c9f611c4d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d1057611d10611c4d565b604052919050565b600067ffffffffffffffff821115611d3257611d32611c4d565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d6057600080fd5b919050565b600082601f830112611d7657600080fd5b81356020611d8b611d8683611d18565b611cc9565b82815260059290921b84018101918181019086841115611daa57600080fd5b8286015b84811015611b2957611dbf81611d3c565b8352918301918301611dae565b600082601f830112611ddd57600080fd5b81356020611ded611d8683611d18565b82815260059290921b84018101918181019086841115611e0c57600080fd5b8286015b84811015611b295780358352918301918301611e10565b600082601f830112611e3857600080fd5b81356020611e48611d8683611d18565b82815260059290921b84018101918181019086841115611e6757600080fd5b8286015b84811015611b2957803567ffffffffffffffff811115611e8b5760008081fd5b611e998986838b0101611dcc565b845250918301918301611e6b565b600082601f830112611eb857600080fd5b81356020611ec8611d8683611d18565b82815260059290921b84018101918181019086841115611ee757600080fd5b8286015b84811015611b2957803560048110611f035760008081fd5b8352918301918301611eeb565b600060c08284031215611f2257600080fd5b611f2a611c7c565b9050813567ffffffffffffffff80821115611f4457600080fd5b611f5085838601611d65565b83526020840135915080821115611f6657600080fd5b611f7285838601611d65565b60208401526040840135915080821115611f8b57600080fd5b611f9785838601611d65565b60408401526060840135915080821115611fb057600080fd5b611fbc85838601611e27565b60608401526080840135915080821115611fd557600080fd5b611fe185838601611e27565b608084015260a0840135915080821115611ffa57600080fd5b5061200784828501611ea7565b60a08301525092915050565b60006020828403121561202557600080fd5b813567ffffffffffffffff81111561203c57600080fd5b61204884828501611f10565b949350505050565b60006020828403121561206257600080fd5b813567ffffffffffffffff8082111561207a57600080fd5b90830190610120828603121561208f57600080fd5b612097611ca5565b6120a083611d3c565b81526120ae60208401611d3c565b60208201526120bf60408401611d3c565b60408201526120d060608401611d3c565b60608201526120e160808401611d3c565b60808201526120f260a08401611d3c565b60a082015261210360c08401611d3c565b60c082015261211460e08401611d3c565b60e0820152610100808401358381111561212d57600080fd5b61213988828701611d65565b918301919091525095945050505050565b60208152600082516080602084015261216660a0840182611b34565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526121b5828261189e565b95945050505050565b6000602082840312156121d057600080fd5b6121d982611d3c565b9392505050565b6020815260006121d96020830184611902565b600082601f83011261220457600080fd5b813567ffffffffffffffff81111561221e5761221e611c4d565b61224f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611cc9565b81815284602083860101111561226457600080fd5b816020850160208301376000918101602001919091529392505050565b6000610120828403121561229457600080fd5b61229c611ca5565b9050813567ffffffffffffffff808211156122b657600080fd5b6122c2858386016121f3565b83526122d060208501611d3c565b60208401526122e160408501611d3c565b604084015260608401359150808211156122fa57600080fd5b61230685838601611dcc565b6060840152608084013591508082111561231f57600080fd5b61232b85838601611dcc565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561236457600080fd5b61237086828701611f10565b8385015250505092915050565b803563ffffffff81168114611d6057600080fd5b600082601f8301126123a257600080fd5b813560206123b2611d8683611d18565b82815260059290921b840181019181810190868411156123d157600080fd5b8286015b84811015611b29578035600781106123ed5760008081fd5b83529183019183016123d5565b80358015158114611d6057600080fd5b6000806040838503121561241d57600080fd5b82359150602083013567ffffffffffffffff8082111561243c57600080fd5b90840190610120828703121561245157600080fd5b612459611ca5565b82358281111561246857600080fd5b61247488828601612281565b8252506020830135602082015260408301356040820152606083013560608201526124a16080840161237d565b60808201526124b260a0840161237d565b60a08201526124c360c0840161237d565b60c082015260e0830135828111156124da57600080fd5b6124e688828601612391565b60e08301525061010091506124fc8284016123fa565b828201528093505050509250929050565b600181811c9082168061252157607f821691505b60208210810361255a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c060608301526125d060c0830186611902565b82810360808401526125e28186611902565b915050611c4260a0830184611a28565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361264a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220cead50ee3a428e5dca98acd85ba1b4eae76d12a4f2ca6bacc01e49446604777064736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
