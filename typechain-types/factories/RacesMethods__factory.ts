/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002bcd38038062002bcd83398101604081905262000039916200050f565b80516101008201518291906200004f33620001e7565b80518251146200005e57600080fd5b60005b8251811015620000f85781818151811062000080576200008062000634565b602002602001015160016000858481518110620000a157620000a162000634565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f0906200064a565b905062000061565b505081518051839250600391620001159183916020019062000237565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051620001db9260088501920190620002a1565b50905050505062000672565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d9291506200034a565b5090565b828054828255906000526020600020906007016008900481019282156200028f5791602002820160005b838211156200030e57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002cb565b8015620003405782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200030e565b50506200029d9291505b5b808211156200029d57600081556001016200034b565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200039d576200039d62000361565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ce57620003ce62000361565b604052919050565b60006001600160401b03821115620003f257620003f262000361565b5060051b60200190565b80516001600160a01b03811681146200041457600080fd5b919050565b600082601f8301126200042b57600080fd5b81516020620004446200043e83620003d6565b620003a3565b82815260059290921b840181019181810190868411156200046457600080fd5b8286015b848110156200048a576200047c81620003fc565b835291830191830162000468565b509695505050505050565b600082601f830112620004a757600080fd5b81516020620004ba6200043e83620003d6565b82815260059290921b84018101918181019086841115620004da57600080fd5b8286015b848110156200048a5780516001600160e01b031981168114620005015760008081fd5b8352918301918301620004de565b6000602082840312156200052257600080fd5b81516001600160401b03808211156200053a57600080fd5b9083019061012082860312156200055057600080fd5b6200055a62000377565b8251828111156200056a57600080fd5b620005788782860162000419565b8252506200058960208401620003fc565b60208201526200059c60408401620003fc565b6040820152620005af60608401620003fc565b6060820152620005c260808401620003fc565b6080820152620005d560a08401620003fc565b60a0820152620005e860c08401620003fc565b60c0820152620005fb60e08401620003fc565b60e082015261010080840151838111156200061557600080fd5b620006238882870162000495565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200066b57634e487b7160e01b600052601160045260246000fd5b5060010190565b61254b80620006826000396000f3fe6080604052600436106100bc5760003560e01c8063aa4daabd11610074578063d8de65871161004e578063d8de6587146101ea578063e200c85714610292578063f2fde38b146102bf57600080fd5b8063aa4daabd14610179578063af640d0f14610199578063b7dda85e146101bd57600080fd5b80637bbc469e116100a55780637bbc469e146100f85780638da5cb5b146101315780639ad2e2b01461016657600080fd5b806365913d77146100c1578063715018a6146100e3575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611cb5565b6102df565b005b3480156100ef57600080fd5b506100e161047f565b34801561010457600080fd5b50610118610113366004611db8565b610493565b6040516101289493929190612118565b60405180910390f35b34801561013d57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610128565b6100e1610174366004612154565b610a07565b34801561018557600080fd5b506100e161019436600461221b565b610b95565b3480156101a557600080fd5b506101af60025481565b604051908152602001610128565b3480156101c957600080fd5b506101dd6101d8366004611db8565b610cb7565b6040516101289190612328565b3480156101f657600080fd5b50600454600554600654600754600854600954600a5461023c9673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610128565b34801561029e57600080fd5b506102b26102ad366004611db8565b611243565b604051610128919061239c565b3480156102cb57600080fd5b506100e16102da3660046123b6565b6112a8565b3360009081526001602052604081205460e01b7fffffffff000000000000000000000000000000000000000000000000000000009081169135161461032357600080fd5b816002547f47f7986237041bdc83e87c72847c74f0009ce4afeb78edcf0e7296d1ad5201e66040518060800160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e001518152602001876000015161010001518152508152602001868152602001600081526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040516104609190612328565b60405180910390a3600260008154610477906123d1565b909155505050565b610487611361565b61049160006113e2565b565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546104c790612430565b80601f01602080910402602001604051908101604052809291908181526020018280546104f390612430565b80156105405780601f1061051557610100808354040283529160200191610540565b820191906000526020600020905b81548152906001019060200180831161052357829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156105ce57602002820191906000526020600020905b8154815260200190600101908083116105ba575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561062657602002820191906000526020600020905b815481526020019060010190808311610612575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156106c357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610698575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561073257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610707575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156107a157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610776575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561083b5760008481526020908190208301805460408051828502810185019091528181529283018282801561082757602002820191906000526020600020905b815481526020019060010190808311610813575b5050505050815260200190600101906107cf565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108d4576000848152602090819020830180546040805182850281018501909152818152928301828280156108c057602002820191906000526020600020905b8154815260200190600101908083116108ac575b505050505081526020019060010190610868565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561095b57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561093957610939611f0b565b81526020600192830181810494850194909303909202910180841161091a5790505b505050505081525050815250509080600e01549080600f01549080601001805461098490612430565b80601f01602080910402602001604051908101604052809291908181526020018280546109b090612430565b80156109fd5780601f106109d2576101008083540402835291602001916109fd565b820191906000526020600020905b8154815290600101906020018083116109e057829003601f168201915b5050505050905084565b3360009081526001602052604081205460e01b7fffffffff0000000000000000000000000000000000000000000000000000000090811691351614610a4b57600080fd5b60005b815151811015610b91576007548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c2919084908110610a8f57610a8f612483565b602002602001015184602001518481518110610aad57610aad612483565b602002602001015185604001518581518110610acb57610acb612483565b602002602001015186606001518681518110610ae957610ae9612483565b602002602001015187608001518781518110610b0757610b07612483565b60200260200101518860a001518881518110610b2557610b25612483565b60200260200101516040518763ffffffff1660e01b8152600401610b4e969594939291906124b2565b600060405180830381600087803b158015610b6857600080fd5b505af1158015610b7c573d6000803e3d6000fd5b5050505080610b8a906123d1565b9050610a4e565b5050565b610b9d611361565b805180518291600391610bb7918391602090910190611514565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610ca0926008850192019061159e565b50508151610100830151610cb49250611457565b50565b610cbf611645565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610cf190612430565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1d90612430565b8015610d6a5780601f10610d3f57610100808354040283529160200191610d6a565b820191906000526020600020905b815481529060010190602001808311610d4d57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610df857602002820191906000526020600020905b815481526020019060010190808311610de4575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610e5057602002820191906000526020600020905b815481526020019060010190808311610e3c575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610eed57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ec2575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f5c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f31575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610fcb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fa0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110655760008481526020908190208301805460408051828502810185019091528181529283018282801561105157602002820191906000526020600020905b81548152602001906001019080831161103d575b505050505081526020019060010190610ff9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110fe576000848152602090819020830180546040805182850281018501909152818152928301828280156110ea57602002820191906000526020600020905b8154815260200190600101908083116110d6575b505050505081526020019060010190611092565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561118557602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561116357611163611f0b565b8152602060019283018181049485019490930390920291018084116111445790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546111ba90612430565b80601f01602080910402602001604051908101604052809291908181526020018280546111e690612430565b80156112335780601f1061120857610100808354040283529160200191611233565b820191906000526020600020905b81548152906001019060200180831161121657829003601f168201915b5050505050815250509050919050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561129c57602002820191906000526020600020905b815481526020019060010190808311611288575b50505050509050919050565b6112b0611361565b73ffffffffffffffffffffffffffffffffffffffff8116611358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610cb4816113e2565b60005473ffffffffffffffffffffffffffffffffffffffff163314610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161134f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461146557600080fd5b60005b825181101561150f5781818151811061148357611483612483565b6020026020010151600160008584815181106114a1576114a1612483565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080611508906123d1565b9050611468565b505050565b82805482825590600052602060002090810192821561158e579160200282015b8281111561158e57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611534565b5061159a929150611673565b5090565b8280548282559060005260206000209060070160089004810192821561158e5791602002820160005b8382111561160857835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026115c7565b80156116385782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611608565b505061159a929150611673565b6040518060800160405280611658611688565b81526020016000815260200160008152602001606081525090565b5b8082111561159a5760008155600101611674565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016117316040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561178857611788611736565b60405290565b604051610120810167ffffffffffffffff8111828210171561178857611788611736565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117f9576117f9611736565b604052919050565b600082601f83011261181257600080fd5b813567ffffffffffffffff81111561182c5761182c611736565b61185d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016117b2565b81815284602083860101111561187257600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146118b357600080fd5b919050565b600067ffffffffffffffff8211156118d2576118d2611736565b5060051b60200190565b600082601f8301126118ed57600080fd5b813560206119026118fd836118b8565b6117b2565b82815260059290921b8401810191818101908684111561192157600080fd5b8286015b8481101561193c5780358352918301918301611925565b509695505050505050565b600082601f83011261195857600080fd5b813560206119686118fd836118b8565b82815260059290921b8401810191818101908684111561198757600080fd5b8286015b8481101561193c5761199c8161188f565b835291830191830161198b565b600082601f8301126119ba57600080fd5b813560206119ca6118fd836118b8565b82815260059290921b840181019181810190868411156119e957600080fd5b8286015b8481101561193c57803567ffffffffffffffff811115611a0d5760008081fd5b611a1b8986838b01016118dc565b8452509183019183016119ed565b600082601f830112611a3a57600080fd5b81356020611a4a6118fd836118b8565b82815260059290921b84018101918181019086841115611a6957600080fd5b8286015b8481101561193c57803560048110611a855760008081fd5b8352918301918301611a6d565b600060c08284031215611aa457600080fd5b611aac611765565b9050813567ffffffffffffffff80821115611ac657600080fd5b611ad285838601611947565b83526020840135915080821115611ae857600080fd5b611af485838601611947565b60208401526040840135915080821115611b0d57600080fd5b611b1985838601611947565b60408401526060840135915080821115611b3257600080fd5b611b3e858386016119a9565b60608401526080840135915080821115611b5757600080fd5b611b63858386016119a9565b608084015260a0840135915080821115611b7c57600080fd5b50611b8984828501611a29565b60a08301525092915050565b60006101208284031215611ba857600080fd5b611bb061178e565b9050813567ffffffffffffffff80821115611bca57600080fd5b611bd685838601611801565b8352611be46020850161188f565b6020840152611bf56040850161188f565b60408401526060840135915080821115611c0e57600080fd5b611c1a858386016118dc565b60608401526080840135915080821115611c3357600080fd5b611c3f858386016118dc565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611c7857600080fd5b611c8486828701611a92565b8385015250505092915050565b803563ffffffff811681146118b357600080fd5b803580151581146118b357600080fd5b60008060408385031215611cc857600080fd5b82359150602083013567ffffffffffffffff80821115611ce757600080fd5b908401906101208287031215611cfc57600080fd5b611d0461178e565b823582811115611d1357600080fd5b611d1f88828601611b95565b825250602083013582811115611d3457600080fd5b611d40888286016118dc565b602083015250604083013560408201526060830135606082015260808301356080820152611d7060a08401611c91565b60a0820152611d8160c08401611c91565b60c0820152611d9260e08401611c91565b60e08201526101009150611da7828401611ca5565b828201528093505050509250929050565b600060208284031215611dca57600080fd5b5035919050565b6000815180845260005b81811015611df757602081850181015186830182015201611ddb565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611e6557815187529582019590820190600101611e49565b509495945050505050565b600081518084526020808501945080840160005b83811015611e6557815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611e84565b600081518084526020808501808196508360051b8101915082860160005b85811015611efe578284038952611eec848351611e35565b98850198935090840190600101611ed4565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611f71577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c08452611f8a60c0850182611e70565b905060208084015185830382870152611fa38382611e70565b92505060408401518583036040870152611fbd8382611e70565b92505060608401518583036060870152611fd78382611eb6565b92505060808401518583036080870152611ff18382611eb6565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561193c57612027828651611f3a565b938301936001929092019190830190612014565b6000610120825181855261205182860182611dd1565b915050602083015161207b602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516120a3604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526120bb8282611e35565b915050608083015184820360808601526120d58282611e35565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261210e8382611f75565b9695505050505050565b60808152600061212b608083018761203b565b85602084015284604084015282810360608401526121498185611dd1565b979650505050505050565b60006020828403121561216657600080fd5b813567ffffffffffffffff81111561217d57600080fd5b61218984828501611a92565b949350505050565b600082601f8301126121a257600080fd5b813560206121b26118fd836118b8565b82815260059290921b840181019181810190868411156121d157600080fd5b8286015b8481101561193c5780357fffffffff000000000000000000000000000000000000000000000000000000008116811461220e5760008081fd5b83529183019183016121d5565b60006020828403121561222d57600080fd5b813567ffffffffffffffff8082111561224557600080fd5b90830190610120828603121561225a57600080fd5b61226261178e565b82358281111561227157600080fd5b61227d87828601611947565b82525061228c6020840161188f565b602082015261229d6040840161188f565b60408201526122ae6060840161188f565b60608201526122bf6080840161188f565b60808201526122d060a0840161188f565b60a08201526122e160c0840161188f565b60c08201526122f260e0840161188f565b60e0820152610100808401358381111561230b57600080fd5b61231788828701612191565b918301919091525095945050505050565b60208152600082516080602084015261234460a084018261203b565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526123938282611dd1565b95945050505050565b6020815260006123af6020830184611e35565b9392505050565b6000602082840312156123c857600080fd5b6123af8261188f565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612429577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061244457607f821691505b60208210810361247d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c060608301526124f360c0830186611e35565b82810360808401526125058186611e35565b91505061214960a0830184611f3a56fea2646970667358221220858f5e58d3db6d9d68534ef816f4cbd5a1722c52267948ea65ea99c43f3868b364736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
