/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raceFee",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b506040516200344a3803806200344a8339810160408190526200003891620003f4565b80620000443362000206565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000256565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b81610100015151811015620001fd57600e6000836101000151838151811062000163576200016362000528565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110620001b857620001b862000528565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001f5816200053e565b905062000136565b50505062000566565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002ae579160200282015b82811115620002ae57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000277565b50620002bc929150620002c0565b5090565b5b80821115620002bc5760008155600101620002c1565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620003135762000313620002d7565b60405290565b80516001600160a01b03811681146200033157600080fd5b919050565b600082601f8301126200034857600080fd5b815160206001600160401b0380831115620003675762000367620002d7565b8260051b604051601f19603f830116810181811084821117156200038f576200038f620002d7565b604052938452858101830193838101925087851115620003ae57600080fd5b83870191505b84821015620003d857620003c88262000319565b83529183019190830190620003b4565b979650505050505050565b805180151581146200033157600080fd5b6000602082840312156200040757600080fd5b81516001600160401b03808211156200041f57600080fd5b9083019061016082860312156200043557600080fd5b6200043f620002ed565b6200044a8362000319565b81526200045a6020840162000319565b60208201526200046d6040840162000319565b6040820152620004806060840162000319565b6060820152620004936080840162000319565b6080820152620004a660a0840162000319565b60a0820152620004b960c0840162000319565b60c0820152620004cc60e0840162000319565b60e08201526101008084015183811115620004e657600080fd5b620004f48882870162000336565b82840152505061012091508183015182820152610140915062000519828401620003e3565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200055f57634e487b7160e01b600052601160045260246000fd5b5060010190565b612ed480620005766000396000f3fe6080604052600436106100a35760003560e01c80633f16e358146100ac578063715018a6146100bf5780637bbc469e146100d45780638da5cb5b14610111578063af640d0f1461013e578063b7dda85e14610162578063c4bdc7e71461018f578063c691c1c6146101af578063d63a8e11146101cf578063d8de65871461020f578063e1152343146102ca578063e200c857146102ea578063f2fde38b1461031757005b366100aa57005b005b6100aa6100ba366004611cd4565b610337565b3480156100cb57600080fd5b506100aa6104d0565b3480156100e057600080fd5b506100f46100ef366004611d10565b6104e4565b604051610108989796959493929190611f20565b60405180910390f35b34801561011d57600080fd5b50610126610920565b6040516001600160a01b039091168152602001610108565b34801561014a57600080fd5b5061015460015481565b604051908152602001610108565b34801561016e57600080fd5b5061018261017d366004611d10565b61092f565b6040516101089190611f95565b34801561019b57600080fd5b506100aa6101aa366004612064565b610dfb565b3480156101bb57600080fd5b506100aa6101ca3660046121f6565b610fb0565b3480156101db57600080fd5b506101ff6101ea366004612349565b600e6020526000908152604090205460ff1681565b6040519015158152602001610108565b34801561021b57600080fd5b50600254600354600454600554600654600754600854600954600b54600c54610265996001600160a01b039081169981169881169781169681169581169481169316919060ff168a565b604080516001600160a01b039b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c085015290931660e083015261010082019290925290151561012082015261014001610108565b3480156102d657600080fd5b506100aa6102e5366004611d10565b6113ef565b3480156102f657600080fd5b5061030a610305366004611d10565b6114df565b604051610108919061236d565b34801561032357600080fd5b506100aa610332366004612349565b611544565b336000908152600e602052604090205460ff1661035357600080fd5b60005b8151518110156104cc57600754825180516000926001600160a01b031691908490811061038557610385612380565b6020026020010151846020015184815181106103a3576103a3612380565b6020026020010151856040015185815181106103c1576103c1612380565b6020026020010151866060015186815181106103df576103df612380565b6020026020010151876080015187815181106103fd576103fd612380565b60200260200101518860a00151888151811061041b5761041b612380565b602002602001015160405160240161043896959493929190612396565b60408051601f198184030181529181526020820180516001600160e01b031663400f959f60e01b1790525161046d91906123f6565b600060405180830381855af49150503d80600081146104a8576040519150601f19603f3d011682016040523d82523d6000602084013e6104ad565b606091505b50509050806104bb57600080fd5b506104c581612412565b9050610356565b5050565b6104d86115ba565b6104e26000611619565b565b600d602052600090815260409020805481906104ff90612439565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90612439565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b50505060018401546003850154600486015460058701546040805160068a01805460e0602082028401810190945260c083018181529a9b6001600160a01b039098169a9699509497509295949093849284919084018282801561060457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e6575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561066657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610648575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156106c857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106aa575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107625760008481526020908190208301805460408051828502810185019091528181529283018282801561074e57602002820191906000526020600020905b81548152602001906001019080831161073a575b5050505050815260200190600101906106f6565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107fb576000848152602090819020830180546040805182850281018501909152818152928301828280156107e757602002820191906000526020600020905b8154815260200190600101908083116107d3575b50505050508152602001906001019061078f565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561087e57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116108415790505b5050505050815250509080600c01549080600d01805461089d90612439565b80601f01602080910402602001604051908101604052809291908181526020018280546108c990612439565b80156109165780601f106108eb57610100808354040283529160200191610916565b820191906000526020600020905b8154815290600101906020018083116108f957829003601f168201915b5050505050905088565b6000546001600160a01b031690565b610937611669565b6000828152600d6020526040908190208151610120810190925280548290829061096090612439565b80601f016020809104026020016040519081016040528092919081815260200182805461098c90612439565b80156109d95780601f106109ae576101008083540402835291602001916109d9565b820191906000526020600020905b8154815290600101906020018083116109bc57829003601f168201915b505050918352505060018201546001600160a01b03166020808301919091526002830180546040805182850281018501825282815294019392830182828015610a4157602002820191906000526020600020905b815481526020019060010190808311610a2d575b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610ad157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ab3575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610b3357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b15575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610b9557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b77575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610c2f57600084815260209081902083018054604080518285028101850190915281815292830182828015610c1b57602002820191906000526020600020905b815481526020019060010190808311610c07575b505050505081526020019060010190610bc3565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610cc857600084815260209081902083018054604080518285028101850190915281815292830182828015610cb457602002820191906000526020600020905b815481526020019060010190808311610ca0575b505050505081526020019060010190610c5c565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610d4b57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610d0e5790505b5050505050815250508152602001600c8201548152602001600d82018054610d7290612439565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9e90612439565b8015610deb5780601f10610dc057610100808354040283529160200191610deb565b820191906000526020600020905b815481529060010190602001808311610dce57829003601f168201915b5050505050815250509050919050565b610e036115ba565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e085015160098054909316941693909317905561010083015180518493610ec992600a929101906116f5565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b816101000151518110156104cc57600e60008361010001518381518110610f1c57610f1c612380565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110610f6e57610f6e612380565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610fa981612412565b9050610ef3565b336000908152600e602052604090205460ff16610fcc57600080fd5b600c5460ff16156112b05760065460405163d8c521bf60e01b81526001600160a01b039091169063d8c521bf906110099085908590600401612473565b600060405180830381865afa158015611026573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261104e9190810190612856565b6001546000908152600d602052604090208151819061106d90826129bb565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516110ac926002850192019061175a565b50606082015160038201556080820151600482015560a0820151600582015560c08201518051805160068401916110e8918391602001906116f5565b50602082810151805161110192600185019201906116f5565b506040820151805161111d9160028401916020909101906116f5565b5060608201518051611139916003840191602090910190611795565b5060808201518051611155916004840191602090910190611795565b5060a082015180516111719160058401916020909101906117ee565b50505060e0820151600c820155610100820151600d82019061119390826129bb565b5090505060005b82602001515181101561126257600454602084015180516001600160a01b039092169163894f39fc9190849081106111d4576111d4612380565b6020026020010151846040518363ffffffff1660e01b8152600401611203929190918252602082015260400190565b6020604051808303816000875af1158015611222573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112469190612a7a565b60000361125257600080fd5b61125b81612412565b905061119a565b506001546000818152600d60205260409081902090517fdeac4b75274224a1b860c0caee5b72450aea68ad014cfa51df709ab425da417f916112a391612dca565b60405180910390a26113d8565b6001546040805161012081018252845181526003546060860151925163666d638d60e11b81527fabf9a9f55436fcab94967775cab48bb9102d7a183c116e1f2aed1f263df682cb9360208401926001600160a01b03169163ccdac71a9161131d9160040190815260200190565b602060405180830381865afa15801561133a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135e9190612e81565b6001600160a01b03168152602001856020015181526020018560600151815260200185608001518152602001600081526020018561010001518152602001848152602001604051806040016040528060048152602001630307830360e41b8152508152506040516113cf9190611f95565b60405180910390a25b6001600081546113e790612412565b909155505050565b6113f76115ba565b478111156114645760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b61146c610920565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506114dc5760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b604482015260640161145b565b50565b6000818152600d602090815260409182902060020180548351818402810184019094528084526060939283018282801561153857602002820191906000526020600020905b815481526020019060010190808311611524575b50505050509050919050565b61154c6115ba565b6001600160a01b0381166115b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161145b565b6114dc81611619565b336115c3610920565b6001600160a01b0316146104e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161145b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061012001604052806060815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016116e16040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b82805482825590600052602060002090810192821561174a579160200282015b8281111561174a57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611715565b50611756929150611894565b5090565b82805482825590600052602060002090810192821561174a579160200282015b8281111561174a57825182559160200191906001019061177a565b8280548282559060005260206000209081019282156117e2579160200282015b828111156117e257825180516117d291849160209091019061175a565b50916020019190600101906117b5565b506117569291506118a9565b8280548282559060005260206000209060070160089004810192821561174a5791602002820160005b8382111561185b57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302611817565b801561188b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261185b565b50506117569291505b5b808211156117565760008155600101611895565b808211156117565760006118bd82826118c6565b506001016118a9565b50805460008255906000526020600020908101906114dc9190611894565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561191c5761191c6118e4565b60405290565b60405161016081016001600160401b038111828210171561191c5761191c6118e4565b60405161018081016001600160401b038111828210171561191c5761191c6118e4565b60405161012081016001600160401b038111828210171561191c5761191c6118e4565b604051601f8201601f191681016001600160401b03811182821017156119b3576119b36118e4565b604052919050565b60006001600160401b038211156119d4576119d46118e4565b5060051b60200190565b6001600160a01b03811681146114dc57600080fd5b80356119fe816119de565b919050565b600082601f830112611a1457600080fd5b81356020611a29611a24836119bb565b61198b565b82815260059290921b84018101918181019086841115611a4857600080fd5b8286015b84811015611a6c578035611a5f816119de565b8352918301918301611a4c565b509695505050505050565b600082601f830112611a8857600080fd5b81356020611a98611a24836119bb565b82815260059290921b84018101918181019086841115611ab757600080fd5b8286015b84811015611a6c5780358352918301918301611abb565b600082601f830112611ae357600080fd5b81356020611af3611a24836119bb565b82815260059290921b84018101918181019086841115611b1257600080fd5b8286015b84811015611a6c5780356001600160401b03811115611b355760008081fd5b611b438986838b0101611a77565b845250918301918301611b16565b63ffffffff811681146114dc57600080fd5b80356119fe81611b51565b600082601f830112611b7f57600080fd5b81356020611b8f611a24836119bb565b82815260059290921b84018101918181019086841115611bae57600080fd5b8286015b84811015611a6c578035611bc581611b51565b8352918301918301611bb2565b600060c08284031215611be457600080fd5b611bec6118fa565b905081356001600160401b0380821115611c0557600080fd5b611c1185838601611a03565b83526020840135915080821115611c2757600080fd5b611c3385838601611a03565b60208401526040840135915080821115611c4c57600080fd5b611c5885838601611a03565b60408401526060840135915080821115611c7157600080fd5b611c7d85838601611ad2565b60608401526080840135915080821115611c9657600080fd5b611ca285838601611ad2565b608084015260a0840135915080821115611cbb57600080fd5b50611cc884828501611b6e565b60a08301525092915050565b600060208284031215611ce657600080fd5b81356001600160401b03811115611cfc57600080fd5b611d0884828501611bd2565b949350505050565b600060208284031215611d2257600080fd5b5035919050565b60005b83811015611d44578181015183820152602001611d2c565b83811115611d53576000848401525b50505050565b60008151808452611d71816020860160208601611d29565b601f01601f19169290920160200192915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b83811015611dcb5781516001600160a01b031687529582019590820190600101611da6565b509495945050505050565b600081518084526020808501945080840160005b83811015611dcb57815187529582019590820190600101611dea565b600081518084526020808501808196508360051b8101915082860160005b85811015611e4e578284038952611e3c848351611dd6565b98850198935090840190600101611e24565b5091979650505050505050565b6000815160c08452611e7060c0850182611d92565b905060208084015185830382870152611e898382611d92565b92505060408401518583036040870152611ea38382611d92565b92505060608401518583036060870152611ebd8382611e06565b92505060808401518583036080870152611ed78382611e06565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611a6c57845163ffffffff168252938301936001929092019190830190611efa565b6000610100808352611f348184018c611d59565b6001600160a01b038b166020850152604084018a9052606084018990526080840188905283810360a08501529050611f6c8187611e5b565b90508460c084015282810360e0840152611f868185611d59565b9b9a5050505050505050505050565b6020815260008251610120806020850152611fb4610140850183611d59565b91506020850151611fc86040860182611d85565b506040850151601f1980868503016060870152611fe58483611dd6565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e08701526120208483611e5b565b60e088015161010088810191909152880151878203909201848801529350905061204a8382611d59565b9695505050505050565b803580151581146119fe57600080fd5b60006020828403121561207657600080fd5b81356001600160401b038082111561208d57600080fd5b9083019061016082860312156120a257600080fd5b6120aa611922565b6120b3836119f3565b81526120c1602084016119f3565b60208201526120d2604084016119f3565b60408201526120e3606084016119f3565b60608201526120f4608084016119f3565b608082015261210560a084016119f3565b60a082015261211660c084016119f3565b60c082015261212760e084016119f3565b60e0820152610100808401358381111561214057600080fd5b61214c88828701611a03565b82840152505061012091508183013582820152610140915061216f828401612054565b91810191909152949350505050565b60006001600160401b03821115612197576121976118e4565b50601f01601f191660200190565b600082601f8301126121b657600080fd5b81356121c4611a248261217e565b8181528460208386010111156121d957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561220957600080fd5b82356001600160401b038082111561222057600080fd5b90840190610180828703121561223557600080fd5b61223d611945565b82358281111561224c57600080fd5b612258888286016121a5565b82525060208301358281111561226d57600080fd5b61227988828601611a77565b60208301525060408301358281111561229157600080fd5b61229d88828601611a77565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e082015261010080840135838111156122e957600080fd5b6122f589828701611bd2565b828401525050610120915061230b828401611b63565b82820152610140915061231f828401611b63565b828201526101609150612333828401612054565b9181019190915295602094909401359450505050565b60006020828403121561235b57600080fd5b8135612366816119de565b9392505050565b6020815260006123666020830184611dd6565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03878116825286811660208301528516604082015260c0606082018190526000906123ca90830186611dd6565b82810360808401526123dc8186611dd6565b91505063ffffffff831660a0830152979650505050505050565b60008251612408818460208701611d29565b9190910192915050565b60006001820161243257634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061244d57607f821691505b60208210810361246d57634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600083516101808060408501526124926101c0850183611d59565b91506020860151603f19808685030160608701526124b08483611dd6565b935060408801519150808685030160808701526124cd8483611dd6565b9350606088015160a0870152608088015160c087015260a088015160e087015260c08801519150610100828188015260e089015192506101208381890152818a0151935061014091508288870301828901526125298685611e5b565b9550808a015193505061016091506125488288018463ffffffff169052565b88015163ffffffff1692860192909252509094015115156101a0830152506020015290565b600082601f83011261257e57600080fd5b815161258c611a248261217e565b8181528460208386010111156125a157600080fd5b611d08826020830160208701611d29565b80516119fe816119de565b600082601f8301126125ce57600080fd5b815160206125de611a24836119bb565b82815260059290921b840181019181810190868411156125fd57600080fd5b8286015b84811015611a6c5780518352918301918301612601565b600082601f83011261262957600080fd5b81516020612639611a24836119bb565b82815260059290921b8401810191818101908684111561265857600080fd5b8286015b84811015611a6c57805161266f816119de565b835291830191830161265c565b600082601f83011261268d57600080fd5b8151602061269d611a24836119bb565b82815260059290921b840181019181810190868411156126bc57600080fd5b8286015b84811015611a6c5780516001600160401b038111156126df5760008081fd5b6126ed8986838b01016125bd565b8452509183019183016126c0565b600082601f83011261270c57600080fd5b8151602061271c611a24836119bb565b82815260059290921b8401810191818101908684111561273b57600080fd5b8286015b84811015611a6c57805161275281611b51565b835291830191830161273f565b600060c0828403121561277157600080fd5b6127796118fa565b82519091506001600160401b038082111561279357600080fd5b61279f85838601612618565b835260208401519150808211156127b557600080fd5b6127c185838601612618565b602084015260408401519150808211156127da57600080fd5b6127e685838601612618565b604084015260608401519150808211156127ff57600080fd5b61280b8583860161267c565b6060840152608084015191508082111561282457600080fd5b6128308583860161267c565b608084015260a084015191508082111561284957600080fd5b50611cc8848285016126fb565b60006020828403121561286857600080fd5b81516001600160401b038082111561287f57600080fd5b90830190610120828603121561289457600080fd5b61289c611968565b8251828111156128ab57600080fd5b6128b78782860161256d565b8252506128c6602084016125b2565b60208201526040830151828111156128dd57600080fd5b6128e9878286016125bd565b604083015250606083015160608201526080830151608082015260a083015160a082015260c08301518281111561291f57600080fd5b61292b8782860161275f565b60c08301525060e083015160e0820152610100808401518381111561294f57600080fd5b61295b8882870161256d565b918301919091525095945050505050565b601f8211156129b657600081815260208120601f850160051c810160208610156129935750805b601f850160051c820191505b818110156129b25782815560010161299f565b5050505b505050565b81516001600160401b038111156129d4576129d46118e4565b6129e8816129e28454612439565b8461296c565b602080601f831160018114612a1d5760008415612a055750858301515b600019600386901b1c1916600185901b1785556129b2565b600085815260208120601f198616915b82811015612a4c57888601518255948401946001909101908401612a2d565b5085821015612a6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612a8c57600080fd5b5051919050565b60008154612aa081612439565b808552602060018381168015612abd5760018114612ad757612b05565b60ff1985168884015283151560051b880183019550612b05565b866000528260002060005b85811015612afd5781548a8201860152908301908401612ae2565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b83811015611dcb57815487529582019560019182019101612b29565b6000815480845260208085019450836000528060002060005b83811015611dcb5781546001600160a01b031687529582019560019182019101612b5e565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015611e4e578284038952612bbd8483612b10565b98850198935060019182019101612ba6565b60c082526000612be260c0840183612b45565b6001602085830381870152612bf983838701612b45565b9250604086840381880152612c118460028801612b45565b9350606087850381890152612c298560038901612b83565b94506080888603818a0152612c418660048a01612b83565b95506005880160a08a8803818c0152878254612c61818b90815260200190565b6000948552602085209a5091505b80600785011015612cdf57895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c90830152988801986008939093019261010090910190612c6f565b98549880841015612cfc5763ffffffff8a16825292880192908701905b80841015612d185789881c63ffffffff16825292880192908701905b80841015612d345789871c63ffffffff16825292880192908701905b80841015612d505789861c63ffffffff16825292880192908701905b80841015612d6c5789851c63ffffffff16825292880192908701905b80841015612d885789831c63ffffffff16825292880192908701905b80841015612da65760c08a901c63ffffffff16825292880192908701905b80841015612dba5760e08a901c8252908701905b509b9a5050505050505050505050565b602081526000610120806020840152612de7610140840185612a93565b60018501546001600160a01b0316612e026040860182611d85565b50601f1980858303016060860152612e1d8260028801612b10565b915060038601546080860152600486015460a0860152600586015460c0860152808583030160e0860152612e548260068801612bcf565b9150600c86015461010086015280858303018386015250612e7881600d8701612a93565b95945050505050565b600060208284031215612e9357600080fd5b8151612366816119de56fea26469706673582212208b68c6bca894a0bf4f48d51103c1d558b829c8112be975f4ff92cbd910208c3764736f6c634300080f0033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
