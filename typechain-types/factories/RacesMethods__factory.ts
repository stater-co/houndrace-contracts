/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620042d1380380620042d18339810160408190526200003891620003ea565b806200004433620001fc565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a929101906200024c565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015620001f357600d6000836101000151838151811062000159576200015962000511565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110620001ae57620001ae62000511565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001eb8162000527565b90506200012c565b5050506200054f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b805180151581146200032757600080fd5b600060208284031215620003fd57600080fd5b81516001600160401b03808211156200041557600080fd5b9083019061014082860312156200042b57600080fd5b62000435620002e3565b62000440836200030f565b815262000450602084016200030f565b602082015262000463604084016200030f565b604082015262000476606084016200030f565b606082015262000489608084016200030f565b60808201526200049c60a084016200030f565b60a0820152620004af60c084016200030f565b60c0820152620004c260e084016200030f565b60e08201526101008084015183811115620004dc57600080fd5b620004ea888287016200032c565b828401525050610120915062000502828401620003d9565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200054857634e487b7160e01b600052601160045260246000fd5b5060010190565b613d72806200055f6000396000f3fe6080604052600436106100e85760003560e01c8063af640d0f1161008a578063d8de658711610059578063d8de65871461040d578063e1152343146104d4578063e200c857146104f4578063f2fde38b1461052157600080fd5b8063af640d0f1461035c578063b7dda85e14610380578063d347c56f146103ad578063d63a8e11146103cd57600080fd5b8063715018a6116100c6578063715018a6146102cf5780637bbc469e146102e45780638da5cb5b146103145780639ad2e2b01461034957600080fd5b806326e42cf4146100ed5780632a546a381461010f578063680adc371461021e575b600080fd5b3480156100f957600080fd5b5061010d610108366004612114565b610541565b005b34801561011b57600080fd5b506101d161012a366004612222565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600e60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516102159190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b34801561022a57600080fd5b5061029b610239366004612222565b600e6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff95861681529385166020850152918416918301919091529091166060820152608001610215565b3480156102db57600080fd5b5061010d610778565b3480156102f057600080fd5b506103046102ff366004612222565b61078c565b6040516102159493929190612547565b34801561032057600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610215565b61010d6103573660046127d2565b610d00565b34801561036857600080fd5b5061037260015481565b604051908152602001610215565b34801561038c57600080fd5b506103a061039b366004612222565b610e62565b604051610215919061280f565b3480156103b957600080fd5b5061010d6103c8366004612a57565b6113ee565b3480156103d957600080fd5b506103fd6103e8366004612b42565b600d6020526000908152604090205460ff1681565b6040519015158152602001610215565b34801561041957600080fd5b50600254600354600454600554600654600754600854600954600b5461046c9873ffffffffffffffffffffffffffffffffffffffff90811698811697811696811695811694811693811692169060ff1689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c084015290921660e082015290151561010082015261012001610215565b3480156104e057600080fd5b5061010d6104ef366004612222565b6118e3565b34801561050057600080fd5b5061051461050f366004612222565b611a1e565b6040516102159190612b66565b34801561052d57600080fd5b5061010d61053c366004612b42565b611a83565b610549611b37565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361063492600a92910190611c2d565b506101209190910151600990910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560005b8161010001515181101561077457600d6000836101000151838151811061069b5761069b612b79565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d6000846101000151848151811061070757610707612b79565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561076d81612ba8565b9050610672565b5050565b610780611b37565b61078a6000611bb8565b565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546107c090612c07565b80601f01602080910402602001604051908101604052809291908181526020018280546107ec90612c07565b80156108395780601f1061080e57610100808354040283529160200191610839565b820191906000526020600020905b81548152906001019060200180831161081c57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156108c757602002820191906000526020600020905b8154815260200190600101908083116108b3575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561091f57602002820191906000526020600020905b81548152602001906001019080831161090b575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156109bc57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610991575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a2b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a00575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610a9a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a6f575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b3457600084815260209081902083018054604080518285028101850190915281815292830182828015610b2057602002820191906000526020600020905b815481526020019060010190808311610b0c575b505050505081526020019060010190610ac8565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610bcd57600084815260209081902083018054604080518285028101850190915281815292830182828015610bb957602002820191906000526020600020905b815481526020019060010190808311610ba5575b505050505081526020019060010190610b61565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610c5457602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610c3257610c32612361565b815260206001928301818104948501949093039092029101808411610c135790505b505050505081525050815250509080600e01549080600f015490806010018054610c7d90612c07565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca990612c07565b8015610cf65780601f10610ccb57610100808354040283529160200191610cf6565b820191906000526020600020905b815481529060010190602001808311610cd957829003601f168201915b5050505050905084565b336000908152600d602052604090205460ff16610d1c57600080fd5b60005b815151811015610774576007548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c2919084908110610d6057610d60612b79565b602002602001015184602001518481518110610d7e57610d7e612b79565b602002602001015185604001518581518110610d9c57610d9c612b79565b602002602001015186606001518681518110610dba57610dba612b79565b602002602001015187608001518781518110610dd857610dd8612b79565b60200260200101518860a001518881518110610df657610df6612b79565b60200260200101516040518763ffffffff1660e01b8152600401610e1f96959493929190612c5a565b600060405180830381600087803b158015610e3957600080fd5b505af1158015610e4d573d6000803e3d6000fd5b5050505080610e5b90612ba8565b9050610d1f565b610e6a611cb7565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610e9c90612c07565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec890612c07565b8015610f155780601f10610eea57610100808354040283529160200191610f15565b820191906000526020600020905b815481529060010190602001808311610ef857829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610fa357602002820191906000526020600020905b815481526020019060010190808311610f8f575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ffb57602002820191906000526020600020905b815481526020019060010190808311610fe7575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561109857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161106d575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561110757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110dc575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561117657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161114b575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611210576000848152602090819020830180546040805182850281018501909152818152928301828280156111fc57602002820191906000526020600020905b8154815260200190600101908083116111e8575b5050505050815260200190600101906111a4565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112a95760008481526020908190208301805460408051828502810185019091528181529283018282801561129557602002820191906000526020600020905b815481526020019060010190808311611281575b50505050508152602001906001019061123d565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561133057602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561130e5761130e612361565b8152602060019283018181049485019490930390920291018084116112ef5790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461136590612c07565b80601f016020809104026020016040519081016040528092919081815260200182805461139190612c07565b80156113de5780601f106113b3576101008083540402835291602001916113de565b820191906000526020600020905b8154815290600101906020018083116113c157829003601f168201915b5050505050815250509050919050565b336000908152600d602052604090205460ff1661140a57600080fd5b600b5460ff1615611788576006546040517f6774da7c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636774da7c9061146d9085908590600401612cfd565b600060405180830381865afa15801561148a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b291908101906130af565b6001546000908152600c6020526040902081518051829081906114d59082613280565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161154d9260038501920190611ce5565b5060808201518051611569916004840191602090910190611ce5565b5060a0820151600582015560c0820151600682015560e082015160078201556101008201518051805160088401916115a691839160200190611c2d565b5060208281015180516115bf9260018501920190611c2d565b50604082015180516115db916002840191602090910190611c2d565b50606082015180516115f7916003840191602090910190611d20565b5060808201518051611613916004840191602090910190611d20565b5060a0820151805161162f916005840191602090910190611d79565b505050506020830151600e830155506040820151600f8201556060820151601082019061165c9082613280565b5090505060005b8251606001515181101561173a57600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106116ac576116ac612b79565b6020026020010151846040518363ffffffff1660e01b81526004016116db929190918252602082015260400190565b6020604051808303816000875af11580156116fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171e919061337c565b60000361172a57600080fd5b61173381612ba8565b9050611663565b506001546000818152600c60205260409081902090517fdedecc3fdb81c5eaa1570cb83b67c14819a52dc0478ad2291a09b89d07260b259161177b91613c2e565b60405180910390a26118cc565b6001547fc33adc8129e8ae5904a7cb60d574e6e22a524b9eabeee4db78c5f6fae67e4eed6040518060800160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e0015181526020018760000151610100015181525081526020014281526020018481526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040516118c3919061280f565b60405180910390a25b6001600081546118db90612ba8565b909155505050565b6118eb611b37565b47811115611980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f19350505050611a1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f2077697468647261770000000000006044820152606401611977565b50565b6000818152600c6020908152604091829020600301805483518184028101840190945280845260609392830182828015611a7757602002820191906000526020600020905b815481526020019060010190808311611a63575b50505050509050919050565b611a8b611b37565b73ffffffffffffffffffffffffffffffffffffffff8116611b2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611977565b611a1b81611bb8565b60005473ffffffffffffffffffffffffffffffffffffffff16331461078a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611977565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611ca7579160200282015b82811115611ca757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611c4d565b50611cb3929150611e24565b5090565b6040518060800160405280611cca611e39565b81526020016000815260200160008152602001606081525090565b828054828255906000526020600020908101928215611ca7579160200282015b82811115611ca7578251825591602001919060010190611d05565b828054828255906000526020600020908101928215611d6d579160200282015b82811115611d6d5782518051611d5d918491602090910190611ce5565b5091602001919060010190611d40565b50611cb3929150611ee7565b82805482825590600052602060002090601f01602090048101928215611ca75791602002820160005b83821115611dee57835183826101000a81548160ff02191690836003811115611dcd57611dcd612361565b02179055509260200192600101602081600001049283019260010302611da2565b8015611e1b5782816101000a81549060ff0219169055600101602081600001049283019260010302611dee565b5050611cb39291505b5b80821115611cb35760008155600101611e25565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611ee26040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b80821115611cb3576000611efb8282611f04565b50600101611ee7565b5080546000825590600052602060002090810190611a1b9190611e24565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611f7557611f75611f22565b60405290565b60405160c0810167ffffffffffffffff81118282101715611f7557611f75611f22565b604051610120810167ffffffffffffffff81118282101715611f7557611f75611f22565b604051610100810167ffffffffffffffff81118282101715611f7557611f75611f22565b6040516080810167ffffffffffffffff81118282101715611f7557611f75611f22565b604051601f8201601f1916810167ffffffffffffffff8111828210171561203257612032611f22565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff81168114611a1b57600080fd5b80356120678161203a565b919050565b600067ffffffffffffffff82111561208657612086611f22565b5060051b60200190565b600082601f8301126120a157600080fd5b813560206120b66120b18361206c565b612009565b82815260059290921b840181019181810190868411156120d557600080fd5b8286015b848110156120f95780356120ec8161203a565b83529183019183016120d9565b509695505050505050565b8035801515811461206757600080fd5b60006020828403121561212657600080fd5b813567ffffffffffffffff8082111561213e57600080fd5b90830190610140828603121561215357600080fd5b61215b611f51565b6121648361205c565b81526121726020840161205c565b60208201526121836040840161205c565b60408201526121946060840161205c565b60608201526121a56080840161205c565b60808201526121b660a0840161205c565b60a08201526121c760c0840161205c565b60c08201526121d860e0840161205c565b60e082015261010080840135838111156121f157600080fd5b6121fd88828701612090565b8284015250506101209150612213828401612104565b91810191909152949350505050565b60006020828403121561223457600080fd5b5035919050565b60005b8381101561225657818101518382015260200161223e565b50506000910152565b6000815180845261227781602086016020860161223b565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156122bb5781518752958201959082019060010161229f565b509495945050505050565b600081518084526020808501945080840160005b838110156122bb57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016122da565b600081518084526020808501808196508360051b8101915082860160005b8581101561235457828403895261234284835161228b565b9885019893509084019060010161232a565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106123a0576123a0612361565b9052565b6000815160c084526123b960c08501826122c6565b9050602080840151858303828701526123d283826122c6565b925050604084015185830360408701526123ec83826122c6565b92505060608401518583036060870152612406838261230c565b92505060808401518583036080870152612420838261230c565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156120f957612456828651612390565b938301936001929092019190830190612443565b600061012082518185526124808286018261225f565b91505060208301516124aa602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516124d2604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526124ea828261228b565b91505060808301518482036080860152612504828261228b565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261253d83826123a4565b9695505050505050565b60808152600061255a608083018761246a565b8560208401528460408401528281036060840152612578818561225f565b979650505050505050565b600082601f83011261259457600080fd5b813560206125a46120b18361206c565b82815260059290921b840181019181810190868411156125c357600080fd5b8286015b848110156120f957803583529183019183016125c7565b600082601f8301126125ef57600080fd5b813560206125ff6120b18361206c565b82815260059290921b8401810191818101908684111561261e57600080fd5b8286015b848110156120f957803567ffffffffffffffff8111156126425760008081fd5b6126508986838b0101612583565b845250918301918301612622565b60048110611a1b57600080fd5b600082601f83011261267c57600080fd5b8135602061268c6120b18361206c565b82815260059290921b840181019181810190868411156126ab57600080fd5b8286015b848110156120f95780356126c28161265e565b83529183019183016126af565b600060c082840312156126e157600080fd5b6126e9611f7b565b9050813567ffffffffffffffff8082111561270357600080fd5b61270f85838601612090565b8352602084013591508082111561272557600080fd5b61273185838601612090565b6020840152604084013591508082111561274a57600080fd5b61275685838601612090565b6040840152606084013591508082111561276f57600080fd5b61277b858386016125de565b6060840152608084013591508082111561279457600080fd5b6127a0858386016125de565b608084015260a08401359150808211156127b957600080fd5b506127c68482850161266b565b60a08301525092915050565b6000602082840312156127e457600080fd5b813567ffffffffffffffff8111156127fb57600080fd5b612807848285016126cf565b949350505050565b60208152600082516080602084015261282b60a084018261246a565b905060208401516040840152604084015160608401526060840151601f1984830301608085015261285c828261225f565b95945050505050565b600067ffffffffffffffff82111561287f5761287f611f22565b50601f01601f191660200190565b600082601f83011261289e57600080fd5b81356128ac6120b182612865565b8181528460208386010111156128c157600080fd5b816020850160208301376000918101602001919091529392505050565b600061012082840312156128f157600080fd5b6128f9611f9e565b9050813567ffffffffffffffff8082111561291357600080fd5b61291f8583860161288d565b835261292d6020850161205c565b602084015261293e6040850161205c565b6040840152606084013591508082111561295757600080fd5b61296385838601612583565b6060840152608084013591508082111561297c57600080fd5b61298885838601612583565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156129c157600080fd5b6129cd868287016126cf565b8385015250505092915050565b803563ffffffff8116811461206757600080fd5b600082601f8301126129ff57600080fd5b81356020612a0f6120b18361206c565b82815260059290921b84018101918181019086841115612a2e57600080fd5b8286015b848110156120f957803560078110612a4a5760008081fd5b8352918301918301612a32565b60008060408385031215612a6a57600080fd5b823567ffffffffffffffff80821115612a8257600080fd5b908401906101008287031215612a9757600080fd5b612a9f611fc2565b823582811115612aae57600080fd5b612aba888286016128de565b825250602083013560208201526040830135604082015260608301356060820152612ae7608084016129da565b6080820152612af860a084016129da565b60a082015260c083013582811115612b0f57600080fd5b612b1b888286016129ee565b60c083015250612b2d60e08401612104565b60e08201529660209590950135955050505050565b600060208284031215612b5457600080fd5b8135612b5f8161203a565b9392505050565b602081526000612b5f602083018461228b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c00577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c90821680612c1b57607f821691505b602082108103612c54577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c06060830152612c9b60c083018661228b565b8281036080840152612cad818661228b565b91505061257860a0830184612390565b600081518084526020808501945080840160005b838110156122bb57815160078110612ceb57612ceb612361565b87529582019590820190600101612cd1565b6040815260008351610100806040850152612d1c61014085018361246a565b91506020860151606085015260408601516080850152606086015160a085015263ffffffff60808701511660c085015260a0860151612d6360e086018263ffffffff169052565b5060c08601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08584030182860152612d9c8382612cbd565b9250505060e0850151612db461012085018215159052565b506020929092019290925292915050565b600082601f830112612dd657600080fd5b8151612de46120b182612865565b818152846020838601011115612df957600080fd5b61280782602083016020870161223b565b80516120678161203a565b600082601f830112612e2657600080fd5b81516020612e366120b18361206c565b82815260059290921b84018101918181019086841115612e5557600080fd5b8286015b848110156120f95780518352918301918301612e59565b600082601f830112612e8157600080fd5b81516020612e916120b18361206c565b82815260059290921b84018101918181019086841115612eb057600080fd5b8286015b848110156120f9578051612ec78161203a565b8352918301918301612eb4565b600082601f830112612ee557600080fd5b81516020612ef56120b18361206c565b82815260059290921b84018101918181019086841115612f1457600080fd5b8286015b848110156120f957805167ffffffffffffffff811115612f385760008081fd5b612f468986838b0101612e15565b845250918301918301612f18565b600082601f830112612f6557600080fd5b81516020612f756120b18361206c565b82815260059290921b84018101918181019086841115612f9457600080fd5b8286015b848110156120f9578051612fab8161265e565b8352918301918301612f98565b600060c08284031215612fca57600080fd5b612fd2611f7b565b9050815167ffffffffffffffff80821115612fec57600080fd5b612ff885838601612e70565b8352602084015191508082111561300e57600080fd5b61301a85838601612e70565b6020840152604084015191508082111561303357600080fd5b61303f85838601612e70565b6040840152606084015191508082111561305857600080fd5b61306485838601612ed4565b6060840152608084015191508082111561307d57600080fd5b61308985838601612ed4565b608084015260a08401519150808211156130a257600080fd5b506127c684828501612f54565b6000602082840312156130c157600080fd5b815167ffffffffffffffff808211156130d957600080fd5b90830190608082860312156130ed57600080fd5b6130f5611fe6565b82518281111561310457600080fd5b8301610120818803121561311757600080fd5b61311f611f9e565b81518481111561312e57600080fd5b61313a89828501612dc5565b82525061314960208301612e0a565b602082015261315a60408301612e0a565b604082015260608201518481111561317157600080fd5b61317d89828501612e15565b60608301525060808201518481111561319557600080fd5b6131a189828501612e15565b60808301525060a082015160a082015260c082015160c082015260e082015160e082015261010080830151858111156131d957600080fd5b6131e58a828601612fb8565b8284015250508083525050602083015160208201526040830151604082015260608301518281111561321657600080fd5b61322287828601612dc5565b60608301525095945050505050565b601f82111561327b57600081815260208120601f850160051c810160208610156132585750805b601f850160051c820191505b8181101561327757828155600101613264565b5050505b505050565b815167ffffffffffffffff81111561329a5761329a611f22565b6132ae816132a88454612c07565b84613231565b602080601f83116001811461330157600084156132cb5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555613277565b600085815260208120601f198616915b8281101561333057888601518255948401946001909101908401613311565b508582101561336c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561338e57600080fd5b5051919050565b600081546133a281612c07565b8085526020600183811680156133bf57600181146133f757613425565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b8901019550613425565b866000528260002060005b8581101561341d5781548a8201860152908301908401613402565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b838110156122bb57815487529582019560019182019101613449565b6000815480845260208085019450836000528060002060005b838110156122bb57815473ffffffffffffffffffffffffffffffffffffffff168752958201956001918201910161347e565b600081548084526020808501808196508360051b81019150856000528260002060005b858110156123545782840389526134ea8483613430565b988501989350600191820191016134d3565b60c08252600061350f60c0840183613465565b600160208583038187015261352683838701613465565b9250858303604087015261353d8360028701613465565b925060608684038188015261355584600388016134b0565b935060808785038189015261356d85600489016134b0565b94506005870160a0898703818b015286825461358d818a90815260200190565b600094855260208520995091505b80601f8501101561380a57885460ff6135b684828416612390565b6135c7898501828460081c16612390565b6135d960408501828460101c16612390565b6135ea888501828460181c16612390565b6135fa87850182848c1c16612390565b61360b858501828460281c16612390565b61361d60c08501828460301c16612390565b60e0613630818601838560381c16612390565b6136436101008601838560401c16612390565b6136566101208601838560481c16612390565b6136696101408601838560501c16612390565b61367c6101608601838560581c16612390565b61368e610180860183858c1c16612390565b6136a16101a08601838560681c16612390565b6136b46101c08601838560701c16612390565b6136c76101e08601838560781c16612390565b6136d9610200860183858b1c16612390565b6136ec6102208601838560881c16612390565b6136ff6102408601838560901c16612390565b6137126102608601838560981c16612390565b61372461028086018385891c16612390565b6137376102a08601838560a81c16612390565b61374a6102c08601838560b01c16612390565b61375d6102e08601838560b81c16612390565b6137706103008601838560c01c16612390565b6137836103208601838560c81c16612390565b6137966103408601838560d01c16612390565b6137a96103608601838560d81c16612390565b6137bb61038086018385841c16612390565b506137cf6103a08501828460e81c16612390565b6137e26103c08501828460f01c16612390565b506137f46103e084018260f81c612390565b509787019792860192610400919091019061359b565b9754978084101561382b576138228260ff8b16612390565b92870192908601905b8084101561384c576138438260ff8b60081c16612390565b92870192908601905b8084101561386d576138648260ff8b60101c16612390565b92870192908601905b8084101561388e576138858260ff8b60181c16612390565b92870192908601905b808410156138ae576138a58260ff8b8a1c16612390565b92870192908601905b808410156138cf576138c68260ff8b60281c16612390565b92870192908601905b808410156138f0576138e78260ff8b60301c16612390565b92870192908601905b80841015613911576139088260ff8b60381c16612390565b92870192908601905b80841015613932576139298260ff8b60401c16612390565b92870192908601905b808410156139535761394a8260ff8b60481c16612390565b92870192908601905b808410156139745761396b8260ff8b60501c16612390565b92870192908601905b808410156139955761398c8260ff8b60581c16612390565b92870192908601905b808410156139b5576139ac8260ff8b891c16612390565b92870192908601905b808410156139d6576139cd8260ff8b60681c16612390565b92870192908601905b808410156139f7576139ee8260ff8b60701c16612390565b92870192908601905b80841015613a1857613a0f8260ff8b60781c16612390565b92870192908601905b80841015613a3857613a2f8260ff8b881c16612390565b92870192908601905b80841015613a5957613a508260ff8b60881c16612390565b92870192908601905b80841015613a7a57613a718260ff8b60901c16612390565b92870192908601905b80841015613a9b57613a928260ff8b60981c16612390565b92870192908601905b80841015613abb57613ab28260ff8b861c16612390565b92870192908601905b80841015613adc57613ad38260ff8b60a81c16612390565b92870192908601905b80841015613afd57613af48260ff8b60b01c16612390565b92870192908601905b80841015613b1e57613b158260ff8b60b81c16612390565b92870192908601905b80841015613b3f57613b368260ff8b60c01c16612390565b92870192908601905b80841015613b6057613b578260ff8b60c81c16612390565b92870192908601905b80841015613b8157613b788260ff8b60d01c16612390565b92870192908601905b80841015613ba257613b998260ff8b60d81c16612390565b92870192908601905b80841015613bc357613bba8260ff8b60e01c16612390565b92870192908601905b80841015613be457613bdb8260ff8b60e81c16612390565b92870192908601905b80841015613c0557613bfc8260ff8b60f01c16612390565b92870192908601905b80841015613c1f57613c1a828a60f81c612390565b908601905b509a9950505050505050505050565b602081526080602082015260006101208060a0840152613c526101c0840185613395565b600185015473ffffffffffffffffffffffffffffffffffffffff90811660c086015260028601541660e08501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608482038101610100860152613cb88260038801613430565b9150808583030183860152613cd08260048801613430565b925060058601546101408601526006860154610160860152600786015461018086015280858403016101a08601525050613d0d81600886016134fc565b9050600e8401546040840152600f8401546060840152601f19838203016080840152612807816010860161339556fea2646970667358221220fab1ccbb748c8aa63a5114100e238e7d50576e65c57d542b4c296092eaa8c42c64736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
