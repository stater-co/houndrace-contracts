/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b506040516200451b3803806200451b8339810160408190526200003891620003ff565b80620000443362000211565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b9291019062000261565b506101409190910151600a909101805460ff191691151591909117905560005b816101200151518110156200020857600e600083610120015183815181106200016e576200016e6200053a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110620001c357620001c36200053a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002008162000550565b905062000141565b50505062000578565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000282565b50620002c7929150620002cb565b5090565b5b80821115620002c75760008155600101620002cc565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156200031e576200031e620002e2565b60405290565b80516001600160a01b03811681146200033c57600080fd5b919050565b600082601f8301126200035357600080fd5b815160206001600160401b0380831115620003725762000372620002e2565b8260051b604051601f19603f830116810181811084821117156200039a576200039a620002e2565b604052938452858101830193838101925087851115620003b957600080fd5b83870191505b84821015620003e357620003d38262000324565b83529183019190830190620003bf565b979650505050505050565b805180151581146200033c57600080fd5b6000602082840312156200041257600080fd5b81516001600160401b03808211156200042a57600080fd5b9083019061016082860312156200044057600080fd5b6200044a620002f8565b620004558362000324565b8152620004656020840162000324565b6020820152620004786040840162000324565b60408201526200048b6060840162000324565b60608201526200049e6080840162000324565b6080820152620004b160a0840162000324565b60a0820152620004c460c0840162000324565b60c0820152620004d760e0840162000324565b60e0820152610100620004ec81850162000324565b9082015261012083810151838111156200050557600080fd5b620005138882870162000341565b82840152505061014091506200052b828401620003ee565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200057157634e487b7160e01b600052601160045260246000fd5b5060010190565b613f9380620005886000396000f3fe6080604052600436106100e85760003560e01c80639ad2e2b01161008a578063d8de658711610059578063d8de65871461040d578063e1152343146104e3578063e200c85714610503578063f2fde38b1461053057600080fd5b80639ad2e2b014610369578063af640d0f1461037c578063b7dda85e146103a0578063d63a8e11146103cd57600080fd5b8063680adc37116100c6578063680adc371461023e578063715018a6146102ef5780637bbc469e146103045780638da5cb5b1461033457600080fd5b806328c697b6146100ed5780632a546a381461010f5780636574105b1461021e575b600080fd5b3480156100f957600080fd5b5061010d61010836600461271d565b610550565b005b34801561011b57600080fd5b506101d161012a36600461281e565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600f60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516102159190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b34801561022a57600080fd5b5061010d610239366004612837565b610c09565b34801561024a57600080fd5b506102bb61025936600461281e565b600f6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff95861681529385166020850152918416918301919091529091166060820152608001610215565b3480156102fb57600080fd5b5061010d610e55565b34801561031057600080fd5b5061032461031f36600461281e565b610e69565b6040516102159493929190612c63565b34801561034057600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610215565b61010d610377366004612c9f565b6113dd565b34801561038857600080fd5b5061039260015481565b604051908152602001610215565b3480156103ac57600080fd5b506103c06103bb36600461281e565b61153f565b6040516102159190612cdc565b3480156103d957600080fd5b506103fd6103e8366004612d32565b600e6020526000908152604090205460ff1681565b6040519015158152602001610215565b34801561041957600080fd5b50600254600354600454600554600654600754600854600954600a54600c546104729973ffffffffffffffffffffffffffffffffffffffff90811699811698811697811696811695811694811693811692169060ff168a565b6040805173ffffffffffffffffffffffffffffffffffffffff9b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c0850152841660e084015290921661010082015290151561012082015261014001610215565b3480156104ef57600080fd5b5061010d6104fe36600461281e565b611acb565b34801561050f57600080fd5b5061052361051e36600461281e565b611c06565b6040516102159190612d56565b34801561053c57600080fd5b5061010d61054b366004612d32565b611c6b565b336000908152600e602052604090205460ff1661056c57600080fd5b600c5460ff1615610aae57600354825160a001516040517f11a3439300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916311a34393916105d59160040190815260200190565b600060405180830381600087803b1580156105ef57600080fd5b505af1158015610603573d6000803e3d6000fd5b5050600a54845161010001516040517f9ad2e2b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169350639ad2e2b0925061066291600401612d69565b600060405180830381600087803b15801561067c57600080fd5b505af1158015610690573d6000803e3d6000fd5b50506006546040517f3a4057f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169250633a4057f691506106ec9085908590600401612dbc565b600060405180830381865afa158015610709573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610731919081019061318c565b6001546000908152600d60205260409020815180518290819061075490826133b0565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516107cc9260038501920190611e15565b50608082015180516107e8916004840191602090910190611e15565b5060a0820151600582015560c0820151600682015560e0820151600782015561010082015180518051600884019161082591839160200190611e60565b50602082810151805161083e9260018501920190611e60565b506040820151805161085a916002840191602090910190611e60565b5060608201518051610876916003840191602090910190611eda565b5060808201518051610892916004840191602090910190611eda565b5060a082015180516108ae916005840191602090910190611f33565b505050506020830151600e830155506040820151600f820155606082015160108201906108db90826133b0565b5090505060005b82516060015151811015610a6057600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc91908490811061092b5761092b6134ac565b6020026020010151846040518363ffffffff1660e01b815260040161095a929190918252602082015260400190565b6020604051808303816000875af1158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d91906134db565b6000036109a957600080fd5b600454835160600151805173ffffffffffffffffffffffffffffffffffffffff9092169163fbba82fc9190849081106109e4576109e46134ac565b60200260200101518560c001516040518363ffffffff1660e01b8152600401610a1d92919091825263ffffffff16602082015260400190565b600060405180830381600087803b158015610a3757600080fd5b505af1158015610a4b573d6000803e3d6000fd5b5050505080610a59906134f4565b90506108e2565b506001546000818152600d60205260409081902090517fdedecc3fdb81c5eaa1570cb83b67c14819a52dc0478ad2291a09b89d07260b2591610aa191613dec565b60405180910390a2610bf2565b6001547fc33adc8129e8ae5904a7cb60d574e6e22a524b9eabeee4db78c5f6fae67e4eed6040518060800160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e0015181526020018760000151610100015181525081526020014281526020018481526020016040518060400160405280600481526020017f3078303000000000000000000000000000000000000000000000000000000000815250815250604051610be99190612cdc565b60405180910390a25b600160008154610c01906134f4565b909155505050565b610c11611d1f565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a8054909316941693909317905561012083015180518493610d1192600b92910190611e60565b506101409190910151600a90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560005b81610120015151811015610e5157600e60008361012001518381518110610d7857610d786134ac565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110610de457610de46134ac565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610e4a816134f4565b9050610d4f565b5050565b610e5d611d1f565b610e676000611da0565b565b600d6020528060005260406000206000915090508060000160405180610120016040529081600082018054610e9d9061330e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec99061330e565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610fa457602002820191906000526020600020905b815481526020019060010190808311610f90575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ffc57602002820191906000526020600020905b815481526020019060010190808311610fe8575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561109957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161106e575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561110857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110dd575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561117757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161114c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611211576000848152602090819020830180546040805182850281018501909152818152928301828280156111fd57602002820191906000526020600020905b8154815260200190600101908083116111e9575b5050505050815260200190600101906111a5565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112aa5760008481526020908190208301805460408051828502810185019091528181529283018282801561129657602002820191906000526020600020905b815481526020019060010190808311611282575b50505050508152602001906001019061123e565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561133157602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561130f5761130f612a7d565b8152602060019283018181049485019490930390920291018084116112f05790505b505050505081525050815250509080600e01549080600f01549080601001805461135a9061330e565b80601f01602080910402602001604051908101604052809291908181526020018280546113869061330e565b80156113d35780601f106113a8576101008083540402835291602001916113d3565b820191906000526020600020905b8154815290600101906020018083116113b657829003601f168201915b5050505050905084565b336000908152600e602052604090205460ff166113f957600080fd5b60005b815151811015610e51576007548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c291908490811061143d5761143d6134ac565b60200260200101518460200151848151811061145b5761145b6134ac565b602002602001015185604001518581518110611479576114796134ac565b602002602001015186606001518681518110611497576114976134ac565b6020026020010151876080015187815181106114b5576114b56134ac565b60200260200101518860a0015188815181106114d3576114d36134ac565b60200260200101516040518763ffffffff1660e01b81526004016114fc96959493929190613efa565b600060405180830381600087803b15801561151657600080fd5b505af115801561152a573d6000803e3d6000fd5b5050505080611538906134f4565b90506113fc565b611547611fe2565b6000828152600d60205260409081902081516101a081019092528054829060808201908390829082906115799061330e565b80601f01602080910402602001604051908101604052809291908181526020018280546115a59061330e565b80156115f25780601f106115c7576101008083540402835291602001916115f2565b820191906000526020600020905b8154815290600101906020018083116115d557829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561168057602002820191906000526020600020905b81548152602001906001019080831161166c575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156116d857602002820191906000526020600020905b8154815260200190600101908083116116c4575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561177557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161174a575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156117e457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116117b9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561185357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611828575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156118ed576000848152602090819020830180546040805182850281018501909152818152928301828280156118d957602002820191906000526020600020905b8154815260200190600101908083116118c5575b505050505081526020019060010190611881565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156119865760008481526020908190208301805460408051828502810185019091528181529283018282801561197257602002820191906000526020600020905b81548152602001906001019080831161195e575b50505050508152602001906001019061191a565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611a0d57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156119eb576119eb612a7d565b8152602060019283018181049485019490930390920291018084116119cc5790505b505050505081525050815250508152602001600e8201548152602001600f8201548152602001601082018054611a429061330e565b80601f0160208091040260200160405190810160405280929190818152602001828054611a6e9061330e565b8015611abb5780601f10611a9057610100808354040283529160200191611abb565b820191906000526020600020905b815481529060010190602001808311611a9e57829003601f168201915b5050505050815250509050919050565b611ad3611d1f565b47811115611b68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f19350505050611c03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f2077697468647261770000000000006044820152606401611b5f565b50565b6000818152600d6020908152604091829020600301805483518184028101840190945280845260609392830182828015611c5f57602002820191906000526020600020905b815481526020019060010190808311611c4b575b50505050509050919050565b611c73611d1f565b73ffffffffffffffffffffffffffffffffffffffff8116611d16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611b5f565b611c0381611da0565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611b5f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611e50579160200282015b82811115611e50578251825591602001919060010190611e35565b50611e5c929150612010565b5090565b828054828255906000526020600020908101928215611e50579160200282015b82811115611e5057825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611e80565b828054828255906000526020600020908101928215611f27579160200282015b82811115611f275782518051611f17918491602090910190611e15565b5091602001919060010190611efa565b50611e5c929150612025565b82805482825590600052602060002090601f01602090048101928215611e505791602002820160005b83821115611fa857835183826101000a81548160ff02191690836003811115611f8757611f87612a7d565b02179055509260200192600101602081600001049283019260010302611f5c565b8015611fd55782816101000a81549060ff0219169055600101602081600001049283019260010302611fa8565b5050611e5c929150612010565b6040518060800160405280611ff5612042565b81526020016000815260200160008152602001606081525090565b5b80821115611e5c5760008155600101612011565b80821115611e5c57600061203982826120f0565b50600101612025565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016120eb6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5080546000825590600052602060002090810190611c039190612010565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156121605761216061210e565b60405290565b604051610120810167ffffffffffffffff811182821017156121605761216061210e565b604051610160810167ffffffffffffffff811182821017156121605761216061210e565b6040516080810167ffffffffffffffff811182821017156121605761216061210e565b604051601f8201601f1916810167ffffffffffffffff811182821017156121fa576121fa61210e565b604052919050565b600067ffffffffffffffff82111561221c5761221c61210e565b50601f01601f191660200190565b600082601f83011261223b57600080fd5b813561224e61224982612202565b6121d1565b81815284602083860101111561226357600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611c0357600080fd5b80356122ad81612280565b919050565b600067ffffffffffffffff8211156122cc576122cc61210e565b5060051b60200190565b600082601f8301126122e757600080fd5b813560206122f7612249836122b2565b82815260059290921b8401810191818101908684111561231657600080fd5b8286015b84811015612331578035835291830191830161231a565b509695505050505050565b600082601f83011261234d57600080fd5b8135602061235d612249836122b2565b82815260059290921b8401810191818101908684111561237c57600080fd5b8286015b8481101561233157803561239381612280565b8352918301918301612380565b600082601f8301126123b157600080fd5b813560206123c1612249836122b2565b82815260059290921b840181019181810190868411156123e057600080fd5b8286015b8481101561233157803567ffffffffffffffff8111156124045760008081fd5b6124128986838b01016122d6565b8452509183019183016123e4565b60048110611c0357600080fd5b600082601f83011261243e57600080fd5b8135602061244e612249836122b2565b82815260059290921b8401810191818101908684111561246d57600080fd5b8286015b8481101561233157803561248481612420565b8352918301918301612471565b600060c082840312156124a357600080fd5b6124ab61213d565b9050813567ffffffffffffffff808211156124c557600080fd5b6124d18583860161233c565b835260208401359150808211156124e757600080fd5b6124f38583860161233c565b6020840152604084013591508082111561250c57600080fd5b6125188583860161233c565b6040840152606084013591508082111561253157600080fd5b61253d858386016123a0565b6060840152608084013591508082111561255657600080fd5b612562858386016123a0565b608084015260a084013591508082111561257b57600080fd5b506125888482850161242d565b60a08301525092915050565b600061012082840312156125a757600080fd5b6125af612166565b9050813567ffffffffffffffff808211156125c957600080fd5b6125d58583860161222a565b83526125e3602085016122a2565b60208401526125f4604085016122a2565b6040840152606084013591508082111561260d57600080fd5b612619858386016122d6565b6060840152608084013591508082111561263257600080fd5b61263e858386016122d6565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561267757600080fd5b61268386828701612491565b8385015250505092915050565b803563ffffffff811681146122ad57600080fd5b600082601f8301126126b557600080fd5b813560206126c5612249836122b2565b82815260059290921b840181019181810190868411156126e457600080fd5b8286015b84811015612331578035600781106127005760008081fd5b83529183019183016126e8565b803580151581146122ad57600080fd5b6000806040838503121561273057600080fd5b823567ffffffffffffffff8082111561274857600080fd5b90840190610120828703121561275d57600080fd5b612765612166565b82358281111561277457600080fd5b61278088828601612594565b8252506020830135602082015260408301356040820152606083013560608201526127ad60808401612690565b60808201526127be60a08401612690565b60a08201526127cf60c08401612690565b60c082015260e0830135828111156127e657600080fd5b6127f2888286016126a4565b60e083015250610100915061280882840161270d565b9181019190915295602094909401359450505050565b60006020828403121561283057600080fd5b5035919050565b60006020828403121561284957600080fd5b813567ffffffffffffffff8082111561286157600080fd5b90830190610160828603121561287657600080fd5b61287e61218a565b612887836122a2565b8152612895602084016122a2565b60208201526128a6604084016122a2565b60408201526128b7606084016122a2565b60608201526128c8608084016122a2565b60808201526128d960a084016122a2565b60a08201526128ea60c084016122a2565b60c08201526128fb60e084016122a2565b60e082015261010061290e8185016122a2565b90820152610120838101358381111561292657600080fd5b6129328882870161233c565b828401525050610140915061294882840161270d565b91810191909152949350505050565b60005b8381101561297257818101518382015260200161295a565b50506000910152565b60008151808452612993816020860160208601612957565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156129d7578151875295820195908201906001016129bb565b509495945050505050565b600081518084526020808501945080840160005b838110156129d757815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016129f6565b600081518084526020808501808196508360051b8101915082860160005b85811015612a70578284038952612a5e8483516129a7565b98850198935090840190600101612a46565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612abc57612abc612a7d565b9052565b6000815160c08452612ad560c08501826129e2565b905060208084015185830382870152612aee83826129e2565b92505060408401518583036040870152612b0883826129e2565b92505060608401518583036060870152612b228382612a28565b92505060808401518583036080870152612b3c8382612a28565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561233157612b72828651612aac565b938301936001929092019190830190612b5f565b60006101208251818552612b9c8286018261297b565b9150506020830151612bc6602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612bee604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612c0682826129a7565b91505060808301518482036080860152612c2082826129a7565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612c598382612ac0565b9695505050505050565b608081526000612c766080830187612b86565b8560208401528460408401528281036060840152612c94818561297b565b979650505050505050565b600060208284031215612cb157600080fd5b813567ffffffffffffffff811115612cc857600080fd5b612cd484828501612491565b949350505050565b602081526000825160806020840152612cf860a0840182612b86565b905060208401516040840152604084015160608401526060840151601f19848303016080850152612d29828261297b565b95945050505050565b600060208284031215612d4457600080fd5b8135612d4f81612280565b9392505050565b602081526000612d4f60208301846129a7565b602081526000612d4f6020830184612ac0565b600081518084526020808501945080840160005b838110156129d757815160078110612daa57612daa612a7d565b87529582019590820190600101612d90565b6040815260008351610120806040850152612ddb610160850183612b86565b91506020860151606085015260408601516080850152606086015160a08501526080860151612e1260c086018263ffffffff169052565b5060a086015163ffffffff811660e08601525060c0860151610100612e3e8187018363ffffffff169052565b60e088015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08685030183870152612e788483612d7c565b93508088015192505050612e9161014085018215159052565b506020929092019290925292915050565b600082601f830112612eb357600080fd5b8151612ec161224982612202565b818152846020838601011115612ed657600080fd5b612cd4826020830160208701612957565b80516122ad81612280565b600082601f830112612f0357600080fd5b81516020612f13612249836122b2565b82815260059290921b84018101918181019086841115612f3257600080fd5b8286015b848110156123315780518352918301918301612f36565b600082601f830112612f5e57600080fd5b81516020612f6e612249836122b2565b82815260059290921b84018101918181019086841115612f8d57600080fd5b8286015b84811015612331578051612fa481612280565b8352918301918301612f91565b600082601f830112612fc257600080fd5b81516020612fd2612249836122b2565b82815260059290921b84018101918181019086841115612ff157600080fd5b8286015b8481101561233157805167ffffffffffffffff8111156130155760008081fd5b6130238986838b0101612ef2565b845250918301918301612ff5565b600082601f83011261304257600080fd5b81516020613052612249836122b2565b82815260059290921b8401810191818101908684111561307157600080fd5b8286015b8481101561233157805161308881612420565b8352918301918301613075565b600060c082840312156130a757600080fd5b6130af61213d565b9050815167ffffffffffffffff808211156130c957600080fd5b6130d585838601612f4d565b835260208401519150808211156130eb57600080fd5b6130f785838601612f4d565b6020840152604084015191508082111561311057600080fd5b61311c85838601612f4d565b6040840152606084015191508082111561313557600080fd5b61314185838601612fb1565b6060840152608084015191508082111561315a57600080fd5b61316685838601612fb1565b608084015260a084015191508082111561317f57600080fd5b5061258884828501613031565b60006020828403121561319e57600080fd5b815167ffffffffffffffff808211156131b657600080fd5b90830190608082860312156131ca57600080fd5b6131d26121ae565b8251828111156131e157600080fd5b830161012081880312156131f457600080fd5b6131fc612166565b81518481111561320b57600080fd5b61321789828501612ea2565b82525061322660208301612ee7565b602082015261323760408301612ee7565b604082015260608201518481111561324e57600080fd5b61325a89828501612ef2565b60608301525060808201518481111561327257600080fd5b61327e89828501612ef2565b60808301525060a082015160a082015260c082015160c082015260e082015160e082015261010080830151858111156132b657600080fd5b6132c28a828601613095565b828401525050808352505060208301516020820152604083015160408201526060830151828111156132f357600080fd5b6132ff87828601612ea2565b60608301525095945050505050565b600181811c9082168061332257607f821691505b60208210810361335b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156133ab57600081815260208120601f850160051c810160208610156133885750805b601f850160051c820191505b818110156133a757828155600101613394565b5050505b505050565b815167ffffffffffffffff8111156133ca576133ca61210e565b6133de816133d8845461330e565b84613361565b602080601f83116001811461343157600084156133fb5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556133a7565b600085815260208120601f198616915b8281101561346057888601518255948401946001909101908401613441565b508582101561349c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156134ed57600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361354c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600081546135608161330e565b80855260206001838116801561357d57600181146135b5576135e3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b89010195506135e3565b866000528260002060005b858110156135db5781548a82018601529083019084016135c0565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b838110156129d757815487529582019560019182019101613607565b6000815480845260208085019450836000528060002060005b838110156129d757815473ffffffffffffffffffffffffffffffffffffffff168752958201956001918201910161363c565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015612a705782840389526136a884836135ee565b98850198935060019182019101613691565b60c0825260006136cd60c0840183613623565b60016020858303818701526136e483838701613623565b925085830360408701526136fb8360028701613623565b9250606086840381880152613713846003880161366e565b935060808785038189015261372b856004890161366e565b94506005870160a0898703818b015286825461374b818a90815260200190565b600094855260208520995091505b80601f850110156139c857885460ff61377484828416612aac565b613785898501828460081c16612aac565b61379760408501828460101c16612aac565b6137a8888501828460181c16612aac565b6137b887850182848c1c16612aac565b6137c9858501828460281c16612aac565b6137db60c08501828460301c16612aac565b60e06137ee818601838560381c16612aac565b6138016101008601838560401c16612aac565b6138146101208601838560481c16612aac565b6138276101408601838560501c16612aac565b61383a6101608601838560581c16612aac565b61384c610180860183858c1c16612aac565b61385f6101a08601838560681c16612aac565b6138726101c08601838560701c16612aac565b6138856101e08601838560781c16612aac565b613897610200860183858b1c16612aac565b6138aa6102208601838560881c16612aac565b6138bd6102408601838560901c16612aac565b6138d06102608601838560981c16612aac565b6138e261028086018385891c16612aac565b6138f56102a08601838560a81c16612aac565b6139086102c08601838560b01c16612aac565b61391b6102e08601838560b81c16612aac565b61392e6103008601838560c01c16612aac565b6139416103208601838560c81c16612aac565b6139546103408601838560d01c16612aac565b6139676103608601838560d81c16612aac565b61397961038086018385841c16612aac565b5061398d6103a08501828460e81c16612aac565b6139a06103c08501828460f01c16612aac565b506139b26103e084018260f81c612aac565b5097870197928601926104009190910190613759565b975497808410156139e9576139e08260ff8b16612aac565b92870192908601905b80841015613a0a57613a018260ff8b60081c16612aac565b92870192908601905b80841015613a2b57613a228260ff8b60101c16612aac565b92870192908601905b80841015613a4c57613a438260ff8b60181c16612aac565b92870192908601905b80841015613a6c57613a638260ff8b8a1c16612aac565b92870192908601905b80841015613a8d57613a848260ff8b60281c16612aac565b92870192908601905b80841015613aae57613aa58260ff8b60301c16612aac565b92870192908601905b80841015613acf57613ac68260ff8b60381c16612aac565b92870192908601905b80841015613af057613ae78260ff8b60401c16612aac565b92870192908601905b80841015613b1157613b088260ff8b60481c16612aac565b92870192908601905b80841015613b3257613b298260ff8b60501c16612aac565b92870192908601905b80841015613b5357613b4a8260ff8b60581c16612aac565b92870192908601905b80841015613b7357613b6a8260ff8b891c16612aac565b92870192908601905b80841015613b9457613b8b8260ff8b60681c16612aac565b92870192908601905b80841015613bb557613bac8260ff8b60701c16612aac565b92870192908601905b80841015613bd657613bcd8260ff8b60781c16612aac565b92870192908601905b80841015613bf657613bed8260ff8b881c16612aac565b92870192908601905b80841015613c1757613c0e8260ff8b60881c16612aac565b92870192908601905b80841015613c3857613c2f8260ff8b60901c16612aac565b92870192908601905b80841015613c5957613c508260ff8b60981c16612aac565b92870192908601905b80841015613c7957613c708260ff8b861c16612aac565b92870192908601905b80841015613c9a57613c918260ff8b60a81c16612aac565b92870192908601905b80841015613cbb57613cb28260ff8b60b01c16612aac565b92870192908601905b80841015613cdc57613cd38260ff8b60b81c16612aac565b92870192908601905b80841015613cfd57613cf48260ff8b60c01c16612aac565b92870192908601905b80841015613d1e57613d158260ff8b60c81c16612aac565b92870192908601905b80841015613d3f57613d368260ff8b60d01c16612aac565b92870192908601905b80841015613d6057613d578260ff8b60d81c16612aac565b92870192908601905b80841015613d8157613d788260ff8b60e01c16612aac565b92870192908601905b80841015613da257613d998260ff8b60e81c16612aac565b92870192908601905b80841015613dc357613dba8260ff8b60f01c16612aac565b92870192908601905b80841015613ddd57613dd8828a60f81c612aac565b908601905b509a9950505050505050505050565b602081526080602082015260006101208060a0840152613e106101c0840185613553565b600185015473ffffffffffffffffffffffffffffffffffffffff90811660c086015260028601541660e08501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608482038101610100860152613e7682600388016135ee565b9150808583030183860152613e8e82600488016135ee565b925060058601546101408601526006860154610160860152600786015461018086015280858403016101a08601525050613ecb81600886016136ba565b9050600e8401546040840152600f8401546060840152601f19838203016080840152612cd48160108601613553565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c06060830152613f3b60c08301866129a7565b8281036080840152613f4d81866129a7565b915050612c9460a0830184612aac56fea2646970667358221220111e25ba5607bf4b2886f8e640203d6515f121409b8e319fd706af3bb732ac3f64736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
