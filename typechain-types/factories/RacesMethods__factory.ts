/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162003226380380620032268339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6129e580620008416000396000f3fe6080604052600436106100c75760003560e01c80639ad2e2b011610074578063d8de65871161004e578063d8de658714610242578063e200c857146102ea578063f2fde38b1461031757600080fd5b80639ad2e2b0146101de578063af640d0f146101f1578063b7dda85e1461021557600080fd5b80637bbc469e116100a55780637bbc469e146101595780638da5cb5b1461018957806393de70e8146101be57600080fd5b80635b19e294146100cc57806365913d7714610122578063715018a614610144575b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611b46565b610337565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561012e57600080fd5b5061014261013d3660046120c6565b61037d565b005b34801561015057600080fd5b506101426105a2565b34801561016557600080fd5b506101796101743660046121c9565b6105b6565b6040516101199493929190612529565b34801561019557600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b3480156101ca57600080fd5b506101426101d9366004612678565b610b2a565b6101426101ec366004612785565b610c4c565b3480156101fd57600080fd5b5061020760025481565b604051908152602001610119565b34801561022157600080fd5b506102356102303660046121c9565b610e5f565b60405161011991906127c2565b34801561024e57600080fd5b50600454600554600654600754600854600954600a546102949673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610119565b3480156102f657600080fd5b5061030a6103053660046121c9565b6113eb565b6040516101199190612836565b34801561032357600080fd5b50610142610332366004612850565b611450565b6001602052816000526040600020818154811061035357600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6000805b3360009081526001602052604090205481101561043a57336000908152600160205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106103de576103de61286b565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361042a57600191505b6104338161289a565b9050610381565b508061044557600080fd5b826002547f47f7986237041bdc83e87c72847c74f0009ce4afeb78edcf0e7296d1ad5201e66040518060800160405280604051806101200160405280886000015160000151815260200188600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200188600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200188600001516060015181526020018860000151608001518152602001886000015160a001518152602001886000015160c001518152602001886000015160e001518152602001886000015161010001518152508152602001878152602001600081526020016040518060400160405280600481526020017f307830300000000000000000000000000000000000000000000000000000000081525081525060405161058291906127c2565b60405180910390a36002600081546105999061289a565b90915550505050565b6105aa611509565b6105b4600061158a565b565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546105ea906128f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610616906128f9565b80156106635780601f1061063857610100808354040283529160200191610663565b820191906000526020600020905b81548152906001019060200180831161064657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156106f157602002820191906000526020600020905b8154815260200190600101908083116106dd575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561074957602002820191906000526020600020905b815481526020019060010190808311610735575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156107e657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107bb575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561085557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161082a575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156108c457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610899575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561095e5760008481526020908190208301805460408051828502810185019091528181529283018282801561094a57602002820191906000526020600020905b815481526020019060010190808311610936575b5050505050815260200190600101906108f2565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109f7576000848152602090819020830180546040805182850281018501909152818152928301828280156109e357602002820191906000526020600020905b8154815260200190600101908083116109cf575b50505050508152602001906001019061098b565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a7e57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610a5c57610a5c61231c565b815260206001928301818104948501949093039092029101808411610a3d5790505b505050505081525050815250509080600e01549080600f015490806010018054610aa7906128f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad3906128f9565b8015610b205780601f10610af557610100808354040283529160200191610b20565b820191906000526020600020905b815481529060010190602001808311610b0357829003601f168201915b5050505050905084565b610b32611509565b805180518291600391610b4c918391602090910190611860565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610c3592600885019201906118ea565b50508151610100830151610c4992506115ff565b50565b6000805b33600090815260016020526040902054811015610d0957336000908152600160205260408120805491357fffffffff00000000000000000000000000000000000000000000000000000000169183908110610cad57610cad61286b565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610cf957600191505b610d028161289a565b9050610c50565b5080610d1457600080fd5b60005b825151811015610e5a576007548351805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c2919084908110610d5857610d5861286b565b602002602001015185602001518481518110610d7657610d7661286b565b602002602001015186604001518581518110610d9457610d9461286b565b602002602001015187606001518681518110610db257610db261286b565b602002602001015188608001518781518110610dd057610dd061286b565b60200260200101518960a001518881518110610dee57610dee61286b565b60200260200101516040518763ffffffff1660e01b8152600401610e179695949392919061294c565b600060405180830381600087803b158015610e3157600080fd5b505af1158015610e45573d6000803e3d6000fd5b5050505080610e539061289a565b9050610d17565b505050565b610e67611943565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610e99906128f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec5906128f9565b8015610f125780601f10610ee757610100808354040283529160200191610f12565b820191906000526020600020905b815481529060010190602001808311610ef557829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610fa057602002820191906000526020600020905b815481526020019060010190808311610f8c575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ff857602002820191906000526020600020905b815481526020019060010190808311610fe4575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561109557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161106a575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561110457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110d9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561117357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611148575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561120d576000848152602090819020830180546040805182850281018501909152818152928301828280156111f957602002820191906000526020600020905b8154815260200190600101908083116111e5575b5050505050815260200190600101906111a1565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112a65760008481526020908190208301805460408051828502810185019091528181529283018282801561129257602002820191906000526020600020905b81548152602001906001019080831161127e575b50505050508152602001906001019061123a565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561132d57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561130b5761130b61231c565b8152602060019283018181049485019490930390920291018084116112ec5790505b505050505081525050815250508152602001600e8201548152602001600f8201548152602001601082018054611362906128f9565b80601f016020809104026020016040519081016040528092919081815260200182805461138e906128f9565b80156113db5780601f106113b0576101008083540402835291602001916113db565b820191906000526020600020905b8154815290600101906020018083116113be57829003601f168201915b5050505050815250509050919050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561144457602002820191906000526020600020905b815481526020019060010190808311611430575b50505050509050919050565b611458611509565b73ffffffffffffffffffffffffffffffffffffffff8116611500576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610c498161158a565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114f7565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461160d57600080fd5b60005b8251811015610e5a5760005b82828151811061162e5761162e61286b565b60200260200101515181101561184f57600160008584815181106116545761165461286b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061177257600160008584815181106116b6576116b661286b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061170a5761170a61286b565b602002602001015182815181106117235761172361286b565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c9190910291909117905561183f565b8282815181106117845761178461286b565b6020026020010151818151811061179d5761179d61286b565b6020026020010151600160008685815181106117bb576117bb61286b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061180e5761180e61286b565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b6118488161289a565b905061161c565b506118598161289a565b9050611610565b8280548282559060005260206000209081019282156118da579160200282015b828111156118da57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611880565b506118e6929150611971565b5090565b828054828255906000526020600020908101928215611937579160200282015b828111156119375782518051611927918491602090910190611986565b509160200191906001019061190a565b506118e6929150611a2d565b6040518060800160405280611956611a4a565b81526020016000815260200160008152602001606081525090565b5b808211156118e65760008155600101611972565b828054828255906000526020600020906007016008900481019282156118da5791602002820160005b838211156119f057835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026119af565b8015611a205782816101000a81549063ffffffff02191690556004016020816003010492830192600103026119f0565b50506118e6929150611971565b808211156118e6576000611a418282611af8565b50600101611a2d565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001611af36040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b508054600082556007016008900490600052602060002090810190610c499190611971565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b4157600080fd5b919050565b60008060408385031215611b5957600080fd5b611b6283611b1d565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611bc257611bc2611b70565b60405290565b604051610120810167ffffffffffffffff81118282101715611bc257611bc2611b70565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c3357611c33611b70565b604052919050565b600082601f830112611c4c57600080fd5b813567ffffffffffffffff811115611c6657611c66611b70565b611c9760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611bec565b818152846020838601011115611cac57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611ce357611ce3611b70565b5060051b60200190565b600082601f830112611cfe57600080fd5b81356020611d13611d0e83611cc9565b611bec565b82815260059290921b84018101918181019086841115611d3257600080fd5b8286015b84811015611d4d5780358352918301918301611d36565b509695505050505050565b600082601f830112611d6957600080fd5b81356020611d79611d0e83611cc9565b82815260059290921b84018101918181019086841115611d9857600080fd5b8286015b84811015611d4d57611dad81611b1d565b8352918301918301611d9c565b600082601f830112611dcb57600080fd5b81356020611ddb611d0e83611cc9565b82815260059290921b84018101918181019086841115611dfa57600080fd5b8286015b84811015611d4d57803567ffffffffffffffff811115611e1e5760008081fd5b611e2c8986838b0101611ced565b845250918301918301611dfe565b600082601f830112611e4b57600080fd5b81356020611e5b611d0e83611cc9565b82815260059290921b84018101918181019086841115611e7a57600080fd5b8286015b84811015611d4d57803560048110611e965760008081fd5b8352918301918301611e7e565b600060c08284031215611eb557600080fd5b611ebd611b9f565b9050813567ffffffffffffffff80821115611ed757600080fd5b611ee385838601611d58565b83526020840135915080821115611ef957600080fd5b611f0585838601611d58565b60208401526040840135915080821115611f1e57600080fd5b611f2a85838601611d58565b60408401526060840135915080821115611f4357600080fd5b611f4f85838601611dba565b60608401526080840135915080821115611f6857600080fd5b611f7485838601611dba565b608084015260a0840135915080821115611f8d57600080fd5b50611f9a84828501611e3a565b60a08301525092915050565b60006101208284031215611fb957600080fd5b611fc1611bc8565b9050813567ffffffffffffffff80821115611fdb57600080fd5b611fe785838601611c3b565b8352611ff560208501611b1d565b602084015261200660408501611b1d565b6040840152606084013591508082111561201f57600080fd5b61202b85838601611ced565b6060840152608084013591508082111561204457600080fd5b61205085838601611ced565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561208957600080fd5b61209586828701611ea3565b8385015250505092915050565b803563ffffffff81168114611b4157600080fd5b80358015158114611b4157600080fd5b600080604083850312156120d957600080fd5b82359150602083013567ffffffffffffffff808211156120f857600080fd5b90840190610120828703121561210d57600080fd5b612115611bc8565b82358281111561212457600080fd5b61213088828601611fa6565b82525060208301358281111561214557600080fd5b61215188828601611ced565b60208301525060408301356040820152606083013560608201526080830135608082015261218160a084016120a2565b60a082015261219260c084016120a2565b60c08201526121a360e084016120a2565b60e082015261010091506121b88284016120b6565b828201528093505050509250929050565b6000602082840312156121db57600080fd5b5035919050565b6000815180845260005b81811015612208576020818501810151868301820152016121ec565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156122765781518752958201959082019060010161225a565b509495945050505050565b600081518084526020808501945080840160005b8381101561227657815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612295565b600081518084526020808501808196508360051b8101915082860160005b8581101561230f5782840389526122fd848351612246565b988501989350908401906001016122e5565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612382577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261239b60c0850182612281565b9050602080840151858303828701526123b48382612281565b925050604084015185830360408701526123ce8382612281565b925050606084015185830360608701526123e883826122c7565b9250506080840151858303608087015261240283826122c7565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611d4d5761243882865161234b565b938301936001929092019190830190612425565b60006101208251818552612462828601826121e2565b915050602083015161248c602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516124b4604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526124cc8282612246565b915050608083015184820360808601526124e68282612246565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261251f8382612386565b9695505050505050565b60808152600061253c608083018761244c565b856020840152846040840152828103606084015261255a81856121e2565b979650505050505050565b600082601f83011261257657600080fd5b81356020612586611d0e83611cc9565b828152600592831b85018201928282019190878511156125a557600080fd5b8387015b8581101561266b57803567ffffffffffffffff8111156125c95760008081fd5b8801603f81018a136125db5760008081fd5b8581013560406125ed611d0e83611cc9565b82815291851b8301810191888101908d84111561260a5760008081fd5b938201935b8385101561265a57843592507fffffffff000000000000000000000000000000000000000000000000000000008316831461264a5760008081fd5b828252938901939089019061260f565b8852505050938501935084016125a9565b5090979650505050505050565b60006020828403121561268a57600080fd5b813567ffffffffffffffff808211156126a257600080fd5b9083019061012082860312156126b757600080fd5b6126bf611bc8565b8235828111156126ce57600080fd5b6126da87828601611d58565b8252506126e960208401611b1d565b60208201526126fa60408401611b1d565b604082015261270b60608401611b1d565b606082015261271c60808401611b1d565b608082015261272d60a08401611b1d565b60a082015261273e60c08401611b1d565b60c082015261274f60e08401611b1d565b60e0820152610100808401358381111561276857600080fd5b61277488828701612565565b918301919091525095945050505050565b60006020828403121561279757600080fd5b813567ffffffffffffffff8111156127ae57600080fd5b6127ba84828501611ea3565b949350505050565b6020815260008251608060208401526127de60a084018261244c565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301608085015261282d82826121e2565b95945050505050565b6020815260006128496020830184612246565b9392505050565b60006020828403121561286257600080fd5b61284982611b1d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061290d57607f821691505b602082108103612946577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261298d60c0830186612246565b828103608084015261299f8186612246565b91505061255a60a083018461234b56fea2646970667358221220526702f7c2850726350fe7409a6cae7566dac6e4ca7ed3c392991440e6cceb1264736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
