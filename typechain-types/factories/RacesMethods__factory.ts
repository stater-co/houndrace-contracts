/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002964380380620029648339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b61247480620004f06000396000f3fe6080604052600436106100c75760003560e01c8063b8f1835911610074578063e200c8571161004e578063e200c857146102bc578063f2fde38b146102e9578063fcf696351461030957600080fd5b8063b8f18359146101b4578063d63a8e11146101d4578063d8de65871461021457600080fd5b80639ad2e2b0116100a55780639ad2e2b014610150578063af640d0f14610163578063b7dda85e1461018757600080fd5b8063715018a6146100cc5780637bbc469e146100e35780638da5cb5b1461011b575b600080fd5b3480156100d857600080fd5b506100e1610329565b005b3480156100ef57600080fd5b506101036100fe366004611673565b61033d565b604051610112939291906119ff565b60405180910390f35b34801561012757600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610112565b6100e161015e366004611e14565b6108ab565b34801561016f57600080fd5b5061017960015481565b604051908152602001610112565b34801561019357600080fd5b506101a76101a2366004611673565b610a11565b6040516101129190611e51565b3480156101c057600080fd5b506100e16101cf366004611ebb565b610f93565b3480156101e057600080fd5b506102046101ef366004611fa0565b600b6020526000908152604090205460ff1681565b6040519015158152602001610112565b34801561022057600080fd5b506002546003546004546005546006546007546008546102669673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610112565b3480156102c857600080fd5b506102dc6102d7366004611673565b611177565b6040516101129190611fc2565b3480156102f557600080fd5b506100e1610304366004611fa0565b6111dc565b34801561031557600080fd5b506100e16103243660046121ec565b611298565b610331611409565b61033b600061148a565b565b600a6020528060005260406000206000915090508060000160405180610120016040529081600082018054610371906122ef565b80601f016020809104026020016040519081016040528092919081815260200182805461039d906122ef565b80156103ea5780601f106103bf576101008083540402835291602001916103ea565b820191906000526020600020905b8154815290600101906020018083116103cd57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561047857602002820191906000526020600020905b815481526020019060010190808311610464575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104d057602002820191906000526020600020905b8154815260200190600101908083116104bc575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561056d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610542575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105dc57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105b1575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561064b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610620575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106e5576000848152602090819020830180546040805182850281018501909152818152928301828280156106d157602002820191906000526020600020905b8154815260200190600101908083116106bd575b505050505081526020019060010190610679565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561077e5760008481526020908190208301805460408051828502810185019091528181529283018282801561076a57602002820191906000526020600020905b815481526020019060010190808311610756575b505050505081526020019060010190610712565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561080557602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107e3576107e36117e7565b8152602060019283018181049485019490930390920291018084116107c45790505b505050505081525050815250509080600e01549080600f018054610828906122ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610854906122ef565b80156108a15780601f10610876576101008083540402835291602001916108a1565b820191906000526020600020905b81548152906001019060200180831161088457829003601f168201915b5050505050905083565b336000908152600b602052604090205460ff166108c757600080fd5b60005b815151811015610a0d576005548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c291908490811061090b5761090b612342565b60200260200101518460200151848151811061092957610929612342565b60200260200101518560400151858151811061094757610947612342565b60200260200101518660600151868151811061096557610965612342565b60200260200101518760800151878151811061098357610983612342565b60200260200101518860a0015188815181106109a1576109a1612342565b60200260200101516040518763ffffffff1660e01b81526004016109ca96959493929190612371565b600060405180830381600087803b1580156109e457600080fd5b505af11580156109f8573d6000803e3d6000fd5b5050505080610a06906123df565b90506108ca565b5050565b610a196114ff565b6000828152600a60205260409081902081516101808101909252805482906060820190839082908290610a4b906122ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610a77906122ef565b8015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610b5257602002820191906000526020600020905b815481526020019060010190808311610b3e575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610baa57602002820191906000526020600020905b815481526020019060010190808311610b96575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610c4757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c1c575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610cb657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c8b575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610d2557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610cfa575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610dbf57600084815260209081902083018054604080518285028101850190915281815292830182828015610dab57602002820191906000526020600020905b815481526020019060010190808311610d97575b505050505081526020019060010190610d53565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e5857600084815260209081902083018054604080518285028101850190915281815292830182828015610e4457602002820191906000526020600020905b815481526020019060010190808311610e30575b505050505081526020019060010190610dec565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610edf57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610ebd57610ebd6117e7565b815260206001928301818104948501949093039092029101808411610e9e5790505b505050505081525050815250508152602001600e8201548152602001600f82018054610f0a906122ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610f36906122ef565b8015610f835780601f10610f5857610100808354040283529160200191610f83565b820191906000526020600020905b815481529060010190602001808311610f6657829003601f168201915b5050505050815250509050919050565b610f9b611409565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e08301518051849361107192600992910190611526565b5090505060005b8160e0015151811015610a0d57600b60008360e00151838151811061109f5761109f612342565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e00151848151811061110a5761110a612342565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055611170816123df565b9050611078565b6000818152600a60209081526040918290206003018054835181840281018401909452808452606093928301828280156111d057602002820191906000526020600020905b8154815260200190600101908083116111bc575b50505050509050919050565b6111e4611409565b73ffffffffffffffffffffffffffffffffffffffff811661128c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6112958161148a565b50565b336000908152600b602052604090205460ff166112b457600080fd5b816001547f254f997ecf567568da0357c52a8f8e7efcd4bba9f31a4ab54bb5af465746c8056040518060600160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e0015181526020018760000151610100015181525081526020018681526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040516113ea9190611e51565b60405180910390a3600160008154611401906123df565b909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611283565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180606001604052806115126115b0565b815260200160008152602001606081525090565b8280548282559060005260206000209081019282156115a0579160200282015b828111156115a057825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611546565b506115ac92915061165e565b5090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016116596040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156115ac576000815560010161165f565b60006020828403121561168557600080fd5b5035919050565b6000815180845260005b818110156116b257602081850181015186830182015201611696565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561172057815187529582019590820190600101611704565b509495945050505050565b600081518084526020808501945080840160005b8381101561172057815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161173f565b600082825180855260208086019550808260051b84010181860160005b848110156117da577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189526117c88383516116f0565b9884019892509083019060010161178e565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061184d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261186660c085018261172b565b90506020808401518583038287015261187f838261172b565b92505060408401518583036040870152611899838261172b565b925050606084015185830360608701526118b38382611771565b925050608084015185830360808701526118cd8382611771565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561191757611903828651611816565b9383019360019290920191908301906118f0565b509695505050505050565b600061012082518185526119388286018261168c565b9150506020830151611962602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161198a604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526119a282826116f0565b915050608083015184820360808601526119bc82826116f0565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526119f58382611851565b9695505050505050565b606081526000611a126060830186611922565b84602084015282810360408401526119f5818561168c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611a7c57611a7c611a2a565b60405290565b604051610100810167ffffffffffffffff81118282101715611a7c57611a7c611a2a565b604051610120810167ffffffffffffffff81118282101715611a7c57611a7c611a2a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611b1157611b11611a2a565b604052919050565b600067ffffffffffffffff821115611b3357611b33611a2a565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b6157600080fd5b919050565b600082601f830112611b7757600080fd5b81356020611b8c611b8783611b19565b611aca565b82815260059290921b84018101918181019086841115611bab57600080fd5b8286015b8481101561191757611bc081611b3d565b8352918301918301611baf565b600082601f830112611bde57600080fd5b81356020611bee611b8783611b19565b82815260059290921b84018101918181019086841115611c0d57600080fd5b8286015b848110156119175780358352918301918301611c11565b600082601f830112611c3957600080fd5b81356020611c49611b8783611b19565b82815260059290921b84018101918181019086841115611c6857600080fd5b8286015b8481101561191757803567ffffffffffffffff811115611c8c5760008081fd5b611c9a8986838b0101611bcd565b845250918301918301611c6c565b600082601f830112611cb957600080fd5b81356020611cc9611b8783611b19565b82815260059290921b84018101918181019086841115611ce857600080fd5b8286015b8481101561191757803560048110611d045760008081fd5b8352918301918301611cec565b600060c08284031215611d2357600080fd5b611d2b611a59565b9050813567ffffffffffffffff80821115611d4557600080fd5b611d5185838601611b66565b83526020840135915080821115611d6757600080fd5b611d7385838601611b66565b60208401526040840135915080821115611d8c57600080fd5b611d9885838601611b66565b60408401526060840135915080821115611db157600080fd5b611dbd85838601611c28565b60608401526080840135915080821115611dd657600080fd5b611de285838601611c28565b608084015260a0840135915080821115611dfb57600080fd5b50611e0884828501611ca8565b60a08301525092915050565b600060208284031215611e2657600080fd5b813567ffffffffffffffff811115611e3d57600080fd5b611e4984828501611d11565b949350505050565b602081526000825160606020840152611e6d6080840182611922565b90506020840151604084015260408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611eb2828261168c565b95945050505050565b600060208284031215611ecd57600080fd5b813567ffffffffffffffff80821115611ee557600080fd5b908301906101008286031215611efa57600080fd5b611f02611a82565b611f0b83611b3d565b8152611f1960208401611b3d565b6020820152611f2a60408401611b3d565b6040820152611f3b60608401611b3d565b6060820152611f4c60808401611b3d565b6080820152611f5d60a08401611b3d565b60a0820152611f6e60c08401611b3d565b60c082015260e083013582811115611f8557600080fd5b611f9187828601611b66565b60e08301525095945050505050565b600060208284031215611fb257600080fd5b611fbb82611b3d565b9392505050565b602081526000611fbb60208301846116f0565b600082601f830112611fe657600080fd5b813567ffffffffffffffff81111561200057612000611a2a565b61203160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611aca565b81815284602083860101111561204657600080fd5b816020850160208301376000918101602001919091529392505050565b6000610120828403121561207657600080fd5b61207e611aa6565b9050813567ffffffffffffffff8082111561209857600080fd5b6120a485838601611fd5565b83526120b260208501611b3d565b60208401526120c360408501611b3d565b604084015260608401359150808211156120dc57600080fd5b6120e885838601611bcd565b6060840152608084013591508082111561210157600080fd5b61210d85838601611bcd565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561214657600080fd5b61215286828701611d11565b8385015250505092915050565b803563ffffffff81168114611b6157600080fd5b600082601f83011261218457600080fd5b81356020612194611b8783611b19565b82815260059290921b840181019181810190868411156121b357600080fd5b8286015b84811015611917578035600881106121cf5760008081fd5b83529183019183016121b7565b80358015158114611b6157600080fd5b600080604083850312156121ff57600080fd5b82359150602083013567ffffffffffffffff8082111561221e57600080fd5b90840190610120828703121561223357600080fd5b61223b611aa6565b82358281111561224a57600080fd5b61225688828601612063565b8252506020830135602082015260408301356040820152606083013560608201526122836080840161215f565b608082015261229460a0840161215f565b60a08201526122a560c0840161215f565b60c082015260e0830135828111156122bc57600080fd5b6122c888828601612173565b60e08301525061010091506122de8284016121dc565b828201528093505050509250929050565b600181811c9082168061230357607f821691505b60208210810361233c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c060608301526123b260c08301866116f0565b82810360808401526123c481866116f0565b9150506123d460a0830184611816565b979650505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612437577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212201393d777fad8f2ab7a5ce12863db7afe1951a6da45e9c46e3bee06073bb2ea0364736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
