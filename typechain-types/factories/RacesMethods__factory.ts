/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002b3138038062002b318339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b61264180620004f06000396000f3fe6080604052600436106100dd5760003560e01c8063b7dda85e1161007f578063d8de658711610059578063d8de6587146103e1578063e200c85714610489578063f2fde38b146104b6578063fcf69635146104d657600080fd5b8063b7dda85e14610354578063b8f1835914610381578063d63a8e11146103a157600080fd5b80637bbc469e116100bb5780637bbc469e146102b95780638da5cb5b146102e85780639ad2e2b01461031d578063af640d0f1461033057600080fd5b80632a546a38146100e2578063680adc37146101f1578063715018a6146102a2575b600080fd5b3480156100ee57600080fd5b506101a46100fd366004611840565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600c60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516101e89190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b3480156101fd57600080fd5b5061026e61020c366004611840565b600c6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff958616815293851660208501529184169183019190915290911660608201526080016101e8565b3480156102ae57600080fd5b506102b76104f6565b005b3480156102c557600080fd5b506102d96102d4366004611840565b61050a565b6040516101e893929190611bcc565b3480156102f457600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e8565b6102b761032b366004611fe1565b610a78565b34801561033c57600080fd5b5061034660015481565b6040519081526020016101e8565b34801561036057600080fd5b5061037461036f366004611840565b610bde565b6040516101e8919061201e565b34801561038d57600080fd5b506102b761039c366004612088565b611160565b3480156103ad57600080fd5b506103d16103bc36600461216d565b600b6020526000908152604090205460ff1681565b60405190151581526020016101e8565b3480156103ed57600080fd5b506002546003546004546005546006546007546008546104339673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e0016101e8565b34801561049557600080fd5b506104a96104a4366004611840565b611344565b6040516101e8919061218f565b3480156104c257600080fd5b506102b76104d136600461216d565b6113a9565b3480156104e257600080fd5b506102b76104f13660046123b9565b611465565b6104fe6115d6565b6105086000611657565b565b600a602052806000526040600020600091509050806000016040518061012001604052908160008201805461053e906124bc565b80601f016020809104026020016040519081016040528092919081815260200182805461056a906124bc565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561064557602002820191906000526020600020905b815481526020019060010190808311610631575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561069d57602002820191906000526020600020905b815481526020019060010190808311610689575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561073a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161070f575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156107a957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161077e575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561081857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ed575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108b25760008481526020908190208301805460408051828502810185019091528181529283018282801561089e57602002820191906000526020600020905b81548152602001906001019080831161088a575b505050505081526020019060010190610846565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561094b5760008481526020908190208301805460408051828502810185019091528181529283018282801561093757602002820191906000526020600020905b815481526020019060010190808311610923575b5050505050815260200190600101906108df565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156109d257602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156109b0576109b06119b4565b8152602060019283018181049485019490930390920291018084116109915790505b505050505081525050815250509080600e01549080600f0180546109f5906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a21906124bc565b8015610a6e5780601f10610a4357610100808354040283529160200191610a6e565b820191906000526020600020905b815481529060010190602001808311610a5157829003601f168201915b5050505050905083565b336000908152600b602052604090205460ff16610a9457600080fd5b60005b815151811015610bda576005548251805173ffffffffffffffffffffffffffffffffffffffff9092169163c01f59c2919084908110610ad857610ad861250f565b602002602001015184602001518481518110610af657610af661250f565b602002602001015185604001518581518110610b1457610b1461250f565b602002602001015186606001518681518110610b3257610b3261250f565b602002602001015187608001518781518110610b5057610b5061250f565b60200260200101518860a001518881518110610b6e57610b6e61250f565b60200260200101516040518763ffffffff1660e01b8152600401610b979695949392919061253e565b600060405180830381600087803b158015610bb157600080fd5b505af1158015610bc5573d6000803e3d6000fd5b5050505080610bd3906125ac565b9050610a97565b5050565b610be66116cc565b6000828152600a60205260409081902081516101808101909252805482906060820190839082908290610c18906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610c44906124bc565b8015610c915780601f10610c6657610100808354040283529160200191610c91565b820191906000526020600020905b815481529060010190602001808311610c7457829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610d1f57602002820191906000526020600020905b815481526020019060010190808311610d0b575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610d7757602002820191906000526020600020905b815481526020019060010190808311610d63575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610e1457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610de9575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e8357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e58575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ef257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ec7575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f8c57600084815260209081902083018054604080518285028101850190915281815292830182828015610f7857602002820191906000526020600020905b815481526020019060010190808311610f64575b505050505081526020019060010190610f20565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110255760008481526020908190208301805460408051828502810185019091528181529283018282801561101157602002820191906000526020600020905b815481526020019060010190808311610ffd575b505050505081526020019060010190610fb9565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156110ac57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561108a5761108a6119b4565b81526020600192830181810494850194909303909202910180841161106b5790505b505050505081525050815250508152602001600e8201548152602001600f820180546110d7906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054611103906124bc565b80156111505780601f1061112557610100808354040283529160200191611150565b820191906000526020600020905b81548152906001019060200180831161113357829003601f168201915b5050505050815250509050919050565b6111686115d6565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e08301518051849361123e926009929101906116f3565b5090505060005b8160e0015151811015610bda57600b60008360e00151838151811061126c5761126c61250f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106112d7576112d761250f565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561133d816125ac565b9050611245565b6000818152600a602090815260409182902060030180548351818402810184019094528084526060939283018282801561139d57602002820191906000526020600020905b815481526020019060010190808311611389575b50505050509050919050565b6113b16115d6565b73ffffffffffffffffffffffffffffffffffffffff8116611459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61146281611657565b50565b336000908152600b602052604090205460ff1661148157600080fd5b816001547f254f997ecf567568da0357c52a8f8e7efcd4bba9f31a4ab54bb5af465746c8056040518060600160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e0015181526020018760000151610100015181525081526020018681526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040516115b7919061201e565b60405180910390a36001600081546115ce906125ac565b909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610508576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611450565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180606001604052806116df61177d565b815260200160008152602001606081525090565b82805482825590600052602060002090810192821561176d579160200282015b8281111561176d57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611713565b5061177992915061182b565b5090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016118266040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b80821115611779576000815560010161182c565b60006020828403121561185257600080fd5b5035919050565b6000815180845260005b8181101561187f57602081850181015186830182015201611863565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156118ed578151875295820195908201906001016118d1565b509495945050505050565b600081518084526020808501945080840160005b838110156118ed57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161190c565b600082825180855260208086019550808260051b84010181860160005b848110156119a7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030189526119958383516118bd565b9884019892509083019060010161195b565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611a1a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c08452611a3360c08501826118f8565b905060208084015185830382870152611a4c83826118f8565b92505060408401518583036040870152611a6683826118f8565b92505060608401518583036060870152611a80838261193e565b92505060808401518583036080870152611a9a838261193e565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611ae457611ad08286516119e3565b938301936001929092019190830190611abd565b509695505050505050565b60006101208251818552611b0582860182611859565b9150506020830151611b2f602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611b57604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152611b6f82826118bd565b91505060808301518482036080860152611b8982826118bd565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611bc28382611a1e565b9695505050505050565b606081526000611bdf6060830186611aef565b8460208401528281036040840152611bc28185611859565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611c4957611c49611bf7565b60405290565b604051610100810167ffffffffffffffff81118282101715611c4957611c49611bf7565b604051610120810167ffffffffffffffff81118282101715611c4957611c49611bf7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611cde57611cde611bf7565b604052919050565b600067ffffffffffffffff821115611d0057611d00611bf7565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d2e57600080fd5b919050565b600082601f830112611d4457600080fd5b81356020611d59611d5483611ce6565b611c97565b82815260059290921b84018101918181019086841115611d7857600080fd5b8286015b84811015611ae457611d8d81611d0a565b8352918301918301611d7c565b600082601f830112611dab57600080fd5b81356020611dbb611d5483611ce6565b82815260059290921b84018101918181019086841115611dda57600080fd5b8286015b84811015611ae45780358352918301918301611dde565b600082601f830112611e0657600080fd5b81356020611e16611d5483611ce6565b82815260059290921b84018101918181019086841115611e3557600080fd5b8286015b84811015611ae457803567ffffffffffffffff811115611e595760008081fd5b611e678986838b0101611d9a565b845250918301918301611e39565b600082601f830112611e8657600080fd5b81356020611e96611d5483611ce6565b82815260059290921b84018101918181019086841115611eb557600080fd5b8286015b84811015611ae457803560048110611ed15760008081fd5b8352918301918301611eb9565b600060c08284031215611ef057600080fd5b611ef8611c26565b9050813567ffffffffffffffff80821115611f1257600080fd5b611f1e85838601611d33565b83526020840135915080821115611f3457600080fd5b611f4085838601611d33565b60208401526040840135915080821115611f5957600080fd5b611f6585838601611d33565b60408401526060840135915080821115611f7e57600080fd5b611f8a85838601611df5565b60608401526080840135915080821115611fa357600080fd5b611faf85838601611df5565b608084015260a0840135915080821115611fc857600080fd5b50611fd584828501611e75565b60a08301525092915050565b600060208284031215611ff357600080fd5b813567ffffffffffffffff81111561200a57600080fd5b61201684828501611ede565b949350505050565b60208152600082516060602084015261203a6080840182611aef565b90506020840151604084015260408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301606085015261207f8282611859565b95945050505050565b60006020828403121561209a57600080fd5b813567ffffffffffffffff808211156120b257600080fd5b9083019061010082860312156120c757600080fd5b6120cf611c4f565b6120d883611d0a565b81526120e660208401611d0a565b60208201526120f760408401611d0a565b604082015261210860608401611d0a565b606082015261211960808401611d0a565b608082015261212a60a08401611d0a565b60a082015261213b60c08401611d0a565b60c082015260e08301358281111561215257600080fd5b61215e87828601611d33565b60e08301525095945050505050565b60006020828403121561217f57600080fd5b61218882611d0a565b9392505050565b60208152600061218860208301846118bd565b600082601f8301126121b357600080fd5b813567ffffffffffffffff8111156121cd576121cd611bf7565b6121fe60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611c97565b81815284602083860101111561221357600080fd5b816020850160208301376000918101602001919091529392505050565b6000610120828403121561224357600080fd5b61224b611c73565b9050813567ffffffffffffffff8082111561226557600080fd5b612271858386016121a2565b835261227f60208501611d0a565b602084015261229060408501611d0a565b604084015260608401359150808211156122a957600080fd5b6122b585838601611d9a565b606084015260808401359150808211156122ce57600080fd5b6122da85838601611d9a565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561231357600080fd5b61231f86828701611ede565b8385015250505092915050565b803563ffffffff81168114611d2e57600080fd5b600082601f83011261235157600080fd5b81356020612361611d5483611ce6565b82815260059290921b8401810191818101908684111561238057600080fd5b8286015b84811015611ae45780356008811061239c5760008081fd5b8352918301918301612384565b80358015158114611d2e57600080fd5b600080604083850312156123cc57600080fd5b82359150602083013567ffffffffffffffff808211156123eb57600080fd5b90840190610120828703121561240057600080fd5b612408611c73565b82358281111561241757600080fd5b61242388828601612230565b8252506020830135602082015260408301356040820152606083013560608201526124506080840161232c565b608082015261246160a0840161232c565b60a082015261247260c0840161232c565b60c082015260e08301358281111561248957600080fd5b61249588828601612340565b60e08301525061010091506124ab8284016123a9565b828201528093505050509250929050565b600181811c908216806124d057607f821691505b602082108103612509577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261257f60c08301866118bd565b828103608084015261259181866118bd565b9150506125a160a08301846119e3565b979650505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612604577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e5e706fc33cf182ae9107463f8ea5ae26e6dc45d9a078ffe6f15f5939b70bd2164736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
