/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162006a3638038062006a3683398181016040528101906200003b9190620008cf565b806200005c62000050620003f260201b60201c565b620003fa60201b60201c565b80600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100820151816008019080519060200190620002b6929190620004be565b506101208201518160090160006101000a81548160ff02191690831515021790555090505060005b81610100015151811015620003e957600d600083610100015183815181106200030c576200030b62000920565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d600084610100015184815181106200037c576200037b62000920565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080620003e19062000988565b9050620002de565b505050620009d5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280548282559060005260206000209081019282156200053a579160200282015b82811115620005395782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620004df565b5b5090506200054991906200054d565b5090565b5b80821115620005685760008160009055506001016200054e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005d08262000585565b810181811067ffffffffffffffff82111715620005f257620005f162000596565b5b80604052505050565b6000620006076200056c565b9050620006158282620005c5565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200064c826200061f565b9050919050565b6200065e816200063f565b81146200066a57600080fd5b50565b6000815190506200067e8162000653565b92915050565b600080fd5b600067ffffffffffffffff821115620006a757620006a662000596565b5b602082029050602081019050919050565b600080fd5b6000620006d4620006ce8462000689565b620005fb565b90508083825260208201905060208402830185811115620006fa57620006f9620006b8565b5b835b818110156200072757806200071288826200066d565b845260208401935050602081019050620006fc565b5050509392505050565b600082601f83011262000749576200074862000684565b5b81516200075b848260208601620006bd565b91505092915050565b60008115159050919050565b6200077b8162000764565b81146200078757600080fd5b50565b6000815190506200079b8162000770565b92915050565b60006101408284031215620007bb57620007ba62000580565b5b620007c8610140620005fb565b90506000620007da848285016200066d565b6000830152506020620007f0848285016200066d565b602083015250604062000806848285016200066d565b60408301525060606200081c848285016200066d565b606083015250608062000832848285016200066d565b60808301525060a062000848848285016200066d565b60a08301525060c06200085e848285016200066d565b60c08301525060e062000874848285016200066d565b60e08301525061010082015167ffffffffffffffff8111156200089c576200089b6200061a565b5b620008aa8482850162000731565b61010083015250610120620008c2848285016200078a565b6101208301525092915050565b600060208284031215620008e857620008e762000576565b5b600082015167ffffffffffffffff8111156200090957620009086200057b565b5b6200091784828501620007a1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000995826200097e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620009ca57620009c96200094f565b5b600182019050919050565b61605180620009e56000396000f3fe6080604052600436106100e85760003560e01c8063af640d0f1161008a578063d8de658711610059578063d8de6587146102ff578063e115234314610332578063e200c8571461035b578063f2fde38b14610398576100e8565b8063af640d0f14610231578063b7dda85e1461025c578063d347c56f14610299578063d63a8e11146102c2576100e8565b8063715018a6116100c6578063715018a6146101935780637bbc469e146101aa5780638da5cb5b146101ea5780639ad2e2b014610215576100e8565b806326e42cf4146100ed5780632a546a3814610116578063680adc3714610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190612872565b6103c1565b005b34801561012257600080fd5b5061013d600480360381019061013891906128f1565b61074e565b60405161014a9190612996565b60405180910390f35b34801561015f57600080fd5b5061017a600480360381019061017591906128f1565b610843565b60405161018a94939291906129c0565b60405180910390f35b34801561019f57600080fd5b506101a86108c3565b005b3480156101b657600080fd5b506101d160048036038101906101cc91906128f1565b6108d7565b6040516101e19493929190612fd2565b60405180910390f35b3480156101f657600080fd5b506101ff610f2f565b60405161020c9190613034565b60405180910390f35b61022f600480360381019061022a9190613423565b610f58565b005b34801561023d57600080fd5b50610246611121565b604051610253919061346c565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e91906128f1565b611127565b6040516102909190613615565b60405180910390f35b3480156102a557600080fd5b506102c060048036038101906102bb9190613a62565b6117a4565b005b3480156102ce57600080fd5b506102e960048036038101906102e49190613abe565b611d62565b6040516102f69190613afa565b60405180910390f35b34801561030b57600080fd5b50610314611d82565b60405161032999989796959493929190613b15565b60405180910390f35b34801561033e57600080fd5b50610359600480360381019061035491906128f1565b611ecb565b005b34801561036757600080fd5b50610382600480360381019061037d91906128f1565b611f94565b60405161038f9190613c11565b60405180910390f35b3480156103a457600080fd5b506103bf60048036038101906103ba9190613abe565b612005565b005b6103c9612088565b80600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080190805190602001906106219291906121d2565b506101208201518160090160006101000a81548160ff02191690831515021790555090505060005b8161010001515181101561074a57600d6000836101000151838151811061067357610672613c33565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d600084610100015184815181106106e0576106df613c33565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508061074390613c91565b9050610649565b5050565b61075661225c565b600e60008381526020019081526020016000206040518060800160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160189054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050919050565b600e6020528060005260406000206000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16908060000160109054906101000a900467ffffffffffffffff16908060000160189054906101000a900467ffffffffffffffff16905084565b6108cb612088565b6108d56000612106565b565b600c602052806000526040600020600091509050806000016040518061012001604052908160008201805461090b90613d08565b80601f016020809104026020016040519081016040528092919081815260200182805461093790613d08565b80156109845780601f1061095957610100808354040283529160200191610984565b820191906000526020600020905b81548152906001019060200180831161096757829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805480602002602001604051908101604052809291908181526020018280548015610a8857602002820191906000526020600020905b815481526020019060010190808311610a74575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ae057602002820191906000526020600020905b815481526020019060010190808311610acc575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610b9c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b52575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610c2a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610be0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610cb857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c6e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d5857838290600052602060002001805480602002602001604051908101604052809291908181526020018280548015610d4457602002820191906000526020600020905b815481526020019060010190808311610d30575b505050505081526020019060010190610ce6565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610df757838290600052602060002001805480602002602001604051908101604052809291908181526020018280548015610de357602002820191906000526020600020905b815481526020019060010190808311610dcf575b505050505081526020019060010190610d85565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e8357602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610e5d57610e5c612cee565b5b81526020019060010190602082600001049283019260010382029150808411610e3d5790505b505050505081525050815250509080600e01549080600f015490806010018054610eac90613d08565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed890613d08565b8015610f255780601f10610efa57610100808354040283529160200191610f25565b820191906000526020600020905b815481529060010190602001808311610f0857829003601f168201915b5050505050905084565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610fae57600080fd5b60005b81600001515181101561111d57600260050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c01f59c28360000151838151811061101657611015613c33565b5b60200260200101518460200151848151811061103557611034613c33565b5b60200260200101518560400151858151811061105457611053613c33565b5b60200260200101518660600151868151811061107357611072613c33565b5b60200260200101518760800151878151811061109257611091613c33565b5b60200260200101518860a0015188815181106110b1576110b0613c33565b5b60200260200101516040518763ffffffff1660e01b81526004016110da96959493929190613d48565b600060405180830381600087803b1580156110f457600080fd5b505af1158015611108573d6000803e3d6000fd5b505050508061111690613c91565b9050610fb1565b5050565b60015481565b61112f6122ac565b600c6000838152602001908152602001600020604051806080016040529081600082016040518061012001604052908160008201805461116e90613d08565b80601f016020809104026020016040519081016040528092919081815260200182805461119a90613d08565b80156111e75780601f106111bc576101008083540402835291602001916111e7565b820191906000526020600020905b8154815290600101906020018083116111ca57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054806020026020016040519081016040528092919081815260200182805480156112eb57602002820191906000526020600020905b8154815260200190600101908083116112d7575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561134357602002820191906000526020600020905b81548152602001906001019080831161132f575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156113ff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113b5575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561148d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611443575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561151b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114d1575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115bb578382906000526020600020018054806020026020016040519081016040528092919081815260200182805480156115a757602002820191906000526020600020905b815481526020019060010190808311611593575b505050505081526020019060010190611549565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561165a5783829060005260206000200180548060200260200160405190810160405280929190818152602001828054801561164657602002820191906000526020600020905b815481526020019060010190808311611632575b5050505050815260200190600101906115e8565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156116e657602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156116c0576116bf612cee565b5b815260200190600101906020826000010492830192600103820291508084116116a05790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461171b90613d08565b80601f016020809104026020016040519081016040528092919081815260200182805461174790613d08565b80156117945780601f1061176957610100808354040283529160200191611794565b820191906000526020600020905b81548152906001019060200180831161177757829003601f168201915b5050505050815250509050919050565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166117fa57600080fd5b600260090160009054906101000a900460ff1615611c0457600260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636774da7c83836040518363ffffffff1660e01b8152600401611872929190613f72565b600060405180830381865afa15801561188f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118b891906146b4565b600c6000600154815260200190815260200160002060008201518160000160008201518160000190816118eb91906148a9565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190805190602001906119969291906122da565b5060808201518160040190805190602001906119b39291906122da565b5060a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160008201518160000190805190602001906119f89291906121d2565b506020820151816001019080519060200190611a159291906121d2565b506040820151816002019080519060200190611a329291906121d2565b506060820151816003019080519060200190611a4f929190612327565b506080820151816004019080519060200190611a6c929190612327565b5060a0820151816005019080519060200190611a89929190612387565b5050505050602082015181600e0155604082015181600f01556060820151816010019081611ab791906149d6565b5090505060005b82600001516060015151811015611bb05760006002800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663894f39fc8560000151606001518481518110611b2c57611b2b613c33565b5b6020026020010151856040518363ffffffff1660e01b8152600401611b52929190614aa8565b6020604051808303816000875af1158015611b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b959190614ad1565b03611b9f57600080fd5b80611ba990613c91565b9050611abe565b506001547fdedecc3fdb81c5eaa1570cb83b67c14819a52dc0478ad2291a09b89d07260b25600c60006001548152602001908152602001600020604051611bf79190615dec565b60405180910390a2611d48565b6001547fc33adc8129e8ae5904a7cb60d574e6e22a524b9eabeee4db78c5f6fae67e4eed6040518060800160405280604051806101200160405280876000015160000151815260200187600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516040015173ffffffffffffffffffffffffffffffffffffffff16815260200187600001516060015181526020018760000151608001518152602001876000015160a001518152602001876000015160c001518152602001876000015160e0015181526020018760000151610100015181525081526020014281526020018481526020016040518060400160405280600481526020017f3078303000000000000000000000000000000000000000000000000000000000815250815250604051611d3f9190613615565b60405180910390a25b600160008154611d5790613c91565b919050819055505050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090160009054906101000a900460ff16905089565b611ed3612088565b47811115611f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0d90615e91565b60405180910390fd5b611f1e610f2f565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050611f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8890615efd565b60405180910390fd5b50565b6060600c6000838152602001908152602001600020600001600301805480602002602001604051908101604052809291908181526020018280548015611ff957602002820191906000526020600020905b815481526020019060010190808311611fe5575b50505050509050919050565b61200d612088565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361207c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207390615f8f565b60405180910390fd5b61208581612106565b50565b6120906121ca565b73ffffffffffffffffffffffffffffffffffffffff166120ae610f2f565b73ffffffffffffffffffffffffffffffffffffffff1614612104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fb90615ffb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805482825590600052602060002090810192821561224b579160200282015b8281111561224a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906121f2565b5b509050612258919061243d565b5090565b6040518060800160405280600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b60405180608001604052806122bf61245a565b81526020016000815260200160008152602001606081525090565b828054828255906000526020600020908101928215612316579160200282015b828111156123155782518255916020019190600101906122fa565b5b509050612323919061243d565b5090565b828054828255906000526020600020908101928215612376579160200282015b828111156123755782518290805190602001906123659291906122da565b5091602001919060010190612347565b5b50905061238391906124d8565b5090565b82805482825590600052602060002090601f0160209004810192821561242c5791602002820160005b838211156123fd57835183826101000a81548160ff021916908360038111156123dc576123db612cee565b5b021790555092602001926001016020816000010492830192600103026123b0565b801561242a5782816101000a81549060ff02191690556001016020816000010492830192600103026123fd565b505b509050612439919061243d565b5090565b5b8082111561245657600081600090555060010161243e565b5090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016124d26124fc565b81525090565b5b808211156124f857600081816124ef9190612532565b506001016124d9565b5090565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5080546000825590600052602060002090810190612550919061243d565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125b58261256c565b810181811067ffffffffffffffff821117156125d4576125d361257d565b5b80604052505050565b60006125e7612553565b90506125f382826125ac565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612628826125fd565b9050919050565b6126388161261d565b811461264357600080fd5b50565b6000813590506126558161262f565b92915050565b600080fd5b600067ffffffffffffffff82111561267b5761267a61257d565b5b602082029050602081019050919050565b600080fd5b60006126a461269f84612660565b6125dd565b905080838252602082019050602084028301858111156126c7576126c661268c565b5b835b818110156126f057806126dc8882612646565b8452602084019350506020810190506126c9565b5050509392505050565b600082601f83011261270f5761270e61265b565b5b813561271f848260208601612691565b91505092915050565b60008115159050919050565b61273d81612728565b811461274857600080fd5b50565b60008135905061275a81612734565b92915050565b6000610140828403121561277757612776612567565b5b6127826101406125dd565b9050600061279284828501612646565b60008301525060206127a684828501612646565b60208301525060406127ba84828501612646565b60408301525060606127ce84828501612646565b60608301525060806127e284828501612646565b60808301525060a06127f684828501612646565b60a08301525060c061280a84828501612646565b60c08301525060e061281e84828501612646565b60e08301525061010082013567ffffffffffffffff811115612843576128426125f8565b5b61284f848285016126fa565b610100830152506101206128658482850161274b565b6101208301525092915050565b6000602082840312156128885761288761255d565b5b600082013567ffffffffffffffff8111156128a6576128a5612562565b5b6128b284828501612760565b91505092915050565b6000819050919050565b6128ce816128bb565b81146128d957600080fd5b50565b6000813590506128eb816128c5565b92915050565b6000602082840312156129075761290661255d565b5b6000612915848285016128dc565b91505092915050565b600067ffffffffffffffff82169050919050565b61293b8161291e565b82525050565b6080820160008201516129576000850182612932565b50602082015161296a6020850182612932565b50604082015161297d6040850182612932565b5060608201516129906060850182612932565b50505050565b60006080820190506129ab6000830184612941565b92915050565b6129ba8161291e565b82525050565b60006080820190506129d560008301876129b1565b6129e260208301866129b1565b6129ef60408301856129b1565b6129fc60608301846129b1565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a3f578082015181840152602081019050612a24565b60008484015250505050565b6000612a5682612a05565b612a608185612a10565b9350612a70818560208601612a21565b612a798161256c565b840191505092915050565b612a8d8161261d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612ac8816128bb565b82525050565b6000612ada8383612abf565b60208301905092915050565b6000602082019050919050565b6000612afe82612a93565b612b088185612a9e565b9350612b1383612aaf565b8060005b83811015612b44578151612b2b8882612ace565b9750612b3683612ae6565b925050600181019050612b17565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612b898383612a84565b60208301905092915050565b6000602082019050919050565b6000612bad82612b51565b612bb78185612b5c565b9350612bc283612b6d565b8060005b83811015612bf3578151612bda8882612b7d565b9750612be583612b95565b925050600181019050612bc6565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612c388383612af3565b905092915050565b6000602082019050919050565b6000612c5882612c00565b612c628185612c0b565b935083602082028501612c7485612c1c565b8060005b85811015612cb05784840389528151612c918582612c2c565b9450612c9c83612c40565b925060208a01995050600181019050612c78565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612d2e57612d2d612cee565b5b50565b6000819050612d3f82612d1d565b919050565b6000612d4f82612d31565b9050919050565b612d5f81612d44565b82525050565b6000612d718383612d56565b60208301905092915050565b6000602082019050919050565b6000612d9582612cc2565b612d9f8185612ccd565b9350612daa83612cde565b8060005b83811015612ddb578151612dc28882612d65565b9750612dcd83612d7d565b925050600181019050612dae565b5085935050505092915050565b600060c0830160008301518482036000860152612e058282612ba2565b91505060208301518482036020860152612e1f8282612ba2565b91505060408301518482036040860152612e398282612ba2565b91505060608301518482036060860152612e538282612c4d565b91505060808301518482036080860152612e6d8282612c4d565b91505060a083015184820360a0860152612e878282612d8a565b9150508091505092915050565b6000610120830160008301518482036000860152612eb28282612a4b565b9150506020830151612ec76020860182612a84565b506040830151612eda6040860182612a84565b5060608301518482036060860152612ef28282612af3565b91505060808301518482036080860152612f0c8282612af3565b91505060a0830151612f2160a0860182612abf565b5060c0830151612f3460c0860182612abf565b5060e0830151612f4760e0860182612abf565b50610100830151848203610100860152612f618282612de8565b9150508091505092915050565b612f77816128bb565b82525050565b600081519050919050565b600082825260208201905092915050565b6000612fa482612f7d565b612fae8185612f88565b9350612fbe818560208601612a21565b612fc78161256c565b840191505092915050565b60006080820190508181036000830152612fec8187612e94565b9050612ffb6020830186612f6e565b6130086040830185612f6e565b818103606083015261301a8184612f99565b905095945050505050565b61302e8161261d565b82525050565b60006020820190506130496000830184613025565b92915050565b600067ffffffffffffffff82111561306a5761306961257d565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156130965761309561257d565b5b602082029050602081019050919050565b60006130ba6130b58461307b565b6125dd565b905080838252602082019050602084028301858111156130dd576130dc61268c565b5b835b8181101561310657806130f288826128dc565b8452602084019350506020810190506130df565b5050509392505050565b600082601f8301126131255761312461265b565b5b81356131358482602086016130a7565b91505092915050565b600061315161314c8461304f565b6125dd565b905080838252602082019050602084028301858111156131745761317361268c565b5b835b818110156131bb57803567ffffffffffffffff8111156131995761319861265b565b5b8086016131a68982613110565b85526020850194505050602081019050613176565b5050509392505050565b600082601f8301126131da576131d961265b565b5b81356131ea84826020860161313e565b91505092915050565b600067ffffffffffffffff82111561320e5761320d61257d565b5b602082029050602081019050919050565b6004811061322c57600080fd5b50565b60008135905061323e8161321f565b92915050565b6000613257613252846131f3565b6125dd565b9050808382526020820190506020840283018581111561327a5761327961268c565b5b835b818110156132a3578061328f888261322f565b84526020840193505060208101905061327c565b5050509392505050565b600082601f8301126132c2576132c161265b565b5b81356132d2848260208601613244565b91505092915050565b600060c082840312156132f1576132f0612567565b5b6132fb60c06125dd565b9050600082013567ffffffffffffffff81111561331b5761331a6125f8565b5b613327848285016126fa565b600083015250602082013567ffffffffffffffff81111561334b5761334a6125f8565b5b613357848285016126fa565b602083015250604082013567ffffffffffffffff81111561337b5761337a6125f8565b5b613387848285016126fa565b604083015250606082013567ffffffffffffffff8111156133ab576133aa6125f8565b5b6133b7848285016131c5565b606083015250608082013567ffffffffffffffff8111156133db576133da6125f8565b5b6133e7848285016131c5565b60808301525060a082013567ffffffffffffffff81111561340b5761340a6125f8565b5b613417848285016132ad565b60a08301525092915050565b6000602082840312156134395761343861255d565b5b600082013567ffffffffffffffff81111561345757613456612562565b5b613463848285016132db565b91505092915050565b60006020820190506134816000830184612f6e565b92915050565b60006101208301600083015184820360008601526134a58282612a4b565b91505060208301516134ba6020860182612a84565b5060408301516134cd6040860182612a84565b50606083015184820360608601526134e58282612af3565b915050608083015184820360808601526134ff8282612af3565b91505060a083015161351460a0860182612abf565b5060c083015161352760c0860182612abf565b5060e083015161353a60e0860182612abf565b506101008301518482036101008601526135548282612de8565b9150508091505092915050565b600082825260208201905092915050565b600061357d82612f7d565b6135878185613561565b9350613597818560208601612a21565b6135a08161256c565b840191505092915050565b600060808301600083015184820360008601526135c88282613487565b91505060208301516135dd6020860182612abf565b5060408301516135f06040860182612abf565b50606083015184820360608601526136088282613572565b9150508091505092915050565b6000602082019050818103600083015261362f81846135ab565b905092915050565b600080fd5b600067ffffffffffffffff8211156136575761365661257d565b5b6136608261256c565b9050602081019050919050565b82818337600083830152505050565b600061368f61368a8461363c565b6125dd565b9050828152602081018484840111156136ab576136aa613637565b5b6136b684828561366d565b509392505050565b600082601f8301126136d3576136d261265b565b5b81356136e384826020860161367c565b91505092915050565b6000610120828403121561370357613702612567565b5b61370e6101206125dd565b9050600082013567ffffffffffffffff81111561372e5761372d6125f8565b5b61373a848285016136be565b600083015250602061374e84828501612646565b602083015250604061376284828501612646565b604083015250606082013567ffffffffffffffff811115613786576137856125f8565b5b61379284828501613110565b606083015250608082013567ffffffffffffffff8111156137b6576137b56125f8565b5b6137c284828501613110565b60808301525060a06137d6848285016128dc565b60a08301525060c06137ea848285016128dc565b60c08301525060e06137fe848285016128dc565b60e08301525061010082013567ffffffffffffffff811115613823576138226125f8565b5b61382f848285016132db565b6101008301525092915050565b600063ffffffff82169050919050565b6138558161383c565b811461386057600080fd5b50565b6000813590506138728161384c565b92915050565b600067ffffffffffffffff8211156138935761389261257d565b5b602082029050602081019050919050565b600781106138b157600080fd5b50565b6000813590506138c3816138a4565b92915050565b60006138dc6138d784613878565b6125dd565b905080838252602082019050602084028301858111156138ff576138fe61268c565b5b835b81811015613928578061391488826138b4565b845260208401935050602081019050613901565b5050509392505050565b600082601f8301126139475761394661265b565b5b81356139578482602086016138c9565b91505092915050565b6000610100828403121561397757613976612567565b5b6139826101006125dd565b9050600082013567ffffffffffffffff8111156139a2576139a16125f8565b5b6139ae848285016136ec565b60008301525060206139c2848285016128dc565b60208301525060406139d6848285016128dc565b60408301525060606139ea848285016128dc565b60608301525060806139fe84828501613863565b60808301525060a0613a1284828501613863565b60a08301525060c082013567ffffffffffffffff811115613a3657613a356125f8565b5b613a4284828501613932565b60c08301525060e0613a568482850161274b565b60e08301525092915050565b60008060408385031215613a7957613a7861255d565b5b600083013567ffffffffffffffff811115613a9757613a96612562565b5b613aa385828601613960565b9250506020613ab4858286016128dc565b9150509250929050565b600060208284031215613ad457613ad361255d565b5b6000613ae284828501612646565b91505092915050565b613af481612728565b82525050565b6000602082019050613b0f6000830184613aeb565b92915050565b600061012082019050613b2b600083018c613025565b613b38602083018b613025565b613b45604083018a613025565b613b526060830189613025565b613b5f6080830188613025565b613b6c60a0830187613025565b613b7960c0830186613025565b613b8660e0830185613025565b613b94610100830184613aeb565b9a9950505050505050505050565b600082825260208201905092915050565b6000613bbe82612a93565b613bc88185613ba2565b9350613bd383612aaf565b8060005b83811015613c04578151613beb8882612ace565b9750613bf683612ae6565b925050600181019050613bd7565b5085935050505092915050565b60006020820190508181036000830152613c2b8184613bb3565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613c9c826128bb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613cce57613ccd613c62565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613d2057607f821691505b602082108103613d3357613d32613cd9565b5b50919050565b613d4281612d44565b82525050565b600060c082019050613d5d6000830189613025565b613d6a6020830188613025565b613d776040830187613025565b8181036060830152613d898186613bb3565b90508181036080830152613d9d8185613bb3565b9050613dac60a0830184613d39565b979650505050505050565b613dc08161383c565b82525050565b600081519050919050565b6000819050602082019050919050565b60078110613df257613df1612cee565b5b50565b6000819050613e0382613de1565b919050565b6000613e1382613df5565b9050919050565b613e2381613e08565b82525050565b6000613e358383613e1a565b60208301905092915050565b6000602082019050919050565b6000613e5982613dc6565b613e638185612ccd565b9350613e6e83613dd1565b8060005b83811015613e9f578151613e868882613e29565b9750613e9183613e41565b925050600181019050613e72565b5085935050505092915050565b613eb581612728565b82525050565b6000610100830160008301518482036000860152613ed98282613487565b9150506020830151613eee6020860182612abf565b506040830151613f016040860182612abf565b506060830151613f146060860182612abf565b506080830151613f276080860182613db7565b5060a0830151613f3a60a0860182613db7565b5060c083015184820360c0860152613f528282613e4e565b91505060e0830151613f6760e0860182613eac565b508091505092915050565b60006040820190508181036000830152613f8c8185613ebb565b9050613f9b6020830184612f6e565b9392505050565b6000613fb5613fb08461363c565b6125dd565b905082815260208101848484011115613fd157613fd0613637565b5b613fdc848285612a21565b509392505050565b600082601f830112613ff957613ff861265b565b5b8151614009848260208601613fa2565b91505092915050565b6000815190506140218161262f565b92915050565b600081519050614036816128c5565b92915050565b600061404f61404a8461307b565b6125dd565b905080838252602082019050602084028301858111156140725761407161268c565b5b835b8181101561409b57806140878882614027565b845260208401935050602081019050614074565b5050509392505050565b600082601f8301126140ba576140b961265b565b5b81516140ca84826020860161403c565b91505092915050565b60006140e66140e184612660565b6125dd565b905080838252602082019050602084028301858111156141095761410861268c565b5b835b81811015614132578061411e8882614012565b84526020840193505060208101905061410b565b5050509392505050565b600082601f8301126141515761415061265b565b5b81516141618482602086016140d3565b91505092915050565b600061417d6141788461304f565b6125dd565b905080838252602082019050602084028301858111156141a05761419f61268c565b5b835b818110156141e757805167ffffffffffffffff8111156141c5576141c461265b565b5b8086016141d289826140a5565b855260208501945050506020810190506141a2565b5050509392505050565b600082601f8301126142065761420561265b565b5b815161421684826020860161416a565b91505092915050565b60008151905061422e8161321f565b92915050565b6000614247614242846131f3565b6125dd565b9050808382526020820190506020840283018581111561426a5761426961268c565b5b835b81811015614293578061427f888261421f565b84526020840193505060208101905061426c565b5050509392505050565b600082601f8301126142b2576142b161265b565b5b81516142c2848260208601614234565b91505092915050565b600060c082840312156142e1576142e0612567565b5b6142eb60c06125dd565b9050600082015167ffffffffffffffff81111561430b5761430a6125f8565b5b6143178482850161413c565b600083015250602082015167ffffffffffffffff81111561433b5761433a6125f8565b5b6143478482850161413c565b602083015250604082015167ffffffffffffffff81111561436b5761436a6125f8565b5b6143778482850161413c565b604083015250606082015167ffffffffffffffff81111561439b5761439a6125f8565b5b6143a7848285016141f1565b606083015250608082015167ffffffffffffffff8111156143cb576143ca6125f8565b5b6143d7848285016141f1565b60808301525060a082015167ffffffffffffffff8111156143fb576143fa6125f8565b5b6144078482850161429d565b60a08301525092915050565b6000610120828403121561442a57614429612567565b5b6144356101206125dd565b9050600082015167ffffffffffffffff811115614455576144546125f8565b5b61446184828501613fe4565b600083015250602061447584828501614012565b602083015250604061448984828501614012565b604083015250606082015167ffffffffffffffff8111156144ad576144ac6125f8565b5b6144b9848285016140a5565b606083015250608082015167ffffffffffffffff8111156144dd576144dc6125f8565b5b6144e9848285016140a5565b60808301525060a06144fd84828501614027565b60a08301525060c061451184828501614027565b60c08301525060e061452584828501614027565b60e08301525061010082015167ffffffffffffffff81111561454a576145496125f8565b5b614556848285016142cb565b6101008301525092915050565b600067ffffffffffffffff82111561457e5761457d61257d565b5b6145878261256c565b9050602081019050919050565b60006145a76145a284614563565b6125dd565b9050828152602081018484840111156145c3576145c2613637565b5b6145ce848285612a21565b509392505050565b600082601f8301126145eb576145ea61265b565b5b81516145fb848260208601614594565b91505092915050565b60006080828403121561461a57614619612567565b5b61462460806125dd565b9050600082015167ffffffffffffffff811115614644576146436125f8565b5b61465084828501614413565b600083015250602061466484828501614027565b602083015250604061467884828501614027565b604083015250606082015167ffffffffffffffff81111561469c5761469b6125f8565b5b6146a8848285016145d6565b60608301525092915050565b6000602082840312156146ca576146c961255d565b5b600082015167ffffffffffffffff8111156146e8576146e7612562565b5b6146f484828501614604565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261475f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614722565b6147698683614722565b95508019841693508086168417925050509392505050565b6000819050919050565b60006147a66147a161479c846128bb565b614781565b6128bb565b9050919050565b6000819050919050565b6147c08361478b565b6147d46147cc826147ad565b84845461472f565b825550505050565b600090565b6147e96147dc565b6147f48184846147b7565b505050565b5b818110156148185761480d6000826147e1565b6001810190506147fa565b5050565b601f82111561485d5761482e816146fd565b61483784614712565b81016020851015614846578190505b61485a61485285614712565b8301826147f9565b50505b505050565b600082821c905092915050565b600061488060001984600802614862565b1980831691505092915050565b6000614899838361486f565b9150826002028217905092915050565b6148b282612a05565b67ffffffffffffffff8111156148cb576148ca61257d565b5b6148d58254613d08565b6148e082828561481c565b600060209050601f8311600181146149135760008415614901578287015190505b61490b858261488d565b865550614973565b601f198416614921866146fd565b60005b8281101561494957848901518255600182019150602085019450602081019050614924565b868310156149665784890151614962601f89168261486f565b8355505b6001600288020188555050505b505050505050565b60008190508160005260206000209050919050565b601f8211156149d1576149a28161497b565b6149ab84614712565b810160208510156149ba578190505b6149ce6149c685614712565b8301826147f9565b50505b505050565b6149df82612f7d565b67ffffffffffffffff8111156149f8576149f761257d565b5b614a028254613d08565b614a0d828285614990565b600060209050601f831160018114614a405760008415614a2e578287015190505b614a38858261488d565b865550614aa0565b601f198416614a4e8661497b565b60005b82811015614a7657848901518255600182019150602085019450602081019050614a51565b86831015614a935784890151614a8f601f89168261486f565b8355505b6001600288020188555050505b505050505050565b6000604082019050614abd6000830185612f6e565b614aca6020830184612f6e565b9392505050565b600060208284031215614ae757614ae661255d565b5b6000614af584828501614027565b91505092915050565b60008154614b0b81613d08565b614b158186612a10565b94506001821660008114614b305760018114614b4657614b79565b60ff198316865281151560200286019350614b79565b614b4f856146fd565b60005b83811015614b7157815481890152600182019150602081019050614b52565b808801955050505b50505092915050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614bc2614bbd83614b82565b614b8f565b9050919050565b600081549050919050565b60008190508160005260206000209050919050565b6000819050919050565b6000614c06614c0183614b82565b614be9565b9050919050565b6000614c198254614bf3565b9050919050565b6000600182019050919050565b6000614c3882614bc9565b614c428185612a9e565b9350614c4d83614bd4565b8060005b83811015614c8557614c6282614c0d565b614c6c8882612ace565b9750614c7783614c20565b925050600181019050614c51565b5085935050505092915050565b600081549050919050565b60008190508160005260206000209050919050565b6000614cbe8254614baf565b9050919050565b6000600182019050919050565b6000614cdd82614c92565b614ce78185612b5c565b9350614cf283614c9d565b8060005b83811015614d2a57614d0782614cb2565b614d118882612b7d565b9750614d1c83614cc5565b925050600181019050614cf6565b5085935050505092915050565b600081549050919050565b60008190508160005260206000209050919050565b6000614d638383614c2d565b905092915050565b6000600182019050919050565b6000614d8382614d37565b614d8d8185612c0b565b935083602082028501614d9f85614d42565b8060005b85811015614dda57848403895281614dbb8582614d57565b9450614dc683614d6b565b925060208a01995050600181019050614da3565b50829750879550505050505092915050565b600081549050919050565b60008190508160005260206000209050919050565b600060ff82169050919050565b6000614e2c614e2783614b82565b614e0c565b9050919050565b60008160081c9050919050565b6000614e53614e4e83614e33565b614e0c565b9050919050565b60008160101c9050919050565b6000614e7a614e7583614e5a565b614e0c565b9050919050565b60008160181c9050919050565b6000614ea1614e9c83614e81565b614e0c565b9050919050565b60008160201c9050919050565b6000614ec8614ec383614ea8565b614e0c565b9050919050565b60008160281c9050919050565b6000614eef614eea83614ecf565b614e0c565b9050919050565b60008160301c9050919050565b6000614f16614f1183614ef6565b614e0c565b9050919050565b60008160381c9050919050565b6000614f3d614f3883614f1d565b614e0c565b9050919050565b60008160401c9050919050565b6000614f64614f5f83614f44565b614e0c565b9050919050565b60008160481c9050919050565b6000614f8b614f8683614f6b565b614e0c565b9050919050565b60008160501c9050919050565b6000614fb2614fad83614f92565b614e0c565b9050919050565b60008160581c9050919050565b6000614fd9614fd483614fb9565b614e0c565b9050919050565b60008160601c9050919050565b6000615000614ffb83614fe0565b614e0c565b9050919050565b60008160681c9050919050565b600061502761502283615007565b614e0c565b9050919050565b60008160701c9050919050565b600061504e6150498361502e565b614e0c565b9050919050565b60008160781c9050919050565b600061507561507083615055565b614e0c565b9050919050565b60008160801c9050919050565b600061509c6150978361507c565b614e0c565b9050919050565b60008160881c9050919050565b60006150c36150be836150a3565b614e0c565b9050919050565b60008160901c9050919050565b60006150ea6150e5836150ca565b614e0c565b9050919050565b60008160981c9050919050565b600061511161510c836150f1565b614e0c565b9050919050565b60008160a01c9050919050565b600061513861513383615118565b614e0c565b9050919050565b60008160a81c9050919050565b600061515f61515a8361513f565b614e0c565b9050919050565b60008160b01c9050919050565b600061518661518183615166565b614e0c565b9050919050565b60008160b81c9050919050565b60006151ad6151a88361518d565b614e0c565b9050919050565b60008160c01c9050919050565b60006151d46151cf836151b4565b614e0c565b9050919050565b60008160c81c9050919050565b60006151fb6151f6836151db565b614e0c565b9050919050565b60008160d01c9050919050565b600061522261521d83615202565b614e0c565b9050919050565b60008160d81c9050919050565b600061524961524483615229565b614e0c565b9050919050565b60008160e01c9050919050565b600061527061526b83615250565b614e0c565b9050919050565b60008160e81c9050919050565b600061529761529283615277565b614e0c565b9050919050565b60008160f01c9050919050565b60006152be6152b98361529e565b614e0c565b9050919050565b60008160f81c9050919050565b60006152e56152e0836152c5565b614e0c565b9050919050565b60006152f782614dec565b6153018185612ccd565b93508361530d84614df7565b600060011561563a575b836001602003820110156156395781546153398861533483614e19565b612d56565b6020880197506153518861534c83614e40565b612d56565b6020880197506153698861536483614e67565b612d56565b6020880197506153818861537c83614e8e565b612d56565b6020880197506153998861539483614eb5565b612d56565b6020880197506153b1886153ac83614edc565b612d56565b6020880197506153c9886153c483614f03565b612d56565b6020880197506153e1886153dc83614f2a565b612d56565b6020880197506153f9886153f483614f51565b612d56565b6020880197506154118861540c83614f78565b612d56565b6020880197506154298861542483614f9f565b612d56565b6020880197506154418861543c83614fc6565b612d56565b6020880197506154598861545483614fed565b612d56565b6020880197506154718861546c83615014565b612d56565b602088019750615489886154848361503b565b612d56565b6020880197506154a18861549c83615062565b612d56565b6020880197506154b9886154b483615089565b612d56565b6020880197506154d1886154cc836150b0565b612d56565b6020880197506154e9886154e4836150d7565b612d56565b602088019750615501886154fc836150fe565b612d56565b6020880197506155198861551483615125565b612d56565b6020880197506155318861552c8361514c565b612d56565b6020880197506155498861554483615173565b612d56565b6020880197506155618861555c8361519a565b612d56565b60208801975061557988615574836151c1565b612d56565b6020880197506155918861558c836151e8565b612d56565b6020880197506155a9886155a48361520f565b612d56565b6020880197506155c1886155bc83615236565b612d56565b6020880197506155d9886155d48361525d565b612d56565b6020880197506155f1886155ec83615284565b612d56565b60208801975061560988615604836152ab565b612d56565b6020880197506156218861561c836152d2565b612d56565b60208801975060018301925050602081019050615317565b5b600115615b255781548482101561566a5761565d8861565883614e19565b612d56565b6020880197506001820191505b84821015615691576156848861567f83614e40565b612d56565b6020880197506001820191505b848210156156b8576156ab886156a683614e67565b612d56565b6020880197506001820191505b848210156156df576156d2886156cd83614e8e565b612d56565b6020880197506001820191505b84821015615706576156f9886156f483614eb5565b612d56565b6020880197506001820191505b8482101561572d576157208861571b83614edc565b612d56565b6020880197506001820191505b84821015615754576157478861574283614f03565b612d56565b6020880197506001820191505b8482101561577b5761576e8861576983614f2a565b612d56565b6020880197506001820191505b848210156157a2576157958861579083614f51565b612d56565b6020880197506001820191505b848210156157c9576157bc886157b783614f78565b612d56565b6020880197506001820191505b848210156157f0576157e3886157de83614f9f565b612d56565b6020880197506001820191505b848210156158175761580a8861580583614fc6565b612d56565b6020880197506001820191505b8482101561583e576158318861582c83614fed565b612d56565b6020880197506001820191505b84821015615865576158588861585383615014565b612d56565b6020880197506001820191505b8482101561588c5761587f8861587a8361503b565b612d56565b6020880197506001820191505b848210156158b3576158a6886158a183615062565b612d56565b6020880197506001820191505b848210156158da576158cd886158c883615089565b612d56565b6020880197506001820191505b84821015615901576158f4886158ef836150b0565b612d56565b6020880197506001820191505b848210156159285761591b88615916836150d7565b612d56565b6020880197506001820191505b8482101561594f576159428861593d836150fe565b612d56565b6020880197506001820191505b84821015615976576159698861596483615125565b612d56565b6020880197506001820191505b8482101561599d576159908861598b8361514c565b612d56565b6020880197506001820191505b848210156159c4576159b7886159b283615173565b612d56565b6020880197506001820191505b848210156159eb576159de886159d98361519a565b612d56565b6020880197506001820191505b84821015615a1257615a0588615a00836151c1565b612d56565b6020880197506001820191505b84821015615a3957615a2c88615a27836151e8565b612d56565b6020880197506001820191505b84821015615a6057615a5388615a4e8361520f565b612d56565b6020880197506001820191505b84821015615a8757615a7a88615a7583615236565b612d56565b6020880197506001820191505b84821015615aae57615aa188615a9c8361525d565b612d56565b6020880197506001820191505b84821015615ad557615ac888615ac383615284565b612d56565b6020880197506001820191505b84821015615afc57615aef88615aea836152ab565b612d56565b6020880197506001820191505b84821015615b2357615b1688615b11836152d2565b612d56565b6020880197506001820191505b505b8694505050505092915050565b600060c0830160008084018583036000870152615b4f8382614cd2565b925050600184018583036020870152615b688382614cd2565b925050600284018583036040870152615b818382614cd2565b925050600384018583036060870152615b9a8382614d78565b925050600484018583036080870152615bb38382614d78565b9250506005840185830360a0870152615bcc83826152ec565b925050819250505092915050565b6000610120830160008084018583036000870152615bf88382614afe565b92505060018401549050615c0b81614baf565b615c186020870182612a84565b5060028401549050615c2981614baf565b615c366040870182612a84565b50600384018583036060870152615c4d8382614c2d565b925050600484018583036080870152615c668382614c2d565b92505060058401549050615c7981614bf3565b615c8660a0870182612abf565b5060068401549050615c9781614bf3565b615ca460c0870182612abf565b5060078401549050615cb581614bf3565b615cc260e0870182612abf565b5060088401858303610100870152615cda8382615b32565b925050819250505092915050565b60008154615cf581613d08565b615cff8186613561565b94506001821660008114615d1a5760018114615d3057615d63565b60ff198316865281151560200286019350615d63565b615d398561497b565b60005b83811015615d5b57815481890152600182019150602081019050615d3c565b808801955050505b50505092915050565b60006080830160008084018583036000870152615d898382615bda565b925050600e8401549050615d9c81614bf3565b615da96020870182612abf565b50600f8401549050615dba81614bf3565b615dc76040870182612abf565b50601084018583036060870152615dde8382615ce8565b925050819250505092915050565b60006020820190508181036000830152615e068184615d6c565b905092915050565b600082825260208201905092915050565b7f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860008201527f6472617720697320746f6f206269670000000000000000000000000000000000602082015250565b6000615e7b602f83615e0e565b9150615e8682615e1f565b604082019050919050565b60006020820190508181036000830152615eaa81615e6e565b9050919050565b7f5061796f75743a204661696c656420746f207769746864726177000000000000600082015250565b6000615ee7601a83615e0e565b9150615ef282615eb1565b602082019050919050565b60006020820190508181036000830152615f1681615eda565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000615f79602683615e0e565b9150615f8482615f1d565b604082019050919050565b60006020820190508181036000830152615fa881615f6c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000615fe5602083615e0e565b9150615ff082615faf565b602082019050919050565b6000602082019050818103600083015261601481615fd8565b905091905056fea2646970667358221220ba87de194ceac57c528a6dbcc9e0e671ef3fe6d0e22073b441fa5297cfe796d664736f6c63430008110033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RacesMethods";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }
  static readonly contractName: "RacesMethods";
  public readonly contractName: "RacesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
