/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopMethods,
  ShopMethodsInterface,
  ShopConstructor,
} from "../ShopMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001a7c38038062001a7c833981016040819052620000399162000448565b805160808201518291906200004e336200018c565b80518251146200005d57600080fd5b60005b8251811015620000f7578181815181106200007f576200007f6200057e565b602002602001015160016000858481518110620000a057620000a06200057e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000ef9062000594565b905062000060565b5050815180518392506003916200011491839160200190620001dc565b506020828101516001830180546001600160a01b039283166001600160a01b031991821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805162000180926004850192019062000246565b509050505050620005bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000234579160200282015b828111156200023457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001fd565b5062000242929150620002ef565b5090565b82805482825590600052602060002090600701600890048101928215620002345791602002820160005b83821115620002b357835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000270565b8015620002e55782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b3565b5050620002429291505b5b80821115620002425760008155600101620002f0565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000341576200034162000306565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000372576200037262000306565b604052919050565b60006001600160401b0382111562000396576200039662000306565b5060051b60200190565b80516001600160a01b0381168114620003b857600080fd5b919050565b600082601f830112620003cf57600080fd5b81516020620003e8620003e2836200037a565b62000347565b82815260059290921b840181019181810190868411156200040857600080fd5b8286015b848110156200043d5780516001600160e01b0319811681146200042f5760008081fd5b83529183019183016200040c565b509695505050505050565b600060208083850312156200045c57600080fd5b82516001600160401b03808211156200047457600080fd5b9084019060a082870312156200048957600080fd5b620004936200031c565b825182811115620004a357600080fd5b8301601f81018813620004b557600080fd5b8051620004c6620003e2826200037a565b81815260059190911b8201860190868101908a831115620004e657600080fd5b928701925b828410156200050f57620004ff84620003a0565b82529287019290870190620004eb565b84525062000522915050838501620003a0565b848201526200053460408401620003a0565b60408201526200054760608401620003a0565b606082015260808301519350818411156200056157600080fd5b6200056f87858501620003bd565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620005b557634e487b7160e01b600052601160045260246000fd5b5060010190565b6114b080620005cc6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80639cce37c611610076578063af640d0f1161005b578063af640d0f146101bd578063d8de6587146101c6578063f2fde38b1461022a57600080fd5b80639cce37c614610105578063ad6a87451461019c57600080fd5b8063357d5142146100a85780633d278784146100bd578063715018a6146100d05780638da5cb5b146100d8575b600080fd5b6100bb6100b6366004611266565b61023d565b005b6100bb6100cb3660046112ca565b610302565b6100bb6103b9565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610163610113366004611392565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff000000000000000000000000000000000000000000000000000000009384168152929091166020830152016100fc565b6101af6101aa366004611392565b6103cd565b6040519081526020016100fc565b6101af60025481565b6004546005546006546101f39273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100fc565b6100bb610238366004611392565b610d7c565b610245610e38565b805182511461025357600080fd5b60005b82518110156102fd57818181518110610271576102716113b6565b60200260200101516001600085848151811061028f5761028f6113b6565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c0217905550806102f6906113e5565b9050610256565b505050565b61030a610e38565b805180518291600391610324918391602090910190610f2e565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549184169183169190911790556060850151600385018054919093169116179055608083015180516103b39260048501920190610fb8565b50505050565b6103c1610e38565b6103cb6000610eb9565b565b3360009081526001602052604081205460e01b7fffffffff000000000000000000000000000000000000000000000000000000009081168235919091161461041457600080fd5b6000805b600254811015610d7357600081815260096020526040902060040154640100000000900460ff166001036107ec5760005b6000828152600960205260409020600101548110156107ea5760008281526009602052604090206004015463ffffffff168311806104875750826001145b80156104ac5750600082815260096020526040902060040154600163ffffffff909116115b156107da57600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff9092169162fdd58e918891859081106104f8576104f86113b6565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa9250505080156105ac575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526105a991810190611444565b60015b6105e6573d8080156105da576040519150601f19603f3d011682016040523d82523d6000602084013e6105df565b606091505b50506107da565b80156107d857600083815260096020526040902060020154421080159061061e57506000838152600960205260409020600301544211155b8061065257506000838152600960205260409020600201541580156106525750600083815260096020526040902060030154155b156107d85760008381526009602052604090206004015465010000000000900460ff16156107bd57600083815260096020526040902080546006546001909201805473ffffffffffffffffffffffffffffffffffffffff9283169363f242432a938b93911691879081106106c8576106c86113b6565b60009182526020909120015460405160e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff93841660048083019190915292909316602484015260448301526001606483015260a0608483015260a48201527f307830300000000000000000000000000000000000000000000000000000000060c482015260e401600060405180830381600087803b15801561078557600080fd5b505af1158015610799573d6000803e3d6000fd5b50505060008481526009602052604090206004015463ffffffff1694506107d89050565b60008381526009602052604090206004015463ffffffff1693505b505b6107e3816113e5565b9050610449565b505b600081815260096020526040902060040154640100000000900460ff166002036109de5760008181526009602052604090206004015463ffffffff168211806108355750816001145b801561085a5750600081815260096020526040902060040154600163ffffffff909116115b156109de57600081815260096020526040908190205490517f4b341aed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015290911690634b341aed90602401602060405180830381865afa925050508015610916575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261091391810190611444565b60015b610950573d808015610944576040519150601f19603f3d011682016040523d82523d6000602084013e610949565b606091505b50506109de565b80156109dc57600082815260096020526040902060020154421080159061098857506000828152600960205260409020600301544211155b806109bc57506000828152600960205260409020600201541580156109bc5750600082815260096020526040902060030154155b156109dc5760008281526009602052604090206004015463ffffffff1692505b505b600081815260096020526040812060040154640100000000900460ff169003610d635760005b600082815260096020526040902060010154811015610d615760008281526009602052604090206004015463ffffffff16831180610a425750826001145b8015610a675750600082815260096020526040902060040154600163ffffffff909116115b15610d5157600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff90921691636352211e919084908110610ab357610ab36113b6565b90600052602060002001546040518263ffffffff1660e01b8152600401610adc91815260200190565b602060405180830381865afa925050508015610b33575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610b309181019061145d565b60015b610b6d573d808015610b61576040519150601f19603f3d011682016040523d82523d6000602084013e610b66565b606091505b5050610d51565b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d4f576000838152600960205260409020600201544210801590610bd257506000838152600960205260409020600301544211155b80610c065750600083815260096020526040902060020154158015610c065750600083815260096020526040902060030154155b15610d4f5760008381526009602052604090206004015465010000000000900460ff1615610d3457600083815260096020526040902080546006546001909201805473ffffffffffffffffffffffffffffffffffffffff928316936342842e0e938b9391169187908110610c7c57610c7c6113b6565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381600087803b158015610cfc57600080fd5b505af1158015610d10573d6000803e3d6000fd5b50505060008481526009602052604090206004015463ffffffff169450610d4f9050565b60008381526009602052604090206004015463ffffffff1693505b505b610d5a816113e5565b9050610a04565b505b610d6c816113e5565b9050610418565b5090505b919050565b610d84610e38565b73ffffffffffffffffffffffffffffffffffffffff8116610e2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610e3581610eb9565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e23565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610fa8579160200282015b82811115610fa857825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610f4e565b50610fb492915061105b565b5090565b82805482825590600052602060002090600701600890048101928215610fa85791602002820160005b8382111561102257835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610fe1565b80156110525782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611022565b5050610fb49291505b5b80821115610fb4576000815560010161105c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156110c2576110c2611070565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561110f5761110f611070565b604052919050565b600067ffffffffffffffff82111561113157611131611070565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610e3557600080fd5b8035610d778161113b565b600082601f83011261117957600080fd5b8135602061118e61118983611117565b6110c8565b82815260059290921b840181019181810190868411156111ad57600080fd5b8286015b848110156111d15780356111c48161113b565b83529183019183016111b1565b509695505050505050565b600082601f8301126111ed57600080fd5b813560206111fd61118983611117565b82815260059290921b8401810191818101908684111561121c57600080fd5b8286015b848110156111d15780357fffffffff00000000000000000000000000000000000000000000000000000000811681146112595760008081fd5b8352918301918301611220565b6000806040838503121561127957600080fd5b823567ffffffffffffffff8082111561129157600080fd5b61129d86838701611168565b935060208501359150808211156112b357600080fd5b506112c0858286016111dc565b9150509250929050565b6000602082840312156112dc57600080fd5b813567ffffffffffffffff808211156112f457600080fd5b9083019060a0828603121561130857600080fd5b61131061109f565b82358281111561131f57600080fd5b61132b87828601611168565b825250602083013561133c8161113b565b6020820152604083013561134f8161113b565b60408201526113606060840161115d565b606082015260808301358281111561137757600080fd5b611383878286016111dc565b60808301525095945050505050565b6000602082840312156113a457600080fd5b81356113af8161113b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361143d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561145657600080fd5b5051919050565b60006020828403121561146f57600080fd5b81516113af8161113b56fea26469706673582212207c856c40112cb70c318c27a9d491256e8f585b9edfc81b9a9e9d2d93f86cd80e64736f6c63430008110033";

type ShopMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopMethods__factory extends ContractFactory {
  constructor(...args: ShopMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopMethods";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopMethods> {
    return super.deploy(input, overrides || {}) as Promise<ShopMethods>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopMethods {
    return super.attach(address) as ShopMethods;
  }
  connect(signer: Signer): ShopMethods__factory {
    return super.connect(signer) as ShopMethods__factory;
  }
  static readonly contractName: "ShopMethods";
  public readonly contractName: "ShopMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopMethodsInterface {
    return new utils.Interface(_abi) as ShopMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopMethods {
    return new Contract(address, _abi, signerOrProvider) as ShopMethods;
  }
}
