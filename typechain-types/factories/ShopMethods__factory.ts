/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopMethods,
  ShopMethodsInterface,
  ShopConstructor,
} from "../ShopMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001f0338038062001f038339810160408190526200003991620005fc565b805160808201518291906200004e336200020b565b80518251146200005d57600080fd5b60005b8251811015620001765760005b82828151811062000082576200008262000732565b602002602001015151811015620001625760016000858481518110620000ac57620000ac62000732565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000e957620000e962000732565b6020026020010151828151811062000105576200010562000732565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015a8162000748565b90506200006d565b506200016e8162000748565b905062000060565b50508151805183925060039162000193918391602001906200025b565b506020828101516001830180546001600160a01b039283166001600160a01b0319918216179091556040850151600285018054918416918316919091179055606085015160038501805491909316911617905560808301518051620001ff9260048501920190620002c5565b50905050505062000770565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b3579160200282015b82811115620002b357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200027c565b50620002c192915062000325565b5090565b82805482825590600052602060002090810192821562000317579160200282015b82811115620003175782518051620003069184916020909101906200033c565b5091602001919060010190620002e6565b50620002c1929150620003ea565b5b80821115620002c1576000815560010162000326565b82805482825590600052602060002090600701600890048101928215620002b35791602002820160005b83821115620003a957835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000366565b8015620003db5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620003a9565b5050620002c192915062000325565b80821115620002c15760006200040182826200040b565b50600101620003ea565b50805460008255600701600890049060005260206000209081019062000432919062000325565b50565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000470576200047062000435565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004a157620004a162000435565b604052919050565b60006001600160401b03821115620004c557620004c562000435565b5060051b60200190565b80516001600160a01b0381168114620004e757600080fd5b919050565b600082601f830112620004fe57600080fd5b81516020620005176200051183620004a9565b62000476565b828152600592831b85018201928282019190878511156200053757600080fd5b8387015b85811015620005ef5780516001600160401b038111156200055c5760008081fd5b8801603f81018a136200056f5760008081fd5b858101516040620005846200051183620004a9565b82815291851b8301810191888101908d841115620005a25760008081fd5b938201935b83851015620005dd57845192506001600160e01b031983168314620005cc5760008081fd5b8282529389019390890190620005a7565b8852505050938501935084016200053b565b5090979650505050505050565b600060208083850312156200061057600080fd5b82516001600160401b03808211156200062857600080fd5b9084019060a082870312156200063d57600080fd5b620006476200044b565b8251828111156200065757600080fd5b8301601f810188136200066957600080fd5b80516200067a6200051182620004a9565b81815260059190911b8201860190868101908a8311156200069a57600080fd5b928701925b82841015620006c357620006b384620004cf565b825292870192908701906200069f565b845250620006d6915050838501620004cf565b84820152620006e860408401620004cf565b6040820152620006fb60608401620004cf565b606082015260808301519350818411156200071557600080fd5b6200072387858501620004ec565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200076957634e487b7160e01b600052601160045260246000fd5b5060010190565b61178380620007806000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063af640d0f1161005b578063af640d0f14610129578063c0d94d1a14610132578063d8de658714610145578063f2fde38b146101a957600080fd5b80635b19e2941461008d578063715018a6146100d65780638da5cb5b146100e0578063ad6a874514610108575b600080fd5b6100a061009b366004611335565b6101bc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6100de610202565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cd565b61011b610116366004611361565b610216565b6040519081526020016100cd565b61011b60025481565b6100de610140366004611568565b610c46565b6004546005546006546101729273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100cd565b6100de6101b7366004611361565b610d0d565b600160205281600052604060002081815481106101d857600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b61020a610dc6565b6102146000610e47565b565b600080805b336000908152600160205260409020548110156102d457336000908152600160205260408120805491357fffffffff0000000000000000000000000000000000000000000000000000000016918390811061027857610278611689565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102c457600191505b6102cd816116b8565b905061021b565b50806102df57600080fd5b6000805b600254811015610c3e57600081815260096020526040902060040154640100000000900460ff166001036106b75760005b6000828152600960205260409020600101548110156106b55760008281526009602052604090206004015463ffffffff168311806103525750826001145b80156103775750600082815260096020526040902060040154600163ffffffff909116115b156106a557600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff9092169162fdd58e918991859081106103c3576103c3611689565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa925050508015610477575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261047491810190611717565b60015b6104b1573d8080156104a5576040519150601f19603f3d011682016040523d82523d6000602084013e6104aa565b606091505b50506106a5565b80156106a35760008381526009602052604090206002015442108015906104e957506000838152600960205260409020600301544211155b8061051d575060008381526009602052604090206002015415801561051d5750600083815260096020526040902060030154155b156106a35760008381526009602052604090206004015465010000000000900460ff161561068857600083815260096020526040902080546006546001909201805473ffffffffffffffffffffffffffffffffffffffff9283169363f242432a938c939116918790811061059357610593611689565b60009182526020909120015460405160e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff93841660048083019190915292909316602484015260448301526001606483015260a0608483015260a48201527f307830300000000000000000000000000000000000000000000000000000000060c482015260e401600060405180830381600087803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b50505060008481526009602052604090206004015463ffffffff1694506106a39050565b60008381526009602052604090206004015463ffffffff1693505b505b6106ae816116b8565b9050610314565b505b600081815260096020526040902060040154640100000000900460ff166002036108a95760008181526009602052604090206004015463ffffffff168211806107005750816001145b80156107255750600081815260096020526040902060040154600163ffffffff909116115b156108a957600081815260096020526040908190205490517f4b341aed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015290911690634b341aed90602401602060405180830381865afa9250505080156107e1575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526107de91810190611717565b60015b61081b573d80801561080f576040519150601f19603f3d011682016040523d82523d6000602084013e610814565b606091505b50506108a9565b80156108a757600082815260096020526040902060020154421080159061085357506000828152600960205260409020600301544211155b8061088757506000828152600960205260409020600201541580156108875750600082815260096020526040902060030154155b156108a75760008281526009602052604090206004015463ffffffff1692505b505b600081815260096020526040812060040154640100000000900460ff169003610c2e5760005b600082815260096020526040902060010154811015610c2c5760008281526009602052604090206004015463ffffffff1683118061090d5750826001145b80156109325750600082815260096020526040902060040154600163ffffffff909116115b15610c1c57600082815260096020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff90921691636352211e91908490811061097e5761097e611689565b90600052602060002001546040518263ffffffff1660e01b81526004016109a791815260200190565b602060405180830381865afa9250505080156109fe575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526109fb91810190611730565b60015b610a38573d808015610a2c576040519150601f19603f3d011682016040523d82523d6000602084013e610a31565b606091505b5050610c1c565b8673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c1a576000838152600960205260409020600201544210801590610a9d57506000838152600960205260409020600301544211155b80610ad15750600083815260096020526040902060020154158015610ad15750600083815260096020526040902060030154155b15610c1a5760008381526009602052604090206004015465010000000000900460ff1615610bff57600083815260096020526040902080546006546001909201805473ffffffffffffffffffffffffffffffffffffffff928316936342842e0e938c9391169187908110610b4757610b47611689565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381600087803b158015610bc757600080fd5b505af1158015610bdb573d6000803e3d6000fd5b50505060008481526009602052604090206004015463ffffffff169450610c1a9050565b60008381526009602052604090206004015463ffffffff1693505b505b610c25816116b8565b90506108cf565b505b610c37816116b8565b90506102e3565b509392505050565b610c4e610dc6565b805180518291600391610c68918391602090910190611122565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054918416918316919091179055606085015160038501805491909316911617905560808301518051610cf792600485019201906111ac565b505081516080830151610d0a9250610ebc565b50565b610d15610dc6565b73ffffffffffffffffffffffffffffffffffffffff8116610dbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610d0a81610e47565b60005473ffffffffffffffffffffffffffffffffffffffff163314610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610db4565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114610eca57600080fd5b60005b825181101561111d5760005b828281518110610eeb57610eeb611689565b60200260200101515181101561110c5760016000858481518110610f1157610f11611689565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061102f5760016000858481518110610f7357610f73611689565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838381518110610fc757610fc7611689565b60200260200101518281518110610fe057610fe0611689565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556110fc565b82828151811061104157611041611689565b6020026020010151818151811061105a5761105a611689565b60200260200101516001600086858151811061107857611078611689565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106110cb576110cb611689565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b611105816116b8565b9050610ed9565b50611116816116b8565b9050610ecd565b505050565b82805482825590600052602060002090810192821561119c579160200282015b8281111561119c57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611142565b506111a8929150611205565b5090565b8280548282559060005260206000209081019282156111f9579160200282015b828111156111f957825180516111e991849160209091019061121a565b50916020019190600101906111cc565b506111a89291506112c1565b5b808211156111a85760008155600101611206565b8280548282559060005260206000209060070160089004810192821561119c5791602002820160005b8382111561128457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302611243565b80156112b45782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611284565b50506111a8929150611205565b808211156111a85760006112d582826112de565b506001016112c1565b508054600082556007016008900490600052602060002090810190610d0a9190611205565b73ffffffffffffffffffffffffffffffffffffffff81168114610d0a57600080fd5b803561133081611303565b919050565b6000806040838503121561134857600080fd5b823561135381611303565b946020939093013593505050565b60006020828403121561137357600080fd5b813561137e81611303565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156113d7576113d7611385565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561142457611424611385565b604052919050565b600067ffffffffffffffff82111561144657611446611385565b5060051b60200190565b600082601f83011261146157600080fd5b813560206114766114718361142c565b6113dd565b828152600592831b850182019282820191908785111561149557600080fd5b8387015b8581101561155b57803567ffffffffffffffff8111156114b95760008081fd5b8801603f81018a136114cb5760008081fd5b8581013560406114dd6114718361142c565b82815291851b8301810191888101908d8411156114fa5760008081fd5b938201935b8385101561154a57843592507fffffffff000000000000000000000000000000000000000000000000000000008316831461153a5760008081fd5b82825293890193908901906114ff565b885250505093850193508401611499565b5090979650505050505050565b6000602080838503121561157b57600080fd5b823567ffffffffffffffff8082111561159357600080fd5b9084019060a082870312156115a757600080fd5b6115af6113b4565b8235828111156115be57600080fd5b8301601f810188136115cf57600080fd5b80356115dd6114718261142c565b81815260059190911b8201860190868101908a8311156115fc57600080fd5b928701925b8284101561162357833561161481611303565b82529287019290870190611601565b845250611634915050838501611325565b8482015261164460408401611325565b604082015261165560608401611325565b6060820152608083013593508184111561166e57600080fd5b61167a87858501611450565b60808201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611710577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561172957600080fd5b5051919050565b60006020828403121561174257600080fd5b815161137e8161130356fea2646970667358221220ddd3f57ebdabbad82d9a27499c28e789b3a54ba21f930de7533f136ab8182db664736f6c63430008110033";

type ShopMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopMethods__factory extends ContractFactory {
  constructor(...args: ShopMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopMethods";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopMethods> {
    return super.deploy(input, overrides || {}) as Promise<ShopMethods>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopMethods {
    return super.attach(address) as ShopMethods;
  }
  connect(signer: Signer): ShopMethods__factory {
    return super.connect(signer) as ShopMethods__factory;
  }
  static readonly contractName: "ShopMethods";
  public readonly contractName: "ShopMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopMethodsInterface {
    return new utils.Interface(_abi) as ShopMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopMethods {
    return new Contract(address, _abi, signerOrProvider) as ShopMethods;
  }
}
