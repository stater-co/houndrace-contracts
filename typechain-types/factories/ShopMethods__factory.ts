/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopMethods,
  ShopMethodsInterface,
  ShopConstructor,
} from "../ShopMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "discounts",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "discountsReceiverWallet",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToUsePerUsableDiscount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "discounts",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "discountsReceiverWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "discounts",
    outputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dateStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dateStop",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountToUsePerUsableDiscount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "discount",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "usable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "discountId",
        type: "uint256",
      },
    ],
    name: "getDiscount",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToUsePerUsableDiscount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "discounts",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "discountsReceiverWallet",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDiscounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b506040516200266b3803806200266b83398101604081905262000039916200069f565b805160c08201518291906200004e3362000238565b80518251146200005d57600080fd5b60005b8251811015620001765760005b82828151811062000082576200008262000799565b602002602001015151811015620001625760016000858481518110620000ac57620000ac62000799565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000e957620000e962000799565b6020026020010151828151811062000105576200010562000799565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015a81620007af565b90506200006d565b506200016e81620007af565b905062000060565b505081518051839250600391620001939183916020019062000288565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054909216921691909117905560c083015180516200022c9260068501920190620002f2565b509050505050620007d7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002e0579160200282015b82811115620002e057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002a9565b50620002ee92915062000352565b5090565b82805482825590600052602060002090810192821562000344579160200282015b828111156200034457825180516200033391849160209091019062000369565b509160200191906001019062000313565b50620002ee92915062000417565b5b80821115620002ee576000815560010162000353565b82805482825590600052602060002090600701600890048101928215620002e05791602002820160005b83821115620003d657835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000393565b8015620004085782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620003d6565b5050620002ee92915062000352565b80821115620002ee5760006200042e828262000438565b5060010162000417565b5080546000825560070160089004906000526020600020908101906200045f919062000352565b50565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b03811182821017156200049d576200049d62000462565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004ce57620004ce62000462565b604052919050565b60006001600160401b03821115620004f257620004f262000462565b5060051b60200190565b80516001600160a01b03811681146200051457600080fd5b919050565b600082601f8301126200052b57600080fd5b81516020620005446200053e83620004d6565b620004a3565b82815260059290921b840181019181810190868411156200056457600080fd5b8286015b848110156200058a576200057c81620004fc565b835291830191830162000568565b509695505050505050565b600082601f830112620005a757600080fd5b81516020620005ba6200053e83620004d6565b828152600592831b8501820192828201919087851115620005da57600080fd5b8387015b85811015620006925780516001600160401b03811115620005ff5760008081fd5b8801603f81018a13620006125760008081fd5b858101516040620006276200053e83620004d6565b82815291851b8301810191888101908d841115620006455760008081fd5b938201935b838510156200068057845192506001600160e01b0319831683146200066f5760008081fd5b82825293890193908901906200064a565b885250505093850193508401620005de565b5090979650505050505050565b600060208284031215620006b257600080fd5b81516001600160401b0380821115620006ca57600080fd5b9083019060e08286031215620006df57600080fd5b620006e962000478565b825182811115620006f957600080fd5b620007078782860162000519565b8252506200071860208401620004fc565b60208201526200072b60408401620004fc565b60408201526200073e60608401620004fc565b60608201526200075160808401620004fc565b60808201526200076460a08401620004fc565b60a082015260c0830151828111156200077c57600080fd5b6200078a8782860162000595565b60c08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620007d057634e487b7160e01b600052601160045260246000fd5b5060010190565b611e8480620007e76000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80639aca06dc11610081578063bae6a6901161005b578063bae6a690146101ae578063d8de658714610278578063f2fde38b146102f857600080fd5b80639aca06dc14610180578063ad6a874514610192578063af640d0f146101a557600080fd5b80635b19e294116100b25780635b19e2941461010c578063715018a6146101505780638da5cb5b1461015857600080fd5b80632336dbe4146100ce578063507e3a27146100f7575b600080fd5b6100e16100dc3660046118ce565b61030b565b6040516100ee91906118e7565b60405180910390f35b61010a610105366004611c32565b610459565b005b61011f61011a366004611d18565b61054d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ee565b61010a610593565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ee565b6002545b6040519081526020016100ee565b6101846101a0366004611d44565b6105a7565b61018460025481565b6102216101bc3660046118ce565b600b602052600090815260409020805460028201546003830154600484015460059094015473ffffffffffffffffffffffffffffffffffffffff90931693919290919063ffffffff81169060ff64010000000082048116916501000000000090041687565b6040805173ffffffffffffffffffffffffffffffffffffffff9098168852602088019690965294860193909352606085019190915263ffffffff16608084015260ff1660a0830152151560c082015260e0016100ee565b6004546005546006546007546008546102b19473ffffffffffffffffffffffffffffffffffffffff908116948116938116928116911685565b6040805173ffffffffffffffffffffffffffffffffffffffff968716815294861660208601529285169284019290925283166060830152909116608082015260a0016100ee565b61010a610306366004611d44565b6112d8565b610374604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600060ff1681526020016000151581525090565b6000828152600b6020908152604091829020825161010081018452815473ffffffffffffffffffffffffffffffffffffffff168152600182018054855181860281018601909652808652919492938581019392908301828280156103f757602002820191906000526020600020905b8154815260200190600101908083116103e3575b505050918352505060028201546020820152600382015460408201526004820154606082015260059091015463ffffffff8116608083015260ff6401000000008204811660a08401526501000000000090910416151560c09091015292915050565b610461611391565b80518051829160039161047b9183916020909101906116ed565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054909216921691909117905560c083015180516105379260068501920190611777565b5050815160c083015161054a9250611412565b50565b6001602052816000526040600020818154811061056957600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b61059b611391565b6105a56000611678565b565b600080805b3360009081526001602052604090205481101561066557336000908152600160205260408120805491357fffffffff0000000000000000000000000000000000000000000000000000000016918390811061060957610609611d68565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361065557600191505b61065e81611d97565b90506105ac565b508061067057600080fd5b600060015b6002548110156112d0576000818152600b6020526040902060050154640100000000900460ff16600103610a575760005b6000828152600b6020526040902060010154811015610a55576000828152600b602052604090206005015463ffffffff168311806106e45750826001145b801561070957506000828152600b6020526040902060050154600163ffffffff909116115b15610a45576000828152600b6020526040902060020154421080159061074057506000828152600b60205260409020600301544211155b8061077457506000828152600b602052604090206002015415801561077457506000828152600b6020526040902060030154155b15610a45576000828152600b6020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff9092169162fdd58e918991859081106107c0576107c0611d68565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa925050508015610874575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261087191810190611df6565b60015b6108ae573d8080156108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b5050610a45565b8015610a43576000838152600b602052604090206005015465010000000000900460ff1615610a28576000838152600b6020526040902080546008546001909201805473ffffffffffffffffffffffffffffffffffffffff9283169363f242432a938c939116918790811061092557610925611d68565b6000918252602080832090910154898352600b90915260409182902060049081015492517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff958616818301529490931660248501526044840152606483015260a0608483015260a48201527f307830300000000000000000000000000000000000000000000000000000000060c482015260e401600060405180830381600087803b1580156109f057600080fd5b505af1158015610a04573d6000803e3d6000fd5b5050506000848152600b602052604090206005015463ffffffff169450610a439050565b6000838152600b602052604090206005015463ffffffff1693505b505b610a4e81611d97565b90506106a6565b505b6000818152600b6020526040902060050154640100000000900460ff16600203610c49576000818152600b602052604090206005015463ffffffff16821180610aa05750816001145b8015610ac557506000818152600b6020526040902060050154600163ffffffff909116115b15610c49576000818152600b60205260409020600201544210801590610afc57506000818152600b60205260409020600301544211155b80610b3057506000818152600b6020526040902060020154158015610b3057506000818152600b6020526040902060030154155b15610c49576000818152600b6020526040908190205490517f4b341aed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015290911690634b341aed90602401602060405180830381865afa925050508015610bec575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610be991810190611df6565b60015b610c26573d808015610c1a576040519150601f19603f3d011682016040523d82523d6000602084013e610c1f565b606091505b5050610c49565b8015610c47576000828152600b602052604090206005015463ffffffff1692505b505b6000818152600b6020526040902060050154640100000000900460ff16600303610f3b576000818152600b602052604090206005015463ffffffff16821180610c925750816001145b8015610cb757506000818152600b6020526040902060050154600163ffffffff909116115b15610f3b576000818152600b60205260409020600201544210801590610cee57506000818152600b60205260409020600301544211155b80610d2257506000818152600b6020526040902060020154158015610d2257506000818152600b6020526040902060030154155b15610f3b576000818152600b6020526040908190205490517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152909116906370a0823190602401602060405180830381865afa925050508015610dde575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610ddb91810190611df6565b60015b610e18573d808015610e0c576040519150601f19603f3d011682016040523d82523d6000602084013e610e11565b606091505b5050610f3b565b8015610f39576000828152600b602052604090206005015465010000000000900460ff1615610f1e576000828152600b602052604090819020805460085460049283015493517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b8116948201949094529083166024820152604481019390935216906323b872dd906064016020604051808303816000875af1158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190611e0f565b506000828152600b602052604090206005015463ffffffff169250610f39565b6000828152600b602052604090206005015463ffffffff1692505b505b6000818152600b6020526040812060050154640100000000900460ff1690036112c05760005b6000828152600b60205260409020600101548110156112be576000828152600b602052604090206005015463ffffffff16831180610f9f5750826001145b8015610fc457506000828152600b6020526040902060050154600163ffffffff909116115b156112ae576000828152600b60205260409020600201544210801590610ffb57506000828152600b60205260409020600301544211155b8061102f57506000828152600b602052604090206002015415801561102f57506000828152600b6020526040902060030154155b156112ae576000828152600b6020526040902080546001909101805473ffffffffffffffffffffffffffffffffffffffff90921691636352211e91908490811061107b5761107b611d68565b90600052602060002001546040518263ffffffff1660e01b81526004016110a491815260200190565b602060405180830381865afa9250505080156110fb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110f891810190611e31565b60015b611135573d808015611129576040519150601f19603f3d011682016040523d82523d6000602084013e61112e565b606091505b50506112ae565b8673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112ac576000838152600b602052604090206005015465010000000000900460ff1615611291576000838152600b6020526040902080546008546001909201805473ffffffffffffffffffffffffffffffffffffffff928316936342842e0e938c93911691879081106111d9576111d9611d68565b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381600087803b15801561125957600080fd5b505af115801561126d573d6000803e3d6000fd5b5050506000848152600b602052604090206005015463ffffffff1694506112ac9050565b6000838152600b602052604090206005015463ffffffff1693505b505b6112b781611d97565b9050610f61565b505b6112c981611d97565b9050610675565b509392505050565b6112e0611391565b73ffffffffffffffffffffffffffffffffffffffff8116611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61054a81611678565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161137f565b805182511461142057600080fd5b60005b82518110156116735760005b82828151811061144157611441611d68565b602002602001015151811015611662576001600085848151811061146757611467611d68565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061158557600160008584815181106114c9576114c9611d68565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061151d5761151d611d68565b6020026020010151828151811061153657611536611d68565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055611652565b82828151811061159757611597611d68565b602002602001015181815181106115b0576115b0611d68565b6020026020010151600160008685815181106115ce576115ce611d68565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061162157611621611d68565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61165b81611d97565b905061142f565b5061166c81611d97565b9050611423565b505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611767579160200282015b8281111561176757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061170d565b506117739291506117d0565b5090565b8280548282559060005260206000209081019282156117c4579160200282015b828111156117c457825180516117b49184916020909101906117e5565b5091602001919060010190611797565b5061177392915061188c565b5b8082111561177357600081556001016117d1565b828054828255906000526020600020906007016008900481019282156117675791602002820160005b8382111561184f57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261180e565b801561187f5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261184f565b50506117739291506117d0565b808211156117735760006118a082826118a9565b5060010161188c565b50805460008255600701600890049060005260206000209081019061054a91906117d0565b6000602082840312156118e057600080fd5b5035919050565b6020808252825173ffffffffffffffffffffffffffffffffffffffff16828201528281015161010060408401819052815161012085018190526000939283019184916101408701905b808410156119505784518252938501936001939093019290850190611930565b506040880151606088015260608801516080880152608088015160a088015260a0880151945061198860c088018663ffffffff169052565b60c088015160ff1660e08881019190915290970151151595019490945250929392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611a0057611a006119ae565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611a4d57611a4d6119ae565b604052919050565b600067ffffffffffffffff821115611a6f57611a6f6119ae565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461054a57600080fd5b8035611aa681611a79565b919050565b600082601f830112611abc57600080fd5b81356020611ad1611acc83611a55565b611a06565b82815260059290921b84018101918181019086841115611af057600080fd5b8286015b84811015611b14578035611b0781611a79565b8352918301918301611af4565b509695505050505050565b600082601f830112611b3057600080fd5b81356020611b40611acc83611a55565b828152600592831b8501820192828201919087851115611b5f57600080fd5b8387015b85811015611c2557803567ffffffffffffffff811115611b835760008081fd5b8801603f81018a13611b955760008081fd5b858101356040611ba7611acc83611a55565b82815291851b8301810191888101908d841115611bc45760008081fd5b938201935b83851015611c1457843592507fffffffff0000000000000000000000000000000000000000000000000000000083168314611c045760008081fd5b8282529389019390890190611bc9565b885250505093850193508401611b63565b5090979650505050505050565b600060208284031215611c4457600080fd5b813567ffffffffffffffff80821115611c5c57600080fd5b9083019060e08286031215611c7057600080fd5b611c786119dd565b823582811115611c8757600080fd5b611c9387828601611aab565b825250611ca260208401611a9b565b6020820152611cb360408401611a9b565b6040820152611cc460608401611a9b565b6060820152611cd560808401611a9b565b6080820152611ce660a08401611a9b565b60a082015260c083013582811115611cfd57600080fd5b611d0987828601611b1f565b60c08301525095945050505050565b60008060408385031215611d2b57600080fd5b8235611d3681611a79565b946020939093013593505050565b600060208284031215611d5657600080fd5b8135611d6181611a79565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611def577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215611e0857600080fd5b5051919050565b600060208284031215611e2157600080fd5b81518015158114611d6157600080fd5b600060208284031215611e4357600080fd5b8151611d6181611a7956fea2646970667358221220d39c80d5049905e84eb6536b3ff5e3f941bcc3347804faf501811ed53fe9e5af64736f6c63430008110033";

type ShopMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopMethods__factory extends ContractFactory {
  constructor(...args: ShopMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopMethods";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopMethods> {
    return super.deploy(input, overrides || {}) as Promise<ShopMethods>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopMethods {
    return super.attach(address) as ShopMethods;
  }
  connect(signer: Signer): ShopMethods__factory {
    return super.connect(signer) as ShopMethods__factory;
  }
  static readonly contractName: "ShopMethods";
  public readonly contractName: "ShopMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopMethodsInterface {
    return new utils.Interface(_abi) as ShopMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopMethods {
    return new Contract(address, _abi, signerOrProvider) as ShopMethods;
  }
}
