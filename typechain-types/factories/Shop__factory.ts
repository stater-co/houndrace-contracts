/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Shop, ShopInterface, ShopConstructor } from "../Shop";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526001805534801561001457600080fd5b50604051610a9f380380610a9f833981016040819052610033916100e2565b8061003d33610076565b8051600280546001600160a01b03199081166001600160a01b03938416179091556020909201516003805490931691161790555061014a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100dd57600080fd5b919050565b6000604082840312156100f457600080fd5b604080519081016001600160401b038111828210171561012457634e487b7160e01b600052604160045260246000fd5b604052610130836100c6565b815261013e602084016100c6565b60208201529392505050565b610946806101596000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b11610063578063af640d0f1161004b578063af640d0f14610177578063d8de65871461018d578063f2fde38b146101ee57005b80638da5cb5b1461010f578063ad6a87451461014957005b8063299f9f0e1461009a5780632a45ccb5146100ba578063715018a6146100da57806381c461ab146100ef57005b3661009857005b005b3480156100a657600080fd5b506100986100b5366004610662565b61020e565b3480156100c657600080fd5b506100986100d536600461084b565b610270565b3480156100e657600080fd5b506100986102f8565b3480156100fb57600080fd5b5061009861010a366004610890565b61030c565b34801561011b57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561015557600080fd5b506101696101643660046108c5565b610393565b604051908152602001610140565b34801561018357600080fd5b5061016960015481565b34801561019957600080fd5b506002546003546101c19173ffffffffffffffffffffffffffffffffffffffff908116911682565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815292909116602083015201610140565b3480156101fa57600080fd5b506100986102093660046108c5565b61042f565b6102166104eb565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155602090920151600380549093169116179055565b6102786104eb565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff16906102a590839036906108e7565b600060405180830381855af49150503d80600081146102e0576040519150601f19603f3d011682016040523d82523d6000602084013e6102e5565b606091505b50509050806102f357600080fd5b505050565b6103006104eb565b61030a600061056c565b565b6103146104eb565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff169061034190839036906108e7565b600060405180830381855af49150503d806000811461037c576040519150601f19603f3d011682016040523d82523d6000602084013e610381565b606091505b505090508061038f57600080fd5b5050565b6002546040516000918291829173ffffffffffffffffffffffffffffffffffffffff16906103c490839036906108e7565b600060405180830381855af49150503d80600081146103ff576040519150601f19603f3d011682016040523d82523d6000602084013e610404565b606091505b50915091508161041357600080fd5b8080602001905181019061042791906108f7565b949350505050565b6104376104eb565b73ffffffffffffffffffffffffffffffffffffffff81166104df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104e88161056c565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d6565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610633576106336105e1565b60405290565b803573ffffffffffffffffffffffffffffffffffffffff8116811461065d57600080fd5b919050565b60006040828403121561067457600080fd5b6040516040810181811067ffffffffffffffff82111715610697576106976105e1565b6040526106a383610639565b81526106b160208401610639565b60208201529392505050565b600082601f8301126106ce57600080fd5b8135602067ffffffffffffffff808311156106eb576106eb6105e1565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110848211171561072e5761072e6105e1565b60405293845285810183019383810192508785111561074c57600080fd5b83870191505b8482101561076b57813583529183019190830190610752565b979650505050505050565b803563ffffffff8116811461065d57600080fd5b803560ff8116811461065d57600080fd5b8035801515811461065d57600080fd5b600060e082840312156107bd57600080fd5b6107c5610610565b90506107d082610639565b8152602082013567ffffffffffffffff8111156107ec57600080fd5b6107f8848285016106bd565b602083015250604082013560408201526060820135606082015261081e60808301610776565b608082015261082f60a0830161078a565b60a082015261084060c0830161079b565b60c082015292915050565b6000806040838503121561085e57600080fd5b823567ffffffffffffffff81111561087557600080fd5b610881858286016107ab565b95602094909401359450505050565b6000602082840312156108a257600080fd5b813567ffffffffffffffff8111156108b957600080fd5b610427848285016107ab565b6000602082840312156108d757600080fd5b6108e082610639565b9392505050565b8183823760009101908152919050565b60006020828403121561090957600080fd5b505191905056fea26469706673582212208d77ce3514f4d77f269456dea96bae2e660c068088f25accff3be374e7efdcde64736f6c63430008110033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Shop";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Shop> {
    return super.deploy(input, overrides || {}) as Promise<Shop>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Shop {
    return super.attach(address) as Shop;
  }
  connect(signer: Signer): Shop__factory {
    return super.connect(signer) as Shop__factory;
  }
  static readonly contractName: "Shop";
  public readonly contractName: "Shop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new utils.Interface(_abi) as ShopInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shop {
    return new Contract(address, _abi, signerOrProvider) as Shop;
  }
}
