/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Shop, ShopInterface, ShopConstructor } from "../Shop";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620011bf380380620011bf83398181016040528101906200003b91906200032b565b806200005c62000050620000f860201b60201c565b6200010060201b60201c565b80600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050506200035d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200022382620001d8565b810181811067ffffffffffffffff82111715620002455762000244620001e9565b5b80604052505050565b60006200025a620001c4565b905062000268828262000218565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200029a826200026d565b9050919050565b620002ac816200028d565b8114620002b857600080fd5b50565b600081519050620002cc81620002a1565b92915050565b600060408284031215620002eb57620002ea620001d3565b5b620002f760406200024e565b905060006200030984828501620002bb565b60008301525060206200031f84828501620002bb565b60208301525092915050565b600060408284031215620003445762000343620001ce565b5b60006200035484828501620002d2565b91505092915050565b610e52806200036d6000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610125578063ad6a874514610150578063af640d0f1461018d578063d8de6587146101b8578063f2fde38b146101e457610091565b8063299f9f0e146100935780632a45ccb5146100bc578063715018a6146100e557806381c461ab146100fc57610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610877565b61020d565b005b3480156100c857600080fd5b506100e360048036038101906100de9190610b24565b6102ac565b005b3480156100f157600080fd5b506100fa610356565b005b34801561010857600080fd5b50610123600480360381019061011e9190610b80565b61036a565b005b34801561013157600080fd5b5061013a610413565b6040516101479190610bd8565b60405180910390f35b34801561015c57600080fd5b5061017760048036038101906101729190610bf3565b61043c565b6040516101849190610c2f565b60405180910390f35b34801561019957600080fd5b506101a26104fa565b6040516101af9190610c2f565b60405180910390f35b3480156101c457600080fd5b506101cd610500565b6040516101db929190610c4a565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190610bf3565b610552565b005b6102156105d5565b80600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b6102b46105d5565b6000600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600036604051610303929190610cb2565b600060405180830381855af49150503d806000811461033e576040519150601f19603f3d011682016040523d82523d6000602084013e610343565b606091505b505090508061035157600080fd5b505050565b61035e6105d5565b6103686000610653565b565b6103726105d5565b6000600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000366040516103c1929190610cb2565b600060405180830381855af49150503d80600081146103fc576040519150601f19603f3d011682016040523d82523d6000602084013e610401565b606091505b505090508061040f57600080fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405161048e929190610cb2565b600060405180830381855af49150503d80600081146104c9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ce565b606091505b5091509150816104dd57600080fd5b808060200190518101906104f19190610ce0565b92505050919050565b60015481565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b61055a6105d5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090610d90565b60405180910390fd5b6105d281610653565b50565b6105dd610717565b73ffffffffffffffffffffffffffffffffffffffff166105fb610413565b73ffffffffffffffffffffffffffffffffffffffff1614610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890610dfc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61078182610738565b810181811067ffffffffffffffff821117156107a05761079f610749565b5b80604052505050565b60006107b361071f565b90506107bf8282610778565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f4826107c9565b9050919050565b610804816107e9565b811461080f57600080fd5b50565b600081359050610821816107fb565b92915050565b60006040828403121561083d5761083c610733565b5b61084760406107a9565b9050600061085784828501610812565b600083015250602061086b84828501610812565b60208301525092915050565b60006040828403121561088d5761088c610729565b5b600061089b84828501610827565b91505092915050565b600080fd5b600067ffffffffffffffff8211156108c4576108c3610749565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6108ed816108da565b81146108f857600080fd5b50565b60008135905061090a816108e4565b92915050565b600061092361091e846108a9565b6107a9565b90508083825260208201905060208402830185811115610946576109456108d5565b5b835b8181101561096f578061095b88826108fb565b845260208401935050602081019050610948565b5050509392505050565b600082601f83011261098e5761098d6108a4565b5b813561099e848260208601610910565b91505092915050565b600063ffffffff82169050919050565b6109c0816109a7565b81146109cb57600080fd5b50565b6000813590506109dd816109b7565b92915050565b600060ff82169050919050565b6109f9816109e3565b8114610a0457600080fd5b50565b600081359050610a16816109f0565b92915050565b60008115159050919050565b610a3181610a1c565b8114610a3c57600080fd5b50565b600081359050610a4e81610a28565b92915050565b600060e08284031215610a6a57610a69610733565b5b610a7460e06107a9565b90506000610a8484828501610812565b600083015250602082013567ffffffffffffffff811115610aa857610aa76107c4565b5b610ab484828501610979565b6020830152506040610ac8848285016108fb565b6040830152506060610adc848285016108fb565b6060830152506080610af0848285016109ce565b60808301525060a0610b0484828501610a07565b60a08301525060c0610b1884828501610a3f565b60c08301525092915050565b60008060408385031215610b3b57610b3a610729565b5b600083013567ffffffffffffffff811115610b5957610b5861072e565b5b610b6585828601610a54565b9250506020610b76858286016108fb565b9150509250929050565b600060208284031215610b9657610b95610729565b5b600082013567ffffffffffffffff811115610bb457610bb361072e565b5b610bc084828501610a54565b91505092915050565b610bd2816107e9565b82525050565b6000602082019050610bed6000830184610bc9565b92915050565b600060208284031215610c0957610c08610729565b5b6000610c1784828501610812565b91505092915050565b610c29816108da565b82525050565b6000602082019050610c446000830184610c20565b92915050565b6000604082019050610c5f6000830185610bc9565b610c6c6020830184610bc9565b9392505050565b600081905092915050565b82818337600083830152505050565b6000610c998385610c73565b9350610ca6838584610c7e565b82840190509392505050565b6000610cbf828486610c8d565b91508190509392505050565b600081519050610cda816108e4565b92915050565b600060208284031215610cf657610cf5610729565b5b6000610d0484828501610ccb565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d7a602683610d0d565b9150610d8582610d1e565b604082019050919050565b60006020820190508181036000830152610da981610d6d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610de6602083610d0d565b9150610df182610db0565b602082019050919050565b60006020820190508181036000830152610e1581610dd9565b905091905056fea2646970667358221220438fc8ed5aa887f6540f2fb5265714c261e12ccb854aa3de10ab1784aaf2d36564736f6c63430008110033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Shop";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Shop> {
    return super.deploy(input, overrides || {}) as Promise<Shop>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Shop {
    return super.attach(address) as Shop;
  }
  connect(signer: Signer): Shop__factory {
    return super.connect(signer) as Shop__factory;
  }
  static readonly contractName: "Shop";
  public readonly contractName: "Shop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new utils.Interface(_abi) as ShopInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shop {
    return new Contract(address, _abi, signerOrProvider) as Shop;
  }
}
