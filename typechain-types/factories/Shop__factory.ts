/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Shop, ShopInterface, ShopConstructor } from "../Shop";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001881380380620018818339810160408190526200003991620005fc565b805160808201518291906200004e336200020b565b80518251146200005d57600080fd5b60005b8251811015620001765760005b82828151811062000082576200008262000732565b602002602001015151811015620001625760016000858481518110620000ac57620000ac62000732565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000e957620000e962000732565b6020026020010151828151811062000105576200010562000732565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015a8162000748565b90506200006d565b506200016e8162000748565b905062000060565b50508151805183925060039162000193918391602001906200025b565b506020828101516001830180546001600160a01b039283166001600160a01b0319918216179091556040850151600285018054918416918316919091179055606085015160038501805491909316911617905560808301518051620001ff9260048501920190620002c5565b50905050505062000770565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b3579160200282015b82811115620002b357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200027c565b50620002c192915062000325565b5090565b82805482825590600052602060002090810192821562000317579160200282015b82811115620003175782518051620003069184916020909101906200033c565b5091602001919060010190620002e6565b50620002c1929150620003ea565b5b80821115620002c1576000815560010162000326565b82805482825590600052602060002090600701600890048101928215620002b35791602002820160005b83821115620003a957835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000366565b8015620003db5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620003a9565b5050620002c192915062000325565b80821115620002c15760006200040182826200040b565b50600101620003ea565b50805460008255600701600890049060005260206000209081019062000432919062000325565b50565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000470576200047062000435565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004a157620004a162000435565b604052919050565b60006001600160401b03821115620004c557620004c562000435565b5060051b60200190565b80516001600160a01b0381168114620004e757600080fd5b919050565b600082601f830112620004fe57600080fd5b81516020620005176200051183620004a9565b62000476565b828152600592831b85018201928282019190878511156200053757600080fd5b8387015b85811015620005ef5780516001600160401b038111156200055c5760008081fd5b8801603f81018a136200056f5760008081fd5b858101516040620005846200051183620004a9565b82815291851b8301810191888101908d841115620005a25760008081fd5b938201935b83851015620005dd57845192506001600160e01b031983168314620005cc5760008081fd5b8282529389019390890190620005a7565b8852505050938501935084016200053b565b5090979650505050505050565b600060208083850312156200061057600080fd5b82516001600160401b03808211156200062857600080fd5b9084019060a082870312156200063d57600080fd5b620006476200044b565b8251828111156200065757600080fd5b8301601f810188136200066957600080fd5b80516200067a6200051182620004a9565b81815260059190911b8201860190868101908a8311156200069a57600080fd5b928701925b82841015620006c357620006b384620004cf565b825292870192908701906200069f565b845250620006d6915050838501620004cf565b84820152620006e860408401620004cf565b6040820152620006fb60608401620004cf565b606082015260808301519350818411156200071557600080fd5b6200072387858501620004ec565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200076957634e487b7160e01b600052601160045260246000fd5b5060010190565b61110180620007806000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063ad6a874511610076578063c0d94d1a1161005b578063c0d94d1a1461018e578063d8de6587146101a1578063f2fde38b1461020557600080fd5b8063ad6a874514610164578063af640d0f1461018557600080fd5b8063715018a6116100a7578063715018a61461012157806381c461ab146101295780638da5cb5b1461013c57600080fd5b80632a45ccb5146100c35780635b19e294146100d8575b600080fd5b6100d66100d1366004610d1c565b610218565b005b6100eb6100e6366004610d61565b610298565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6100d66102de565b6100d6610137366004610d8b565b6102f2565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610118565b610177610172366004610dc0565b610371565b604051908152602001610118565b61017760025481565b6100d661019c366004610ef5565b61040d565b6004546005546006546101ce9273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529284166020840152921691810191909152606001610118565b6100d6610213366004610dc0565b6104d4565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16906102459083903690611014565b600060405180830381855af49150503d8060008114610280576040519150601f19603f3d011682016040523d82523d6000602084013e610285565b606091505b505090508061029357600080fd5b505050565b600160205281600052604060002081815481106102b457600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6102e661058d565b6102f0600061060e565b565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff169061031f9083903690611014565b600060405180830381855af49150503d806000811461035a576040519150601f19603f3d011682016040523d82523d6000602084013e61035f565b606091505b505090508061036d57600080fd5b5050565b6004546040516000918291829173ffffffffffffffffffffffffffffffffffffffff16906103a29083903690611014565b600060405180830381855af49150503d80600081146103dd576040519150601f19603f3d011682016040523d82523d6000602084013e6103e2565b606091505b5091509150816103f157600080fd5b808060200190518101906104059190611024565b949350505050565b61041561058d565b80518051829160039161042f9183916020909101906108e4565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549184169183169190911790556060850151600385018054919093169116179055608083015180516104be926004850192019061096e565b5050815160808301516104d19250610683565b50565b6104dc61058d565b73ffffffffffffffffffffffffffffffffffffffff8116610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104d18161060e565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461069157600080fd5b60005b82518110156102935760005b8282815181106106b2576106b261103d565b6020026020010151518110156108d357600160008584815181106106d8576106d861103d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106107f6576001600085848151811061073a5761073a61103d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061078e5761078e61103d565b602002602001015182815181106107a7576107a761103d565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556108c3565b8282815181106108085761080861103d565b602002602001015181815181106108215761082161103d565b60200260200101516001600086858151811061083f5761083f61103d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108925761089261103d565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b6108cc8161106c565b90506106a0565b506108dd8161106c565b9050610694565b82805482825590600052602060002090810192821561095e579160200282015b8281111561095e57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610904565b5061096a9291506109c7565b5090565b8280548282559060005260206000209081019282156109bb579160200282015b828111156109bb57825180516109ab9184916020909101906109dc565b509160200191906001019061098e565b5061096a929150610a83565b5b8082111561096a57600081556001016109c8565b8280548282559060005260206000209060070160089004810192821561095e5791602002820160005b83821115610a4657835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610a05565b8015610a765782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610a46565b505061096a9291506109c7565b8082111561096a576000610a978282610aa0565b50600101610a83565b5080546000825560070160089004906000526020600020908101906104d191906109c7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610b1757610b17610ac5565b60405290565b60405160a0810167ffffffffffffffff81118282101715610b1757610b17610ac5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610b8757610b87610ac5565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bb357600080fd5b919050565b600067ffffffffffffffff821115610bd257610bd2610ac5565b5060051b60200190565b600082601f830112610bed57600080fd5b81356020610c02610bfd83610bb8565b610b40565b82815260059290921b84018101918181019086841115610c2157600080fd5b8286015b84811015610c3c5780358352918301918301610c25565b509695505050505050565b803563ffffffff81168114610bb357600080fd5b803560ff81168114610bb357600080fd5b80358015158114610bb357600080fd5b600060e08284031215610c8e57600080fd5b610c96610af4565b9050610ca182610b8f565b8152602082013567ffffffffffffffff811115610cbd57600080fd5b610cc984828501610bdc565b6020830152506040820135604082015260608201356060820152610cef60808301610c47565b6080820152610d0060a08301610c5b565b60a0820152610d1160c08301610c6c565b60c082015292915050565b60008060408385031215610d2f57600080fd5b823567ffffffffffffffff811115610d4657600080fd5b610d5285828601610c7c565b95602094909401359450505050565b60008060408385031215610d7457600080fd5b610d7d83610b8f565b946020939093013593505050565b600060208284031215610d9d57600080fd5b813567ffffffffffffffff811115610db457600080fd5b61040584828501610c7c565b600060208284031215610dd257600080fd5b610ddb82610b8f565b9392505050565b600082601f830112610df357600080fd5b81356020610e03610bfd83610bb8565b828152600592831b8501820192828201919087851115610e2257600080fd5b8387015b85811015610ee857803567ffffffffffffffff811115610e465760008081fd5b8801603f81018a13610e585760008081fd5b858101356040610e6a610bfd83610bb8565b82815291851b8301810191888101908d841115610e875760008081fd5b938201935b83851015610ed757843592507fffffffff0000000000000000000000000000000000000000000000000000000083168314610ec75760008081fd5b8282529389019390890190610e8c565b885250505093850193508401610e26565b5090979650505050505050565b60006020808385031215610f0857600080fd5b823567ffffffffffffffff80821115610f2057600080fd5b9084019060a08287031215610f3457600080fd5b610f3c610b1d565b823582811115610f4b57600080fd5b8301601f81018813610f5c57600080fd5b8035610f6a610bfd82610bb8565b81815260059190911b8201860190868101908a831115610f8957600080fd5b928701925b82841015610fae57610f9f84610b8f565b82529287019290870190610f8e565b845250610fbf915050838501610b8f565b84820152610fcf60408401610b8f565b6040820152610fe060608401610b8f565b60608201526080830135935081841115610ff957600080fd5b61100587858501610de2565b60808201529695505050505050565b8183823760009101908152919050565b60006020828403121561103657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122008d85741333c48b3aa4e056d109ee7f54ae39df69d7a6c8ac103a72ee44a466b64736f6c63430008110033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Shop";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Shop> {
    return super.deploy(input, overrides || {}) as Promise<Shop>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Shop {
    return super.attach(address) as Shop;
  }
  connect(signer: Signer): Shop__factory {
    return super.connect(signer) as Shop__factory;
  }
  static readonly contractName: "Shop";
  public readonly contractName: "Shop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new utils.Interface(_abi) as ShopInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shop {
    return new Contract(address, _abi, signerOrProvider) as Shop;
  }
}
