/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Shop, ShopInterface, ShopConstructor } from "../Shop";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620023c2380380620023c283398181016040528101906200003c919062000abb565b8080600001518160800151620000676200005b620002d960201b60201c565b620002e160201b60201c565b80518251146200007657600080fd5b60005b8251811015620001b55760005b8282815181106200009c576200009b62000b0c565b5b602002602001015151811015620001a05760016000858481518110620000c757620000c662000b0c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208383815181106200011f576200011e62000b0c565b5b602002602001015182815181106200013c576200013b62000b0c565b5b602002602001015190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c021790555080620001989062000b74565b905062000086565b5080620001ad9062000b74565b905062000079565b5050508060036000820151816000019080519060200190620001d9929190620003a5565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190620002cd92919062000434565b50905050505062000bc1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805482825590600052602060002090810192821562000421579160200282015b82811115620004205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620003c6565b5b5090506200043091906200049b565b5090565b82805482825590600052602060002090810192821562000488579160200282015b828111156200048757825182908051906020019062000476929190620004ba565b509160200191906001019062000455565b5b5090506200049791906200056e565b5090565b5b80821115620004b65760008160009055506001016200049c565b5090565b828054828255906000526020600020906007016008900481019282156200055b5791602002820160005b838211156200052757835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620004e4565b8015620005595782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000527565b505b5090506200056a91906200049b565b5090565b5b8082111562000592576000818162000588919062000596565b506001016200056f565b5090565b508054600082556007016008900490600052602060002090810190620005bd91906200049b565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200062482620005d9565b810181811067ffffffffffffffff82111715620006465762000645620005ea565b5b80604052505050565b60006200065b620005c0565b905062000669828262000619565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115620006965762000695620005ea565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006d982620006ac565b9050919050565b620006eb81620006cc565b8114620006f757600080fd5b50565b6000815190506200070b81620006e0565b92915050565b600062000728620007228462000678565b6200064f565b905080838252602082019050602084028301858111156200074e576200074d620006a7565b5b835b818110156200077b5780620007668882620006fa565b84526020840193505060208101905062000750565b5050509392505050565b600082601f8301126200079d576200079c62000673565b5b8151620007af84826020860162000711565b91505092915050565b600067ffffffffffffffff821115620007d657620007d5620005ea565b5b602082029050602081019050919050565b600067ffffffffffffffff821115620008055762000804620005ea565b5b602082029050602081019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6200084d8162000816565b81146200085957600080fd5b50565b6000815190506200086d8162000842565b92915050565b60006200088a6200088484620007e7565b6200064f565b90508083825260208201905060208402830185811115620008b057620008af620006a7565b5b835b81811015620008dd5780620008c888826200085c565b845260208401935050602081019050620008b2565b5050509392505050565b600082601f830112620008ff57620008fe62000673565b5b81516200091184826020860162000873565b91505092915050565b6000620009316200092b84620007b8565b6200064f565b90508083825260208201905060208402830185811115620009575762000956620006a7565b5b835b81811015620009a557805167ffffffffffffffff81111562000980576200097f62000673565b5b8086016200098f8982620008e7565b8552602085019450505060208101905062000959565b5050509392505050565b600082601f830112620009c757620009c662000673565b5b8151620009d98482602086016200091a565b91505092915050565b600060a08284031215620009fb57620009fa620005d4565b5b62000a0760a06200064f565b9050600082015167ffffffffffffffff81111562000a2a5762000a296200066e565b5b62000a388482850162000785565b600083015250602062000a4e84828501620006fa565b602083015250604062000a6484828501620006fa565b604083015250606062000a7a84828501620006fa565b606083015250608082015167ffffffffffffffff81111562000aa15762000aa06200066e565b5b62000aaf84828501620009af565b60808301525092915050565b60006020828403121562000ad45762000ad3620005ca565b5b600082015167ffffffffffffffff81111562000af55762000af4620005cf565b5b62000b0384828501620009e2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000b818262000b6a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000bb65762000bb562000b3b565b5b600182019050919050565b6117f18062000bd16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ad6a874511610066578063ad6a874514610133578063af640d0f14610163578063c0d94d1a14610181578063d8de65871461019d578063f2fde38b146101bd5761009e565b80632a45ccb5146100a35780635b19e294146100bf578063715018a6146100ef57806381c461ab146100f95780638da5cb5b14610115575b600080fd5b6100bd60048036038101906100b89190610fd9565b6101d9565b005b6100d960048036038101906100d49190611035565b61027b565b6040516100e691906110b0565b60405180910390f35b6100f76102c1565b005b610113600480360381019061010e91906110cb565b6102d5565b005b61011d610376565b60405161012a9190611123565b60405180910390f35b61014d6004803603810190610148919061113e565b61039f565b60405161015a919061117a565b60405180910390f35b61016b61045d565b604051610178919061117a565b60405180910390f35b61019b600480360381019061019691906114ec565b610463565b005b6101a5610595565b6040516101b493929190611535565b60405180910390f35b6101d760048036038101906101d2919061113e565b61060d565b005b6000600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000366040516102289291906115ab565b600060405180830381855af49150503d8060008114610263576040519150601f19603f3d011682016040523d82523d6000602084013e610268565b606091505b505090508061027657600080fd5b505050565b6001602052816000526040600020818154811061029757600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6102c9610690565b6102d3600061070e565b565b6000600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000366040516103249291906115ab565b600060405180830381855af49150503d806000811461035f576040519150601f19603f3d011682016040523d82523d6000602084013e610364565b606091505b505090508061037257600080fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000366040516103f19291906115ab565b600060405180830381855af49150503d806000811461042c576040519150601f19603f3d011682016040523d82523d6000602084013e610431565b606091505b50915091508161044057600080fd5b8080602001905181019061045491906115d9565b92505050919050565b60025481565b61046b610690565b806003600082015181600001908051906020019061048a929190610a51565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401908051906020019061057c929190610adb565b50905050610592816000015182608001516107d2565b50565b60038060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b610615610690565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90611689565b60405180910390fd5b61068d8161070e565b50565b610698610a49565b73ffffffffffffffffffffffffffffffffffffffff166106b6610376565b73ffffffffffffffffffffffffffffffffffffffff161461070c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610703906116f5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80518251146107e057600080fd5b60005b8251811015610a445760005b82828151811061080257610801611715565b5b602002602001015151811015610a32576001600085848151811061082957610828611715565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610950576001600085848151811061088c5761088b611715565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208383815181106108e1576108e0611715565b5b602002602001015182815181106108fb576108fa611715565b5b602002602001015190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c0217905550610a21565b82828151811061096357610962611715565b5b6020026020010151818151811061097d5761097c611715565b5b60200260200101516001600086858151811061099c5761099b611715565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109f0576109ef611715565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b80610a2b90611773565b90506107ef565b5080610a3d90611773565b90506107e3565b505050565b600033905090565b828054828255906000526020600020908101928215610aca579160200282015b82811115610ac95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a71565b5b509050610ad79190610b3b565b5090565b828054828255906000526020600020908101928215610b2a579160200282015b82811115610b29578251829080519060200190610b19929190610b58565b5091602001919060010190610afb565b5b509050610b379190610c05565b5090565b5b80821115610b54576000816000905550600101610b3c565b5090565b82805482825590600052602060002090600701600890048101928215610bf45791602002820160005b83821115610bc257835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610b81565b8015610bf25782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610bc2565b505b509050610c019190610b3b565b5090565b5b80821115610c255760008181610c1c9190610c29565b50600101610c06565b5090565b508054600082556007016008900490600052602060002090810190610c4e9190610b3b565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cb382610c6a565b810181811067ffffffffffffffff82111715610cd257610cd1610c7b565b5b80604052505050565b6000610ce5610c51565b9050610cf18282610caa565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2682610cfb565b9050919050565b610d3681610d1b565b8114610d4157600080fd5b50565b600081359050610d5381610d2d565b92915050565b600080fd5b600067ffffffffffffffff821115610d7957610d78610c7b565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b610da281610d8f565b8114610dad57600080fd5b50565b600081359050610dbf81610d99565b92915050565b6000610dd8610dd384610d5e565b610cdb565b90508083825260208201905060208402830185811115610dfb57610dfa610d8a565b5b835b81811015610e245780610e108882610db0565b845260208401935050602081019050610dfd565b5050509392505050565b600082601f830112610e4357610e42610d59565b5b8135610e53848260208601610dc5565b91505092915050565b600063ffffffff82169050919050565b610e7581610e5c565b8114610e8057600080fd5b50565b600081359050610e9281610e6c565b92915050565b600060ff82169050919050565b610eae81610e98565b8114610eb957600080fd5b50565b600081359050610ecb81610ea5565b92915050565b60008115159050919050565b610ee681610ed1565b8114610ef157600080fd5b50565b600081359050610f0381610edd565b92915050565b600060e08284031215610f1f57610f1e610c65565b5b610f2960e0610cdb565b90506000610f3984828501610d44565b600083015250602082013567ffffffffffffffff811115610f5d57610f5c610cf6565b5b610f6984828501610e2e565b6020830152506040610f7d84828501610db0565b6040830152506060610f9184828501610db0565b6060830152506080610fa584828501610e83565b60808301525060a0610fb984828501610ebc565b60a08301525060c0610fcd84828501610ef4565b60c08301525092915050565b60008060408385031215610ff057610fef610c5b565b5b600083013567ffffffffffffffff81111561100e5761100d610c60565b5b61101a85828601610f09565b925050602061102b85828601610db0565b9150509250929050565b6000806040838503121561104c5761104b610c5b565b5b600061105a85828601610d44565b925050602061106b85828601610db0565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110aa81611075565b82525050565b60006020820190506110c560008301846110a1565b92915050565b6000602082840312156110e1576110e0610c5b565b5b600082013567ffffffffffffffff8111156110ff576110fe610c60565b5b61110b84828501610f09565b91505092915050565b61111d81610d1b565b82525050565b60006020820190506111386000830184611114565b92915050565b60006020828403121561115457611153610c5b565b5b600061116284828501610d44565b91505092915050565b61117481610d8f565b82525050565b600060208201905061118f600083018461116b565b92915050565b600067ffffffffffffffff8211156111b0576111af610c7b565b5b602082029050602081019050919050565b60006111d46111cf84611195565b610cdb565b905080838252602082019050602084028301858111156111f7576111f6610d8a565b5b835b81811015611220578061120c8882610d44565b8452602084019350506020810190506111f9565b5050509392505050565b600082601f83011261123f5761123e610d59565b5b813561124f8482602086016111c1565b91505092915050565b600067ffffffffffffffff82111561127357611272610c7b565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561129f5761129e610c7b565b5b602082029050602081019050919050565b6112b981611075565b81146112c457600080fd5b50565b6000813590506112d6816112b0565b92915050565b60006112ef6112ea84611284565b610cdb565b9050808382526020820190506020840283018581111561131257611311610d8a565b5b835b8181101561133b578061132788826112c7565b845260208401935050602081019050611314565b5050509392505050565b600082601f83011261135a57611359610d59565b5b813561136a8482602086016112dc565b91505092915050565b600061138661138184611258565b610cdb565b905080838252602082019050602084028301858111156113a9576113a8610d8a565b5b835b818110156113f057803567ffffffffffffffff8111156113ce576113cd610d59565b5b8086016113db8982611345565b855260208501945050506020810190506113ab565b5050509392505050565b600082601f83011261140f5761140e610d59565b5b813561141f848260208601611373565b91505092915050565b600060a0828403121561143e5761143d610c65565b5b61144860a0610cdb565b9050600082013567ffffffffffffffff81111561146857611467610cf6565b5b6114748482850161122a565b600083015250602061148884828501610d44565b602083015250604061149c84828501610d44565b60408301525060606114b084828501610d44565b606083015250608082013567ffffffffffffffff8111156114d4576114d3610cf6565b5b6114e0848285016113fa565b60808301525092915050565b60006020828403121561150257611501610c5b565b5b600082013567ffffffffffffffff8111156115205761151f610c60565b5b61152c84828501611428565b91505092915050565b600060608201905061154a6000830186611114565b6115576020830185611114565b6115646040830184611114565b949350505050565b600081905092915050565b82818337600083830152505050565b6000611592838561156c565b935061159f838584611577565b82840190509392505050565b60006115b8828486611586565b91508190509392505050565b6000815190506115d381610d99565b92915050565b6000602082840312156115ef576115ee610c5b565b5b60006115fd848285016115c4565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611673602683611606565b915061167e82611617565b604082019050919050565b600060208201905081810360008301526116a281611666565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116df602083611606565b91506116ea826116a9565b602082019050919050565b6000602082019050818103600083015261170e816116d2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061177e82610d8f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117b0576117af611744565b5b60018201905091905056fea2646970667358221220d95c62896920b20ce35faecb37a6b96d6acd0ed3b3db259e77c47a861489cdcc64736f6c63430008110033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Shop";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Shop> {
    return super.deploy(input, overrides || {}) as Promise<Shop>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Shop {
    return super.attach(address) as Shop;
  }
  connect(signer: Signer): Shop__factory {
    return super.connect(signer) as Shop__factory;
  }
  static readonly contractName: "Shop";
  public readonly contractName: "Shop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new utils.Interface(_abi) as ShopInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shop {
    return new Contract(address, _abi, signerOrProvider) as Shop;
  }
}
