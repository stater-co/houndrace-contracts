/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncubatorMethods,
  IncubatorMethodsInterface,
  IncubatorConstructor,
} from "../IncubatorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getIdentity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsIdentity",
    outputs: [
      {
        internalType: "uint256",
        name: "maleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "femaleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "generation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "birthDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "extensionTraits",
        type: "string",
      },
      {
        internalType: "enum Specie.Enum",
        name: "specie",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "identity",
        type: "tuple",
      },
    ],
    name: "setIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a3b38038062001a3b8339810160408190526200003491620003b7565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a083015180518493620000cb9260069291019062000216565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905560a0810151620000ff9062000157565b5050620004db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200021257600860008383815181106200017d576200017d6200049d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560086000848481518110620001cd57620001cd6200049d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200020a81620004b3565b90506200015a565b5050565b8280548282559060005260206000209081019282156200026e579160200282015b828111156200026e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000237565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002d257620002d262000297565b60405290565b80516001600160a01b0381168114620002f057600080fd5b919050565b600082601f8301126200030757600080fd5b815160206001600160401b038083111562000326576200032662000297565b8260051b604051601f19603f830116810181811084821117156200034e576200034e62000297565b6040529384528581018301938381019250878511156200036d57600080fd5b83870191505b8482101562000397576200038782620002d8565b8352918301919083019062000373565b979650505050505050565b805163ffffffff81168114620002f057600080fd5b600060208284031215620003ca57600080fd5b81516001600160401b0380821115620003e257600080fd5b9083019060e08286031215620003f757600080fd5b62000401620002ad565b6200040c83620002d8565b81526200041c60208401620002d8565b60208201526200042f60408401620002d8565b60408201526200044260608401620002d8565b60608201526200045560808401620002d8565b608082015260a0830151828111156200046d57600080fd5b6200047b87828601620002f5565b60a0830152506200048f60c08401620003a2565b60c082015295945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d457634e487b7160e01b600052601160045260246000fd5b5060010190565b61155080620004eb6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806307b371c714610093578063715018a6146100a85780637f1f59bf146100b057806385e3f058146100c35780638da5cb5b146100ec578063c2115d4d1461010c578063d63a8e111461011f578063d8de658714610152578063e0eb2c56146101d0578063f2fde38b146101f5575b600080fd5b6100a66100a1366004610e80565b610208565b005b6100a6610550565b6100a66100be366004610efe565b610564565b6100d66100d1366004610f44565b61060e565b6040516100e39190610fdb565b60405180910390f35b6100f4610783565b6040516001600160a01b0390911681526020016100e3565b6100a661011a36600461110f565b610792565b61014261012d3660046111e1565b60086020526000908152604090205460ff1681565b60405190151581526020016100e3565b600154600254600354600454600554600754610188956001600160a01b0390811695811694811693811692169063ffffffff1686565b604080516001600160a01b0397881681529587166020870152938616938501939093529084166060840152909216608082015263ffffffff90911660a082015260c0016100e3565b6101e36101de366004610f44565b610858565b6040516100e396959493929190611203565b6100a66102033660046111e1565b61091a565b3360009081526008602052604090205460ff1661022457600080fd5b6002546000906001600160a01b031663abaa08b385881161024957846080015161024f565b86608001515b60405160200161025f919061126c565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161028a9190611281565b602060405180830381865afa1580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190611294565b60035460808088015190860151604051631f59d3b960e01b81529394506000936001600160a01b0390931692631f59d3b99261030d92909187906004016112ad565b6106c060405180830381865afa15801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f91906112d9565b6004805460405163056a3f0f60e11b81529293506001600160a01b031691630ad47e1e91610381918791869101611343565b600060405180830381600087803b15801561039b57600080fd5b505af11580156103af573d6000803e3d6000fd5b505050506040518060e00160405280888152602001868152602001856040015188604001516103de919061136e565b815242602080830191909152604080830185905280519182019052600081526060820152600254608090910190610420906064906001600160a01b0316611381565b60631461046c578560c00151600681111561043d5761043d610fa3565b8860c00151600681111561045357610453610fa3565b11610462578760c001516104ad565b8560c001516104ad565b8560c00151600681111561048257610482610fa3565b8860c00151600681111561049857610498610fa3565b116104a7578560c001516104ad565b8760c001515b60068111156104be576104be610fa3565b9052600084815260096020908152604091829020835181559083015160018201559082015160028201556060820151600382015560808201516105079060048301906036610af9565b5060a0820151600b82019061051c908261142c565b5060c0820151600c8201805460ff1916600183600681111561054057610540610fa3565b0217905550505050505050505050565b610558610995565b61056260006109f4565b565b3360009081526008602052604090205460ff1661058057600080fd5b600082815260096020908152604091829020835181559083015160018201559082015160028201556060820151600382015560808201518291906105ca9060048301906036610af9565b5060a0820151600b8201906105df908261142c565b5060c0820151600c8201805460ff1916600183600681111561060357610603610fa3565b021790555050505050565b610616610b95565b6000828152600960209081526040808320815160e081018352815481526001820154938101939093526002810154838301526003810154606084015281516106c0810192839052929390926080850192909160048501916036918390855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161067457905050505050508152602001600b820180546106c9906113a3565b80601f01602080910402602001604051908101604052809291908181526020018280546106f5906113a3565b80156107425780601f1061071757610100808354040283529160200191610742565b820191906000526020600020905b81548152906001019060200180831161072557829003601f168201915b5050509183525050600c82015460209091019060ff16600681111561076957610769610fa3565b600681111561077a5761077a610fa3565b90525092915050565b6000546001600160a01b031690565b61079a610995565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a08301518051849361082392600692910190610bd7565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905560a081015161085590610a44565b50565b60096020526000908152604090208054600182015460028301546003840154600b85018054949593949293919261088e906113a3565b80601f01602080910402602001604051908101604052809291908181526020018280546108ba906113a3565b80156109075780601f106108dc57610100808354040283529160200191610907565b820191906000526020600020905b8154815290600101906020018083116108ea57829003601f168201915b505050600c909301549192505060ff1686565b610922610995565b6001600160a01b03811661098c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610855816109f4565b3361099e610783565b6001600160a01b0316146105625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610983565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015610af55760086000838381518110610a6657610a666114eb565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560086000848481518110610ab357610ab36114eb565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610aee81611501565b9050610a47565b5050565b600783019183908215610b855791602002820160005b83821115610b5357835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610b0f565b8015610b835782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610b53565b505b50610b91929150610c2c565b5090565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001610bc4610c41565b8152606060208201526040016000905290565b828054828255906000526020600020908101928215610b85579160200282015b82811115610b8557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610bf7565b5b80821115610b915760008155600101610c2d565b604051806106c001604052806036906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610c9857610c98610c60565b60405290565b6040516106c081016001600160401b0381118282101715610c9857610c98610c60565b604051601f8201601f191681016001600160401b0381118282101715610ce957610ce9610c60565b604052919050565b63ffffffff8116811461085557600080fd5b8035610d0e81610cf1565b919050565b600082601f830112610d2457600080fd5b610d2c610c9e565b806106c0840185811115610d3f57600080fd5b845b81811015610d62578035610d5481610cf1565b845260209384019301610d41565b509095945050505050565b600082601f830112610d7e57600080fd5b81356001600160401b03811115610d9757610d97610c60565b610daa601f8201601f1916602001610cc1565b818152846020838601011115610dbf57600080fd5b816020850160208301376000918101602001919091529392505050565b803560078110610d0e57600080fd5b60006107808284031215610dfe57600080fd5b610e06610c76565b905081358152602082013560208201526040820135604082015260608201356060820152610e378360808401610d13565b60808201526107408201356001600160401b03811115610e5657600080fd5b610e6284828501610d6d565b60a083015250610e756107608301610ddc565b60c082015292915050565b600080600080600060a08688031215610e9857600080fd5b8535945060208601356001600160401b0380821115610eb657600080fd5b610ec289838a01610deb565b9550604088013594506060880135915080821115610edf57600080fd5b50610eec88828901610deb565b95989497509295608001359392505050565b60008060408385031215610f1157600080fd5b8235915060208301356001600160401b03811115610f2e57600080fd5b610f3a85828601610deb565b9150509250929050565b600060208284031215610f5657600080fd5b5035919050565b6000815180845260005b81811015610f8357602081850181015186830182015201610f67565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60078110610fd757634e487b7160e01b600052602160045260246000fd5b9052565b600060208083528351818401528084015160408401526040840151606084015260608401516080840152608084015160a0840160005b603681101561103457825163ffffffff1682529183019190830190600101611011565b5050505060a0830151610780806107608501526110556107a0850183610f5d565b915060c085015161106882860182610fb9565b5090949350505050565b80356001600160a01b0381168114610d0e57600080fd5b600082601f83011261109a57600080fd5b813560206001600160401b038211156110b5576110b5610c60565b8160051b6110c4828201610cc1565b92835284810182019282810190878511156110de57600080fd5b83870192505b84831015611104576110f583611072565b825291830191908301906110e4565b979650505050505050565b60006020828403121561112157600080fd5b81356001600160401b038082111561113857600080fd5b9083019060e0828603121561114c57600080fd5b611154610c76565b61115d83611072565b815261116b60208401611072565b602082015261117c60408401611072565b604082015261118d60608401611072565b606082015261119e60808401611072565b608082015260a0830135828111156111b557600080fd5b6111c187828601611089565b60a0830152506111d360c08401610d03565b60c082015295945050505050565b6000602082840312156111f357600080fd5b6111fc82611072565b9392505050565b86815285602082015284604082015283606082015260c06080820152600061122e60c0830185610f5d565b905061110460a0830184610fb9565b8060005b603681101561126657815163ffffffff16845260209384019390910190600101611241565b50505050565b6106c0810161127b828461123d565b92915050565b6020815260006111fc6020830184610f5d565b6000602082840312156112a657600080fd5b5051919050565b610da081016112bc828661123d565b6112ca6106c083018561123d565b82610d80830152949350505050565b60006106c08083850312156112ed57600080fd5b83601f8401126112fc57600080fd5b611304610c9e565b90830190808583111561131657600080fd5b845b8381101561133957805161132b81610cf1565b835260209283019201611318565b5095945050505050565b8281526106e081016111fc602083018461123d565b634e487b7160e01b600052601160045260246000fd5b8082018082111561127b5761127b611358565b60008261139e57634e487b7160e01b600052601260045260246000fd5b500690565b600181811c908216806113b757607f821691505b6020821081036113d757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561142757600081815260208120601f850160051c810160208610156114045750805b601f850160051c820191505b8181101561142357828155600101611410565b5050505b505050565b81516001600160401b0381111561144557611445610c60565b6114598161145384546113a3565b846113dd565b602080601f83116001811461148e57600084156114765750858301515b600019600386901b1c1916600185901b178555611423565b600085815260208120601f198616915b828110156114bd5788860151825594840194600190910190840161149e565b50858210156114db5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161151357611513611358565b506001019056fea264697066735822122055653a8b2d26cec6f27557ab31ff24bcacbf9a35750b89043bc125f6840970e164736f6c63430008110033";

type IncubatorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncubatorMethods__factory extends ContractFactory {
  constructor(...args: IncubatorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "IncubatorMethods";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncubatorMethods> {
    return super.deploy(input, overrides || {}) as Promise<IncubatorMethods>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): IncubatorMethods {
    return super.attach(address) as IncubatorMethods;
  }
  connect(signer: Signer): IncubatorMethods__factory {
    return super.connect(signer) as IncubatorMethods__factory;
  }
  static readonly contractName: "IncubatorMethods";
  public readonly contractName: "IncubatorMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorMethodsInterface {
    return new utils.Interface(_abi) as IncubatorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncubatorMethods {
    return new Contract(address, _abi, signerOrProvider) as IncubatorMethods;
  }
}
