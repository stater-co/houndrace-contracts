/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncubatorMethods,
  IncubatorMethodsInterface,
  IncubatorConstructor,
} from "../IncubatorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound2",
        type: "tuple",
      },
    ],
    name: "breedHounds",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012393803806200123983398101604081905262000034916200011a565b806200004033620000ad565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b0319909416919092161791909117905550620001b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011557600080fd5b919050565b6000608082840312156200012d57600080fd5b604051608081016001600160401b03811182821017156200015e57634e487b7160e01b600052604160045260246000fd5b6040526200016c83620000fd565b81526200017c60208401620000fd565b60208201526200018f60408401620000fd565b6040820152606083015163ffffffff81168114620001ac57600080fd5b60608201529392505050565b61107180620001c86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063203dbf0214610067578063715018a61461007c57806385b7dd89146100845780638da5cb5b146100ad578063d8de6587146100cd578063f2fde38b14610133575b600080fd5b61007a6100753660046107cc565b610146565b005b61007a6101b6565b610097610092366004610c25565b6101ca565b6040516100a49190610d63565b60405180910390f35b6100b56104be565b6040516001600160a01b0390911681526020016100a4565b6001546002546003546100fd926001600160a01b039081169281169190811690600160a01b900463ffffffff1684565b604080516001600160a01b0395861681529385166020850152919093169082015263ffffffff90911660608201526080016100a4565b61007a610141366004610ecb565b6104cd565b61014e61054b565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b03199094169190921617919091179055565b6101be61054b565b6101c860006105aa565b565b6101d26105fa565b6002546000906001600160a01b031663abaa08b38588116101fb57846060015160800151610205565b8660600151608001515b6040516020016102159190610f1c565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016102409190610f31565b602060405180830381865afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102819190610f44565b600354606080880151608090810151918701510151604051631f59d3b960e01b81529394506000936001600160a01b0390931692631f59d3b9926102cb9290918790600401610f5d565b6106c060405180830381865afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d9190610f89565b6040805160808101825260008082526020820181905281830181905260608201819052825160c0810190935292935091908061034a600287610ff3565b1561035a57602088015151610361565b60208a0151515b6001600160a01b031681526000602080830182905267016345785d8a00006040808501919091526064606085018190526001608086015260a094850152805193840190528183526003549394509092908201906103cb90600160a01b900463ffffffff1642611015565b81526020018a60400151604001516001600160a01b031681526020016000815260200160001515815250905060006040518060c001604052808c81526020018a81526020018960600151604001518c606001516040015161042c9190611015565b815260200142815260200186815260200160405180602001604052806000815250815250905060405180610100016040528085815260200184815260200183815260200182815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160008152602001600015158152509650505050505050949350505050565b6000546001600160a01b031690565b6104d561054b565b6001600160a01b03811661053f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610548816105aa565b50565b336105546104be565b6001600160a01b0316146101c85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610536565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805161018081019091526000610100820181815261012083018290526101408301829052610160830191909152819081526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291019081526040805160a08101825260008082526020828101829052928201819052606082018190526080820152910190815260200161069b6106bf565b81526020016060815260200160608152602001600081526020016000151581525090565b6040518060c00160405280600081526020016000815260200160008152602001600081526020016106ee6106fb565b8152602001606081525090565b604051806106c001604052806036906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156107525761075261071a565b60405290565b60405161010081016001600160401b03811182821017156107525761075261071a565b6040516106c081016001600160401b03811182821017156107525761075261071a565b80356001600160a01b03811681146107b557600080fd5b919050565b63ffffffff8116811461054857600080fd5b6000608082840312156107de57600080fd5b604051608081016001600160401b03811182821017156108005761080061071a565b60405261080c8361079e565b815261081a6020840161079e565b602082015261082b6040840161079e565b6040820152606083013561083e816107ba565b60608201529392505050565b80356001600160401b03811681146107b557600080fd5b60006080828403121561087357600080fd5b604051608081016001600160401b03811182821017156108955761089561071a565b6040529050806108a48361084a565b81526108b26020840161084a565b60208201526108c36040840161084a565b60408201526108d46060840161084a565b60608201525092915050565b600060c082840312156108f257600080fd5b6108fa610730565b90506109058261079e565b815260208201356020820152604082013560408201526060820135610929816107ba565b6060820152608082013561093c816107ba565b608082015260a082013561094f816107ba565b60a082015292915050565b803580151581146107b557600080fd5b600060a0828403121561097c57600080fd5b60405160a081016001600160401b038111828210171561099e5761099e61071a565b806040525080915082358152602083013560208201526109c06040840161079e565b6040820152606083013560608201526109db6080840161095a565b60808201525092915050565b600082601f8301126109f857600080fd5b81356001600160401b0380821115610a1257610a1261071a565b604051601f8301601f19908116603f01168101908282118183101715610a3a57610a3a61071a565b81604052838152866020858801011115610a5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006107608284031215610a8657600080fd5b610a8e610730565b90508135815260208083013581830152604083013560408301526060830135606083015283609f840112610ac157600080fd5b610ac961077b565b80610740850186811115610adc57600080fd5b608086015b81811015610b01578035610af4816107ba565b8452928401928401610ae1565b506080850191909152359150506001600160401b03811115610b2257600080fd5b610b2e848285016109e7565b60a08301525092915050565b60006102808284031215610b4d57600080fd5b610b55610758565b9050610b618383610861565b8152610b7083608084016108e0565b6020820152610b8383610140840161096a565b60408201526101e08201356001600160401b0380821115610ba357600080fd5b610baf85838601610a73565b6060840152610200840135915080821115610bc957600080fd5b610bd5858386016109e7565b6080840152610220840135915080821115610bef57600080fd5b50610bfc848285016109e7565b60a08301525061024082013560c0820152610c1a610260830161095a565b60e082015292915050565b60008060008060808587031215610c3b57600080fd5b8435935060208501356001600160401b0380821115610c5957600080fd5b610c6588838901610b3a565b9450604087013593506060870135915080821115610c8257600080fd5b50610c8f87828801610b3a565b91505092959194509250565b6000815180845260005b81811015610cc157602081850181015186830182015201610ca5565b81811115610cd3576000602083870101525b50601f01601f19169290920160200192915050565b60006107608251845260208084015181860152604084015160408601526060840151606086015260808401516080860160005b6036811015610d3e57825163ffffffff1682529183019190830190600101610d1b565b5050505060a083015181610740860152610d5a82860182610c9b565b95945050505050565b60208152610da360208201835180516001600160401b03908116835260208083015182169084015260408281015182169084015260609182015116910152565b60208281015180516001600160a01b031660a0848101919091529181015160c0840152604081015160e0840152606081015163ffffffff90811661010085015260808201518116610120850152918101519091166101408301526000905060408381015180516101608501526020810151610180850152908101516001600160a01b03166101a084015260608101516101c0840152608081015115156101e084015250606083015161028080610200850152610e636102a0850183610ce8565b91506080850151601f198086850301610220870152610e828483610c9b565b935060a08701519150808685030161024087015250610ea18382610c9b565b92505060c085015161026085015260e0850151610ec18286018215159052565b5090949350505050565b600060208284031215610edd57600080fd5b610ee68261079e565b9392505050565b8060005b6036811015610f1657815163ffffffff16845260209384019390910190600101610ef1565b50505050565b6106c08101610f2b8284610eed565b92915050565b602081526000610ee66020830184610c9b565b600060208284031215610f5657600080fd5b5051919050565b610da08101610f6c8286610eed565b610f7a6106c0830185610eed565b82610d80830152949350505050565b60006106c0808385031215610f9d57600080fd5b83601f840112610fac57600080fd5b610fb461077b565b908301908085831115610fc657600080fd5b845b83811015610fe9578051610fdb816107ba565b835260209283019201610fc8565b5095945050505050565b60008261101057634e487b7160e01b600052601260045260246000fd5b500690565b6000821982111561103657634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220912218cdb5bce916ae9290998667113eba773fc35bcaae727bff27181f5360a364736f6c634300080f0033";

type IncubatorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncubatorMethods__factory extends ContractFactory {
  constructor(...args: IncubatorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "IncubatorMethods";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncubatorMethods> {
    return super.deploy(input, overrides || {}) as Promise<IncubatorMethods>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): IncubatorMethods {
    return super.attach(address) as IncubatorMethods;
  }
  connect(signer: Signer): IncubatorMethods__factory {
    return super.connect(signer) as IncubatorMethods__factory;
  }
  static readonly contractName: "IncubatorMethods";
  public readonly contractName: "IncubatorMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorMethodsInterface {
    return new utils.Interface(_abi) as IncubatorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncubatorMethods {
    return new Contract(address, _abi, signerOrProvider) as IncubatorMethods;
  }
}
