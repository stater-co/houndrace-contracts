/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncubatorMethods,
  IncubatorMethodsInterface,
  IncubatorConstructor,
} from "../IncubatorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound2",
        type: "tuple",
      },
    ],
    name: "breedHounds",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
              {
                internalType: "string",
                name: "extensionTraits",
                type: "string",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200115e3803806200115e83398101604081905262000034916200011a565b806200004033620000ad565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b0319909416919092161791909117905550620001b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011557600080fd5b919050565b6000608082840312156200012d57600080fd5b604051608081016001600160401b03811182821017156200015e57634e487b7160e01b600052604160045260246000fd5b6040526200016c83620000fd565b81526200017c60208401620000fd565b60208201526200018f60408401620000fd565b6040820152606083015163ffffffff81168114620001ac57600080fd5b60608201529392505050565b610f9680620001c86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063203dbf0214610067578063715018a61461007c5780638da5cb5b14610084578063d8de6587146100a9578063db2a02de1461010f578063f2fde38b1461012f575b600080fd5b61007a610075366004610797565b610142565b005b61007a6101b2565b61008c6101c6565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546002546003546100d9926001600160a01b039081169281169190811690600160a01b900463ffffffff1684565b604080516001600160a01b0395861681529385166020850152919093169082015263ffffffff90911660608201526080016100a0565b61012261011d366004610ba5565b6101d5565b6040516100a09190610cdc565b61007a61013d366004610e17565b610479565b61014a6104f7565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b03199094169190921617919091179055565b6101ba6104f7565b6101c46000610556565b565b6000546001600160a01b031690565b6101dd6105a6565b6002546000906001600160a01b031663abaa08b385881161020657846060015160800151610210565b8660600151608001515b6040516020016102209190610e68565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161024b9190610e7d565b602060405180830381865afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c9190610e90565b600354606080880151608090810151918701510151604051631f59d3b960e01b81529394506000936001600160a01b0390931692631f59d3b9926102d69290918790600401610ea9565b6106c060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610ed5565b6040805160808082018352600080835260208084018290528385018290526060808501839052855160a08101875283815267016345785d8a00008184015260648188018190526001928201929092528085019190915285519384019095528183526003549596509294909282019061039d90600160a01b900463ffffffff1642610f3f565b81526020016000815260200160001515815250905060006040518060c001604052808c81526020018a81526020018960600151604001518c60600151604001516103e79190610f3f565b815260200142815260200186815260200160405180602001604052806000815250815250905060405180610100016040528085815260200184815260200183815260200182815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160008152602001600015158152509650505050505050949350505050565b6104816104f7565b6001600160a01b0381166104eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104f481610556565b50565b336105006101c6565b6001600160a01b0316146101c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805161018081019091526000610100820181815261012083018290526101408301829052610160830191909152819081526040805160a08101825260008082526020828101829052928201819052606082018190526080820152910190815260200161063760405180608001604052806000815260200160008152602001600081526020016000151581525090565b8152602001610644610668565b81526020016060815260200160608152602001600081526020016000151581525090565b6040518060c00160405280600081526020016000815260200160008152602001600081526020016106976106a4565b8152602001606081525090565b604051806106c001604052806036906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156106fb576106fb6106c3565b60405290565b60405160c081016001600160401b03811182821017156106fb576106fb6106c3565b60405161010081016001600160401b03811182821017156106fb576106fb6106c3565b6040516106c081016001600160401b03811182821017156106fb576106fb6106c3565b80356001600160a01b038116811461078057600080fd5b919050565b63ffffffff811681146104f457600080fd5b6000608082840312156107a957600080fd5b604051608081016001600160401b03811182821017156107cb576107cb6106c3565b6040526107d783610769565b81526107e560208401610769565b60208201526107f660408401610769565b6040820152606083013561080981610785565b60608201529392505050565b80356001600160401b038116811461078057600080fd5b60006080828403121561083e57600080fd5b6108466106d9565b905061085182610815565b815261085f60208301610815565b602082015261087060408301610815565b604082015261088160608301610815565b606082015292915050565b600060a0828403121561089e57600080fd5b60405160a081016001600160401b03811182821017156108c0576108c06106c3565b8060405250809150823581526020830135602082015260408301356108e481610785565b604082015260608301356108f781610785565b6060820152608083013561090a81610785565b6080919091015292915050565b8035801515811461078057600080fd5b60006080828403121561093957600080fd5b6109416106d9565b905081358152602082013560208201526040820135604082015261088160608301610917565b600082601f83011261097857600080fd5b81356001600160401b0380821115610992576109926106c3565b604051601f8301601f19908116603f011681019082821181831017156109ba576109ba6106c3565b816040528381528660208588010111156109d357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006107608284031215610a0657600080fd5b610a0e610701565b90508135815260208083013581830152604083013560408301526060830135606083015283609f840112610a4157600080fd5b610a49610746565b80610740850186811115610a5c57600080fd5b608086015b81811015610a81578035610a7481610785565b8452928401928401610a61565b506080850191909152359150506001600160401b03811115610aa257600080fd5b610aae84828501610967565b60a08301525092915050565b60006102408284031215610acd57600080fd5b610ad5610723565b9050610ae1838361082c565b8152610af0836080840161088c565b6020820152610b03836101208401610927565b60408201526101a08201356001600160401b0380821115610b2357600080fd5b610b2f858386016109f3565b60608401526101c0840135915080821115610b4957600080fd5b610b5585838601610967565b60808401526101e0840135915080821115610b6f57600080fd5b50610b7c84828501610967565b60a08301525061020082013560c0820152610b9a6102208301610917565b60e082015292915050565b60008060008060808587031215610bbb57600080fd5b8435935060208501356001600160401b0380821115610bd957600080fd5b610be588838901610aba565b9450604087013593506060870135915080821115610c0257600080fd5b50610c0f87828801610aba565b91505092959194509250565b6000815180845260005b81811015610c4157602081850181015186830182015201610c25565b506000602082860101526020601f19601f83011685010191505092915050565b60006107608251845260208084015181860152604084015160408601526060840151606086015260808401516080860160005b6036811015610cb757825163ffffffff1682529183019190830190600101610c94565b5050505060a083015181610740860152610cd382860182610c1b565b95945050505050565b60208152610d1c60208201835180516001600160401b03908116835260208083015182169084015260408281015182169084015260609182015116910152565b602082810151805160a08401529081015160c0830152604081015163ffffffff90811660e084015260608201518116610100840152608082015116610120830152600090506040838101518051610140850152602081015161016085015290810151610180840152606081015115156101a0840152506060830151610240806101c0850152610daf610260850183610c61565b91506080850151601f1980868503016101e0870152610dce8483610c1b565b935060a08701519150808685030161020087015250610ded8382610c1b565b92505060c085015161022085015260e0850151610e0d8286018215159052565b5090949350505050565b600060208284031215610e2957600080fd5b610e3282610769565b9392505050565b8060005b6036811015610e6257815163ffffffff16845260209384019390910190600101610e3d565b50505050565b6106c08101610e778284610e39565b92915050565b602081526000610e326020830184610c1b565b600060208284031215610ea257600080fd5b5051919050565b610da08101610eb88286610e39565b610ec66106c0830185610e39565b82610d80830152949350505050565b60006106c0808385031215610ee957600080fd5b83601f840112610ef857600080fd5b610f00610746565b908301908085831115610f1257600080fd5b845b83811015610f35578051610f2781610785565b835260209283019201610f14565b5095945050505050565b80820180821115610e7757634e487b7160e01b600052601160045260246000fdfea26469706673582212204b717912fe3f5cc8368e83c09ce61098a5aec1ca34d5a03992c8f0194c4e2fbe64736f6c63430008100033";

type IncubatorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncubatorMethods__factory extends ContractFactory {
  constructor(...args: IncubatorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "IncubatorMethods";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncubatorMethods> {
    return super.deploy(input, overrides || {}) as Promise<IncubatorMethods>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): IncubatorMethods {
    return super.attach(address) as IncubatorMethods;
  }
  connect(signer: Signer): IncubatorMethods__factory {
    return super.connect(signer) as IncubatorMethods__factory;
  }
  static readonly contractName: "IncubatorMethods";
  public readonly contractName: "IncubatorMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorMethodsInterface {
    return new utils.Interface(_abi) as IncubatorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncubatorMethods {
    return new Contract(address, _abi, signerOrProvider) as IncubatorMethods;
  }
}
