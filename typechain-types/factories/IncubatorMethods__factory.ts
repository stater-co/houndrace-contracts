/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncubatorMethods,
  IncubatorMethodsInterface,
  IncubatorConstructor,
} from "../IncubatorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getIdentity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsIdentity",
    outputs: [
      {
        internalType: "uint256",
        name: "maleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "femaleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "generation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "birthDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "extensionTraits",
        type: "string",
      },
      {
        internalType: "enum Specie.Enum",
        name: "specie",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "identity",
        type: "tuple",
      },
    ],
    name: "setIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001de838038062001de88339810160408190526200003491620003b7565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a083015180518493620000cb9260069291019062000216565b5060c091909101516006909101805463ffffffff191663ffffffff90921691909117905560a0810151620000ff9062000157565b5050620004db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200021257600860008383815181106200017d576200017d6200049d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560086000848481518110620001cd57620001cd6200049d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200020a81620004b3565b90506200015a565b5050565b8280548282559060005260206000209081019282156200026e579160200282015b828111156200026e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000237565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002d257620002d262000297565b60405290565b80516001600160a01b0381168114620002f057600080fd5b919050565b600082601f8301126200030757600080fd5b815160206001600160401b038083111562000326576200032662000297565b8260051b604051601f19603f830116810181811084821117156200034e576200034e62000297565b6040529384528581018301938381019250878511156200036d57600080fd5b83870191505b8482101562000397576200038782620002d8565b8352918301919083019062000373565b979650505050505050565b805163ffffffff81168114620002f057600080fd5b600060208284031215620003ca57600080fd5b81516001600160401b0380821115620003e257600080fd5b9083019060e08286031215620003f757600080fd5b62000401620002ad565b6200040c83620002d8565b81526200041c60208401620002d8565b60208201526200042f60408401620002d8565b60408201526200044260608401620002d8565b60608201526200045560808401620002d8565b608082015260a0830151828111156200046d57600080fd5b6200047b87828601620002f5565b60a0830152506200048f60c08401620003a2565b60c082015295945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d457634e487b7160e01b600052601160045260246000fd5b5060010190565b6118fd80620004eb6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063c2115d4d11610076578063d8de65871161005b578063d8de65871461018a578063e0eb2c5614610222578063f2fde38b1461024757600080fd5b8063c2115d4d14610144578063d63a8e111461015757600080fd5b80637f1f59bf116100a75780637f1f59bf146100e057806385e3f058146100f35780638da5cb5b1461011c57600080fd5b806307b371c7146100c3578063715018a6146100d8575b600080fd5b6100d66100d13660046110ee565b61025a565b005b6100d6610626565b6100d66100ee36600461116d565b61063a565b6101066101013660046111b4565b610702565b604051610113919061129b565b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b6100d66101523660046113dd565b610877565b61017a6101653660046114b0565b60086020526000908152604090205460ff1681565b6040519015158152602001610113565b6001546002546003546004546005546007546101cd9573ffffffffffffffffffffffffffffffffffffffff90811695811694811693811692169063ffffffff1686565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529084166060840152909216608082015263ffffffff90911660a082015260c001610113565b6102356102303660046111b4565b61097d565b604051610113969594939291906114d2565b6100d66102553660046114b0565b610a3f565b3360009081526008602052604090205460ff1661027657600080fd5b60025460009073ffffffffffffffffffffffffffffffffffffffff1663abaa08b38588116102a85784608001516102ae565b86608001515b6040516020016102be919061153b565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016102e99190611550565b602060405180830381865afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a9190611563565b600354608080880151908601516040517f1f59d3b900000000000000000000000000000000000000000000000000000000815293945060009373ffffffffffffffffffffffffffffffffffffffff90931692631f59d3b992610392929091879060040161157c565b6106c060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d491906115a8565b600480546040517f0ad47e1e00000000000000000000000000000000000000000000000000000000815292935073ffffffffffffffffffffffffffffffffffffffff1691630ad47e1e9161042c918791869101611612565b600060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b505050506040518060e00160405280888152602001868152602001856040015188604001516104899190611656565b8152426020808301919091526040808301859052805191820190526000815260608201526002546080909101906104d89060649073ffffffffffffffffffffffffffffffffffffffff16611669565b606314610524578560c0015160068111156104f5576104f5611231565b8860c00151600681111561050b5761050b611231565b1161051a578760c00151610565565b8560c00151610565565b8560c00151600681111561053a5761053a611231565b8860c00151600681111561055057610550611231565b1161055f578560c00151610565565b8760c001515b600681111561057657610576611231565b9052600084815260096020908152604091829020835181559083015160018201559082015160028201556060820151600382015560808201516105bf9060048301906036610ce8565b5060a0820151600b8201906105d49082611746565b5060c0820151600c820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600681111561061657610616611231565b0217905550505050505050505050565b61062e610af8565b6106386000610b79565b565b3360009081526008602052604090205460ff1661065657600080fd5b600082815260096020908152604091829020835181559083015160018201559082015160028201556060820151600382015560808201518291906106a09060048301906036610ce8565b5060a0820151600b8201906106b59082611746565b5060c0820151600c820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360068111156106f7576106f7611231565b021790555050505050565b61070a610d84565b6000828152600960209081526040808320815160e081018352815481526001820154938101939093526002810154838301526003810154606084015281516106c0810192839052929390926080850192909160048501916036918390855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161076857905050505050508152602001600b820180546107bd906116a4565b80601f01602080910402602001604051908101604052809291908181526020018280546107e9906116a4565b80156108365780601f1061080b57610100808354040283529160200191610836565b820191906000526020600020905b81548152906001019060200180831161081957829003601f168201915b5050509183525050600c82015460209091019060ff16600681111561085d5761085d611231565b600681111561086e5761086e611231565b90525092915050565b61087f610af8565b8051600180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480548416918616919091179055608085015160058054909316941693909317905560a08301518051849361092d92600692910190610dc6565b5060c09190910151600690910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff90921691909117905560a081015161097a90610bee565b50565b60096020526000908152604090208054600182015460028301546003840154600b8501805494959394929391926109b3906116a4565b80601f01602080910402602001604051908101604052809291908181526020018280546109df906116a4565b8015610a2c5780601f10610a0157610100808354040283529160200191610a2c565b820191906000526020600020905b815481529060010190602001808311610a0f57829003601f168201915b505050600c909301549192505060ff1686565b610a47610af8565b73ffffffffffffffffffffffffffffffffffffffff8116610aef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61097a81610b79565b60005473ffffffffffffffffffffffffffffffffffffffff163314610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ae6565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015610ce45760086000838381518110610c1057610c10611860565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161560086000848481518110610c7757610c77611860565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610cdd8161188f565b9050610bf1565b5050565b600783019183908215610d745791602002820160005b83821115610d4257835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610cfe565b8015610d725782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610d42565b505b50610d80929150610e40565b5090565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001610db3610e55565b8152606060208201526040016000905290565b828054828255906000526020600020908101928215610d74579160200282015b82811115610d7457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610de6565b5b80821115610d805760008155600101610e41565b604051806106c001604052806036906020820280368337509192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610ec657610ec6610e74565b60405290565b6040516106c0810167ffffffffffffffff81118282101715610ec657610ec6610e74565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f3757610f37610e74565b604052919050565b63ffffffff8116811461097a57600080fd5b8035610f5c81610f3f565b919050565b600082601f830112610f7257600080fd5b610f7a610ecc565b806106c0840185811115610f8d57600080fd5b845b81811015610fb0578035610fa281610f3f565b845260209384019301610f8f565b509095945050505050565b600082601f830112610fcc57600080fd5b813567ffffffffffffffff811115610fe657610fe6610e74565b61101760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610ef0565b81815284602083860101111561102c57600080fd5b816020850160208301376000918101602001919091529392505050565b803560078110610f5c57600080fd5b6000610780828403121561106b57600080fd5b611073610ea3565b9050813581526020820135602082015260408201356040820152606082013560608201526110a48360808401610f61565b608082015261074082013567ffffffffffffffff8111156110c457600080fd5b6110d084828501610fbb565b60a0830152506110e36107608301611049565b60c082015292915050565b600080600080600060a0868803121561110657600080fd5b85359450602086013567ffffffffffffffff8082111561112557600080fd5b61113189838a01611058565b955060408801359450606088013591508082111561114e57600080fd5b5061115b88828901611058565b95989497509295608001359392505050565b6000806040838503121561118057600080fd5b82359150602083013567ffffffffffffffff81111561119e57600080fd5b6111aa85828601611058565b9150509250929050565b6000602082840312156111c657600080fd5b5035919050565b6000815180845260005b818110156111f3576020818501810151868301820152016111d7565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110611297577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600060208083528351818401528084015160408401526040840151606084015260608401516080840152608084015160a0840160005b60368110156112f457825163ffffffff16825291830191908301906001016112d1565b5050505060a0830151610780806107608501526113156107a08501836111cd565b915060c085015161132882860182611260565b5090949350505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f5c57600080fd5b600082601f83011261136757600080fd5b8135602067ffffffffffffffff82111561138357611383610e74565b8160051b611392828201610ef0565b92835284810182019282810190878511156113ac57600080fd5b83870192505b848310156113d2576113c383611332565b825291830191908301906113b2565b979650505050505050565b6000602082840312156113ef57600080fd5b813567ffffffffffffffff8082111561140757600080fd5b9083019060e0828603121561141b57600080fd5b611423610ea3565b61142c83611332565b815261143a60208401611332565b602082015261144b60408401611332565b604082015261145c60608401611332565b606082015261146d60808401611332565b608082015260a08301358281111561148457600080fd5b61149087828601611356565b60a0830152506114a260c08401610f51565b60c082015295945050505050565b6000602082840312156114c257600080fd5b6114cb82611332565b9392505050565b86815285602082015284604082015283606082015260c0608082015260006114fd60c08301856111cd565b90506113d260a0830184611260565b8060005b603681101561153557815163ffffffff16845260209384019390910190600101611510565b50505050565b6106c0810161154a828461150c565b92915050565b6020815260006114cb60208301846111cd565b60006020828403121561157557600080fd5b5051919050565b610da0810161158b828661150c565b6115996106c083018561150c565b82610d80830152949350505050565b60006106c08083850312156115bc57600080fd5b83601f8401126115cb57600080fd5b6115d3610ecc565b9083019080858311156115e557600080fd5b845b838110156116085780516115fa81610f3f565b8352602092830192016115e7565b5095945050505050565b8281526106e081016114cb602083018461150c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561154a5761154a611627565b60008261169f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b600181811c908216806116b857607f821691505b6020821081036116f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561174157600081815260208120601f850160051c8101602086101561171e5750805b601f850160051c820191505b8181101561173d5782815560010161172a565b5050505b505050565b815167ffffffffffffffff81111561176057611760610e74565b6117748161176e84546116a4565b846116f7565b602080601f8311600181146117c757600084156117915750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561173d565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611814578886015182559484019460019091019084016117f5565b508582101561185057878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118c0576118c0611627565b506001019056fea2646970667358221220f8f73f8ef756640966f10f479266ffa6629237c5cd403f68934185c4387e8d5e64736f6c63430008110033";

type IncubatorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncubatorMethods__factory extends ContractFactory {
  constructor(...args: IncubatorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "IncubatorMethods";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncubatorMethods> {
    return super.deploy(input, overrides || {}) as Promise<IncubatorMethods>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): IncubatorMethods {
    return super.attach(address) as IncubatorMethods;
  }
  connect(signer: Signer): IncubatorMethods__factory {
    return super.connect(signer) as IncubatorMethods__factory;
  }
  static readonly contractName: "IncubatorMethods";
  public readonly contractName: "IncubatorMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorMethodsInterface {
    return new utils.Interface(_abi) as IncubatorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncubatorMethods {
    return new Contract(address, _abi, signerOrProvider) as IncubatorMethods;
  }
}
