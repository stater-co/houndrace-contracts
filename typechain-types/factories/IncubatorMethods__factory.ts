/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncubatorMethods,
  IncubatorMethodsInterface,
  IncubatorConstructor,
} from "../IncubatorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "hound2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "breedHounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getIdentity",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsIdentity",
    outputs: [
      {
        internalType: "uint256",
        name: "maleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "femaleParent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "generation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "birthDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "extensionTraits",
        type: "string",
      },
      {
        internalType: "enum Specie.Enum",
        name: "specie",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "femaleParent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "generation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "birthDate",
            type: "uint256",
          },
          {
            internalType: "uint32[54]",
            name: "geneticSequence",
            type: "uint32[54]",
          },
          {
            internalType: "string",
            name: "extensionTraits",
            type: "string",
          },
          {
            internalType: "enum Specie.Enum",
            name: "specie",
            type: "uint8",
          },
        ],
        internalType: "struct HoundIdentity.Struct",
        name: "identity",
        type: "tuple",
      },
    ],
    name: "setIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c8638038062001c86833981016040819052620000349162000329565b806200004033620000f3565b8051600180546001600160a01b03199081166001600160a01b0393841617825560208085015160028054841691861691909117905560408501516003805484169186169190911790556060850151600480549093169416939093179055608083015180518493620000b79260059291019062000202565b5060a091909101516005909101805463ffffffff191663ffffffff9092169190911790556080810151620000eb9062000143565b5050620004ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015620001fe57600760008383815181106200016957620001696200046f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560076000848481518110620001b957620001b96200046f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001f68162000485565b905062000146565b5050565b8280548282559060005260206000209081019282156200025a579160200282015b828111156200025a57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000223565b50620002689291506200026c565b5090565b5b808211156200026857600081556001016200026d565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715620002be57620002be62000283565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620002ef57620002ef62000283565b604052919050565b80516001600160a01b03811681146200030f57600080fd5b919050565b805163ffffffff811681146200030f57600080fd5b600060208083850312156200033d57600080fd5b82516001600160401b03808211156200035557600080fd5b9084019060c082870312156200036a57600080fd5b6200037462000299565b6200037f83620002f7565b81526200038e848401620002f7565b84820152620003a060408401620002f7565b6040820152620003b360608401620002f7565b6060820152608083015182811115620003cb57600080fd5b8301601f81018813620003dd57600080fd5b805183811115620003f257620003f262000283565b8060051b935062000405868501620002c4565b818152938201860193868101908a8611156200042057600080fd5b928701925b8584101562000449576200043984620002f7565b8252928701929087019062000425565b6080850152506200046091505060a0840162000314565b60a08201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004a657634e487b7160e01b600052601160045260246000fd5b5060010190565b6117c980620004bd6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063d8de65871161005b578063d8de65871461018a578063e0eb2c5614610214578063f2fde38b1461023957600080fd5b80638da5cb5b1461012f578063d63a8e111461015757600080fd5b8063715018a6116100a7578063715018a6146100eb5780637f1f59bf146100f357806385e3f0581461010657600080fd5b806307b371c7146100c357806314dc490c146100d8575b600080fd5b6100d66100d1366004611018565b61024c565b005b6100d66100e63660046110bb565b610541565b6100d6610633565b6100d66101013660046111e7565b610647565b61011961011436600461122e565b61070f565b6040516101269190611315565b60405180910390f35b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610126565b61017a6101653660046113ac565b60076020526000908152604090205460ff1681565b6040519015158152602001610126565b6001546002546003546004546006546101c79473ffffffffffffffffffffffffffffffffffffffff90811694811693811692169063ffffffff1685565b6040805173ffffffffffffffffffffffffffffffffffffffff9687168152948616602086015292851692840192909252909216606082015263ffffffff909116608082015260a001610126565b61022761022236600461122e565b610884565b604051610126969594939291906113ce565b6100d66102473660046113ac565b610946565b3360009081526007602052604090205460ff1661026857600080fd5b600254608080860151908401516040517f1f59d3b900000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff1692631f59d3b9926102c9924290600401611442565b6106c060405180830381865afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b919061146e565b6003546040517f0ad47e1e00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff1690630ad47e1e9061036490859085906004016114d8565b600060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b505050506040518060e00160405280878152602001858152602001846040015187604001516103c1919061151c565b81526020014281526020018281526020016040518060200160405280600081525081526020016064426103f49190611535565b606314610440578460c001516007811115610411576104116112ab565b8760c001516007811115610427576104276112ab565b11610436578660c00151610481565b8460c00151610481565b8460c001516007811115610456576104566112ab565b8760c00151600781111561046c5761046c6112ab565b1161047b578460c00151610481565b8660c001515b6007811115610492576104926112ab565b9052600083815260086020908152604091829020835181559083015160018201559082015160028201556060820151600382015560808201516104db9060048301906036610bef565b5060a0820151600b8201906104f09082611612565b5060c0820151600c820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836007811115610532576105326112ab565b02179055505050505050505050565b6105496109ff565b8051600180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff938416178255602080850151600280548416918616919091179055604085015160038054841691861691909117905560608501516004805490931694169390931790556080830151805184936105e392600592910190610c8b565b5060a09190910151600590910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff909216919091179055608081015161063090610a80565b50565b61063b6109ff565b6106456000610b7a565b565b3360009081526007602052604090205460ff1661066357600080fd5b600082815260086020908152604091829020835181559083015160018201559082015160028201556060820151600382015560808201518291906106ad9060048301906036610bef565b5060a0820151600b8201906106c29082611612565b5060c0820151600c820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836007811115610704576107046112ab565b021790555050505050565b610717610d05565b6000828152600860209081526040808320815160e081018352815481526001820154938101939093526002810154838301526003810154606084015281516106c0810192839052929390926080850192909160048501916036918390855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161077557905050505050508152602001600b820180546107ca90611570565b80601f01602080910402602001604051908101604052809291908181526020018280546107f690611570565b80156108435780601f1061081857610100808354040283529160200191610843565b820191906000526020600020905b81548152906001019060200180831161082657829003601f168201915b5050509183525050600c82015460209091019060ff16600781111561086a5761086a6112ab565b600781111561087b5761087b6112ab565b90525092915050565b60086020526000908152604090208054600182015460028301546003840154600b8501805494959394929391926108ba90611570565b80601f01602080910402602001604051908101604052809291908181526020018280546108e690611570565b80156109335780601f1061090857610100808354040283529160200191610933565b820191906000526020600020905b81548152906001019060200180831161091657829003601f168201915b505050600c909301549192505060ff1686565b61094e6109ff565b73ffffffffffffffffffffffffffffffffffffffff81166109f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61063081610b7a565b60005473ffffffffffffffffffffffffffffffffffffffff163314610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109ed565b60005b8151811015610b765760076000838381518110610aa257610aa261172c565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161560076000848481518110610b0957610b0961172c565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610b6f8161175b565b9050610a83565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600783019183908215610c7b5791602002820160005b83821115610c4957835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610c05565b8015610c795782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610c49565b505b50610c87929150610d47565b5090565b828054828255906000526020600020908101928215610c7b579160200282015b82811115610c7b57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610cab565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001610d34610d5c565b8152606060208201526040016000905290565b5b80821115610c875760008155600101610d48565b604051806106c001604052806036906020820280368337509192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610dcd57610dcd610d7b565b60405290565b60405160c0810167ffffffffffffffff81118282101715610dcd57610dcd610d7b565b6040516106c0810167ffffffffffffffff81118282101715610dcd57610dcd610d7b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e6157610e61610d7b565b604052919050565b63ffffffff8116811461063057600080fd5b8035610e8681610e69565b919050565b600082601f830112610e9c57600080fd5b610ea4610df6565b806106c0840185811115610eb757600080fd5b845b81811015610eda578035610ecc81610e69565b845260209384019301610eb9565b509095945050505050565b600082601f830112610ef657600080fd5b813567ffffffffffffffff811115610f1057610f10610d7b565b610f4160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610e1a565b818152846020838601011115610f5657600080fd5b816020850160208301376000918101602001919091529392505050565b803560088110610e8657600080fd5b60006107808284031215610f9557600080fd5b610f9d610daa565b905081358152602082013560208201526040820135604082015260608201356060820152610fce8360808401610e8b565b608082015261074082013567ffffffffffffffff811115610fee57600080fd5b610ffa84828501610ee5565b60a08301525061100d6107608301610f73565b60c082015292915050565b600080600080600060a0868803121561103057600080fd5b85359450602086013567ffffffffffffffff8082111561104f57600080fd5b61105b89838a01610f82565b955060408801359450606088013591508082111561107857600080fd5b5061108588828901610f82565b95989497509295608001359392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e8657600080fd5b600060208083850312156110ce57600080fd5b823567ffffffffffffffff808211156110e657600080fd5b9084019060c082870312156110fa57600080fd5b611102610dd3565b61110b83611097565b8152611118848401611097565b8482015261112860408401611097565b604082015261113960608401611097565b606082015260808301358281111561115057600080fd5b8301601f8101881361116157600080fd5b80358381111561117357611173610d7b565b8060051b9350611184868501610e1a565b818152938201860193868101908a86111561119e57600080fd5b928701925b858410156111c3576111b484611097565b825292870192908701906111a3565b6080850152506111d891505060a08401610e7b565b60a08201529695505050505050565b600080604083850312156111fa57600080fd5b82359150602083013567ffffffffffffffff81111561121857600080fd5b61122485828601610f82565b9150509250929050565b60006020828403121561124057600080fd5b5035919050565b6000815180845260005b8181101561126d57602081850181015186830182015201611251565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60088110611311577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600060208083528351818401528084015160408401526040840151606084015260608401516080840152608084015160a0840160005b603681101561136e57825163ffffffff168252918301919083019060010161134b565b5050505060a08301516107808061076085015261138f6107a0850183611247565b915060c08501516113a2828601826112da565b5090949350505050565b6000602082840312156113be57600080fd5b6113c782611097565b9392505050565b86815285602082015284604082015283606082015260c0608082015260006113f960c0830185611247565b905061140860a08301846112da565b979650505050505050565b8060005b603681101561143c57815163ffffffff16845260209384019390910190600101611417565b50505050565b610da081016114518286611413565b61145f6106c0830185611413565b82610d80830152949350505050565b60006106c080838503121561148257600080fd5b83601f84011261149157600080fd5b611499610df6565b9083019080858311156114ab57600080fd5b845b838110156114ce5780516114c081610e69565b8352602092830192016114ad565b5095945050505050565b8281526106e081016113c76020830184611413565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561152f5761152f6114ed565b92915050565b60008261156b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b600181811c9082168061158457607f821691505b6020821081036115bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561160d57600081815260208120601f850160051c810160208610156115ea5750805b601f850160051c820191505b81811015611609578281556001016115f6565b5050505b505050565b815167ffffffffffffffff81111561162c5761162c610d7b565b6116408161163a8454611570565b846115c3565b602080601f831160018114611693576000841561165d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611609565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156116e0578886015182559484019460019091019084016116c1565b508582101561171c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361178c5761178c6114ed565b506001019056fea26469706673582212206d09bd096e65d7da3a4b3196d3bd51e84bcba2647b141fe7c944b136bf2af16464736f6c63430008110033";

type IncubatorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncubatorMethods__factory extends ContractFactory {
  constructor(...args: IncubatorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "IncubatorMethods";
  }

  deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncubatorMethods> {
    return super.deploy(input, overrides || {}) as Promise<IncubatorMethods>;
  }
  getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): IncubatorMethods {
    return super.attach(address) as IncubatorMethods;
  }
  connect(signer: Signer): IncubatorMethods__factory {
    return super.connect(signer) as IncubatorMethods__factory;
  }
  static readonly contractName: "IncubatorMethods";
  public readonly contractName: "IncubatorMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorMethodsInterface {
    return new utils.Interface(_abi) as IncubatorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncubatorMethods {
    return new Contract(address, _abi, signerOrProvider) as IncubatorMethods;
  }
}
