/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopRestricted,
  ShopRestrictedInterface,
  ShopConstructor,
} from "../ShopRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620016b5380380620016b5833981016040819052620000399162000448565b805160808201518291906200004e336200018c565b80518251146200005d57600080fd5b60005b8251811015620000f7578181815181106200007f576200007f6200057e565b602002602001015160016000858481518110620000a057620000a06200057e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000ef9062000594565b905062000060565b5050815180518392506003916200011491839160200190620001dc565b506020828101516001830180546001600160a01b039283166001600160a01b031991821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805162000180926004850192019062000246565b509050505050620005bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000234579160200282015b828111156200023457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001fd565b5062000242929150620002ef565b5090565b82805482825590600052602060002090600701600890048101928215620002345791602002820160005b83821115620002b357835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000270565b8015620002e55782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b3565b5050620002429291505b5b80821115620002425760008155600101620002f0565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000341576200034162000306565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000372576200037262000306565b604052919050565b60006001600160401b0382111562000396576200039662000306565b5060051b60200190565b80516001600160a01b0381168114620003b857600080fd5b919050565b600082601f830112620003cf57600080fd5b81516020620003e8620003e2836200037a565b62000347565b82815260059290921b840181019181810190868411156200040857600080fd5b8286015b848110156200043d5780516001600160e01b0319811681146200042f5760008081fd5b83529183019183016200040c565b509695505050505050565b600060208083850312156200045c57600080fd5b82516001600160401b03808211156200047457600080fd5b9084019060a082870312156200048957600080fd5b620004936200031c565b825182811115620004a357600080fd5b8301601f81018813620004b557600080fd5b8051620004c6620003e2826200037a565b81815260059190911b8201860190868101908a831115620004e657600080fd5b928701925b828410156200050f57620004ff84620003a0565b82529287019290870190620004eb565b84525062000522915050838501620003a0565b848201526200053460408401620003a0565b60408201526200054760608401620003a0565b606082015260808301519350818411156200056157600080fd5b6200056f87858501620003bd565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620005b557634e487b7160e01b600052601160045260246000fd5b5060010190565b6110e980620005cc6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063af640d0f1161005b578063af640d0f146101dd578063d8de6587146101f4578063f2fde38b1461025857600080fd5b80638da5cb5b146101195780639cce37c61461014657600080fd5b80633d278784116100a75780633d278784146100eb578063715018a6146100fe57806381c461ab1461010657600080fd5b80632a45ccb5146100c3578063357d5142146100d8575b600080fd5b6100d66100d1366004610cb0565b61026b565b005b6100d66100e6366004610de1565b6103f6565b6100d66100f9366004610e45565b6104bb565b6100d6610572565b6100d6610114366004610f09565b610586565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101a4610154366004610f46565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff0000000000000000000000000000000000000000000000000000000093841681529290911660208301520161013d565b6101e660025481565b60405190815260200161013d565b6004546005546006546102219273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff9485168152928416602084015292169181019190915260600161013d565b6100d6610266366004610f46565b61072a565b3360009081526001602052604081205460e01b7fffffffff00000000000000000000000000000000000000000000000000000000908116913516146102af57600080fd5b6000818152600960209081526040909120835181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155838201518051859361031a9260018501929101906108dc565b5060408281015160028301556060830151600383015560808301516004909201805460a085015160c090950151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909616640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff909516949094171793909316919091179091555181907f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f6906103ea908590610f68565b60405180910390a25050565b6103fe6107e6565b805182511461040c57600080fd5b60005b82518110156104b65781818151811061042a5761042a611025565b60200260200101516001600085848151811061044857610448611025565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c0217905550806104af90611054565b905061040f565b505050565b6104c36107e6565b8051805182916003916104dd918391602090910190610927565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805161056c92600485019201906109a1565b50505050565b61057a6107e6565b6105846000610867565b565b3360009081526001602052604081205460e01b7fffffffff00000000000000000000000000000000000000000000000000000000908116913516146105ca57600080fd5b6002546000908152600960209081526040909120825181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617815582820151805184936106389260018501929101906108dc565b506040828101516002808401919091556060840151600384015560808401516004909301805460a086015160c090960151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909716640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff909616959095171794909416929092179092555490517f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f69061070c908490610f68565b60405180910390a260026000815461072390611054565b9091555050565b6107326107e6565b73ffffffffffffffffffffffffffffffffffffffff81166107da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107e381610867565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d1565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610917579160200282015b828111156109175782518255916020019190600101906108fc565b50610923929150610a44565b5090565b828054828255906000526020600020908101928215610917579160200282015b8281111561091757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610947565b828054828255906000526020600020906007016008900481019282156109175791602002820160005b83821115610a0b57835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026109ca565b8015610a3b5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610a0b565b50506109239291505b5b808211156109235760008155600101610a45565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610aab57610aab610a59565b60405290565b60405160a0810167ffffffffffffffff81118282101715610aab57610aab610a59565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610b1b57610b1b610a59565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b4757600080fd5b919050565b600067ffffffffffffffff821115610b6657610b66610a59565b5060051b60200190565b600082601f830112610b8157600080fd5b81356020610b96610b9183610b4c565b610ad4565b82815260059290921b84018101918181019086841115610bb557600080fd5b8286015b84811015610bd05780358352918301918301610bb9565b509695505050505050565b803563ffffffff81168114610b4757600080fd5b803560ff81168114610b4757600080fd5b80358015158114610b4757600080fd5b600060e08284031215610c2257600080fd5b610c2a610a88565b9050610c3582610b23565b8152602082013567ffffffffffffffff811115610c5157600080fd5b610c5d84828501610b70565b6020830152506040820135604082015260608201356060820152610c8360808301610bdb565b6080820152610c9460a08301610bef565b60a0820152610ca560c08301610c00565b60c082015292915050565b60008060408385031215610cc357600080fd5b823567ffffffffffffffff811115610cda57600080fd5b610ce685828601610c10565b95602094909401359450505050565b600082601f830112610d0657600080fd5b81356020610d16610b9183610b4c565b82815260059290921b84018101918181019086841115610d3557600080fd5b8286015b84811015610bd057610d4a81610b23565b8352918301918301610d39565b600082601f830112610d6857600080fd5b81356020610d78610b9183610b4c565b82815260059290921b84018101918181019086841115610d9757600080fd5b8286015b84811015610bd05780357fffffffff0000000000000000000000000000000000000000000000000000000081168114610dd45760008081fd5b8352918301918301610d9b565b60008060408385031215610df457600080fd5b823567ffffffffffffffff80821115610e0c57600080fd5b610e1886838701610cf5565b93506020850135915080821115610e2e57600080fd5b50610e3b85828601610d57565b9150509250929050565b600060208284031215610e5757600080fd5b813567ffffffffffffffff80821115610e6f57600080fd5b9083019060a08286031215610e8357600080fd5b610e8b610ab1565b823582811115610e9a57600080fd5b610ea687828601610cf5565b825250610eb560208401610b23565b6020820152610ec660408401610b23565b6040820152610ed760608401610b23565b6060820152608083013582811115610eee57600080fd5b610efa87828601610d57565b60808301525095945050505050565b600060208284031215610f1b57600080fd5b813567ffffffffffffffff811115610f3257600080fd5b610f3e84828501610c10565b949350505050565b600060208284031215610f5857600080fd5b610f6182610b23565b9392505050565b6020808252825173ffffffffffffffffffffffffffffffffffffffff16828201528281015160e06040840152805161010084018190526000929182019083906101208601905b80831015610fce5783518252928401926001929092019190840190610fae565b50604087015160608701526060870151608087015260808701519350610ffc60a087018563ffffffff169052565b60a087015160ff811660c0880152935060c087015180151560e088015293509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122039d9110ab4051bd119b8e70c18670a3a4d6263e396db64604c10c4bdfcefe9bc64736f6c63430008110033";

type ShopRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopRestricted__factory extends ContractFactory {
  constructor(...args: ShopRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopRestricted";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopRestricted> {
    return super.deploy(input, overrides || {}) as Promise<ShopRestricted>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopRestricted {
    return super.attach(address) as ShopRestricted;
  }
  connect(signer: Signer): ShopRestricted__factory {
    return super.connect(signer) as ShopRestricted__factory;
  }
  static readonly contractName: "ShopRestricted";
  public readonly contractName: "ShopRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopRestrictedInterface {
    return new utils.Interface(_abi) as ShopRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopRestricted {
    return new Contract(address, _abi, signerOrProvider) as ShopRestricted;
  }
}
