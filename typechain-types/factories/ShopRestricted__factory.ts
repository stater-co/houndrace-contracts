/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopRestricted,
  ShopRestrictedInterface,
  ShopConstructor,
} from "../ShopRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805534801561001457600080fd5b50604051610cbb380380610cbb833981016040819052610033916100f6565b8061003d3361008a565b8051600280546001600160a01b03199081166001600160a01b039384161790915560208301516003805483169184169190911790556040909201516004805490931691161790555061016f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f157600080fd5b919050565b60006060828403121561010857600080fd5b604051606081016001600160401b038111828210171561013857634e487b7160e01b600052604160045260246000fd5b604052610144836100da565b8152610152602084016100da565b6020820152610163604084016100da565b60408201529392505050565b610b3d8061017e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063af640d0f1161005b578063af640d0f146100ea578063d6dc0dfd14610101578063d8de658714610114578063f2fde38b1461017857600080fd5b80632a45ccb51461008d578063715018a6146100a257806381c461ab146100aa5780638da5cb5b146100bd575b600080fd5b6100a061009b3660046108db565b61018b565b005b6100a06102d2565b6100a06100b8366004610920565b6102e6565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f360015481565b6040519081526020016100e1565b6100a061010f36600461095d565b610444565b6002546003546004546101419273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100e1565b6100a06101863660046109c9565b6104ba565b6000818152600660209081526040909120835181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617815583820151805185936101f692600185019291019061066c565b5060408281015160028301556060830151600383015560808301516004909201805460a085015160c090950151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909616640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff909516949094171793909316919091179091555181907f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f6906102c69085906109eb565b60405180910390a25050565b6102da610576565b6102e460006105f7565b565b600180546000908152600660209081526040909120835181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161781558382015180518594929361035493850192019061066c565b5060408281015160028301556060830151600383015560808301516004909201805460a085015160c090950151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909616640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff9095169490941717939093169190911790915560015490517f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f6906104269084906109eb565b60405180910390a260016000815461043d90610aa8565b9091555050565b61044c610576565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff938416179091556020830151600380548316918416919091179055604090920151600480549093169116179055565b6104c2610576565b73ffffffffffffffffffffffffffffffffffffffff811661056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610573816105f7565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156106a7579160200282015b828111156106a757825182559160200191906001019061068c565b506106b39291506106b7565b5090565b5b808211156106b357600081556001016106b8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561071e5761071e6106cc565b60405290565b803573ffffffffffffffffffffffffffffffffffffffff8116811461074857600080fd5b919050565b600082601f83011261075e57600080fd5b8135602067ffffffffffffffff8083111561077b5761077b6106cc565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156107be576107be6106cc565b6040529384528581018301938381019250878511156107dc57600080fd5b83870191505b848210156107fb578135835291830191908301906107e2565b979650505050505050565b803563ffffffff8116811461074857600080fd5b803560ff8116811461074857600080fd5b8035801515811461074857600080fd5b600060e0828403121561084d57600080fd5b6108556106fb565b905061086082610724565b8152602082013567ffffffffffffffff81111561087c57600080fd5b6108888482850161074d565b60208301525060408201356040820152606082013560608201526108ae60808301610806565b60808201526108bf60a0830161081a565b60a08201526108d060c0830161082b565b60c082015292915050565b600080604083850312156108ee57600080fd5b823567ffffffffffffffff81111561090557600080fd5b6109118582860161083b565b95602094909401359450505050565b60006020828403121561093257600080fd5b813567ffffffffffffffff81111561094957600080fd5b6109558482850161083b565b949350505050565b60006060828403121561096f57600080fd5b6040516060810181811067ffffffffffffffff82111715610992576109926106cc565b60405261099e83610724565b81526109ac60208401610724565b60208201526109bd60408401610724565b60408201529392505050565b6000602082840312156109db57600080fd5b6109e482610724565b9392505050565b6020808252825173ffffffffffffffffffffffffffffffffffffffff16828201528281015160e06040840152805161010084018190526000929182019083906101208601905b80831015610a515783518252928401926001929092019190840190610a31565b50604087015160608701526060870151608087015260808701519350610a7f60a087018563ffffffff169052565b60a087015160ff811660c0880152935060c087015180151560e088015293509695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b00577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220f09774e1145c3f1b00d203720df0730edd158f2e38665246e3f180ada3ad127a64736f6c63430008110033";

type ShopRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopRestricted__factory extends ContractFactory {
  constructor(...args: ShopRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopRestricted";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopRestricted> {
    return super.deploy(input, overrides || {}) as Promise<ShopRestricted>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopRestricted {
    return super.attach(address) as ShopRestricted;
  }
  connect(signer: Signer): ShopRestricted__factory {
    return super.connect(signer) as ShopRestricted__factory;
  }
  static readonly contractName: "ShopRestricted";
  public readonly contractName: "ShopRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopRestrictedInterface {
    return new utils.Interface(_abi) as ShopRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopRestricted {
    return new Contract(address, _abi, signerOrProvider) as ShopRestricted;
  }
}
