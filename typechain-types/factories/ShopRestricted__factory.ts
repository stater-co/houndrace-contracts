/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopRestricted,
  ShopRestrictedInterface,
  ShopConstructor,
} from "../ShopRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b506040516200156f3803806200156f833981016040819052620000399162000448565b805160808201518291906200004e336200018c565b80518251146200005d57600080fd5b60005b8251811015620000f7578181815181106200007f576200007f6200057e565b602002602001015160016000858481518110620000a057620000a06200057e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000ef9062000594565b905062000060565b5050815180518392506003916200011491839160200190620001dc565b506020828101516001830180546001600160a01b039283166001600160a01b031991821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805162000180926004850192019062000246565b509050505050620005bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000234579160200282015b828111156200023457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001fd565b5062000242929150620002ef565b5090565b82805482825590600052602060002090600701600890048101928215620002345791602002820160005b83821115620002b357835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000270565b8015620002e55782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b3565b5050620002429291505b5b80821115620002425760008155600101620002f0565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000341576200034162000306565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000372576200037262000306565b604052919050565b60006001600160401b0382111562000396576200039662000306565b5060051b60200190565b80516001600160a01b0381168114620003b857600080fd5b919050565b600082601f830112620003cf57600080fd5b81516020620003e8620003e2836200037a565b62000347565b82815260059290921b840181019181810190868411156200040857600080fd5b8286015b848110156200043d5780516001600160e01b0319811681146200042f5760008081fd5b83529183019183016200040c565b509695505050505050565b600060208083850312156200045c57600080fd5b82516001600160401b03808211156200047457600080fd5b9084019060a082870312156200048957600080fd5b620004936200031c565b825182811115620004a357600080fd5b8301601f81018813620004b557600080fd5b8051620004c6620003e2826200037a565b81815260059190911b8201860190868101908a831115620004e657600080fd5b928701925b828410156200050f57620004ff84620003a0565b82529287019290870190620004eb565b84525062000522915050838501620003a0565b848201526200053460408401620003a0565b60408201526200054760608401620003a0565b606082015260808301519350818411156200056157600080fd5b6200056f87858501620003bd565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620005b557634e487b7160e01b600052601160045260246000fd5b5060010190565b610fa380620005cc6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d0578063af640d0f146100fd578063d8de658714610114578063f2fde38b1461017857600080fd5b80632a45ccb51461008d5780633d278784146100a2578063715018a6146100b557806381c461ab146100bd575b600080fd5b6100a061009b366004610bd5565b61018b565b005b6100a06100b0366004610ca4565b610316565b6100a06103dd565b6100a06100cb366004610dc3565b6103f1565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61010660025481565b6040519081526020016100f4565b6004546005546006546101419273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100f4565b6100a0610186366004610e00565b610595565b3360009081526001602052604081205460e01b7fffffffff00000000000000000000000000000000000000000000000000000000908116913516146101cf57600080fd5b6000818152600960209081526040909120835181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155838201518051859361023a926001850192910190610801565b5060408281015160028301556060830151600383015560808301516004909201805460a085015160c090950151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909616640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff909516949094171793909316919091179091555181907f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f69061030a908590610e22565b60405180910390a25050565b61031e61064e565b80518051829160039161033891839160209091019061084c565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549184169183169190911790556060850151600385018054919093169116179055608083015180516103c792600485019201906108c6565b5050815160808301516103da92506106cf565b50565b6103e561064e565b6103ef600061078c565b565b3360009081526001602052604081205460e01b7fffffffff000000000000000000000000000000000000000000000000000000009081169135161461043557600080fd5b6002546000908152600960209081526040909120825181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617815582820151805184936104a3926001850192910190610801565b506040828101516002808401919091556060840151600384015560808401516004909301805460a086015160c090960151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909716640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff909616959095171794909416929092179092555490517f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f690610577908490610e22565b60405180910390a260026000815461058e90610edf565b9091555050565b61059d61064e565b73ffffffffffffffffffffffffffffffffffffffff8116610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103da8161078c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063c565b80518251146106dd57600080fd5b60005b8251811015610787578181815181106106fb576106fb610f3e565b60200260200101516001600085848151811061071957610719610f3e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c02179055508061078090610edf565b90506106e0565b505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561083c579160200282015b8281111561083c578251825591602001919060010190610821565b50610848929150610969565b5090565b82805482825590600052602060002090810192821561083c579160200282015b8281111561083c57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061086c565b8280548282559060005260206000209060070160089004810192821561083c5791602002820160005b8382111561093057835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026108ef565b80156109605782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610930565b50506108489291505b5b80821115610848576000815560010161096a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156109d0576109d061097e565b60405290565b60405160a0810167ffffffffffffffff811182821017156109d0576109d061097e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a4057610a4061097e565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a6c57600080fd5b919050565b600067ffffffffffffffff821115610a8b57610a8b61097e565b5060051b60200190565b600082601f830112610aa657600080fd5b81356020610abb610ab683610a71565b6109f9565b82815260059290921b84018101918181019086841115610ada57600080fd5b8286015b84811015610af55780358352918301918301610ade565b509695505050505050565b803563ffffffff81168114610a6c57600080fd5b803560ff81168114610a6c57600080fd5b80358015158114610a6c57600080fd5b600060e08284031215610b4757600080fd5b610b4f6109ad565b9050610b5a82610a48565b8152602082013567ffffffffffffffff811115610b7657600080fd5b610b8284828501610a95565b6020830152506040820135604082015260608201356060820152610ba860808301610b00565b6080820152610bb960a08301610b14565b60a0820152610bca60c08301610b25565b60c082015292915050565b60008060408385031215610be857600080fd5b823567ffffffffffffffff811115610bff57600080fd5b610c0b85828601610b35565b95602094909401359450505050565b600082601f830112610c2b57600080fd5b81356020610c3b610ab683610a71565b82815260059290921b84018101918181019086841115610c5a57600080fd5b8286015b84811015610af55780357fffffffff0000000000000000000000000000000000000000000000000000000081168114610c975760008081fd5b8352918301918301610c5e565b60006020808385031215610cb757600080fd5b823567ffffffffffffffff80821115610ccf57600080fd5b9084019060a08287031215610ce357600080fd5b610ceb6109d6565b823582811115610cfa57600080fd5b8301601f81018813610d0b57600080fd5b8035610d19610ab682610a71565b81815260059190911b8201860190868101908a831115610d3857600080fd5b928701925b82841015610d5d57610d4e84610a48565b82529287019290870190610d3d565b845250610d6e915050838501610a48565b84820152610d7e60408401610a48565b6040820152610d8f60608401610a48565b60608201526080830135935081841115610da857600080fd5b610db487858501610c1a565b60808201529695505050505050565b600060208284031215610dd557600080fd5b813567ffffffffffffffff811115610dec57600080fd5b610df884828501610b35565b949350505050565b600060208284031215610e1257600080fd5b610e1b82610a48565b9392505050565b6020808252825173ffffffffffffffffffffffffffffffffffffffff16828201528281015160e06040840152805161010084018190526000929182019083906101208601905b80831015610e885783518252928401926001929092019190840190610e68565b50604087015160608701526060870151608087015260808701519350610eb660a087018563ffffffff169052565b60a087015160ff811660c0880152935060c087015180151560e088015293509695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f37577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205faf99ad786e306b433bd84a2fb23e1f58daca76c58e1cf82018ce4b39b1132a64736f6c63430008110033";

type ShopRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopRestricted__factory extends ContractFactory {
  constructor(...args: ShopRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopRestricted";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopRestricted> {
    return super.deploy(input, overrides || {}) as Promise<ShopRestricted>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopRestricted {
    return super.attach(address) as ShopRestricted;
  }
  connect(signer: Signer): ShopRestricted__factory {
    return super.connect(signer) as ShopRestricted__factory;
  }
  static readonly contractName: "ShopRestricted";
  public readonly contractName: "ShopRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopRestrictedInterface {
    return new utils.Interface(_abi) as ShopRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopRestricted {
    return new Contract(address, _abi, signerOrProvider) as ShopRestricted;
  }
}
