/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopRestricted,
  ShopRestrictedInterface,
  ShopConstructor,
} from "../ShopRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001bcd38038062001bcd8339810160408190526200003991620005fc565b805160808201518291906200004e336200020b565b80518251146200005d57600080fd5b60005b8251811015620001765760005b82828151811062000082576200008262000732565b602002602001015151811015620001625760016000858481518110620000ac57620000ac62000732565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000e957620000e962000732565b6020026020010151828151811062000105576200010562000732565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015a8162000748565b90506200006d565b506200016e8162000748565b905062000060565b50508151805183925060039162000193918391602001906200025b565b506020828101516001830180546001600160a01b039283166001600160a01b0319918216179091556040850151600285018054918416918316919091179055606085015160038501805491909316911617905560808301518051620001ff9260048501920190620002c5565b50905050505062000770565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b3579160200282015b82811115620002b357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200027c565b50620002c192915062000325565b5090565b82805482825590600052602060002090810192821562000317579160200282015b82811115620003175782518051620003069184916020909101906200033c565b5091602001919060010190620002e6565b50620002c1929150620003ea565b5b80821115620002c1576000815560010162000326565b82805482825590600052602060002090600701600890048101928215620002b35791602002820160005b83821115620003a957835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000366565b8015620003db5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620003a9565b5050620002c192915062000325565b80821115620002c15760006200040182826200040b565b50600101620003ea565b50805460008255600701600890049060005260206000209081019062000432919062000325565b50565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171562000470576200047062000435565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004a157620004a162000435565b604052919050565b60006001600160401b03821115620004c557620004c562000435565b5060051b60200190565b80516001600160a01b0381168114620004e757600080fd5b919050565b600082601f830112620004fe57600080fd5b81516020620005176200051183620004a9565b62000476565b828152600592831b85018201928282019190878511156200053757600080fd5b8387015b85811015620005ef5780516001600160401b038111156200055c5760008081fd5b8801603f81018a136200056f5760008081fd5b858101516040620005846200051183620004a9565b82815291851b8301810191888101908d841115620005a25760008081fd5b938201935b83851015620005dd57845192506001600160e01b031983168314620005cc5760008081fd5b8282529389019390890190620005a7565b8852505050938501935084016200053b565b5090979650505050505050565b600060208083850312156200061057600080fd5b82516001600160401b03808211156200062857600080fd5b9084019060a082870312156200063d57600080fd5b620006476200044b565b8251828111156200065757600080fd5b8301601f810188136200066957600080fd5b80516200067a6200051182620004a9565b81815260059190911b8201860190868101908a8311156200069a57600080fd5b928701925b82841015620006c357620006b384620004cf565b825292870192908701906200069f565b845250620006d6915050838501620004cf565b84820152620006e860408401620004cf565b6040820152620006fb60608401620004cf565b606082015260808301519350818411156200071557600080fd5b6200072387858501620004ec565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200076957634e487b7160e01b600052601160045260246000fd5b5060010190565b61144d80620007806000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638da5cb5b11610076578063c0d94d1a1161005b578063c0d94d1a14610160578063d8de658714610173578063f2fde38b146101d757600080fd5b80638da5cb5b14610121578063af640d0f1461014957600080fd5b80632a45ccb5146100a85780635b19e294146100bd578063715018a61461010657806381c461ab1461010e575b600080fd5b6100bb6100b6366004610fcc565b6101ea565b005b6100d06100cb366004611011565b6103fa565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6100bb610440565b6100bb61011c36600461103b565b610454565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100fd565b61015260025481565b6040519081526020016100fd565b6100bb61016e36600461118b565b61067d565b6004546005546006546101a09273ffffffffffffffffffffffffffffffffffffffff908116928116911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100fd565b6100bb6101e53660046112aa565b610744565b6000805b336000908152600160205260409020548110156102a757336000908152600160205260408120805491357fffffffff0000000000000000000000000000000000000000000000000000000016918390811061024b5761024b6112cc565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361029757600191505b6102a0816112fb565b90506101ee565b50806102b257600080fd5b6000828152600960209081526040909120845181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155848201518051869361031d926001850192910190610b59565b5060408281015160028301556060830151600383015560808301516004909201805460a085015160c090950151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909616640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff909516949094171793909316919091179091555182907f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f6906103ed90869061135a565b60405180910390a2505050565b6001602052816000526040600020818154811061041657600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6104486107fd565b610452600061087e565b565b6000805b3360009081526001602052604090205481101561051157336000908152600160205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106104b5576104b56112cc565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361050157600191505b61050a816112fb565b9050610458565b508061051c57600080fd5b6002546000908152600960209081526040909120835181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155838201518051859361058a926001850192910190610b59565b506040828101516002808401919091556060840151600384015560808401516004909301805460a086015160c090960151151565010000000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff60ff909716640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000090921663ffffffff909616959095171794909416929092179092555490517f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f69061065e90859061135a565b60405180910390a2600260008154610675906112fb565b909155505050565b6106856107fd565b80518051829160039161069f918391602090910190610ba4565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491841691831691909117905560608501516003850180549190931691161790556080830151805161072e9260048501920190610c1e565b50508151608083015161074192506108f3565b50565b61074c6107fd565b73ffffffffffffffffffffffffffffffffffffffff81166107f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107418161087e565b60005473ffffffffffffffffffffffffffffffffffffffff163314610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107eb565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461090157600080fd5b60005b8251811015610b545760005b828281518110610922576109226112cc565b602002602001015151811015610b435760016000858481518110610948576109486112cc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610a6657600160008584815181106109aa576109aa6112cc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208383815181106109fe576109fe6112cc565b60200260200101518281518110610a1757610a176112cc565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055610b33565b828281518110610a7857610a786112cc565b60200260200101518181518110610a9157610a916112cc565b602002602001015160016000868581518110610aaf57610aaf6112cc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b0257610b026112cc565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b610b3c816112fb565b9050610910565b50610b4d816112fb565b9050610904565b505050565b828054828255906000526020600020908101928215610b94579160200282015b82811115610b94578251825591602001919060010190610b79565b50610ba0929150610c77565b5090565b828054828255906000526020600020908101928215610b94579160200282015b82811115610b9457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190610bc4565b828054828255906000526020600020908101928215610c6b579160200282015b82811115610c6b5782518051610c5b918491602090910190610c8c565b5091602001919060010190610c3e565b50610ba0929150610d33565b5b80821115610ba05760008155600101610c78565b82805482825590600052602060002090600701600890048101928215610b945791602002820160005b83821115610cf657835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610cb5565b8015610d265782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610cf6565b5050610ba0929150610c77565b80821115610ba0576000610d478282610d50565b50600101610d33565b5080546000825560070160089004906000526020600020908101906107419190610c77565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610dc757610dc7610d75565b60405290565b60405160a0810167ffffffffffffffff81118282101715610dc757610dc7610d75565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e3757610e37610d75565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e6357600080fd5b919050565b600067ffffffffffffffff821115610e8257610e82610d75565b5060051b60200190565b600082601f830112610e9d57600080fd5b81356020610eb2610ead83610e68565b610df0565b82815260059290921b84018101918181019086841115610ed157600080fd5b8286015b84811015610eec5780358352918301918301610ed5565b509695505050505050565b803563ffffffff81168114610e6357600080fd5b803560ff81168114610e6357600080fd5b80358015158114610e6357600080fd5b600060e08284031215610f3e57600080fd5b610f46610da4565b9050610f5182610e3f565b8152602082013567ffffffffffffffff811115610f6d57600080fd5b610f7984828501610e8c565b6020830152506040820135604082015260608201356060820152610f9f60808301610ef7565b6080820152610fb060a08301610f0b565b60a0820152610fc160c08301610f1c565b60c082015292915050565b60008060408385031215610fdf57600080fd5b823567ffffffffffffffff811115610ff657600080fd5b61100285828601610f2c565b95602094909401359450505050565b6000806040838503121561102457600080fd5b61102d83610e3f565b946020939093013593505050565b60006020828403121561104d57600080fd5b813567ffffffffffffffff81111561106457600080fd5b61107084828501610f2c565b949350505050565b600082601f83011261108957600080fd5b81356020611099610ead83610e68565b828152600592831b85018201928282019190878511156110b857600080fd5b8387015b8581101561117e57803567ffffffffffffffff8111156110dc5760008081fd5b8801603f81018a136110ee5760008081fd5b858101356040611100610ead83610e68565b82815291851b8301810191888101908d84111561111d5760008081fd5b938201935b8385101561116d57843592507fffffffff000000000000000000000000000000000000000000000000000000008316831461115d5760008081fd5b8282529389019390890190611122565b8852505050938501935084016110bc565b5090979650505050505050565b6000602080838503121561119e57600080fd5b823567ffffffffffffffff808211156111b657600080fd5b9084019060a082870312156111ca57600080fd5b6111d2610dcd565b8235828111156111e157600080fd5b8301601f810188136111f257600080fd5b8035611200610ead82610e68565b81815260059190911b8201860190868101908a83111561121f57600080fd5b928701925b828410156112445761123584610e3f565b82529287019290870190611224565b845250611255915050838501610e3f565b8482015261126560408401610e3f565b604082015261127660608401610e3f565b6060820152608083013593508184111561128f57600080fd5b61129b87858501611078565b60808201529695505050505050565b6000602082840312156112bc57600080fd5b6112c582610e3f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611353577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6020808252825173ffffffffffffffffffffffffffffffffffffffff16828201528281015160e06040840152805161010084018190526000929182019083906101208601905b808310156113c057835182529284019260019290920191908401906113a0565b506040870151606087015260608701516080870152608087015193506113ee60a087018563ffffffff169052565b60a087015160ff811660c0880152935060c087015180151560e08801529350969550505050505056fea26469706673582212200c3386c1681cc7d8a8e77cec232acb58e48c2092e26edcca3068594f9f9c6b0b64736f6c63430008110033";

type ShopRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopRestricted__factory extends ContractFactory {
  constructor(...args: ShopRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopRestricted";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopRestricted> {
    return super.deploy(input, overrides || {}) as Promise<ShopRestricted>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopRestricted {
    return super.attach(address) as ShopRestricted;
  }
  connect(signer: Signer): ShopRestricted__factory {
    return super.connect(signer) as ShopRestricted__factory;
  }
  static readonly contractName: "ShopRestricted";
  public readonly contractName: "ShopRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopRestrictedInterface {
    return new utils.Interface(_abi) as ShopRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopRestricted {
    return new Contract(address, _abi, signerOrProvider) as ShopRestricted;
  }
}
