/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShopRestricted,
  ShopRestrictedInterface,
  ShopConstructor,
} from "../ShopRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "NewDiscount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
    ],
    name: "createDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "dateStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateStop",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "discount",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "usable",
            type: "bool",
          },
        ],
        internalType: "struct Discount.Struct",
        name: "discount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct ShopConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620028083803806200280883398181016040528101906200003c919062000abb565b8080600001518160800151620000676200005b620002d960201b60201c565b620002e160201b60201c565b80518251146200007657600080fd5b60005b8251811015620001b55760005b8282815181106200009c576200009b62000b0c565b5b602002602001015151811015620001a05760016000858481518110620000c757620000c662000b0c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208383815181106200011f576200011e62000b0c565b5b602002602001015182815181106200013c576200013b62000b0c565b5b602002602001015190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c021790555080620001989062000b74565b905062000086565b5080620001ad9062000b74565b905062000079565b5050508060036000820151816000019080519060200190620001d9929190620003a5565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190620002cd92919062000434565b50905050505062000bc1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805482825590600052602060002090810192821562000421579160200282015b82811115620004205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620003c6565b5b5090506200043091906200049b565b5090565b82805482825590600052602060002090810192821562000488579160200282015b828111156200048757825182908051906020019062000476929190620004ba565b509160200191906001019062000455565b5b5090506200049791906200056e565b5090565b5b80821115620004b65760008160009055506001016200049c565b5090565b828054828255906000526020600020906007016008900481019282156200055b5791602002820160005b838211156200052757835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620004e4565b8015620005595782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000527565b505b5090506200056a91906200049b565b5090565b5b8082111562000592576000818162000588919062000596565b506001016200056f565b5090565b508054600082556007016008900490600052602060002090810190620005bd91906200049b565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200062482620005d9565b810181811067ffffffffffffffff82111715620006465762000645620005ea565b5b80604052505050565b60006200065b620005c0565b905062000669828262000619565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115620006965762000695620005ea565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006d982620006ac565b9050919050565b620006eb81620006cc565b8114620006f757600080fd5b50565b6000815190506200070b81620006e0565b92915050565b600062000728620007228462000678565b6200064f565b905080838252602082019050602084028301858111156200074e576200074d620006a7565b5b835b818110156200077b5780620007668882620006fa565b84526020840193505060208101905062000750565b5050509392505050565b600082601f8301126200079d576200079c62000673565b5b8151620007af84826020860162000711565b91505092915050565b600067ffffffffffffffff821115620007d657620007d5620005ea565b5b602082029050602081019050919050565b600067ffffffffffffffff821115620008055762000804620005ea565b5b602082029050602081019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6200084d8162000816565b81146200085957600080fd5b50565b6000815190506200086d8162000842565b92915050565b60006200088a6200088484620007e7565b6200064f565b90508083825260208201905060208402830185811115620008b057620008af620006a7565b5b835b81811015620008dd5780620008c888826200085c565b845260208401935050602081019050620008b2565b5050509392505050565b600082601f830112620008ff57620008fe62000673565b5b81516200091184826020860162000873565b91505092915050565b6000620009316200092b84620007b8565b6200064f565b90508083825260208201905060208402830185811115620009575762000956620006a7565b5b835b81811015620009a557805167ffffffffffffffff81111562000980576200097f62000673565b5b8086016200098f8982620008e7565b8552602085019450505060208101905062000959565b5050509392505050565b600082601f830112620009c757620009c662000673565b5b8151620009d98482602086016200091a565b91505092915050565b600060a08284031215620009fb57620009fa620005d4565b5b62000a0760a06200064f565b9050600082015167ffffffffffffffff81111562000a2a5762000a296200066e565b5b62000a388482850162000785565b600083015250602062000a4e84828501620006fa565b602083015250604062000a6484828501620006fa565b604083015250606062000a7a84828501620006fa565b606083015250608082015167ffffffffffffffff81111562000aa15762000aa06200066e565b5b62000aaf84828501620009af565b60808301525092915050565b60006020828403121562000ad45762000ad3620005ca565b5b600082015167ffffffffffffffff81111562000af55762000af4620005cf565b5b62000b0384828501620009e2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000b818262000b6a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000bb65762000bb562000b3b565b5b600182019050919050565b611c378062000bd16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010a578063af640d0f14610128578063c0d94d1a14610146578063d8de658714610162578063f2fde38b1461018257610093565b80632a45ccb5146100985780635b19e294146100b4578063715018a6146100e457806381c461ab146100ee575b600080fd5b6100b260048036038101906100ad9190611301565b61019e565b005b6100ce60048036038101906100c9919061135d565b61041d565b6040516100db91906113d8565b60405180910390f35b6100ec610463565b005b610108600480360381019061010391906113f3565b610477565b005b61011261070f565b60405161011f919061144b565b60405180910390f35b610130610738565b60405161013d9190611475565b60405180910390f35b610160600480360381019061015b91906117e7565b61073e565b005b61016a610870565b60405161017993929190611830565b60405180910390f35b61019c60048036038101906101979190611867565b6108e8565b005b6000805b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156102de576000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061028157610280611894565b5b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102cd57600191505b806102d7906118f2565b90506101a2565b50806102e957600080fd5b826009600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610360929190610d2c565b50604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160040160046101000a81548160ff021916908360ff16021790555060c08201518160040160056101000a81548160ff021916908315150217905550905050817f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f6846040516104109190611ad0565b60405180910390a2505050565b6001602052816000526040600020818154811061043957600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b61046b61096b565b61047560006109e9565b565b6000805b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156105b7576000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061055a57610559611894565b5b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036105a657600191505b806105b0906118f2565b905061047b565b50806105c257600080fd5b8160096000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061063b929190610d2c565b50604082015181600201556060820151816003015560808201518160040160006101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160040160046101000a81548160ff021916908360ff16021790555060c08201518160040160056101000a81548160ff0219169083151502179055509050506002547f1205e0a4f1c12aa126732b10943265e2b38d1bd3862cbe7d571d936baae630f6836040516106ed9190611ad0565b60405180910390a2600260008154610704906118f2565b919050819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b61074661096b565b8060036000820151816000019080519060200190610765929190610d79565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190610857929190610e03565b5090505061086d81600001518260800151610aad565b50565b60038060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6108f061096b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361095f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095690611b75565b60405180910390fd5b610968816109e9565b50565b610973610d24565b73ffffffffffffffffffffffffffffffffffffffff1661099161070f565b73ffffffffffffffffffffffffffffffffffffffff16146109e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109de90611be1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8051825114610abb57600080fd5b60005b8251811015610d1f5760005b828281518110610add57610adc611894565b5b602002602001015151811015610d0d5760016000858481518110610b0457610b03611894565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610c2b5760016000858481518110610b6757610b66611894565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838381518110610bbc57610bbb611894565b5b60200260200101518281518110610bd657610bd5611894565b5b602002602001015190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c0217905550610cfc565b828281518110610c3e57610c3d611894565b5b60200260200101518181518110610c5857610c57611894565b5b602002602001015160016000868581518110610c7757610c76611894565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ccb57610cca611894565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b80610d06906118f2565b9050610aca565b5080610d18906118f2565b9050610abe565b505050565b600033905090565b828054828255906000526020600020908101928215610d68579160200282015b82811115610d67578251825591602001919060010190610d4c565b5b509050610d759190610e63565b5090565b828054828255906000526020600020908101928215610df2579160200282015b82811115610df15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610d99565b5b509050610dff9190610e63565b5090565b828054828255906000526020600020908101928215610e52579160200282015b82811115610e51578251829080519060200190610e41929190610e80565b5091602001919060010190610e23565b5b509050610e5f9190610f2d565b5090565b5b80821115610e7c576000816000905550600101610e64565b5090565b82805482825590600052602060002090600701600890048101928215610f1c5791602002820160005b83821115610eea57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610ea9565b8015610f1a5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610eea565b505b509050610f299190610e63565b5090565b5b80821115610f4d5760008181610f449190610f51565b50600101610f2e565b5090565b508054600082556007016008900490600052602060002090810190610f769190610e63565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fdb82610f92565b810181811067ffffffffffffffff82111715610ffa57610ff9610fa3565b5b80604052505050565b600061100d610f79565b90506110198282610fd2565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061104e82611023565b9050919050565b61105e81611043565b811461106957600080fd5b50565b60008135905061107b81611055565b92915050565b600080fd5b600067ffffffffffffffff8211156110a1576110a0610fa3565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6110ca816110b7565b81146110d557600080fd5b50565b6000813590506110e7816110c1565b92915050565b60006111006110fb84611086565b611003565b90508083825260208201905060208402830185811115611123576111226110b2565b5b835b8181101561114c578061113888826110d8565b845260208401935050602081019050611125565b5050509392505050565b600082601f83011261116b5761116a611081565b5b813561117b8482602086016110ed565b91505092915050565b600063ffffffff82169050919050565b61119d81611184565b81146111a857600080fd5b50565b6000813590506111ba81611194565b92915050565b600060ff82169050919050565b6111d6816111c0565b81146111e157600080fd5b50565b6000813590506111f3816111cd565b92915050565b60008115159050919050565b61120e816111f9565b811461121957600080fd5b50565b60008135905061122b81611205565b92915050565b600060e0828403121561124757611246610f8d565b5b61125160e0611003565b905060006112618482850161106c565b600083015250602082013567ffffffffffffffff8111156112855761128461101e565b5b61129184828501611156565b60208301525060406112a5848285016110d8565b60408301525060606112b9848285016110d8565b60608301525060806112cd848285016111ab565b60808301525060a06112e1848285016111e4565b60a08301525060c06112f58482850161121c565b60c08301525092915050565b6000806040838503121561131857611317610f83565b5b600083013567ffffffffffffffff81111561133657611335610f88565b5b61134285828601611231565b9250506020611353858286016110d8565b9150509250929050565b6000806040838503121561137457611373610f83565b5b60006113828582860161106c565b9250506020611393858286016110d8565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113d28161139d565b82525050565b60006020820190506113ed60008301846113c9565b92915050565b60006020828403121561140957611408610f83565b5b600082013567ffffffffffffffff81111561142757611426610f88565b5b61143384828501611231565b91505092915050565b61144581611043565b82525050565b6000602082019050611460600083018461143c565b92915050565b61146f816110b7565b82525050565b600060208201905061148a6000830184611466565b92915050565b600067ffffffffffffffff8211156114ab576114aa610fa3565b5b602082029050602081019050919050565b60006114cf6114ca84611490565b611003565b905080838252602082019050602084028301858111156114f2576114f16110b2565b5b835b8181101561151b5780611507888261106c565b8452602084019350506020810190506114f4565b5050509392505050565b600082601f83011261153a57611539611081565b5b813561154a8482602086016114bc565b91505092915050565b600067ffffffffffffffff82111561156e5761156d610fa3565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561159a57611599610fa3565b5b602082029050602081019050919050565b6115b48161139d565b81146115bf57600080fd5b50565b6000813590506115d1816115ab565b92915050565b60006115ea6115e58461157f565b611003565b9050808382526020820190506020840283018581111561160d5761160c6110b2565b5b835b81811015611636578061162288826115c2565b84526020840193505060208101905061160f565b5050509392505050565b600082601f83011261165557611654611081565b5b81356116658482602086016115d7565b91505092915050565b600061168161167c84611553565b611003565b905080838252602082019050602084028301858111156116a4576116a36110b2565b5b835b818110156116eb57803567ffffffffffffffff8111156116c9576116c8611081565b5b8086016116d68982611640565b855260208501945050506020810190506116a6565b5050509392505050565b600082601f83011261170a57611709611081565b5b813561171a84826020860161166e565b91505092915050565b600060a0828403121561173957611738610f8d565b5b61174360a0611003565b9050600082013567ffffffffffffffff8111156117635761176261101e565b5b61176f84828501611525565b60008301525060206117838482850161106c565b60208301525060406117978482850161106c565b60408301525060606117ab8482850161106c565b606083015250608082013567ffffffffffffffff8111156117cf576117ce61101e565b5b6117db848285016116f5565b60808301525092915050565b6000602082840312156117fd576117fc610f83565b5b600082013567ffffffffffffffff81111561181b5761181a610f88565b5b61182784828501611723565b91505092915050565b6000606082019050611845600083018661143c565b611852602083018561143c565b61185f604083018461143c565b949350505050565b60006020828403121561187d5761187c610f83565b5b600061188b8482850161106c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118fd826110b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361192f5761192e6118c3565b5b600182019050919050565b61194381611043565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61197e816110b7565b82525050565b60006119908383611975565b60208301905092915050565b6000602082019050919050565b60006119b482611949565b6119be8185611954565b93506119c983611965565b8060005b838110156119fa5781516119e18882611984565b97506119ec8361199c565b9250506001810190506119cd565b5085935050505092915050565b611a1081611184565b82525050565b611a1f816111c0565b82525050565b611a2e816111f9565b82525050565b600060e083016000830151611a4c600086018261193a565b5060208301518482036020860152611a6482826119a9565b9150506040830151611a796040860182611975565b506060830151611a8c6060860182611975565b506080830151611a9f6080860182611a07565b5060a0830151611ab260a0860182611a16565b5060c0830151611ac560c0860182611a25565b508091505092915050565b60006020820190508181036000830152611aea8184611a34565b905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611b5f602683611af2565b9150611b6a82611b03565b604082019050919050565b60006020820190508181036000830152611b8e81611b52565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611bcb602083611af2565b9150611bd682611b95565b602082019050919050565b60006020820190508181036000830152611bfa81611bbe565b905091905056fea2646970667358221220e3e16d74c2071cc74bfef23ea899934d0d3918be73f5c08d379193b90101fcd964736f6c63430008110033";

type ShopRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopRestricted__factory extends ContractFactory {
  constructor(...args: ShopRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopRestricted";
  }

  deploy(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopRestricted> {
    return super.deploy(input, overrides || {}) as Promise<ShopRestricted>;
  }
  getDeployTransaction(
    input: ShopConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): ShopRestricted {
    return super.attach(address) as ShopRestricted;
  }
  connect(signer: Signer): ShopRestricted__factory {
    return super.connect(signer) as ShopRestricted__factory;
  }
  static readonly contractName: "ShopRestricted";
  public readonly contractName: "ShopRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopRestrictedInterface {
    return new utils.Interface(_abi) as ShopRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopRestricted {
    return new Contract(address, _abi, signerOrProvider) as ShopRestricted;
  }
}
