/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IGetBreeding, IGetBreedingInterface } from "../IGetBreeding";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IGetBreeding__factory {
  static readonly abi = _abi;
  static createInterface(): IGetBreedingInterface {
    return new utils.Interface(_abi) as IGetBreedingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGetBreeding {
    return new Contract(address, _abi, signerOrProvider) as IGetBreeding;
  }
}
