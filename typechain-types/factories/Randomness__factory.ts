/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Randomness, RandomnessInterface } from "../Randomness";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610430806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063abaa08b314610030575b600080fd5b61004a60048036038101906100459190610202565b610060565b6040516100579190610264565b60405180910390f35b600044424560014361007291906102ae565b408560405160200161008895949392919061039f565b6040516020818303038152906040528051906020012060001c9050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61010f826100c6565b810181811067ffffffffffffffff8211171561012e5761012d6100d7565b5b80604052505050565b60006101416100a8565b905061014d8282610106565b919050565b600067ffffffffffffffff82111561016d5761016c6100d7565b5b610176826100c6565b9050602081019050919050565b82818337600083830152505050565b60006101a56101a084610152565b610137565b9050828152602081018484840111156101c1576101c06100c1565b5b6101cc848285610183565b509392505050565b600082601f8301126101e9576101e86100bc565b5b81356101f9848260208601610192565b91505092915050565b600060208284031215610218576102176100b2565b5b600082013567ffffffffffffffff811115610236576102356100b7565b5b610242848285016101d4565b91505092915050565b6000819050919050565b61025e8161024b565b82525050565b60006020820190506102796000830184610255565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102b98261024b565b91506102c48361024b565b92508282039050818111156102dc576102db61027f565b5b92915050565b6000819050919050565b6102fd6102f88261024b565b6102e2565b82525050565b6000819050919050565b6000819050919050565b61032861032382610303565b61030d565b82525050565b600081519050919050565b600081905092915050565b60005b83811015610362578082015181840152602081019050610347565b60008484015250505050565b60006103798261032e565b6103838185610339565b9350610393818560208601610344565b80840191505092915050565b60006103ab82886102ec565b6020820191506103bb82876102ec565b6020820191506103cb82866102ec565b6020820191506103db8285610317565b6020820191506103eb828461036e565b9150819050969550505050505056fea2646970667358221220e6ae669a94c851da844147f75db077c8d5eebcd87f321fe9e6d72b0bd5658cb264736f6c63430008110033";

type RandomnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Randomness__factory extends ContractFactory {
  constructor(...args: RandomnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Randomness";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Randomness> {
    return super.deploy(overrides || {}) as Promise<Randomness>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Randomness {
    return super.attach(address) as Randomness;
  }
  connect(signer: Signer): Randomness__factory {
    return super.connect(signer) as Randomness__factory;
  }
  static readonly contractName: "Randomness";
  public readonly contractName: "Randomness";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomnessInterface {
    return new utils.Interface(_abi) as RandomnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Randomness {
    return new Contract(address, _abi, signerOrProvider) as Randomness;
  }
}
