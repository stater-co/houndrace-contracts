/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GeneratorMethods,
  GeneratorMethodsInterface,
  GeneratorConstructor,
} from "../../../../../contracts/generator/methods/Index.sol/GeneratorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "allowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "generate",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200123f3803806200123f83398101604081905262000034916200014b565b806200004033620000de565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c0909201516007805490931691161790555062000218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200014657600080fd5b919050565b600060e082840312156200015e57600080fd5b60405160e081016001600160401b03811182821017156200018f57634e487b7160e01b600052604160045260246000fd5b6040526200019d836200012e565b8152620001ad602084016200012e565b6020820152620001c0604084016200012e565b6040820152620001d3606084016200012e565b6060820152620001e6608084016200012e565b6080820152620001f960a084016200012e565b60a08201526200020c60c084016200012e565b60c08201529392505050565b61101780620002286000396000f3fe6080604052600436106100565760003560e01c8063715018a61461005f5780637feaa6d3146100745780638da5cb5b14610094578063c5d642d4146100c6578063d8de6587146100f3578063f2fde38b1461018157005b3661005d57005b005b34801561006b57600080fd5b5061005d6101a1565b34801561008057600080fd5b5061005d61008f3660046106a6565b6101b5565b3480156100a057600080fd5b506100a9610256565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d257600080fd5b506100e66100e1366004610abb565b610265565b6040516100bd9190610dd6565b3480156100ff57600080fd5b50600154600254600354600454600554600654600754610138966001600160a01b03908116968116958116948116938116928116911687565b604080516001600160a01b039889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e0016100bd565b34801561018d57600080fd5b5061005d61019c366004610e9d565b610440565b6101a96104be565b6101b3600061051d565b565b6101bd6104be565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c090920151600780549093169116179055565b6000546001600160a01b031690565b61026d61056d565b6004546001600160a01b0316331461028457600080fd5b82610120015163ffffffff16836040015151146102a057600080fd5b600154604080514260208201526000926001600160a01b03169163abaa08b391016040516020818303038152906040526040518263ffffffff1660e01b81526004016102ec9190610ebf565b602060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610ed2565b6007546040808701516060880151915163126701cf60e31b815293945060009384936001600160a01b0316926393380e7892610370929091908890600401610eeb565b600060405180830381865afa15801561038d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103b59190810190610f6b565b915091506040518061012001604052808760000151815260200187602001516001600160a01b0316815260200183815260200187606001518152602001876080015181526020018481526020018761010001518152602001868152602001826040516020016104249190610fce565b60408051601f1981840301815291905290529695505050505050565b6104486104be565b6001600160a01b0381166104b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104bb8161051d565b50565b336104c7610256565b6001600160a01b0316146101b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061012001604052806060815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016105e56040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610631576106316105f9565b60405290565b60405161018081016001600160401b0381118282101715610631576106316105f9565b604051601f8201601f191681016001600160401b0381118282101715610682576106826105f9565b604052919050565b80356001600160a01b03811681146106a157600080fd5b919050565b600060e082840312156106b857600080fd5b60405160e081016001600160401b03811182821017156106da576106da6105f9565b6040526106e68361068a565b81526106f46020840161068a565b60208201526107056040840161068a565b60408201526107166060840161068a565b60608201526107276080840161068a565b608082015261073860a0840161068a565b60a082015261074960c0840161068a565b60c08201529392505050565b600082601f83011261076657600080fd5b81356001600160401b0381111561077f5761077f6105f9565b610792601f8201601f191660200161065a565b8181528460208386010111156107a757600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b038211156107dd576107dd6105f9565b5060051b60200190565b600082601f8301126107f857600080fd5b8135602061080d610808836107c4565b61065a565b82815260059290921b8401810191818101908684111561082c57600080fd5b8286015b848110156108475780358352918301918301610830565b509695505050505050565b600082601f83011261086357600080fd5b81356020610873610808836107c4565b82815260059290921b8401810191818101908684111561089257600080fd5b8286015b84811015610847576108a78161068a565b8352918301918301610896565b600082601f8301126108c557600080fd5b813560206108d5610808836107c4565b82815260059290921b840181019181810190868411156108f457600080fd5b8286015b848110156108475780356001600160401b038111156109175760008081fd5b6109258986838b01016107e7565b8452509183019183016108f8565b803563ffffffff811681146106a157600080fd5b600082601f83011261095857600080fd5b81356020610968610808836107c4565b82815260059290921b8401810191818101908684111561098757600080fd5b8286015b848110156108475761099c81610933565b835291830191830161098b565b600060c082840312156109bb57600080fd5b6109c361060f565b905081356001600160401b03808211156109dc57600080fd5b6109e885838601610852565b835260208401359150808211156109fe57600080fd5b610a0a85838601610852565b60208401526040840135915080821115610a2357600080fd5b610a2f85838601610852565b60408401526060840135915080821115610a4857600080fd5b610a54858386016108b4565b60608401526080840135915080821115610a6d57600080fd5b610a79858386016108b4565b608084015260a0840135915080821115610a9257600080fd5b50610a9f84828501610947565b60a08301525092915050565b803580151581146106a157600080fd5b60008060408385031215610ace57600080fd5b82356001600160401b0380821115610ae557600080fd5b908401906101808287031215610afa57600080fd5b610b02610637565b823582811115610b1157600080fd5b610b1d88828601610755565b825250610b2c6020840161068a565b6020820152604083013582811115610b4357600080fd5b610b4f888286016107e7565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013583811115610b9b57600080fd5b610ba7898287016109a9565b8284015250506101209150610bbd828401610933565b828201526101409150610bd1828401610933565b828201526101609150610be5828401610aab565b9181019190915295602094909401359450505050565b6000815180845260005b81811015610c2157602081850181015186830182015201610c05565b81811115610c33576000602083870101525b50601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015610c7857815187529582019590820190600101610c5c565b509495945050505050565b600081518084526020808501945080840160005b83811015610c785781516001600160a01b031687529582019590820190600101610c97565b600081518084526020808501808196508360051b8101915082860160005b85811015610d04578284038952610cf2848351610c48565b98850198935090840190600101610cda565b5091979650505050505050565b6000815160c08452610d2660c0850182610c83565b905060208084015185830382870152610d3f8382610c83565b92505060408401518583036040870152610d598382610c83565b92505060608401518583036060870152610d738382610cbc565b92505060808401518583036080870152610d8d8382610cbc565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561084757845163ffffffff168252938301936001929092019190830190610db0565b6020815260008251610120806020850152610df5610140850183610bfb565b91506020850151610e1160408601826001600160a01b03169052565b506040850151601f1980868503016060870152610e2e8483610c48565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e0870152610e698483610d11565b60e0880151610100888101919091528801518782039092018488015293509050610e938382610bfb565b9695505050505050565b600060208284031215610eaf57600080fd5b610eb88261068a565b9392505050565b602081526000610eb86020830184610bfb565b600060208284031215610ee457600080fd5b5051919050565b606081526000610efe6060830186610c48565b60208301949094525060400152919050565b600082601f830112610f2157600080fd5b81516020610f31610808836107c4565b82815260059290921b84018101918181019086841115610f5057600080fd5b8286015b848110156108475780518352918301918301610f54565b60008060408385031215610f7e57600080fd5b82516001600160401b0380821115610f9557600080fd5b610fa186838701610f10565b93506020850151915080821115610fb757600080fd5b50610fc485828601610f10565b9150509250929050565b602081526000610eb86020830184610c4856fea2646970667358221220c195862fe1017d0caf788bd6be2baeb5a60e4034a867cf669e3f50633c9ac6ec64736f6c634300080f0033";

type GeneratorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneratorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GeneratorMethods__factory extends ContractFactory {
  constructor(...args: GeneratorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GeneratorMethods> {
    return super.deploy(input, overrides || {}) as Promise<GeneratorMethods>;
  }
  override getDeployTransaction(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  override attach(address: string): GeneratorMethods {
    return super.attach(address) as GeneratorMethods;
  }
  override connect(signer: Signer): GeneratorMethods__factory {
    return super.connect(signer) as GeneratorMethods__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneratorMethodsInterface {
    return new utils.Interface(_abi) as GeneratorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneratorMethods {
    return new Contract(address, _abi, signerOrProvider) as GeneratorMethods;
  }
}
