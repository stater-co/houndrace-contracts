/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWholeArithmeticRecombination,
  IWholeArithmeticRecombinationInterface,
} from "../../../../contracts/genetics/interfaces/IWholeArithmeticRecombination";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32[54]",
        name: "geneticSequence1",
        type: "uint32[54]",
      },
      {
        internalType: "uint32[54]",
        name: "geneticSequence2",
        type: "uint32[54]",
      },
    ],
    name: "wholeArithmeticRecombination",
    outputs: [
      {
        internalType: "uint32[54]",
        name: "geneticSequence",
        type: "uint32[54]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IWholeArithmeticRecombination__factory {
  static readonly abi = _abi;
  static createInterface(): IWholeArithmeticRecombinationInterface {
    return new utils.Interface(_abi) as IWholeArithmeticRecombinationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWholeArithmeticRecombination {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IWholeArithmeticRecombination;
  }
}
