/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  IncubatorMethods,
  IncubatorMethodsInterface,
  IncubatorConstructor,
} from "../../../../../contracts/incubator/methods/Index.sol/IncubatorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hound1Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound1",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "hound2Id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "hound2",
        type: "tuple",
      },
    ],
    name: "breedHounds",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "totalRuns",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "firstPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "secondPlace",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "thirdPlace",
                type: "uint64",
              },
            ],
            internalType: "struct Hound.Statistics",
            name: "statistics",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefill1xCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerHour",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct Hound.Stamina",
            name: "stamina",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct Hound.Breeding",
            name: "breeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "femaleParent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "generation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "birthDate",
                type: "uint256",
              },
              {
                internalType: "uint32[54]",
                name: "geneticSequence",
                type: "uint32[54]",
              },
            ],
            internalType: "struct Hound.Identity",
            name: "identity",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "token_uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "custom",
            type: "bool",
          },
        ],
        internalType: "struct Hound.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "genetics",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsToMaturity",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "genetics",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsToMaturity",
            type: "uint32",
          },
        ],
        internalType: "struct IncubatorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011b1380380620011b183398101604081905262000034916200011a565b806200004033620000ad565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b0319909416919092161791909117905550620001b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011557600080fd5b919050565b6000608082840312156200012d57600080fd5b604051608081016001600160401b03811182821017156200015e57634e487b7160e01b600052604160045260246000fd5b6040526200016c83620000fd565b81526200017c60208401620000fd565b60208201526200018f60408401620000fd565b6040820152606083015163ffffffff81168114620001ac57600080fd5b60608201529392505050565b610fe980620001c86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063203dbf02146100675780634a2be0041461007c578063715018a6146100a55780638da5cb5b146100ad578063d8de6587146100cd578063f2fde38b14610133575b600080fd5b61007a6100753660046107af565b610146565b005b61008f61008a366004610bcb565b6101b6565b60405161009c9190610ce7565b60405180910390f35b61007a610495565b6100b56104a9565b6040516001600160a01b03909116815260200161009c565b6001546002546003546100fd926001600160a01b039081169281169190811690600160a01b900463ffffffff1684565b604080516001600160a01b0395861681529385166020850152919093169082015263ffffffff909116606082015260800161009c565b61007a610141366004610e43565b6104b8565b61014e610536565b8051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549184169190921617905560408201516003805460609094015163ffffffff16600160a01b026001600160c01b03199094169190921617919091179055565b6101be6105e5565b6002546000906001600160a01b031663abaa08b38588116101e7578460600151608001516101f1565b8660600151608001515b6040516020016102019190610e94565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161022c9190610ea9565b602060405180830381865afa158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d9190610ebc565b600354606080880151608090810151918701510151604051631f59d3b960e01b81529394506000936001600160a01b0390931692631f59d3b9926102b79290918790600401610ed5565b6106c060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610f01565b6040805160808101825260008082526020820181905281830181905260608201819052825160c08101909352929350919080610336600287610f6b565b156103465760208801515161034d565b60208a0151515b6001600160a01b031681526000602080830182905267016345785d8a00006040808501919091526064606085018190526001608086015260a094850152805193840190528183526003549394509092908201906103b790600160a01b900463ffffffff1642610f8d565b81526020018a60400151604001516001600160a01b031681526020016000815260200160001515815250905060006040518060a001604052808c81526020018a81526020018960600151604001518c60600151604001516104189190610f8d565b815260200142815260200186815250905060405180610100016040528085815260200184815260200183815260200182815260200160405180602001604052806000815250815260200160405180602001604052806000815250815260200160008152602001600015158152509650505050505050949350505050565b61049d610536565b6104a76000610595565b565b6000546001600160a01b031690565b6104c0610536565b6001600160a01b03811661052a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61053381610595565b50565b3361053f6104a9565b6001600160a01b0316146104a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610521565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805161018081019091526000610100820181815261012083018290526101408301829052610160830191909152819081526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291019081526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291019081526020016106866106aa565b81526020016060815260200160608152602001600081526020016000151581525090565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016106d96106de565b905290565b604051806106c001604052806036906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715610735576107356106fd565b60405290565b60405161010081016001600160401b0381118282101715610735576107356106fd565b6040516106c081016001600160401b0381118282101715610735576107356106fd565b80356001600160a01b038116811461079857600080fd5b919050565b63ffffffff8116811461053357600080fd5b6000608082840312156107c157600080fd5b604051608081016001600160401b03811182821017156107e3576107e36106fd565b6040526107ef83610781565b81526107fd60208401610781565b602082015261080e60408401610781565b604082015260608301356108218161079d565b60608201529392505050565b80356001600160401b038116811461079857600080fd5b60006080828403121561085657600080fd5b604051608081016001600160401b0381118282101715610878576108786106fd565b6040529050806108878361082d565b81526108956020840161082d565b60208201526108a66040840161082d565b60408201526108b76060840161082d565b60608201525092915050565b600060c082840312156108d557600080fd5b60405160c081016001600160401b03811182821017156108f7576108f76106fd565b60405290508061090683610781565b81526020830135602082015260408301356040820152606083013561092a8161079d565b6060820152608083013561093d8161079d565b608082015260a08301356109508161079d565b60a0919091015292915050565b8035801515811461079857600080fd5b600060a0828403121561097f57600080fd5b610987610713565b905081358152602082013560208201526109a360408301610781565b6040820152606082013560608201526109be6080830161095d565b608082015292915050565b60006107408083850312156109dd57600080fd5b6109e5610713565b91508235825260208084013581840152604084013560408401526060840135606084015284609f850112610a1857600080fd5b610a2061075e565b918401918086841115610a3257600080fd5b608086015b84811015610a57578035610a4a8161079d565b8352918301918301610a37565b5060808501525091949350505050565b600082601f830112610a7857600080fd5b81356001600160401b0380821115610a9257610a926106fd565b604051601f8301601f19908116603f01168101908282118183101715610aba57610aba6106fd565b81604052838152866020858801011115610ad357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006109a08284031215610b0657600080fd5b610b0e61073b565b9050610b1a8383610844565b8152610b2983608084016108c3565b6020820152610b3c83610140840161096d565b6040820152610b4f836101e084016109c9565b60608201526109208201356001600160401b0380821115610b6f57600080fd5b610b7b85838601610a67565b6080840152610940840135915080821115610b9557600080fd5b50610ba284828501610a67565b60a08301525061096082013560c0820152610bc0610980830161095d565b60e082015292915050565b60008060008060808587031215610be157600080fd5b8435935060208501356001600160401b0380821115610bff57600080fd5b610c0b88838901610af3565b9450604087013593506060870135915080821115610c2857600080fd5b50610c3587828801610af3565b91505092959194509250565b8051825260208082015181840152604082015160408401526060820151606084015260808201516080840160005b6036811015610c9257825163ffffffff1682529183019190830190600101610c6f565b505050505050565b6000815180845260005b81811015610cc057602081850181015186830182015201610ca4565b81811115610cd2576000602083870101525b50601f01601f19169290920160200192915050565b60208152610d2760208201835180516001600160401b03908116835260208083015182169084015260408281015182169084015260609182015116910152565b60208281015180516001600160a01b031660a0848101919091529181015160c0840152604081015160e0840152606081015163ffffffff90811661010085015260808201518116610120850152918101519091166101408301526000905060408381015180516101608501526020810151610180850152908101516001600160a01b03166101a084015260608101516101c0840152608081015115156101e0840152506060830151610ddd610200840182610c41565b5060808301516109a080610940850152610dfb6109c0850183610c9a565b915060a0850151601f1985840301610960860152610e198382610c9a565b92505060c085015161098085015260e0850151610e398286018215159052565b5090949350505050565b600060208284031215610e5557600080fd5b610e5e82610781565b9392505050565b8060005b6036811015610e8e57815163ffffffff16845260209384019390910190600101610e69565b50505050565b6106c08101610ea38284610e65565b92915050565b602081526000610e5e6020830184610c9a565b600060208284031215610ece57600080fd5b5051919050565b610da08101610ee48286610e65565b610ef26106c0830185610e65565b82610d80830152949350505050565b60006106c0808385031215610f1557600080fd5b83601f840112610f2457600080fd5b610f2c61075e565b908301908085831115610f3e57600080fd5b845b83811015610f61578051610f538161079d565b835260209283019201610f40565b5095945050505050565b600082610f8857634e487b7160e01b600052601260045260246000fd5b500690565b60008219821115610fae57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d8d632a0436d31c2839f5ac22813ecf1142c202b347c64b5ea758c4c95bbc1ef64736f6c634300080f0033";

type IncubatorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncubatorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncubatorMethods__factory extends ContractFactory {
  constructor(...args: IncubatorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncubatorMethods> {
    return super.deploy(input, overrides || {}) as Promise<IncubatorMethods>;
  }
  override getDeployTransaction(
    input: IncubatorConstructor.StructStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  override attach(address: string): IncubatorMethods {
    return super.attach(address) as IncubatorMethods;
  }
  override connect(signer: Signer): IncubatorMethods__factory {
    return super.connect(signer) as IncubatorMethods__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncubatorMethodsInterface {
    return new utils.Interface(_abi) as IncubatorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncubatorMethods {
    return new Contract(address, _abi, signerOrProvider) as IncubatorMethods;
  }
}
