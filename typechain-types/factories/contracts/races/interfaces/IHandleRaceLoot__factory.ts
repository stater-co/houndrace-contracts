/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IHandleRaceLoot,
  IHandleRaceLootInterface,
} from "../../../../contracts/races/interfaces/IHandleRaceLoot";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

export class IHandleRaceLoot__factory {
  static readonly abi = _abi;
  static createInterface(): IHandleRaceLootInterface {
    return new utils.Interface(_abi) as IHandleRaceLootInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IHandleRaceLoot {
    return new Contract(address, _abi, signerOrProvider) as IHandleRaceLoot;
  }
}
