/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RacesMethods,
  RacesMethodsInterface,
  RacesConstructor,
} from "../../../../../contracts/races/methods/Index.sol/RacesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raceFee",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620035da380380620035da8339810160408190526200003891620003f4565b80620000443362000206565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000256565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b81610100015151811015620001fd57600e6000836101000151838151811062000163576200016362000528565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110620001b857620001b862000528565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001f5816200053e565b905062000136565b50505062000566565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002ae579160200282015b82811115620002ae57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000277565b50620002bc929150620002c0565b5090565b5b80821115620002bc5760008155600101620002c1565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620003135762000313620002d7565b60405290565b80516001600160a01b03811681146200033157600080fd5b919050565b600082601f8301126200034857600080fd5b815160206001600160401b0380831115620003675762000367620002d7565b8260051b604051601f19603f830116810181811084821117156200038f576200038f620002d7565b604052938452858101830193838101925087851115620003ae57600080fd5b83870191505b84821015620003d857620003c88262000319565b83529183019190830190620003b4565b979650505050505050565b805180151581146200033157600080fd5b6000602082840312156200040757600080fd5b81516001600160401b03808211156200041f57600080fd5b9083019061016082860312156200043557600080fd5b6200043f620002ed565b6200044a8362000319565b81526200045a6020840162000319565b60208201526200046d6040840162000319565b6040820152620004806060840162000319565b6060820152620004936080840162000319565b6080820152620004a660a0840162000319565b60a0820152620004b960c0840162000319565b60c0820152620004cc60e0840162000319565b60e08201526101008084015183811115620004e657600080fd5b620004f48882870162000336565b82840152505061012091508183015182820152610140915062000519828401620003e3565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200055f57634e487b7160e01b600052601160045260246000fd5b5060010190565b61306480620005766000396000f3fe6080604052600436106100a35760003560e01c80633f16e358146100ac578063715018a6146100bf5780637bbc469e146100d45780638da5cb5b14610111578063af640d0f1461013e578063b7dda85e14610162578063c4bdc7e71461018f578063d63a8e11146101af578063d8de6587146101ef578063e1152343146102aa578063e200c857146102ca578063f2fde38b146102f7578063fc7d68591461031757005b366100aa57005b005b6100aa6100ba366004611db5565b610337565b3480156100cb57600080fd5b506100aa6104d0565b3480156100e057600080fd5b506100f46100ef366004611df1565b6104e4565b604051610108989796959493929190612001565b60405180910390f35b34801561011d57600080fd5b50610126610920565b6040516001600160a01b039091168152602001610108565b34801561014a57600080fd5b5061015460015481565b604051908152602001610108565b34801561016e57600080fd5b5061018261017d366004611df1565b61092f565b6040516101089190612076565b34801561019b57600080fd5b506100aa6101aa366004612145565b610dfb565b3480156101bb57600080fd5b506101df6101ca36600461225f565b600e6020526000908152604090205460ff1681565b6040519015158152602001610108565b3480156101fb57600080fd5b50600254600354600454600554600654600754600854600954600b54600c54610245996001600160a01b039081169981169881169781169681169581169481169316919060ff168a565b604080516001600160a01b039b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c085015290931660e083015261010082019290925290151561012082015261014001610108565b3480156102b657600080fd5b506100aa6102c5366004611df1565b610fb0565b3480156102d657600080fd5b506102ea6102e5366004611df1565b6110a0565b6040516101089190612283565b34801561030357600080fd5b506100aa61031236600461225f565b611105565b34801561032357600080fd5b506100aa61033236600461230e565b61117b565b336000908152600e602052604090205460ff1661035357600080fd5b60005b8151518110156104cc57600754825180516000926001600160a01b03169190849081106103855761038561244e565b6020026020010151846020015184815181106103a3576103a361244e565b6020026020010151856040015185815181106103c1576103c161244e565b6020026020010151866060015186815181106103df576103df61244e565b6020026020010151876080015187815181106103fd576103fd61244e565b60200260200101518860a00151888151811061041b5761041b61244e565b602002602001015160405160240161043896959493929190612464565b60408051601f198184030181529181526020820180516001600160e01b031663400f959f60e01b1790525161046d91906124c4565b600060405180830381855af49150503d80600081146104a8576040519150601f19603f3d011682016040523d82523d6000602084013e6104ad565b606091505b50509050806104bb57600080fd5b506104c5816124e0565b9050610356565b5050565b6104d8611679565b6104e260006116d8565b565b600d602052600090815260409020805481906104ff90612507565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90612507565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b50505060018401546003850154600486015460058701546040805160068a01805460e0602082028401810190945260c083018181529a9b6001600160a01b039098169a9699509497509295949093849284919084018282801561060457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e6575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561066657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610648575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156106c857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106aa575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107625760008481526020908190208301805460408051828502810185019091528181529283018282801561074e57602002820191906000526020600020905b81548152602001906001019080831161073a575b5050505050815260200190600101906106f6565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107fb576000848152602090819020830180546040805182850281018501909152818152928301828280156107e757602002820191906000526020600020905b8154815260200190600101908083116107d3575b50505050508152602001906001019061078f565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561087e57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116108415790505b5050505050815250509080600c01549080600d01805461089d90612507565b80601f01602080910402602001604051908101604052809291908181526020018280546108c990612507565b80156109165780601f106108eb57610100808354040283529160200191610916565b820191906000526020600020905b8154815290600101906020018083116108f957829003601f168201915b5050505050905088565b6000546001600160a01b031690565b610937611728565b6000828152600d6020526040908190208151610120810190925280548290829061096090612507565b80601f016020809104026020016040519081016040528092919081815260200182805461098c90612507565b80156109d95780601f106109ae576101008083540402835291602001916109d9565b820191906000526020600020905b8154815290600101906020018083116109bc57829003601f168201915b505050918352505060018201546001600160a01b03166020808301919091526002830180546040805182850281018501825282815294019392830182828015610a4157602002820191906000526020600020905b815481526020019060010190808311610a2d575b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610ad157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ab3575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610b3357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b15575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610b9557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b77575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610c2f57600084815260209081902083018054604080518285028101850190915281815292830182828015610c1b57602002820191906000526020600020905b815481526020019060010190808311610c07575b505050505081526020019060010190610bc3565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610cc857600084815260209081902083018054604080518285028101850190915281815292830182828015610cb457602002820191906000526020600020905b815481526020019060010190808311610ca0575b505050505081526020019060010190610c5c565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610d4b57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610d0e5790505b5050505050815250508152602001600c8201548152602001600d82018054610d7290612507565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9e90612507565b8015610deb5780601f10610dc057610100808354040283529160200191610deb565b820191906000526020600020905b815481529060010190602001808311610dce57829003601f168201915b5050505050815250509050919050565b610e03611679565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e085015160098054909316941693909317905561010083015180518493610ec992600a929101906117b4565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b816101000151518110156104cc57600e60008361010001518381518110610f1c57610f1c61244e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110610f6e57610f6e61244e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610fa9816124e0565b9050610ef3565b610fb8611679565b478111156110255760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b61102d610920565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061109d5760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b604482015260640161101c565b50565b6000818152600d60209081526040918290206002018054835181840281018401909452808452606093928301828280156110f957602002820191906000526020600020905b8154815260200190600101908083116110e5575b50505050509050919050565b61110d611679565b6001600160a01b0381166111725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161101c565b61109d816116d8565b336000908152600e602052604090205460ff1661119757600080fd5b600c5460ff16156115a95760065460405163317590b560e21b81526001600160a01b039091169063c5d642d4906111d49085908590600401612541565b600060405180830381865afa1580156111f1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112199190810190612925565b6001546000908152600d60205260409020815181906112389082612a8a565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516112779260028501920190611819565b50606082015160038201556080820151600482015560a0820151600582015560c08201518051805160068401916112b3918391602001906117b4565b5060208281015180516112cc92600185019201906117b4565b50604082015180516112e89160028401916020909101906117b4565b5060608201518051611304916003840191602090910190611854565b5060808201518051611320916004840191602090910190611854565b5060a0820151805161133c9160058401916020909101906118ad565b50505060e0820151600c820155610100820151600d82019061135e9082612a8a565b5050600380546001546000908152600d6020526040808220909301549251635ba52fdf60e11b8152600481019390935292506001600160a01b03169063b74a5fbe90602401600060405180830381865afa1580156113c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113e89190810190612b49565b60035460408201519192506001600160a01b03908116916311a34393911615611412576000611418565b82606001515b600d60006001548152602001908152602001600020600301546040518363ffffffff1660e01b815260040161144f91815260200190565b6000604051808303818588803b15801561146857600080fd5b505af115801561147c573d6000803e3d6000fd5b505050505061148f836101000151610337565b60005b83604001515181101561155a57600454604085015180516001600160a01b039092169163894f39fc9190849081106114cc576114cc61244e565b6020026020010151856040518363ffffffff1660e01b81526004016114fb929190918252602082015260400190565b6020604051808303816000875af115801561151a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153e9190612c27565b60000361154a57600080fd5b611553816124e0565b9050611492565b506001546000818152600d60205260409081902090517fdeac4b75274224a1b860c0caee5b72450aea68ad014cfa51df709ab425da417f9161159b91612f77565b60405180910390a250611662565b6001547fabf9a9f55436fcab94967775cab48bb9102d7a183c116e1f2aed1f263df682cb6040518061012001604052808560000151815260200185602001516001600160a01b03168152602001856040015181526020018560600151815260200185608001518152602001600081526020018561010001518152602001848152602001604051806040016040528060048152602001630307830360e41b8152508152506040516116599190612076565b60405180910390a25b600160008154611671906124e0565b909155505050565b33611682610920565b6001600160a01b0316146104e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161101c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061012001604052806060815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016117a06040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b828054828255906000526020600020908101928215611809579160200282015b8281111561180957825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906117d4565b50611815929150611953565b5090565b828054828255906000526020600020908101928215611809579160200282015b82811115611809578251825591602001919060010190611839565b8280548282559060005260206000209081019282156118a1579160200282015b828111156118a15782518051611891918491602090910190611819565b5091602001919060010190611874565b50611815929150611968565b828054828255906000526020600020906007016008900481019282156118095791602002820160005b8382111561191a57835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026118d6565b801561194a5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261191a565b50506118159291505b5b808211156118155760008155600101611954565b8082111561181557600061197c8282611985565b50600101611968565b508054600082559060005260206000209081019061109d9190611953565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156119db576119db6119a3565b60405290565b60405161016081016001600160401b03811182821017156119db576119db6119a3565b60405161018081016001600160401b03811182821017156119db576119db6119a3565b60405161012081016001600160401b03811182821017156119db576119db6119a3565b60405160e081016001600160401b03811182821017156119db576119db6119a3565b604051601f8201601f191681016001600160401b0381118282101715611a9457611a946119a3565b604052919050565b60006001600160401b03821115611ab557611ab56119a3565b5060051b60200190565b6001600160a01b038116811461109d57600080fd5b8035611adf81611abf565b919050565b600082601f830112611af557600080fd5b81356020611b0a611b0583611a9c565b611a6c565b82815260059290921b84018101918181019086841115611b2957600080fd5b8286015b84811015611b4d578035611b4081611abf565b8352918301918301611b2d565b509695505050505050565b600082601f830112611b6957600080fd5b81356020611b79611b0583611a9c565b82815260059290921b84018101918181019086841115611b9857600080fd5b8286015b84811015611b4d5780358352918301918301611b9c565b600082601f830112611bc457600080fd5b81356020611bd4611b0583611a9c565b82815260059290921b84018101918181019086841115611bf357600080fd5b8286015b84811015611b4d5780356001600160401b03811115611c165760008081fd5b611c248986838b0101611b58565b845250918301918301611bf7565b63ffffffff8116811461109d57600080fd5b8035611adf81611c32565b600082601f830112611c6057600080fd5b81356020611c70611b0583611a9c565b82815260059290921b84018101918181019086841115611c8f57600080fd5b8286015b84811015611b4d578035611ca681611c32565b8352918301918301611c93565b600060c08284031215611cc557600080fd5b611ccd6119b9565b905081356001600160401b0380821115611ce657600080fd5b611cf285838601611ae4565b83526020840135915080821115611d0857600080fd5b611d1485838601611ae4565b60208401526040840135915080821115611d2d57600080fd5b611d3985838601611ae4565b60408401526060840135915080821115611d5257600080fd5b611d5e85838601611bb3565b60608401526080840135915080821115611d7757600080fd5b611d8385838601611bb3565b608084015260a0840135915080821115611d9c57600080fd5b50611da984828501611c4f565b60a08301525092915050565b600060208284031215611dc757600080fd5b81356001600160401b03811115611ddd57600080fd5b611de984828501611cb3565b949350505050565b600060208284031215611e0357600080fd5b5035919050565b60005b83811015611e25578181015183820152602001611e0d565b83811115611e34576000848401525b50505050565b60008151808452611e52816020860160208601611e0a565b601f01601f19169290920160200192915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b83811015611eac5781516001600160a01b031687529582019590820190600101611e87565b509495945050505050565b600081518084526020808501945080840160005b83811015611eac57815187529582019590820190600101611ecb565b600081518084526020808501808196508360051b8101915082860160005b85811015611f2f578284038952611f1d848351611eb7565b98850198935090840190600101611f05565b5091979650505050505050565b6000815160c08452611f5160c0850182611e73565b905060208084015185830382870152611f6a8382611e73565b92505060408401518583036040870152611f848382611e73565b92505060608401518583036060870152611f9e8382611ee7565b92505060808401518583036080870152611fb88382611ee7565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015611b4d57845163ffffffff168252938301936001929092019190830190611fdb565b60006101008083526120158184018c611e3a565b6001600160a01b038b166020850152604084018a9052606084018990526080840188905283810360a0850152905061204d8187611f3c565b90508460c084015282810360e08401526120678185611e3a565b9b9a5050505050505050505050565b6020815260008251610120806020850152612095610140850183611e3a565b915060208501516120a96040860182611e66565b506040850151601f19808685030160608701526120c68483611eb7565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e08701526121018483611f3c565b60e088015161010088810191909152880151878203909201848801529350905061212b8382611e3a565b9695505050505050565b80358015158114611adf57600080fd5b60006020828403121561215757600080fd5b81356001600160401b038082111561216e57600080fd5b90830190610160828603121561218357600080fd5b61218b6119e1565b61219483611ad4565b81526121a260208401611ad4565b60208201526121b360408401611ad4565b60408201526121c460608401611ad4565b60608201526121d560808401611ad4565b60808201526121e660a08401611ad4565b60a08201526121f760c08401611ad4565b60c082015261220860e08401611ad4565b60e0820152610100808401358381111561222157600080fd5b61222d88828701611ae4565b828401525050610120915081830135828201526101409150612250828401612135565b91810191909152949350505050565b60006020828403121561227157600080fd5b813561227c81611abf565b9392505050565b60208152600061227c6020830184611eb7565b60006001600160401b038211156122af576122af6119a3565b50601f01601f191660200190565b600082601f8301126122ce57600080fd5b81356122dc611b0582612296565b8181528460208386010111156122f157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561232157600080fd5b82356001600160401b038082111561233857600080fd5b90840190610180828703121561234d57600080fd5b612355611a04565b82358281111561236457600080fd5b612370888286016122bd565b82525061237f60208401611ad4565b602082015260408301358281111561239657600080fd5b6123a288828601611b58565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e082015261010080840135838111156123ee57600080fd5b6123fa89828701611cb3565b8284015250506101209150612410828401611c44565b828201526101409150612424828401611c44565b828201526101609150612438828401612135565b9181019190915295602094909401359450505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03878116825286811660208301528516604082015260c06060820181905260009061249890830186611eb7565b82810360808401526124aa8186611eb7565b91505063ffffffff831660a0830152979650505050505050565b600082516124d6818460208701611e0a565b9190910192915050565b60006001820161250057634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061251b57607f821691505b60208210810361253b57634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600083516101808060408501526125606101c0850183611e3a565b915060208601516125746060860182611e66565b506040860151603f19808685030160808701526125918483611eb7565b9350606088015160a0870152608088015160c087015260a088015160e087015260c08801519150610100828188015260e089015192506101208381890152818a0151935061014091508288870301828901526125ed8685611f3c565b9550808a0151935050610160915061260c8288018463ffffffff169052565b88015163ffffffff1692860192909252509094015115156101a0830152506020015290565b600082601f83011261264257600080fd5b8151612650611b0582612296565b81815284602083860101111561266557600080fd5b611de9826020830160208701611e0a565b8051611adf81611abf565b600082601f83011261269257600080fd5b815160206126a2611b0583611a9c565b82815260059290921b840181019181810190868411156126c157600080fd5b8286015b84811015611b4d57805183529183019183016126c5565b600082601f8301126126ed57600080fd5b815160206126fd611b0583611a9c565b82815260059290921b8401810191818101908684111561271c57600080fd5b8286015b84811015611b4d57805161273381611abf565b8352918301918301612720565b600082601f83011261275157600080fd5b81516020612761611b0583611a9c565b82815260059290921b8401810191818101908684111561278057600080fd5b8286015b84811015611b4d5780516001600160401b038111156127a35760008081fd5b6127b18986838b0101612681565b845250918301918301612784565b8051611adf81611c32565b600082601f8301126127db57600080fd5b815160206127eb611b0583611a9c565b82815260059290921b8401810191818101908684111561280a57600080fd5b8286015b84811015611b4d57805161282181611c32565b835291830191830161280e565b600060c0828403121561284057600080fd5b6128486119b9565b82519091506001600160401b038082111561286257600080fd5b61286e858386016126dc565b8352602084015191508082111561288457600080fd5b612890858386016126dc565b602084015260408401519150808211156128a957600080fd5b6128b5858386016126dc565b604084015260608401519150808211156128ce57600080fd5b6128da85838601612740565b606084015260808401519150808211156128f357600080fd5b6128ff85838601612740565b608084015260a084015191508082111561291857600080fd5b50611da9848285016127ca565b60006020828403121561293757600080fd5b81516001600160401b038082111561294e57600080fd5b90830190610120828603121561296357600080fd5b61296b611a27565b82518281111561297a57600080fd5b61298687828601612631565b82525061299560208401612676565b60208201526040830151828111156129ac57600080fd5b6129b887828601612681565b604083015250606083015160608201526080830151608082015260a083015160a082015260c0830151828111156129ee57600080fd5b6129fa8782860161282e565b60c08301525060e083015160e08201526101008084015183811115612a1e57600080fd5b612a2a88828701612631565b918301919091525095945050505050565b601f821115612a8557600081815260208120601f850160051c81016020861015612a625750805b601f850160051c820191505b81811015612a8157828155600101612a6e565b5050505b505050565b81516001600160401b03811115612aa357612aa36119a3565b612ab781612ab18454612507565b84612a3b565b602080601f831160018114612aec5760008415612ad45750858301515b600019600386901b1c1916600185901b178555612a81565b600085815260208120601f198616915b82811015612b1b57888601518255948401946001909101908401612afc565b5085821015612b395787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612b5b57600080fd5b81516001600160401b0380821115612b7257600080fd5b9083019060e08286031215612b8657600080fd5b612b8e611a4a565b825182811115612b9d57600080fd5b612ba987828601612631565b825250602083015182811115612bbe57600080fd5b612bca87828601612631565b602083015250612bdc60408401612676565b604082015260608301516060820152612bf7608084016127bf565b6080820152612c0860a084016127bf565b60a0820152612c1960c084016127bf565b60c082015295945050505050565b600060208284031215612c3957600080fd5b5051919050565b60008154612c4d81612507565b808552602060018381168015612c6a5760018114612c8457612cb2565b60ff1985168884015283151560051b880183019550612cb2565b866000528260002060005b85811015612caa5781548a8201860152908301908401612c8f565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b83811015611eac57815487529582019560019182019101612cd6565b6000815480845260208085019450836000528060002060005b83811015611eac5781546001600160a01b031687529582019560019182019101612d0b565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015611f2f578284038952612d6a8483612cbd565b98850198935060019182019101612d53565b60c082526000612d8f60c0840183612cf2565b6001602085830381870152612da683838701612cf2565b9250604086840381880152612dbe8460028801612cf2565b9350606087850381890152612dd68560038901612d30565b94506080888603818a0152612dee8660048a01612d30565b95506005880160a08a8803818c0152878254612e0e818b90815260200190565b6000948552602085209a5091505b80600785011015612e8c57895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c90830152988801986008939093019261010090910190612e1c565b98549880841015612ea95763ffffffff8a16825292880192908701905b80841015612ec55789881c63ffffffff16825292880192908701905b80841015612ee15789871c63ffffffff16825292880192908701905b80841015612efd5789861c63ffffffff16825292880192908701905b80841015612f195789851c63ffffffff16825292880192908701905b80841015612f355789831c63ffffffff16825292880192908701905b80841015612f535760c08a901c63ffffffff16825292880192908701905b80841015612f675760e08a901c8252908701905b509b9a5050505050505050505050565b602081526000610120806020840152612f94610140840185612c40565b60018501546001600160a01b0316612faf6040860182611e66565b50601f1980858303016060860152612fca8260028801612cbd565b915060038601546080860152600486015460a0860152600586015460c0860152808583030160e08601526130018260068801612d7c565b9150600c8601546101008601528085830301838601525061302581600d8701612c40565b9594505050505056fea2646970667358221220fe20b4364495aa5eb43b44667d7bfceeb55cba21f2206cdef4e1c20f123117f064736f6c634300080f0033";

type RacesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RacesMethods__factory extends ContractFactory {
  constructor(...args: RacesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RacesMethods> {
    return super.deploy(input, overrides || {}) as Promise<RacesMethods>;
  }
  override getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  override attach(address: string): RacesMethods {
    return super.attach(address) as RacesMethods;
  }
  override connect(signer: Signer): RacesMethods__factory {
    return super.connect(signer) as RacesMethods__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesMethodsInterface {
    return new utils.Interface(_abi) as RacesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RacesMethods {
    return new Contract(address, _abi, signerOrProvider) as RacesMethods;
  }
}
