/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeneratorMethods,
  GeneratorMethodsInterface,
  GeneratorConstructor,
} from "../GeneratorMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "allowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "generate",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016d7380380620016d78339810160408190526200003491620001ac565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e0830151600880548316918416919091179055610100909201516009805490931691161790555062000277565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405161012081016001600160401b03811182821017156200018957634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001a757600080fd5b919050565b60006101208284031215620001c057600080fd5b620001ca62000157565b620001d5836200018f565b8152620001e5602084016200018f565b6020820152620001f8604084016200018f565b60408201526200020b606084016200018f565b60608201526200021e608084016200018f565b60808201526200023160a084016200018f565b60a08201526200024460c084016200018f565b60c08201526200025760e084016200018f565b60e08201526101006200026c8185016200018f565b908201529392505050565b61145080620002876000396000f3fe6080604052600436106100635760003560e01c80638da5cb5b116100405780638da5cb5b146100d7578063d8de65871461010c578063f2fde38b146101d157005b80633a4057f61461006c578063715018a6146100a257806377479c9c146100b757005b3661006a57005b005b34801561007857600080fd5b5061008c610087366004610dbb565b6101f1565b60405161009991906110d7565b60405180910390f35b3480156100ae57600080fd5b5061006a61047e565b3480156100c357600080fd5b5061006a6100d236600461121f565b610492565b3480156100e357600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610099565b34801561011857600080fd5b5060015460025460035460045460055460065460075460085460095461016a9873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610099565b3480156101dd57600080fd5b5061006a6101ec3660046112d5565b610581565b6101f9610733565b60045473ffffffffffffffffffffffffffffffffffffffff16331461021d57600080fd5b826080015163ffffffff16836000015160600151511461023c57600080fd5b6001546040805142602082015260009273ffffffffffffffffffffffffffffffffffffffff169163abaa08b391016040516020818303038152906040526040518263ffffffff1660e01b815260040161029591906112f7565b602060405180830381865afa1580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d6919061130a565b6007548551606081015160a0909101516040517f93380e78000000000000000000000000000000000000000000000000000000008152939450600093849373ffffffffffffffffffffffffffffffffffffffff16926393380e789261033f928890600401611323565b600060405180830381865afa15801561035c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261038491908101906113a3565b915091506040518060800160405280604051806101200160405280896000015160000151815260200189600001516020015173ffffffffffffffffffffffffffffffffffffffff16815260200189600001516040015173ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018960000151608001518152602001896000015160a001518152602001896000015160c001518152602001896000015160e001518152602001896000015161010001518152508152602001848152602001868152602001826040516020016104629190611407565b60408051601f1981840301815291905290529695505050505050565b61048661063d565b61049060006106be565b565b61049a61063d565b8051600180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e083015160088054831691841691909117905561010090920151600980549093169116179055565b61058961063d565b73ffffffffffffffffffffffffffffffffffffffff8116610631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61063a816106be565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610628565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060800160405280610746610761565b81526020016000815260200160008152602001606081525090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200161080a6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156108615761086161080f565b60405290565b604051610120810167ffffffffffffffff811182821017156108615761086161080f565b604051601f8201601f1916810167ffffffffffffffff811182821017156108b4576108b461080f565b604052919050565b600082601f8301126108cd57600080fd5b813567ffffffffffffffff8111156108e7576108e761080f565b6108fa6020601f19601f8401160161088b565b81815284602083860101111561090f57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461095057600080fd5b919050565b600067ffffffffffffffff82111561096f5761096f61080f565b5060051b60200190565b600082601f83011261098a57600080fd5b8135602061099f61099a83610955565b61088b565b82815260059290921b840181019181810190868411156109be57600080fd5b8286015b848110156109d957803583529183019183016109c2565b509695505050505050565b600082601f8301126109f557600080fd5b81356020610a0561099a83610955565b82815260059290921b84018101918181019086841115610a2457600080fd5b8286015b848110156109d957610a398161092c565b8352918301918301610a28565b600082601f830112610a5757600080fd5b81356020610a6761099a83610955565b82815260059290921b84018101918181019086841115610a8657600080fd5b8286015b848110156109d957803567ffffffffffffffff811115610aaa5760008081fd5b610ab88986838b0101610979565b845250918301918301610a8a565b600082601f830112610ad757600080fd5b81356020610ae761099a83610955565b82815260059290921b84018101918181019086841115610b0657600080fd5b8286015b848110156109d957803560048110610b225760008081fd5b8352918301918301610b0a565b600060c08284031215610b4157600080fd5b610b4961083e565b9050813567ffffffffffffffff80821115610b6357600080fd5b610b6f858386016109e4565b83526020840135915080821115610b8557600080fd5b610b91858386016109e4565b60208401526040840135915080821115610baa57600080fd5b610bb6858386016109e4565b60408401526060840135915080821115610bcf57600080fd5b610bdb85838601610a46565b60608401526080840135915080821115610bf457600080fd5b610c0085838601610a46565b608084015260a0840135915080821115610c1957600080fd5b50610c2684828501610ac6565b60a08301525092915050565b60006101208284031215610c4557600080fd5b610c4d610867565b9050813567ffffffffffffffff80821115610c6757600080fd5b610c73858386016108bc565b8352610c816020850161092c565b6020840152610c926040850161092c565b60408401526060840135915080821115610cab57600080fd5b610cb785838601610979565b60608401526080840135915080821115610cd057600080fd5b610cdc85838601610979565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115610d1557600080fd5b610d2186828701610b2f565b8385015250505092915050565b803563ffffffff8116811461095057600080fd5b600082601f830112610d5357600080fd5b81356020610d6361099a83610955565b82815260059290921b84018101918181019086841115610d8257600080fd5b8286015b848110156109d957803560078110610d9e5760008081fd5b8352918301918301610d86565b8035801515811461095057600080fd5b60008060408385031215610dce57600080fd5b823567ffffffffffffffff80821115610de657600080fd5b908401906101208287031215610dfb57600080fd5b610e03610867565b823582811115610e1257600080fd5b610e1e88828601610c32565b825250602083013560208201526040830135604082015260608301356060820152610e4b60808401610d2e565b6080820152610e5c60a08401610d2e565b60a0820152610e6d60c08401610d2e565b60c082015260e083013582811115610e8457600080fd5b610e9088828601610d42565b60e0830152506101009150610ea6828401610dab565b9181019190915295602094909401359450505050565b6000815180845260005b81811015610ee257602081850181015186830182015201610ec6565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015610f3257815187529582019590820190600101610f16565b509495945050505050565b600081518084526020808501945080840160005b83811015610f3257815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610f51565b600081518084526020808501808196508360051b8101915082860160005b85811015610fcb578284038952610fb9848351610f02565b98850198935090840190600101610fa1565b5091979650505050505050565b6000815160c08452610fed60c0850182610f3d565b9050602080840151858303828701526110068382610f3d565b925050604084015185830360408701526110208382610f3d565b9250506060840151858303606087015261103a8382610f83565b925050608084015185830360808701526110548382610f83565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156110ca57855160048082106110b7577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101611078565b5090979650505050505050565b60208152600082516080602084015280516101208060a08601526110ff6101c0860183610ebc565b9150602083015161112860c087018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015173ffffffffffffffffffffffffffffffffffffffff811660e08701525060608301517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff606101008188860301818901526111878584610f02565b9450608086015192508188860301848901526111a38584610f02565b60a08701516101408a015260c08701516101608a015260e08701516101808a01529501518786039091016101a08801529392506111e4915082905083610fd8565b91505060208401516040840152604084015160608401526060840151601f198483030160808501526112168282610ebc565b95945050505050565b6000610120828403121561123257600080fd5b61123a610867565b6112438361092c565b81526112516020840161092c565b60208201526112626040840161092c565b60408201526112736060840161092c565b60608201526112846080840161092c565b608082015261129560a0840161092c565b60a08201526112a660c0840161092c565b60c08201526112b760e0840161092c565b60e08201526101006112ca81850161092c565b908201529392505050565b6000602082840312156112e757600080fd5b6112f08261092c565b9392505050565b6020815260006112f06020830184610ebc565b60006020828403121561131c57600080fd5b5051919050565b6060815260006113366060830186610f02565b60208301949094525060400152919050565b600082601f83011261135957600080fd5b8151602061136961099a83610955565b82815260059290921b8401810191818101908684111561138857600080fd5b8286015b848110156109d9578051835291830191830161138c565b600080604083850312156113b657600080fd5b825167ffffffffffffffff808211156113ce57600080fd5b6113da86838701611348565b935060208501519150808211156113f057600080fd5b506113fd85828601611348565b9150509250929050565b6020815260006112f06020830184610f0256fea2646970667358221220a6c366ab33a26ba91a92faa3fdb4557a3cb55ce6c5d11379c1b152101485464b64736f6c63430008110033";

type GeneratorMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneratorMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GeneratorMethods__factory extends ContractFactory {
  constructor(...args: GeneratorMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GeneratorMethods";
  }

  deploy(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeneratorMethods> {
    return super.deploy(input, overrides || {}) as Promise<GeneratorMethods>;
  }
  getDeployTransaction(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GeneratorMethods {
    return super.attach(address) as GeneratorMethods;
  }
  connect(signer: Signer): GeneratorMethods__factory {
    return super.connect(signer) as GeneratorMethods__factory;
  }
  static readonly contractName: "GeneratorMethods";
  public readonly contractName: "GeneratorMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneratorMethodsInterface {
    return new utils.Interface(_abi) as GeneratorMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneratorMethods {
    return new Contract(address, _abi, signerOrProvider) as GeneratorMethods;
  }
}
