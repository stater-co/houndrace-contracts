/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeneratorZerocost,
  GeneratorZerocostInterface,
  GeneratorConstructor,
} from "../GeneratorZerocost";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "allowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "participants",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "terrain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "theRandomness",
        type: "uint256",
      },
    ],
    name: "simulateClassicRace",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200172f3803806200172f8339810160408190526200003491620001ac565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e0830151600880548316918416919091179055610100909201516009805490931691161790555062000277565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405161012081016001600160401b03811182821017156200018957634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001a757600080fd5b919050565b60006101208284031215620001c057600080fd5b620001ca62000157565b620001d5836200018f565b8152620001e5602084016200018f565b6020820152620001f8604084016200018f565b60408201526200020b606084016200018f565b60608201526200021e608084016200018f565b60808201526200023160a084016200018f565b60a08201526200024460c084016200018f565b60c08201526200025760e084016200018f565b60e08201526101006200026c8185016200018f565b908201529392505050565b6114a880620002876000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806393380e781161005057806393380e78146100c1578063d8de6587146100e2578063f2fde38b1461019a57600080fd5b8063715018a61461007757806377479c9c146100815780638da5cb5b14610094575b600080fd5b61007f6101ad565b005b61007f61008f366004610c62565b6101c1565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d46100cf366004610d3c565b6102b0565b6040516100b8929190610e1d565b6001546002546003546004546005546006546007546008546009546101339873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e0830152909116610100820152610120016100b8565b61007f6101a8366004610e4b565b61050c565b6101b56105c8565b6101bf6000610649565b565b6101c96105c8565b8051600180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e083015160088054831691841691909117905561010090920151600980549093169116179055565b6002546040517fb74a5fbe00000000000000000000000000000000000000000000000000000000815260048101849052606091829160009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa158015610325573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261036b9190810190610f31565b9050600061037987836106be565b90506000600f864460405160200161039b929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c6103be919061103f565b905060005b825181101561044e576064828483815181106103e1576103e1611053565b60200260200101516103f391906110b1565b6103fd91906110c8565b83828151811061040f5761040f611053565b602002602001015161042191906110dc565b83828151811061043357610433611053565b6020908102919091010152610447816110ef565b90506103c3565b5073__$13ac0bbe16ff54a473352cca36c2f6a8c7$__633e96a35b838a60006001875161047b9190611127565b6040518563ffffffff1660e01b815260040161049a949392919061113a565b600060405180830381865af41580156104b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104fd91908101906111d9565b94509450505050935093915050565b6105146105c8565b73ffffffffffffffffffffffffffffffffffffffff81166105bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105c581610649565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b3565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606000835167ffffffffffffffff8111156106dc576106dc610b65565b604051908082528060200260200182016040528015610705578160200160208202803683370190505b509050610710610b04565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052905b8651811015610af757600854875173ffffffffffffffffffffffffffffffffffffffff909116906385e3f0589089908490811061078257610782611053565b60200260200101516040518263ffffffff1660e01b81526004016107a891815260200190565b600060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261080b91908101906112c1565b600954885191945073ffffffffffffffffffffffffffffffffffffffff169063e62256309089908490811061084257610842611053565b60200260200101516040518263ffffffff1660e01b815260040161086891815260200190565b60c060405180830381865afa158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a9919061136e565b60808401516104208101516104008201516103e08301516103c090930151939550909290916108d791611403565b6108e19190611403565b6108eb9190611403565b6108f6906063611427565b63ffffffff1684828151811061090e5761090e611053565b602002602001018181525050600084828151811061092e5761092e611053565b60200260200101519050866080015163ffffffff16846080015160096036811061095a5761095a611053565b602002015163ffffffff160361099f576109756014826110c8565b85838151811061098757610987611053565b6020026020010181815161099b91906110dc565b9052505b8660a0015163ffffffff168460800151600a603681106109c1576109c1611053565b602002015163ffffffff1603610a06576109dc6014826110c8565b8583815181106109ee576109ee611053565b60200260200101818151610a0291906110dc565b9052505b8660c0015163ffffffff168460800151600b60368110610a2857610a28611053565b602002015163ffffffff1603610a6d57610a436014826110c8565b858381518110610a5557610a55611053565b60200260200101818151610a6991906110dc565b9052505b826060015163ffffffff1660028460a00151610a89919061144f565b63ffffffff161115610ae6576064858381518110610aa957610aa9611053565b6020026020010151605a610abd91906110b1565b610ac791906110c8565b858381518110610ad957610ad9611053565b6020026020010181815250505b50610af0816110ef565b9050610743565b5091925050505b92915050565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001610b33610b46565b8152606060208201526040016000905290565b604051806106c001604052806036906020820280368337509192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610bb857610bb8610b65565b60405290565b60405160e0810167ffffffffffffffff81118282101715610bb857610bb8610b65565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c2857610c28610b65565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff811681146105c557600080fd5b8035610c5d81610c30565b919050565b60006101208284031215610c7557600080fd5b610c7d610b94565b610c8683610c52565b8152610c9460208401610c52565b6020820152610ca560408401610c52565b6040820152610cb660608401610c52565b6060820152610cc760808401610c52565b6080820152610cd860a08401610c52565b60a0820152610ce960c08401610c52565b60c0820152610cfa60e08401610c52565b60e0820152610100610d0d818501610c52565b908201529392505050565b600067ffffffffffffffff821115610d3257610d32610b65565b5060051b60200190565b600080600060608486031215610d5157600080fd5b833567ffffffffffffffff811115610d6857600080fd5b8401601f81018613610d7957600080fd5b80356020610d8e610d8983610d18565b610be1565b82815260059290921b83018101918181019089841115610dad57600080fd5b938201935b83851015610dcb57843582529382019390820190610db2565b999188013598505060409096013595945050505050565b600081518084526020808501945080840160005b83811015610e1257815187529582019590820190600101610df6565b509495945050505050565b604081526000610e306040830185610de2565b8281036020840152610e428185610de2565b95945050505050565b600060208284031215610e5d57600080fd5b8135610e6881610c30565b9392505050565b600082601f830112610e8057600080fd5b815167ffffffffffffffff811115610e9a57610e9a610b65565b6020610ecc817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610be1565b8281528582848701011115610ee057600080fd5b60005b83811015610efe578581018301518282018401528201610ee3565b506000928101909101919091529392505050565b8051610c5d81610c30565b805163ffffffff81168114610c5d57600080fd5b600060208284031215610f4357600080fd5b815167ffffffffffffffff80821115610f5b57600080fd5b9083019060e08286031215610f6f57600080fd5b610f77610bbe565b825182811115610f8657600080fd5b610f9287828601610e6f565b825250602083015182811115610fa757600080fd5b610fb387828601610e6f565b602083015250610fc560408401610f12565b604082015260608301516060820152610fe060808401610f1d565b6080820152610ff160a08401610f1d565b60a082015261100260c08401610f1d565b60c082015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261104e5761104e611010565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610afe57610afe611082565b6000826110d7576110d7611010565b500490565b80820180821115610afe57610afe611082565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361112057611120611082565b5060010190565b81810381811115610afe57610afe611082565b60808152600061114d6080830187610de2565b828103602084015261115f8187610de2565b604084019590955250506060015292915050565b600082601f83011261118457600080fd5b81516020611194610d8983610d18565b82815260059290921b840181019181810190868411156111b357600080fd5b8286015b848110156111ce57805183529183019183016111b7565b509695505050505050565b600080604083850312156111ec57600080fd5b825167ffffffffffffffff8082111561120457600080fd5b61121086838701611173565b9350602085015191508082111561122657600080fd5b5061123385828601611173565b9150509250929050565b600082601f83011261124e57600080fd5b6040516106c080820182811067ffffffffffffffff8211171561127357611273610b65565b6040528301818582111561128657600080fd5b845b828110156112a75761129981610f1d565b825260209182019101611288565b509195945050505050565b805160078110610c5d57600080fd5b6000602082840312156112d357600080fd5b815167ffffffffffffffff808211156112eb57600080fd5b90830190610780828603121561130057600080fd5b611308610bbe565b82518152602083015160208201526040830151604082015260608301516060820152611337866080850161123d565b60808201526107408301518281111561134f57600080fd5b61135b87828601610e6f565b60a08301525061100261076084016112b2565b600060c0828403121561138057600080fd5b60405160c0810181811067ffffffffffffffff821117156113a3576113a3610b65565b60405282516113b181610c30565b8082525060208301516020820152604083015160408201526113d560608401610f1d565b60608201526113e660808401610f1d565b60808201526113f760a08401610f1d565b60a08201529392505050565b63ffffffff81811683821601908082111561142057611420611082565b5092915050565b63ffffffff81811683821602808216919082811461144757611447611082565b505092915050565b600063ffffffff8084168061146657611466611010565b9216919091049291505056fea2646970667358221220c590b51b685b0dc8024e3fc4dceebe236a6f12043ff2c6a3d6f0c3e53354026864736f6c63430008110033";

type GeneratorZerocostConstructorParams =
  | [linkLibraryAddresses: GeneratorZerocostLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneratorZerocostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GeneratorZerocost__factory extends ContractFactory {
  constructor(...args: GeneratorZerocostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GeneratorZerocost__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "GeneratorZerocost";
  }

  static linkBytecode(
    linkLibraryAddresses: GeneratorZerocostLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$13ac0bbe16ff54a473352cca36c2f6a8c7\\$__", "g"),
      linkLibraryAddresses["contracts/utils/Sortings.sol:Sortings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeneratorZerocost> {
    return super.deploy(input, overrides || {}) as Promise<GeneratorZerocost>;
  }
  getDeployTransaction(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GeneratorZerocost {
    return super.attach(address) as GeneratorZerocost;
  }
  connect(signer: Signer): GeneratorZerocost__factory {
    return super.connect(signer) as GeneratorZerocost__factory;
  }
  static readonly contractName: "GeneratorZerocost";
  public readonly contractName: "GeneratorZerocost";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneratorZerocostInterface {
    return new utils.Interface(_abi) as GeneratorZerocostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneratorZerocost {
    return new Contract(address, _abi, signerOrProvider) as GeneratorZerocost;
  }
}

export interface GeneratorZerocostLibraryAddresses {
  ["contracts/utils/Sortings.sol:Sortings"]: string;
}
