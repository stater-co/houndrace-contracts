/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeneratorZerocost,
  GeneratorZerocostInterface,
  GeneratorConstructor,
} from "../GeneratorZerocost";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "allowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "participants",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "terrain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "theRandomness",
        type: "uint256",
      },
    ],
    name: "simulateClassicRace",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001513380380620015138339810160408190526200003491620001ac565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e0830151600880548316918416919091179055610100909201516009805490931691161790555062000277565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405161012081016001600160401b03811182821017156200018957634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001a757600080fd5b919050565b60006101208284031215620001c057600080fd5b620001ca62000157565b620001d5836200018f565b8152620001e5602084016200018f565b6020820152620001f8604084016200018f565b60408201526200020b606084016200018f565b60608201526200021e608084016200018f565b60808201526200023160a084016200018f565b60a08201526200024460c084016200018f565b60c08201526200025760e084016200018f565b60e08201526101006200026c8185016200018f565b908201529392505050565b61128c80620002876000396000f3fe6080604052600436106100565760003560e01c8063715018a61461005f57806377479c9c146100745780638da5cb5b1461009457806393380e78146100c6578063d8de6587146100f4578063f2fde38b1461019f57005b3661005d57005b005b34801561006b57600080fd5b5061005d6101bf565b34801561008057600080fd5b5061005d61008f366004610b2f565b6101d3565b3480156100a057600080fd5b506100a961029d565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d257600080fd5b506100e66100e1366004610c08565b6102ac565b6040516100bd929190610ce8565b34801561010057600080fd5b50600154600254600354600454600554600654600754600854600954610145986001600160a01b03908116988116978116968116958116948116938116928116911689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e0830152909116610100820152610120016100bd565b3480156101ab57600080fd5b5061005d6101ba366004610d16565b6104a6565b6101c7610524565b6101d16000610583565b565b6101db610524565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e083015160088054831691841691909117905561010090920151600980549093169116179055565b6000546001600160a01b031690565b600254604051635ba52fdf60e11b81526004810184905260609182916000916001600160a01b03169063b74a5fbe90602401600060405180830381865afa1580156102fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103239190810190610ddd565b9050600061033187836105d3565b90506000600f8644604051602001610353929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c6103769190610ed1565b905060005b82518110156104065760648284838151811061039957610399610ee5565b60200260200101516103ab9190610f11565b6103b59190610f28565b8382815181106103c7576103c7610ee5565b60200260200101516103d99190610f3c565b8382815181106103eb576103eb610ee5565b60209081029190910101526103ff81610f4f565b905061037b565b5073__$13ac0bbe16ff54a473352cca36c2f6a8c7$__633e96a35b838a6000600187516104339190610f68565b6040518563ffffffff1660e01b81526004016104529493929190610f7b565b600060405180830381865af415801561046f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610497919081019061101a565b94509450505050935093915050565b6104ae610524565b6001600160a01b0381166105185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61052181610583565b50565b3361052d61029d565b6001600160a01b0316146101d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060600083516001600160401b038111156105f0576105f0610a34565b604051908082528060200260200182016040528015610619578160200160208202803683370190505b5090506106246109d9565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052905b86518110156109cc5760085487516001600160a01b03909116906385e3f0589089908490811061068257610682610ee5565b60200260200101516040518263ffffffff1660e01b81526004016106a891815260200190565b600060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ed919081019061107d565b60095488519194506001600160a01b03169063e62256309089908490811061071757610717610ee5565b60200260200101516040518263ffffffff1660e01b815260040161073d91815260200190565b60a060405180830381865afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e9190611166565b60808401516104208101516104008201516103e08301516103c090930151939550909290916107ac916111e7565b6107b691906111e7565b6107c091906111e7565b6107cb90606361120b565b63ffffffff168482815181106107e3576107e3610ee5565b602002602001018181525050600084828151811061080357610803610ee5565b60200260200101519050866080015163ffffffff16846080015160096036811061082f5761082f610ee5565b602002015163ffffffff16036108745761084a601482610f28565b85838151811061085c5761085c610ee5565b602002602001018181516108709190610f3c565b9052505b8660a0015163ffffffff168460800151600a6036811061089657610896610ee5565b602002015163ffffffff16036108db576108b1601482610f28565b8583815181106108c3576108c3610ee5565b602002602001018181516108d79190610f3c565b9052505b8660c0015163ffffffff168460800151600b603681106108fd576108fd610ee5565b602002015163ffffffff160361094257610918601482610f28565b85838151811061092a5761092a610ee5565b6020026020010181815161093e9190610f3c565b9052505b826040015163ffffffff166002846080015161095e9190611233565b63ffffffff1611156109bb57606485838151811061097e5761097e610ee5565b6020026020010151605a6109929190610f11565b61099c9190610f28565b8583815181106109ae576109ae610ee5565b6020026020010181815250505b506109c581610f4f565b9050610650565b5091925050505b92915050565b6040518060c0016040528060008152602001600081526020016000815260200160008152602001610a08610a15565b8152602001606081525090565b604051806106c001604052806036906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715610a6d57610a6d610a34565b60405290565b60405160e081016001600160401b0381118282101715610a6d57610a6d610a34565b60405160c081016001600160401b0381118282101715610a6d57610a6d610a34565b6040516106c081016001600160401b0381118282101715610a6d57610a6d610a34565b604051601f8201601f191681016001600160401b0381118282101715610b0257610b02610a34565b604052919050565b6001600160a01b038116811461052157600080fd5b8035610b2a81610b0a565b919050565b60006101208284031215610b4257600080fd5b610b4a610a4a565b610b5383610b1f565b8152610b6160208401610b1f565b6020820152610b7260408401610b1f565b6040820152610b8360608401610b1f565b6060820152610b9460808401610b1f565b6080820152610ba560a08401610b1f565b60a0820152610bb660c08401610b1f565b60c0820152610bc760e08401610b1f565b60e0820152610100610bda818501610b1f565b908201529392505050565b60006001600160401b03821115610bfe57610bfe610a34565b5060051b60200190565b600080600060608486031215610c1d57600080fd5b83356001600160401b03811115610c3357600080fd5b8401601f81018613610c4457600080fd5b80356020610c59610c5483610be5565b610ada565b82815260059290921b83018101918181019089841115610c7857600080fd5b938201935b83851015610c9657843582529382019390820190610c7d565b999188013598505060409096013595945050505050565b600081518084526020808501945080840160005b83811015610cdd57815187529582019590820190600101610cc1565b509495945050505050565b604081526000610cfb6040830185610cad565b8281036020840152610d0d8185610cad565b95945050505050565b600060208284031215610d2857600080fd5b8135610d3381610b0a565b9392505050565b600082601f830112610d4b57600080fd5b81516001600160401b03811115610d6457610d64610a34565b6020610d78601f8301601f19168201610ada565b8281528582848701011115610d8c57600080fd5b60005b83811015610daa578581018301518282018401528201610d8f565b506000928101909101919091529392505050565b8051610b2a81610b0a565b805163ffffffff81168114610b2a57600080fd5b600060208284031215610def57600080fd5b81516001600160401b0380821115610e0657600080fd5b9083019060e08286031215610e1a57600080fd5b610e22610a73565b825182811115610e3157600080fd5b610e3d87828601610d3a565b825250602083015182811115610e5257600080fd5b610e5e87828601610d3a565b602083015250610e7060408401610dbe565b604082015260608301516060820152610e8b60808401610dc9565b6080820152610e9c60a08401610dc9565b60a0820152610ead60c08401610dc9565b60c082015295945050505050565b634e487b7160e01b600052601260045260246000fd5b600082610ee057610ee0610ebb565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176109d3576109d3610efb565b600082610f3757610f37610ebb565b500490565b808201808211156109d3576109d3610efb565b600060018201610f6157610f61610efb565b5060010190565b818103818111156109d3576109d3610efb565b608081526000610f8e6080830187610cad565b8281036020840152610fa08187610cad565b604084019590955250506060015292915050565b600082601f830112610fc557600080fd5b81516020610fd5610c5483610be5565b82815260059290921b84018101918181019086841115610ff457600080fd5b8286015b8481101561100f5780518352918301918301610ff8565b509695505050505050565b6000806040838503121561102d57600080fd5b82516001600160401b038082111561104457600080fd5b61105086838701610fb4565b9350602085015191508082111561106657600080fd5b5061107385828601610fb4565b9150509250929050565b6000602080838503121561109057600080fd5b82516001600160401b03808211156110a757600080fd5b9084019061076082870312156110bc57600080fd5b6110c4610a95565b825181528383015184820152604083015160408201526060830151606082015286609f8401126110f357600080fd5b6110fb610ab7565b8061074085018981111561110e57600080fd5b608086015b818110156111315761112481610dc9565b8452928701928701611113565b506080840191909152519450508184111561114b57600080fd5b61115787858501610d3a565b60a08201529695505050505050565b600060a0828403121561117857600080fd5b60405160a081016001600160401b038111828210171561119a5761119a610a34565b806040525082518152602083015160208201526111b960408401610dc9565b60408201526111ca60608401610dc9565b60608201526111db60808401610dc9565b60808201529392505050565b63ffffffff81811683821601908082111561120457611204610efb565b5092915050565b63ffffffff81811683821602808216919082811461122b5761122b610efb565b505092915050565b600063ffffffff8084168061124a5761124a610ebb565b9216919091049291505056fea26469706673582212208f2ebeaf8c2d17663a9414f8a0b5d783eee273090a6bc35a6e4f17cf62d2584b64736f6c63430008110033";

type GeneratorZerocostConstructorParams =
  | [linkLibraryAddresses: GeneratorZerocostLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneratorZerocostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GeneratorZerocost__factory extends ContractFactory {
  constructor(...args: GeneratorZerocostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GeneratorZerocost__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "GeneratorZerocost";
  }

  static linkBytecode(
    linkLibraryAddresses: GeneratorZerocostLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$13ac0bbe16ff54a473352cca36c2f6a8c7\\$__", "g"),
      linkLibraryAddresses["contracts/utils/Sortings.sol:Sortings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeneratorZerocost> {
    return super.deploy(input, overrides || {}) as Promise<GeneratorZerocost>;
  }
  getDeployTransaction(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GeneratorZerocost {
    return super.attach(address) as GeneratorZerocost;
  }
  connect(signer: Signer): GeneratorZerocost__factory {
    return super.connect(signer) as GeneratorZerocost__factory;
  }
  static readonly contractName: "GeneratorZerocost";
  public readonly contractName: "GeneratorZerocost";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneratorZerocostInterface {
    return new utils.Interface(_abi) as GeneratorZerocostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneratorZerocost {
    return new Contract(address, _abi, signerOrProvider) as GeneratorZerocost;
  }
}

export interface GeneratorZerocostLibraryAddresses {
  ["contracts/utils/Sortings.sol:Sortings"]: string;
}
