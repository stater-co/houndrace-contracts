/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeneratorZerocost,
  GeneratorZerocostInterface,
  GeneratorConstructor,
} from "../GeneratorZerocost";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "allowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
      {
        internalType: "address",
        name: "gamification",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowed",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address",
            name: "gamification",
            type: "address",
          },
        ],
        internalType: "struct GeneratorConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "participants",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "terrain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "theRandomness",
        type: "uint256",
      },
    ],
    name: "simulateClassicRace",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001781380380620017818339810160408190526200003491620001ac565b80620000403362000107565b8051600180546001600160a01b03199081166001600160a01b0393841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e0830151600880548316918416919091179055610100909201516009805490931691161790555062000277565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405161012081016001600160401b03811182821017156200018957634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001a757600080fd5b919050565b60006101208284031215620001c057600080fd5b620001ca62000157565b620001d5836200018f565b8152620001e5602084016200018f565b6020820152620001f8604084016200018f565b60408201526200020b606084016200018f565b60608201526200021e608084016200018f565b60808201526200023160a084016200018f565b60a08201526200024460c084016200018f565b60c08201526200025760e084016200018f565b60e08201526101006200026c8185016200018f565b908201529392505050565b6114fa80620002876000396000f3fe6080604052600436106100635760003560e01c806393380e781161004057806393380e78146100db578063d8de658714610109578063f2fde38b146101ce57005b8063715018a61461006c57806377479c9c146100815780638da5cb5b146100a157005b3661006a57005b005b34801561007857600080fd5b5061006a6101ee565b34801561008d57600080fd5b5061006a61009c366004610caa565b610202565b3480156100ad57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100e757600080fd5b506100fb6100f6366004610d84565b6102f1565b6040516100d2929190610e65565b34801561011557600080fd5b506001546002546003546004546005546006546007546008546009546101679873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e0830152909116610100820152610120016100d2565b3480156101da57600080fd5b5061006a6101e9366004610e93565b61054d565b6101f6610609565b610200600061068a565b565b61020a610609565b8051600180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155602083015160028054831691841691909117905560408301516003805483169184169190911790556060830151600480548316918416919091179055608083015160058054831691841691909117905560a083015160068054831691841691909117905560c083015160078054831691841691909117905560e083015160088054831691841691909117905561010090920151600980549093169116179055565b6002546040517fb74a5fbe00000000000000000000000000000000000000000000000000000000815260048101849052606091829160009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa158015610366573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103ac9190810190610f79565b905060006103ba87836106ff565b90506000600f86446040516020016103dc929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c6103ff9190611087565b905060005b825181101561048f576064828483815181106104225761042261109b565b602002602001015161043491906110f9565b61043e9190611110565b8382815181106104505761045061109b565b60200260200101516104629190611124565b8382815181106104745761047461109b565b602090810291909101015261048881611137565b9050610404565b5073__$13ac0bbe16ff54a473352cca36c2f6a8c7$__633e96a35b838a6000600187516104bc919061116f565b6040518563ffffffff1660e01b81526004016104db9493929190611182565b600060405180830381865af41580156104f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261053e9190810190611221565b94509450505050935093915050565b610555610609565b73ffffffffffffffffffffffffffffffffffffffff81166105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6106068161068a565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610200576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f4565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606000835167ffffffffffffffff81111561071d5761071d610bad565b604051908082528060200260200182016040528015610746578160200160208202803683370190505b509050610751610b4c565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052905b8651811015610b3f57600854875173ffffffffffffffffffffffffffffffffffffffff909116906385e3f058908990849081106107ca576107ca61109b565b60200260200101516040518263ffffffff1660e01b81526004016107f091815260200190565b600060405180830381865afa15801561080d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108539190810190611309565b600954885191945073ffffffffffffffffffffffffffffffffffffffff169063e62256309089908490811061088a5761088a61109b565b60200260200101516040518263ffffffff1660e01b81526004016108b091815260200190565b60e060405180830381865afa1580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f191906113b6565b60808401516104208101516104008201516103e08301516103c0909301519395509092909161091f91611455565b6109299190611455565b6109339190611455565b61093e906063611479565b63ffffffff168482815181106109565761095661109b565b60200260200101818152505060008482815181106109765761097661109b565b60200260200101519050866080015163ffffffff1684608001516009603681106109a2576109a261109b565b602002015163ffffffff16036109e7576109bd601482611110565b8583815181106109cf576109cf61109b565b602002602001018181516109e39190611124565b9052505b8660a0015163ffffffff168460800151600a60368110610a0957610a0961109b565b602002015163ffffffff1603610a4e57610a24601482611110565b858381518110610a3657610a3661109b565b60200260200101818151610a4a9190611124565b9052505b8660c0015163ffffffff168460800151600b60368110610a7057610a7061109b565b602002015163ffffffff1603610ab557610a8b601482611110565b858381518110610a9d57610a9d61109b565b60200260200101818151610ab19190611124565b9052505b826080015163ffffffff1660028460c00151610ad191906114a1565b63ffffffff161115610b2e576064858381518110610af157610af161109b565b6020026020010151605a610b0591906110f9565b610b0f9190611110565b858381518110610b2157610b2161109b565b6020026020010181815250505b50610b3881611137565b905061078b565b5091925050505b92915050565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001610b7b610b8e565b8152606060208201526040016000905290565b604051806106c001604052806036906020820280368337509192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610c0057610c00610bad565b60405290565b60405160e0810167ffffffffffffffff81118282101715610c0057610c00610bad565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c7057610c70610bad565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461060657600080fd5b8035610ca581610c78565b919050565b60006101208284031215610cbd57600080fd5b610cc5610bdc565b610cce83610c9a565b8152610cdc60208401610c9a565b6020820152610ced60408401610c9a565b6040820152610cfe60608401610c9a565b6060820152610d0f60808401610c9a565b6080820152610d2060a08401610c9a565b60a0820152610d3160c08401610c9a565b60c0820152610d4260e08401610c9a565b60e0820152610100610d55818501610c9a565b908201529392505050565b600067ffffffffffffffff821115610d7a57610d7a610bad565b5060051b60200190565b600080600060608486031215610d9957600080fd5b833567ffffffffffffffff811115610db057600080fd5b8401601f81018613610dc157600080fd5b80356020610dd6610dd183610d60565b610c29565b82815260059290921b83018101918181019089841115610df557600080fd5b938201935b83851015610e1357843582529382019390820190610dfa565b999188013598505060409096013595945050505050565b600081518084526020808501945080840160005b83811015610e5a57815187529582019590820190600101610e3e565b509495945050505050565b604081526000610e786040830185610e2a565b8281036020840152610e8a8185610e2a565b95945050505050565b600060208284031215610ea557600080fd5b8135610eb081610c78565b9392505050565b600082601f830112610ec857600080fd5b815167ffffffffffffffff811115610ee257610ee2610bad565b6020610f14817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610c29565b8281528582848701011115610f2857600080fd5b60005b83811015610f46578581018301518282018401528201610f2b565b506000928101909101919091529392505050565b8051610ca581610c78565b805163ffffffff81168114610ca557600080fd5b600060208284031215610f8b57600080fd5b815167ffffffffffffffff80821115610fa357600080fd5b9083019060e08286031215610fb757600080fd5b610fbf610c06565b825182811115610fce57600080fd5b610fda87828601610eb7565b825250602083015182811115610fef57600080fd5b610ffb87828601610eb7565b60208301525061100d60408401610f5a565b60408201526060830151606082015261102860808401610f65565b608082015261103960a08401610f65565b60a082015261104a60c08401610f65565b60c082015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261109657611096611058565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610b4657610b466110ca565b60008261111f5761111f611058565b500490565b80820180821115610b4657610b466110ca565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611168576111686110ca565b5060010190565b81810381811115610b4657610b466110ca565b6080815260006111956080830187610e2a565b82810360208401526111a78187610e2a565b604084019590955250506060015292915050565b600082601f8301126111cc57600080fd5b815160206111dc610dd183610d60565b82815260059290921b840181019181810190868411156111fb57600080fd5b8286015b8481101561121657805183529183019183016111ff565b509695505050505050565b6000806040838503121561123457600080fd5b825167ffffffffffffffff8082111561124c57600080fd5b611258868387016111bb565b9350602085015191508082111561126e57600080fd5b5061127b858286016111bb565b9150509250929050565b600082601f83011261129657600080fd5b6040516106c080820182811067ffffffffffffffff821117156112bb576112bb610bad565b604052830181858211156112ce57600080fd5b845b828110156112ef576112e181610f65565b8252602091820191016112d0565b509195945050505050565b805160078110610ca557600080fd5b60006020828403121561131b57600080fd5b815167ffffffffffffffff8082111561133357600080fd5b90830190610780828603121561134857600080fd5b611350610c06565b8251815260208301516020820152604083015160408201526060830151606082015261137f8660808501611285565b60808201526107408301518281111561139757600080fd5b6113a387828601610eb7565b60a08301525061104a61076084016112fa565b600060e082840312156113c857600080fd5b60405160e0810181811067ffffffffffffffff821117156113eb576113eb610bad565b60405282516113f981610c78565b8082525060208301516020820152604083015160408201526060830151606082015261142760808401610f65565b608082015261143860a08401610f65565b60a082015261144960c08401610f65565b60c08201529392505050565b63ffffffff818116838216019080821115611472576114726110ca565b5092915050565b63ffffffff818116838216028082169190828114611499576114996110ca565b505092915050565b600063ffffffff808416806114b8576114b8611058565b9216919091049291505056fea2646970667358221220c0f0b3fa18c08d82dcc15ff6480c1b7550cc3bfd6a1984e8a0548d859504a39f64736f6c63430008110033";

type GeneratorZerocostConstructorParams =
  | [linkLibraryAddresses: GeneratorZerocostLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneratorZerocostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GeneratorZerocost__factory extends ContractFactory {
  constructor(...args: GeneratorZerocostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GeneratorZerocost__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "GeneratorZerocost";
  }

  static linkBytecode(
    linkLibraryAddresses: GeneratorZerocostLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$13ac0bbe16ff54a473352cca36c2f6a8c7\\$__", "g"),
      linkLibraryAddresses["contracts/utils/Sortings.sol:Sortings"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeneratorZerocost> {
    return super.deploy(input, overrides || {}) as Promise<GeneratorZerocost>;
  }
  getDeployTransaction(
    input: GeneratorConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GeneratorZerocost {
    return super.attach(address) as GeneratorZerocost;
  }
  connect(signer: Signer): GeneratorZerocost__factory {
    return super.connect(signer) as GeneratorZerocost__factory;
  }
  static readonly contractName: "GeneratorZerocost";
  public readonly contractName: "GeneratorZerocost";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneratorZerocostInterface {
    return new utils.Interface(_abi) as GeneratorZerocostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneratorZerocost {
    return new Contract(address, _abi, signerOrProvider) as GeneratorZerocost;
  }
}

export interface GeneratorZerocostLibraryAddresses {
  ["contracts/utils/Sortings.sol:Sortings"]: string;
}
