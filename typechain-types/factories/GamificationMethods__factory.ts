/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GamificationMethods,
  GamificationMethodsInterface,
  Constructor,
} from "../GamificationMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "defaultBreeding",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "defaultStamina",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStamina",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStaminaBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsBreeding",
    outputs: [
      {
        internalType: "address",
        name: "breedingFeeCurrency",
        type: "address",
      },
      {
        internalType: "address",
        name: "breedingCooldownCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastBreed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldown",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldownTimeUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillBreedingCooldownCost",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "availableToBreed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStamina",
    outputs: [
      {
        internalType: "address",
        name: "staminaRefillCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "staminaLastUpdate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "staminaRefill1x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillStaminaCooldownCost",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "staminaValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaPerTimeUnit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCap",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "onId",
        type: "uint256",
      },
      {
        internalType: "uint32[54]",
        name: "genetics",
        type: "uint32[54]",
      },
    ],
    name: "initializeHoundGamingStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023583803806200235883398101604081905262000034916200052d565b806200004033620001ae565b80518051600180546001600160a01b039283166001600160a01b03199182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e0909901516008805491151560ff19909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff908116680100000000000000000263ffffffff60401b19958216640100000000026001600160401b031990981691909216179590951792909216939093179093559183015180518493926200015a92600e92910190620002bd565b506060820151600e820180546001600160a01b03199081166001600160a01b0393841617909155608090930151600f909201805490931691161790556040810151620001a690620001fe565b5050620006b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015620002b9576011600083838151811062000224576200022462000673565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff16156011600084848151811062000274576200027462000673565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002b18162000689565b905062000201565b5050565b82805482825590600052602060002090810192821562000315579160200282015b828111156200031557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002de565b506200032392915062000327565b5090565b5b8082111562000323576000815560010162000328565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156200037957620003796200033e565b60405290565b60405161010081016001600160401b03811182821017156200037957620003796200033e565b80516001600160a01b0381168114620003bd57600080fd5b919050565b805163ffffffff81168114620003bd57600080fd5b600060e08284031215620003ea57600080fd5b60405160e081016001600160401b03811182821017156200040f576200040f6200033e565b6040529050806200042083620003a5565b81526020830151602082015260408301516040820152606083015160608201526200044e60808401620003c2565b60808201526200046160a08401620003c2565b60a08201526200047460c08401620003c2565b60c08201525092915050565b600082601f8301126200049257600080fd5b815160206001600160401b0380831115620004b157620004b16200033e565b8260051b604051601f19603f83011681018181108482111715620004d957620004d96200033e565b604052938452858101830193838101925087851115620004f857600080fd5b83870191505b8482101562000522576200051282620003a5565b83529183019190830190620004fe565b979650505050505050565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b908301908185036102408112156200056f57600080fd5b6200057962000354565b610100808312156200058a57600080fd5b620005946200037f565b9250620005a185620003a5565b8352620005b160208601620003a5565b602084015260408501516040840152606085015160608401526080850151608084015260a085015160a084015260c085015160c084015260e08501518015158114620005fc57600080fd5b60e08401528282526200061288868301620003d7565b6020830152506101e08401519150828211156200062e57600080fd5b6200063c8783860162000480565b6040820152620006506102008501620003a5565b6060820152620006646102208501620003a5565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620006aa57634e487b7160e01b600052601160045260246000fd5b5060010190565b611c9780620006c16000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80637972026611610081578063d8de65871161005b578063d8de65871461033f578063e622563014610444578063f2fde38b1461052757600080fd5b806379720266146102d15780638da5cb5b146102e4578063d63a8e111461030c57600080fd5b80635815d8bf116100b25780635815d8bf146101385780636f27089f146101fb578063715018a6146102c957600080fd5b80630ad47e1e146100d95780632c85e863146100ee578063408c3b2e14610118575b600080fd5b6100ec6100e736600461145f565b61053a565b005b6101016100fc3660046114f2565b610bab565b60405161010f92919061150b565b60405180910390f35b61012b6101263660046114f2565b610d65565b60405161010f91906115f6565b6101a66101463660046114f2565b6013602052600090815260409020805460018201546002830154600384015460048501546005860154600687015460079097015473ffffffffffffffffffffffffffffffffffffffff968716979590961695939492939192909160ff1688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a168152989097166020890152958701949094526060860192909252608085015260a084015260c0830152151560e08201526101000161010f565b6102716102093660046114f2565b6012602052600090815260409020805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff90931693919290919063ffffffff808216916401000000008104821691680100000000000000009091041687565b6040805173ffffffffffffffffffffffffffffffffffffffff9098168852602088019690965294860193909352606085019190915263ffffffff908116608085015290811660a08401521660c082015260e00161010f565b6100ec610e67565b6100ec6102df3660046117f2565b610e7b565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b61032f61031a366004611923565b60116020526000908152604090205460ff1681565b604051901515815260200161010f565b604080516101008101825260015473ffffffffffffffffffffffffffffffffffffffff908116825260025481166020808401919091526003548385015260045460608085019190915260055460808086019190915260065460a08087019190915260075460c08088019190915260085460ff16151560e0808901919091528851908101895260095487168152600a5495810195909552600b5497850197909752600c5492840192909252600d5463ffffffff808216928501929092526401000000008104821692840192909252680100000000000000009091041693810193909352600f546010546104349492918216911684565b60405161010f949392919061193e565b61051a6104523660046114f2565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915250600090815260126020908152604091829020825160e081018452815473ffffffffffffffffffffffffffffffffffffffff1681526001820154928101929092526002810154928201929092526003820154606082015260049091015463ffffffff80821660808401526401000000008204811660a0840152680100000000000000009091041660c082015290565b60405161010f9190611a4e565b6100ec610535366004611923565b61107f565b3360009081526011602052604090205460ff1661055657600080fd5b6040805160e08101825260095473ffffffffffffffffffffffffffffffffffffffff168152600060208201529081016003836035602002015163ffffffff16116105d4576106a0830151600b5463ffffffff909116906105b890606490611b4c565b6105c29190611b60565b600b546105cf9190611b77565b610609565b6106a0830151600b5463ffffffff909116906105f290606490611b4c565b6105fc9190611b60565b600b546106099190611b8a565b81526020016001836032602002015163ffffffff161015801561063a57506004836032602002015163ffffffff1611155b61067857610640830151600c5463ffffffff9091169061065c90609690611b4c565b6106669190611b60565b600c546106739190611b77565b6106ad565b610640830151600c5463ffffffff9091169061069690606490611b4c565b6106a09190611b60565b600c546106ad9190611b8a565b81526020016006836034602002015163ffffffff16116106e557610680830151600d546106e0919063ffffffff16611b9d565b61070a565b610680830151600d546006916107009163ffffffff16611bc1565b61070a9190611b9d565b63ffffffff168152602001826033602002015163ffffffff1660091461074057600d54640100000000900463ffffffff1661075d565b600d5461075d90600290640100000000900463ffffffff16611bde565b63ffffffff1681526020016006836032602002015163ffffffff16116107a757610640830151600d546107a2919068010000000000000000900463ffffffff16611b9d565b6107e3565b6106408301516107b990600690611b9d565b6107c4906005611c01565b600d546107e3919068010000000000000000900463ffffffff16611bc1565b63ffffffff90811690915260008481526012602090815260408083208551815473ffffffffffffffffffffffffffffffffffffffff9182167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617825586840151600180840191909155878401516002808501919091556060808a0151600386015560808a01516004909501805460a08c015160c0909c01518b1668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff9c8c16640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000909216978c1697909717179a909a1694909417909855835161010081018552815483168152975490911687850152918601939093529085015191840192919091161461098c576003836032602002015163ffffffff161061093957600061097a565b61064083015161094a906001611bc1565b610955906008611c01565b63ffffffff1660646001600001600301546109709190611b4c565b61097a9190611b60565b6004546109879190611b77565b6109f6565b6003836032602002015163ffffffff16106109a85760006109e9565b6106408301516109b9906001611bc1565b6109c4906008611c01565b63ffffffff1660646001600001600301546109df9190611b4c565b6109e99190611b60565b6004546109f69190611b8a565b815260006020820152604001826033602002015163ffffffff16600114610a1f57600654610a2e565b600654610a2e90600290611b4c565b81526020016007836034602002015163ffffffff16118015610a5e57506009836034602002015163ffffffff1611155b610a9c5761068083015160075463ffffffff90911690610a8090609690611b4c565b610a8a9190611b60565b600754610a979190611b77565b610ad1565b61068083015160075463ffffffff90911690610aba90606490611b4c565b610ac49190611b60565b600754610ad19190611b8a565b81526000602091820181905293845260138152604093849020825181547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff92831617835592840151600183018054909416911617909155928101516002840155606081015160038401556080810151600484015560a0810151600584015560c0810151600684015560e00151600790920180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169215159290921790915550565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610c5a604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b505060009081526012602090815260408083206013835292819020815160e08082018452855473ffffffffffffffffffffffffffffffffffffffff908116835260018088015484880152600280890154858801526003808a015460608088019190915260049a8b015463ffffffff8082166080808b01919091526401000000008304821660a0808c01919091526801000000000000000090930490911660c0808b01919091528b5161010081018d528b5489168152968b01549097169b86019b909b5292880154988401989098528601549682019690965296840154958701959095526005830154938601939093526006820154938501939093526007015460ff1615159083015291565b610ddb604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b50600090815260136020908152604091829020825161010081018452815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015416928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c082015260079091015460ff16151560e082015290565b610e6f61113b565b610e7960006111bc565b565b610e8361113b565b610e908160400151611231565b805180516001805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e090990151600880549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff958216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000909816919092161795909517929092169390931790935591830151805184939261101b92600e9291019061132b565b506060820151600e820180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155608090930151600f9092018054909316911617905550565b61108761113b565b73ffffffffffffffffffffffffffffffffffffffff811661112f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b611138816111bc565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611126565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015611327576011600083838151811061125357611253611abf565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615601160008484815181106112ba576112ba611abf565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561132081611c29565b9050611234565b5050565b8280548282559060005260206000209081019282156113a5579160200282015b828111156113a557825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061134b565b506113b19291506113b5565b5090565b5b808211156113b157600081556001016113b6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561141c5761141c6113ca565b60405290565b604051610100810167ffffffffffffffff8111828210171561141c5761141c6113ca565b803563ffffffff8116811461145a57600080fd5b919050565b6000806106e080848603121561147457600080fd5b83359250602085603f86011261148957600080fd5b6040516106c0810181811067ffffffffffffffff821117156114ad576114ad6113ca565b6040529185019180878411156114c257600080fd5b8287015b848110156114e4576114d781611446565b82529083019083016114c6565b509497909650945050505050565b60006020828403121561150457600080fd5b5035919050565b6101e0810161157d828573ffffffffffffffffffffffffffffffffffffffff8151168252602081015160208301526040810151604083015260608101516060830152608081015163ffffffff80821660808501528060a08401511660a08501528060c08401511660c085015250505050565b6115ef60e083018473ffffffffffffffffffffffffffffffffffffffff8082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b9392505050565b610100810161166a828473ffffffffffffffffffffffffffffffffffffffff8082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461145a57600080fd5b600060e082840312156116a657600080fd5b60405160e0810181811067ffffffffffffffff821117156116c9576116c96113ca565b6040529050806116d883611670565b815260208301356020820152604083013560408201526060830135606082015261170460808401611446565b608082015261171560a08401611446565b60a082015261172660c08401611446565b60c08201525092915050565b600082601f83011261174357600080fd5b8135602067ffffffffffffffff80831115611760576117606113ca565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156117a3576117a36113ca565b6040529384528581018301938381019250878511156117c157600080fd5b83870191505b848210156117e7576117d882611670565b835291830191908301906117c7565b979650505050505050565b60006020828403121561180457600080fd5b813567ffffffffffffffff8082111561181c57600080fd5b9083019081850361024081121561183257600080fd5b61183a6113f9565b6101008083121561184a57600080fd5b611852611422565b925061185d85611670565b835261186b60208601611670565b602084015260408501356040840152606085013560608401526080850135608084015260a085013560a084015260c085013560c084015260e085013580151581146118b557600080fd5b60e08401528282526118c988868301611694565b6020830152506101e08401359150828211156118e457600080fd5b6118f087838601611732565b60408201526119026102008501611670565b60608201526119146102208501611670565b60808201529695505050505050565b60006020828403121561193557600080fd5b6115ef82611670565b61022081016119b2828773ffffffffffffffffffffffffffffffffffffffff8082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b845173ffffffffffffffffffffffffffffffffffffffff16610100830152602085015161012083015260408501516101408301526060850151610160830152608085015163ffffffff90811661018084015260a086015181166101a084015260c0860151166101c083015273ffffffffffffffffffffffffffffffffffffffff8085166101e08401528084166102008401525095945050505050565b60e0810161166a828473ffffffffffffffffffffffffffffffffffffffff8151168252602081015160208301526040810151604083015260608101516060830152608081015163ffffffff80821660808501528060a08401511660a08501528060c08401511660c085015250505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611b5b57611b5b611aee565b500490565b808202811582820484141761166a5761166a611b1d565b8082018082111561166a5761166a611b1d565b8181038181111561166a5761166a611b1d565b63ffffffff828116828216039080821115611bba57611bba611b1d565b5092915050565b63ffffffff818116838216019080821115611bba57611bba611b1d565b600063ffffffff80841680611bf557611bf5611aee565b92169190910492915050565b63ffffffff818116838216028082169190828114611c2157611c21611b1d565b505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c5a57611c5a611b1d565b506001019056fea264697066735822122067e3a666be6b65403898657fef0b2b12b3a3e13859e6791b5cd7197c477d728064736f6c63430008110033";

type GamificationMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GamificationMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GamificationMethods__factory extends ContractFactory {
  constructor(...args: GamificationMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GamificationMethods";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GamificationMethods> {
    return super.deploy(input, overrides || {}) as Promise<GamificationMethods>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GamificationMethods {
    return super.attach(address) as GamificationMethods;
  }
  connect(signer: Signer): GamificationMethods__factory {
    return super.connect(signer) as GamificationMethods__factory;
  }
  static readonly contractName: "GamificationMethods";
  public readonly contractName: "GamificationMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GamificationMethodsInterface {
    return new utils.Interface(_abi) as GamificationMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GamificationMethods {
    return new Contract(address, _abi, signerOrProvider) as GamificationMethods;
  }
}
