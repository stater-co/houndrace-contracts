/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GamificationMethods,
  GamificationMethodsInterface,
  Constructor,
} from "../GamificationMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "defaultBreeding",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "defaultStamina",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStamina",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStaminaBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsBreeding",
    outputs: [
      {
        internalType: "address",
        name: "breedingFeeCurrency",
        type: "address",
      },
      {
        internalType: "address",
        name: "breedingCooldownCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastBreed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldown",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldownTimeUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillBreedingCooldownCost",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "availableToBreed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStamina",
    outputs: [
      {
        internalType: "address",
        name: "staminaRefillCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "staminaLastUpdate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "staminaRefill1x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillStaminaCooldownCost",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "staminaValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaPerTimeUnit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCap",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "onId",
        type: "uint256",
      },
      {
        internalType: "uint32[54]",
        name: "genetics",
        type: "uint32[54]",
      },
    ],
    name: "initializeHoundGamingStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type GamificationMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GamificationMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GamificationMethods__factory extends ContractFactory {
  constructor(...args: GamificationMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GamificationMethods";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GamificationMethods> {
    return super.deploy(input, overrides || {}) as Promise<GamificationMethods>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GamificationMethods {
    return super.attach(address) as GamificationMethods;
  }
  connect(signer: Signer): GamificationMethods__factory {
    return super.connect(signer) as GamificationMethods__factory;
  }
  static readonly contractName: "GamificationMethods";
  public readonly contractName: "GamificationMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GamificationMethodsInterface {
    return new utils.Interface(_abi) as GamificationMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GamificationMethods {
    return new Contract(address, _abi, signerOrProvider) as GamificationMethods;
  }
}
