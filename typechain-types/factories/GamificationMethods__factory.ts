/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GamificationMethods,
  GamificationMethodsInterface,
  Constructor,
} from "../GamificationMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "defaultBreeding",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "defaultStamina",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStamina",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStaminaBreeding",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "staminaRefillCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staminaLastUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staminaRefill1x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillStaminaCooldownCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "staminaValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaPerTimeUnit",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCap",
            type: "uint32",
          },
        ],
        internalType: "struct HoundStamina.Struct",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "breedingFeeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "breedingCooldownCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastBreed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "breedingCooldownTimeUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refillBreedingCooldownCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "availableToBreed",
            type: "bool",
          },
        ],
        internalType: "struct HoundBreeding.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsBreeding",
    outputs: [
      {
        internalType: "address",
        name: "breedingFeeCurrency",
        type: "address",
      },
      {
        internalType: "address",
        name: "breedingCooldownCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastBreed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldown",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "breedingCooldownTimeUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillBreedingCooldownCost",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "availableToBreed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStamina",
    outputs: [
      {
        internalType: "address",
        name: "staminaRefillCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "staminaLastUpdate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "staminaRefill1x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refillStaminaCooldownCost",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "staminaValue",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaPerTimeUnit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCap",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "onId",
        type: "uint256",
      },
      {
        internalType: "uint32[54]",
        name: "genetics",
        type: "uint32[54]",
      },
    ],
    name: "initializeHoundGamingStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "breedingFeeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "breedingCooldownCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lastBreed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "breedingCooldownTimeUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillBreedingCooldownCost",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "availableToBreed",
                type: "bool",
              },
            ],
            internalType: "struct HoundBreeding.Struct",
            name: "defaultBreeding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "staminaRefillCurrency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "staminaLastUpdate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "staminaRefill1x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refillStaminaCooldownCost",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "staminaValue",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaPerTimeUnit",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "staminaCap",
                type: "uint32",
              },
            ],
            internalType: "struct HoundStamina.Struct",
            name: "defaultStamina",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "allowed",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct Constructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001deb38038062001deb83398101604081905262000034916200052d565b806200004033620001ae565b80518051600180546001600160a01b039283166001600160a01b03199182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e0909901516008805491151560ff19909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff908116680100000000000000000263ffffffff60401b19958216640100000000026001600160401b031990981691909216179590951792909216939093179093559183015180518493926200015a92600e92910190620002bd565b506060820151600e820180546001600160a01b03199081166001600160a01b0393841617909155608090930151600f909201805490931691161790556040810151620001a690620001fe565b5050620006b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015620002b9576011600083838151811062000224576200022462000673565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff16156011600084848151811062000274576200027462000673565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002b18162000689565b905062000201565b5050565b82805482825590600052602060002090810192821562000315579160200282015b828111156200031557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002de565b506200032392915062000327565b5090565b5b8082111562000323576000815560010162000328565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156200037957620003796200033e565b60405290565b60405161010081016001600160401b03811182821017156200037957620003796200033e565b80516001600160a01b0381168114620003bd57600080fd5b919050565b805163ffffffff81168114620003bd57600080fd5b600060e08284031215620003ea57600080fd5b60405160e081016001600160401b03811182821017156200040f576200040f6200033e565b6040529050806200042083620003a5565b81526020830151602082015260408301516040820152606083015160608201526200044e60808401620003c2565b60808201526200046160a08401620003c2565b60a08201526200047460c08401620003c2565b60c08201525092915050565b600082601f8301126200049257600080fd5b815160206001600160401b0380831115620004b157620004b16200033e565b8260051b604051601f19603f83011681018181108482111715620004d957620004d96200033e565b604052938452858101830193838101925087851115620004f857600080fd5b83870191505b8482101562000522576200051282620003a5565b83529183019190830190620004fe565b979650505050505050565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b908301908185036102408112156200056f57600080fd5b6200057962000354565b610100808312156200058a57600080fd5b620005946200037f565b9250620005a185620003a5565b8352620005b160208601620003a5565b602084015260408501516040840152606085015160608401526080850151608084015260a085015160a084015260c085015160c084015260e08501518015158114620005fc57600080fd5b60e08401528282526200061288868301620003d7565b6020830152506101e08401519150828211156200062e57600080fd5b6200063c8783860162000480565b6040820152620006506102008501620003a5565b6060820152620006646102208501620003a5565b60808201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620006aa57634e487b7160e01b600052601160045260246000fd5b5060010190565b61172a80620006c16000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c80630ad47e1e146100a95780632c85e863146100be578063408c3b2e146100e85780635815d8bf146101085780636f27089f146101b1578063715018a61461025f57806379720266146102675780638da5cb5b1461027a578063d63a8e111461029a578063d8de6587146102cd578063e6225630146103bf578063f2fde38b146103df575b600080fd5b6100bc6100b7366004611135565b6103f2565b005b6100d16100cc3660046111c7565b610a2e565b6040516100df929190611294565b60405180910390f35b6100fb6100f63660046111c7565b610b36565b6040516100df91906112b7565b6101696101163660046111c7565b601360205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b03968716979590961695939492939192909160ff1688565b604080516001600160a01b03998a168152989097166020890152958701949094526060860192909252608085015260a084015260c0830152151560e0820152610100016100df565b6102146101bf3660046111c7565b601260205260009081526040902080546001820154600283015460038401546004909401546001600160a01b0390931693919290919063ffffffff80821691600160201b8104821691600160401b9091041687565b604080516001600160a01b039098168852602088019690965294860193909352606085019190915263ffffffff908116608085015290811660a08401521660c082015260e0016100df565b6100bc610bbd565b6100bc610275366004611421565b610bd1565b610282610d37565b6040516001600160a01b0390911681526020016100df565b6102bd6102a8366004611551565b60116020526000908152604090205460ff1681565b60405190151581526020016100df565b60408051610100810182526001546001600160a01b03908116825260025481166020808401919091526003548385015260045460608085019190915260055460808086019190915260065460a08087019190915260075460c08088019190915260085460ff16151560e0808901919091528851908101895260095487168152600a5495810195909552600b5497850197909752600c5492840192909252600d5463ffffffff80821692850192909252600160201b8104821692840192909252600160401b9091041693810193909352600f546010546103af9492918216911684565b6040516100df949392919061156c565b6103d26103cd3660046111c7565b610d46565b6040516100df91906115ae565b6100bc6103ed366004611551565b610dca565b3360009081526011602052604090205460ff1661040e57600080fd5b6040805160e0810182526009546001600160a01b03168152600060208201529081016003836035602002015163ffffffff161161047f576106a0830151600b5463ffffffff90911690610463906064906115fe565b61046d9190611612565b600b5461047a9190611629565b6104b4565b6106a0830151600b5463ffffffff9091169061049d906064906115fe565b6104a79190611612565b600b546104b4919061163c565b81526020016001836032602002015163ffffffff16101580156104e557506004836032602002015163ffffffff1611155b61052357610640830151600c5463ffffffff90911690610507906096906115fe565b6105119190611612565b600c5461051e9190611629565b610558565b610640830151600c5463ffffffff90911690610541906064906115fe565b61054b9190611612565b600c54610558919061163c565b81526020016006836034602002015163ffffffff161161059057610680830151600d5461058b919063ffffffff1661164f565b6105b5565b610680830151600d546006916105ab9163ffffffff16611673565b6105b5919061164f565b63ffffffff168152602001826033602002015163ffffffff166009146105ea57600d54600160201b900463ffffffff16610606565b600d5461060690600290600160201b900463ffffffff16611690565b63ffffffff1681526020016006836032602002015163ffffffff161161064b57610640830151600d546106469190600160401b900463ffffffff1661164f565b610682565b61064083015161065d9060069061164f565b6106689060056116b3565b600d546106829190600160401b900463ffffffff16611673565b63ffffffff9081169091526000848152601260209081526040808320855181546001600160a01b039182166001600160a01b031990911617825586840151600180840191909155878401516002808501919091556060808a0151600386015560808a01516004909501805460a08c015160c0909c01518b16600160401b0263ffffffff60401b199c8c16600160201b026001600160401b0319909216978c1697909717179a909a169490941790985583516101008101855281548316815297549091168785015291860193909352908501519184019291909116146107d0576003836032602002015163ffffffff161061077d5760006107be565b61064083015161078e906001611673565b6107999060086116b3565b63ffffffff1660646001600001600301546107b491906115fe565b6107be9190611612565b6004546107cb9190611629565b61083a565b6003836032602002015163ffffffff16106107ec57600061082d565b6106408301516107fd906001611673565b6108089060086116b3565b63ffffffff16606460016000016003015461082391906115fe565b61082d9190611612565b60045461083a919061163c565b81526020016003836035602002015163ffffffff161061088e576106a083015160055463ffffffff90911690610872906064906115fe565b61087c9190611612565b6005546108899190611629565b6108c3565b6106a083015160055463ffffffff909116906108ac906064906115fe565b6108b69190611612565b6005546108c3919061163c565b8152602001826033602002015163ffffffff166001146108e5576006546108f4565b6006546108f4906002906115fe565b81526020016007836034602002015163ffffffff1611801561092457506009836034602002015163ffffffff1611155b6109625761068083015160075463ffffffff90911690610946906096906115fe565b6109509190611612565b60075461095d9190611629565b610997565b61068083015160075463ffffffff90911690610980906064906115fe565b61098a9190611612565b600754610997919061163c565b81526000602091820181905293845260138152604093849020825181546001600160a01b03199081166001600160a01b0392831617835592840151600183018054909416911617909155928101516002840155606081015160038401556080810151600484015560a0810151600584015560c0810151600684015560e001516007909201805460ff19169215159290921790915550565b610a36610fac565b610a3e610fe8565b505060009081526012602090815260408083206013835292819020815160e0808201845285546001600160a01b03908116835260018088015484880152600280890154858801526003808a015460608088019190915260049a8b015463ffffffff8082166080808b0191909152600160201b8304821660a0808c0191909152600160401b90930490911660c0808b01919091528b5161010081018d528b5489168152968b01549097169b86019b909b5292880154988401989098528601549682019690965296840154958701959095526005830154938601939093526006820154938501939093526007015460ff1615159083015291565b610b3e610fe8565b5060009081526013602090815260409182902082516101008101845281546001600160a01b039081168252600183015416928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c082015260079091015460ff16151560e082015290565b610bc5610e48565b610bcf6000610ea7565b565b610bd9610e48565b610be68160400151610ef7565b80518051600180546001600160a01b039283166001600160a01b03199182161782556020808501516002805491861691841691909117905560408086015160035560608087015160045560808088015160055560a08089015160065560c0808a015160075560e0909901516008805491151560ff19909216919091179055848a015180516009805491909a1697169690961790975584840151600a5584830151600b5590840151600c55830151600d805496850151949097015163ffffffff908116600160401b0263ffffffff60401b19958216600160201b026001600160401b03199098169190921617959095179290921693909317909355918301518051849392610cf892600e92910190611041565b506060820151600e820180546001600160a01b03199081166001600160a01b0393841617909155608090930151600f9092018054909316911617905550565b6000546001600160a01b031690565b610d4e610fac565b50600090815260126020908152604091829020825160e08101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260049091015463ffffffff8082166080840152600160201b8204811660a0840152600160401b9091041660c082015290565b610dd2610e48565b6001600160a01b038116610e3c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610e4581610ea7565b50565b33610e51610d37565b6001600160a01b031614610bcf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e33565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015610fa85760116000838381518110610f1957610f196115bc565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff161560116000848481518110610f6657610f666115bc565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610fa1816116db565b9050610efa565b5050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b828054828255906000526020600020908101928215611096579160200282015b8281111561109657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611061565b506110a29291506110a6565b5090565b5b808211156110a257600081556001016110a7565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156110f3576110f36110bb565b60405290565b60405161010081016001600160401b03811182821017156110f3576110f36110bb565b803563ffffffff8116811461113057600080fd5b919050565b6000806106e080848603121561114a57600080fd5b83359250602085603f86011261115f57600080fd5b6040516106c081016001600160401b0381118282101715611182576111826110bb565b60405291850191808784111561119757600080fd5b8287015b848110156111b9576111ac8161111c565b825290830190830161119b565b509497909650945050505050565b6000602082840312156111d957600080fd5b5035919050565b80516001600160a01b0316825260208082015190830152604080820151908301526060808201519083015260808082015163ffffffff9081169184019190915260a08281015182169084015260c09182015116910152565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151151560e08301525050565b6101e081016112a382856111e0565b6112b060e0830184611238565b9392505050565b61010081016112c68284611238565b92915050565b80356001600160a01b038116811461113057600080fd5b600060e082840312156112f557600080fd5b60405160e081016001600160401b0381118282101715611317576113176110bb565b604052905080611326836112cc565b81526020830135602082015260408301356040820152606083013560608201526113526080840161111c565b608082015261136360a0840161111c565b60a082015261137460c0840161111c565b60c08201525092915050565b600082601f83011261139157600080fd5b813560206001600160401b03808311156113ad576113ad6110bb565b8260051b604051601f19603f830116810181811084821117156113d2576113d26110bb565b6040529384528581018301938381019250878511156113f057600080fd5b83870191505b8482101561141657611407826112cc565b835291830191908301906113f6565b979650505050505050565b60006020828403121561143357600080fd5b81356001600160401b038082111561144a57600080fd5b9083019081850361024081121561146057600080fd5b6114686110d1565b6101008083121561147857600080fd5b6114806110f9565b925061148b856112cc565b8352611499602086016112cc565b602084015260408501356040840152606085013560608401526080850135608084015260a085013560a084015260c085013560c084015260e085013580151581146114e357600080fd5b60e08401528282526114f7888683016112e3565b6020830152506101e084013591508282111561151257600080fd5b61151e87838601611380565b604082015261153061020085016112cc565b606082015261154261022085016112cc565b60808201529695505050505050565b60006020828403121561156357600080fd5b6112b0826112cc565b610220810161157b8287611238565b6115896101008301866111e0565b6001600160a01b039384166101e0830152919092166102009092019190915292915050565b60e081016112c682846111e0565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261160d5761160d6115d2565b500490565b80820281158282048414176112c6576112c66115e8565b808201808211156112c6576112c66115e8565b818103818111156112c6576112c66115e8565b63ffffffff82811682821603908082111561166c5761166c6115e8565b5092915050565b63ffffffff81811683821601908082111561166c5761166c6115e8565b600063ffffffff808416806116a7576116a76115d2565b92169190910492915050565b63ffffffff8181168382160280821691908281146116d3576116d36115e8565b505092915050565b6000600182016116ed576116ed6115e8565b506001019056fea2646970667358221220e83e5a2fdd4c0f7aea3a47a9023d9654811ac0bdb3b87aded743475bdd49560264736f6c63430008110033";

type GamificationMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GamificationMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GamificationMethods__factory extends ContractFactory {
  constructor(...args: GamificationMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GamificationMethods";
  }

  deploy(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GamificationMethods> {
    return super.deploy(input, overrides || {}) as Promise<GamificationMethods>;
  }
  getDeployTransaction(
    input: Constructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): GamificationMethods {
    return super.attach(address) as GamificationMethods;
  }
  connect(signer: Signer): GamificationMethods__factory {
    return super.connect(signer) as GamificationMethods__factory;
  }
  static readonly contractName: "GamificationMethods";
  public readonly contractName: "GamificationMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GamificationMethodsInterface {
    return new utils.Interface(_abi) as GamificationMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GamificationMethods {
    return new Contract(address, _abi, signerOrProvider) as GamificationMethods;
  }
}
