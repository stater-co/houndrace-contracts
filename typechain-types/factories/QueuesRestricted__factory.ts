/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "raceUploader",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "createdQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "deleteQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b5060405162003ef338038062003ef3833981016040819052620000399162000703565b80516101408201516001600055829190620000543362000299565b80518251146200006357600080fd5b60005b82518110156200017c5760005b82828151811062000088576200008862000850565b602002602001015151811015620001685760026000858481518110620000b257620000b262000850565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ef57620000ef62000850565b602002602001015182815181106200010b576200010b62000850565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055620001608162000866565b905062000073565b50620001748162000866565b905062000066565b5050815180518392506004916200019991839160200190620002eb565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805483169184169190911790556101008501516008850180548316918416919091179055610120850151600985018054909216921691909117905561014083015180516200028d92600a850192019062000355565b5090505050506200088e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805482825590600052602060002090810192821562000343579160200282015b828111156200034357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200030c565b5062000351929150620003b5565b5090565b828054828255906000526020600020908101928215620003a7579160200282015b82811115620003a7578251805162000396918491602090910190620003cc565b509160200191906001019062000376565b50620003519291506200047a565b5b80821115620003515760008155600101620003b6565b82805482825590600052602060002090600701600890048101928215620003435791602002820160005b838211156200043957835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003f6565b80156200046b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000439565b505062000351929150620003b5565b80821115620003515760006200049182826200049b565b506001016200047a565b508054600082556007016008900490600052602060002090810190620004c29190620003b5565b50565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620005015762000501620004c5565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620005325762000532620004c5565b604052919050565b60006001600160401b03821115620005565762000556620004c5565b5060051b60200190565b80516001600160a01b03811681146200057857600080fd5b919050565b600082601f8301126200058f57600080fd5b81516020620005a8620005a2836200053a565b62000507565b82815260059290921b84018101918181019086841115620005c857600080fd5b8286015b84811015620005ee57620005e08162000560565b8352918301918301620005cc565b509695505050505050565b600082601f8301126200060b57600080fd5b815160206200061e620005a2836200053a565b828152600592831b85018201928282019190878511156200063e57600080fd5b8387015b85811015620006f65780516001600160401b03811115620006635760008081fd5b8801603f81018a13620006765760008081fd5b8581015160406200068b620005a2836200053a565b82815291851b8301810191888101908d841115620006a95760008081fd5b938201935b83851015620006e457845192506001600160e01b031983168314620006d35760008081fd5b8282529389019390890190620006ae565b88525050509385019350840162000642565b5090979650505050505050565b6000602082840312156200071657600080fd5b81516001600160401b03808211156200072e57600080fd5b9083019061016082860312156200074457600080fd5b6200074e620004db565b8251828111156200075e57600080fd5b6200076c878286016200057d565b8252506200077d6020840162000560565b6020820152620007906040840162000560565b6040820152620007a36060840162000560565b6060820152620007b66080840162000560565b6080820152620007c960a0840162000560565b60a0820152620007dc60c0840162000560565b60c0820152620007ef60e0840162000560565b60e08201526101006200080481850162000560565b908201526101206200081884820162000560565b9082015261014083810151838111156200083157600080fd5b6200083f88828701620005f9565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200088757634e487b7160e01b600052601160045260246000fd5b5060010190565b613655806200089e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063ddf0b00911610066578063ddf0b009146102f9578063e200c85714610319578063e3c5fc041461032c578063f2fde38b1461037657600080fd5b80638da5cb5b146101ef57806390c1406614610217578063af640d0f1461022a578063d8de65871461024157600080fd5b80635b19e294116100d35780635b19e2941461017d5780635fcee296146101c1578063715018a6146101d4578063857b29e5146101dc57600080fd5b80630f7921ed1461010557806319e3e59214610135578063212049481461014a5780633b930d0c1461016a575b600080fd5b610118610113366004612463565b610389565b60405161012c9897969594939291906125bf565b60405180910390f35b610148610143366004612463565b610598565b005b61015d610158366004612463565b610a85565b60405161012c9190612615565b610148610178366004612901565b610aea565b61019061018b366004612a32565b610c3a565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161012c565b6101486101cf366004612463565b610c80565b610148611203565b6101486101ea366004612d07565b611217565b60015460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012c565b610148610225366004612d4e565b6115c7565b61023360035481565b60405190815260200161012c565b600554600654600754600854600954600a54600b54600c54600d546102929873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e08301529091166101008201526101200161012c565b61030c610307366004612463565b611a14565b60405161012c9190612eae565b61015d610327366004612463565b611ca3565b61036161033a366004612463565b6000908152600f60205260409020600c015468010000000000000000900463ffffffff1690565b60405163ffffffff909116815260200161012c565b610148610384366004612ec1565b611d06565b600f60205280600052604060002060009150905080600001604051806101000160405290816000820180546103bd90612ede565b80601f01602080910402602001604051908101604052809291908181526020018280546103e990612ede565b80156104365780601f1061040b57610100808354040283529160200191610436565b820191906000526020600020905b81548152906001019060200180831161041957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104c457602002820191906000526020600020905b8154815260200190600101908083116104b0575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561051c57602002820191906000526020600020905b815481526020019060010190808311610508575b505050918352505060058201546020820152600682015460408201526007909101546060909101526009820154600a830154600b840154600c909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b6000805b3360009081526002602052604090205481101561065557336000908152600260205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106105f9576105f9612f31565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361064557600191505b61064e81612f8f565b905061059c565b508061066057600080fd5b6000828152600f60209081526040808320600c0180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff166c01000000000000000000000000179055805160018082528183019092529182810190803683375050506000848152600f60205260408120600601548251929350918391906106e9576106e9612f31565b6020908102919091018101919091526009546000858152600f90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916107629160040190815260200190565b602060405180830381865afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190612fd2565b905060005b6000858152600f6020526040902060030154811015610a53576000858152600f602052604081206003018054839081106107e4576107e4612f31565b90600052602060002001541115610a4357600a546000868152600f60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc91908490811061083b5761083b612f31565b9060005260206000200154876040518363ffffffff1660e01b815260040161086d929190918252602082015260400190565b6020604051808303816000875af115801561088c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b09190612fef565b6000036108bc57600080fd5b600a546000868152600f602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf91908590811061090257610902612f31565b90600052602060002001546040518263ffffffff1660e01b815260040161092b91815260200190565b602060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096c9190612fd2565b600b5490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c29085161561099f5760006109b2565b6000888152600f60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff8316156109eb5760026109ee565b60035b6040518863ffffffff1660e01b8152600401610a0f96959493929190613008565b6000604051808303818588803b158015610a2857600080fd5b505af1158015610a3c573d6000803e3d6000fd5b5050505050505b610a4c81612f8f565b90506107a8565b5060405184907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a250505050565b6000818152600f6020908152604091829020600401805483518184028101840190945280845260609392830182828015610ade57602002820191906000526020600020905b815481526020019060010190808311610aca575b50505050509050919050565b610af2611dbf565b805180518291600491610b0c91839160209091019061211d565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e08501516007850180548316918416919091179055610100850151600885018054831691841691909117905561012085015160098501805490921692169190911790556101408301518051610c2392600a85019201906121a7565b50508151610140830151610c379250611e40565b50565b60026020528160005260406000208181548110610c5657600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6000805b33600090815260026020526040902054811015610d3d57336000908152600260205260408120805491357fffffffff00000000000000000000000000000000000000000000000000000000169183908110610ce157610ce1612f31565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610d2d57600191505b610d3681612f8f565b9050610c84565b5080610d4857600080fd5b604080516001808252818301909252600091602080830190803683375050506000848152600f6020526040812060060154825192935091839190610d8e57610d8e612f31565b6020908102919091018101919091526009546000858152600f90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a91610e079160040190815260200190565b602060405180830381865afa158015610e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e489190612fd2565b905060005b6000858152600f60205260409020600301548110156110f8576000858152600f60205260408120600301805483908110610e8957610e89612f31565b906000526020600020015411156110e857600a546000868152600f60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610ee057610ee0612f31565b9060005260206000200154876040518363ffffffff1660e01b8152600401610f12929190918252602082015260400190565b6020604051808303816000875af1158015610f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f559190612fef565b600003610f6157600080fd5b600a546000868152600f602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110610fa757610fa7612f31565b90600052602060002001546040518263ffffffff1660e01b8152600401610fd091815260200190565b602060405180830381865afa158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110119190612fd2565b600b5490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615611044576000611057565b6000888152600f60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615611090576002611093565b60035b6040518863ffffffff1660e01b81526004016110b496959493929190613008565b6000604051808303818588803b1580156110cd57600080fd5b505af11580156110e1573d6000803e3d6000fd5b5050505050505b6110f181612f8f565b9050610e4d565b506000848152600f602052604081209081816111148282612200565b6001820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116909155600283018054909116905561115a60038301600061223a565b61116860048301600061223a565b6005820160009055600682016000905560078201600090555050600882016000611192919061223a565b50600060098201819055600a8201819055600b8201819055600c90910180547fffffffffffffffffffffffffffffffffffffff0000000000000000000000000016905560405185917f69e8bd1e5b8aab137b7e121055e1416a466fd9af5ca24bf7bfafd1d89ec5cb2191a250505050565b61120b611dbf565b61121560006120a6565b565b6000805b336000908152600260205260409020548110156112d457336000908152600260205260408120805491357fffffffff0000000000000000000000000000000000000000000000000000000016918390811061127857611278612f31565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036112c457600191505b6112cd81612f8f565b905061121b565b50806112df57600080fd5b600954825160a001516040517fb74a5fbe000000000000000000000000000000000000000000000000000000008152600481019190915260009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa158015611356573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261137e91908101906130fe565b835160c00151909150611393906002906131dd565b8160600151106113a257600080fd5b6000848152600f602052604090208351805185929190829081906113c69082613266565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161143e9260038501920190612258565b506080820151805161145a916004840191602090910190612258565b5060a0820151600582015560c0820151600682015560e09091015160079091015560208281015180516114939260088501920190612258565b5060408281015160098301556060830151600a8301556080830151600b83015560a0830151600c909201805460c085015160e08601516101009096015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9788166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928816640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090941697909616969096179190911716929092179290921790556000858152600f602052819020905185917f15555e31e56029e131307529a854fd2606a24ed59b976f2435a7111e1683a2af916115b991906134e6565b60405180910390a250505050565b6000805b3360009081526002602052604090205481101561168457336000908152600260205260408120805491357fffffffff0000000000000000000000000000000000000000000000000000000016918390811061162857611628612f31565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361167457600191505b61167d81612f8f565b90506115cb565b508061168f57600080fd5b6000805b83518110156119b957600954845173ffffffffffffffffffffffffffffffffffffffff9091169063854071ae908690849081106116d2576116d2612f31565b60200260200101516000015160a001516040518263ffffffff1660e01b815260040161170091815260200190565b602060405180830381865afa15801561171d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117419190612fef565b915083818151811061175557611755612f31565b602002602001015160a0015163ffffffff1684828151811061177957611779612f31565b60200260200101516000015160c0015161179391906131dd565b821061179e57600080fd5b8381815181106117b0576117b0612f31565b6020908102919091018101516003546000908152600f909252604090912081518051829081906117e09082613266565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516118589260038501920190612258565b5060808201518051611874916004840191602090910190612258565b5060a0820151600582015560c0820151600682015560e09091015160079091015560208281015180516118ad9260088501920190612258565b50604082015160098201556060820151600a8201556080820151600b82015560a0820151600c909101805460c084015160e08501516101009095015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9687166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928716640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169690951695909517919091171691909117919091179055600380546000906119a590612f8f565b909155506119b281612f8f565b9050611693565b5060016003546119c99190613586565b83516003546119d89190613586565b7f8c0d15f9be4efa955274ee73bfb86e41fb64bb7a27d9b670e7cbecf28f7fa83e85604051611a07919061359f565b60405180910390a3505050565b611a1c612293565b6000828152600f6020526040908190208151610220810190925280548290610120820190839082908290611a4f90612ede565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7b90612ede565b8015611ac85780601f10611a9d57610100808354040283529160200191611ac8565b820191906000526020600020905b815481529060010190602001808311611aab57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015611b5657602002820191906000526020600020905b815481526020019060010190808311611b42575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611bae57602002820191906000526020600020905b815481526020019060010190808311611b9a575b505050505081526020016005820154815260200160068201548152602001600782015481525050815260200160088201805480602002602001604051908101604052809291908181526020018280548015611c2857602002820191906000526020600020905b815481526020019060010190808311611c14575b505050918352505060098201546020820152600a8201546040820152600b8201546060820152600c9091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600f6020908152604091829020600301805483518184028101840190945280845260609392830182828015610ade5760200282019190600052602060002090815481526020019060010190808311610aca5750505050509050919050565b611d0e611dbf565b73ffffffffffffffffffffffffffffffffffffffff8116611db6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610c37816120a6565b60015473ffffffffffffffffffffffffffffffffffffffff163314611215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611dad565b8051825114611e4e57600080fd5b60005b82518110156120a15760005b828281518110611e6f57611e6f612f31565b6020026020010151518110156120905760026000858481518110611e9557611e95612f31565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110611fb35760026000858481518110611ef757611ef7612f31565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838381518110611f4b57611f4b612f31565b60200260200101518281518110611f6457611f64612f31565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055612080565b828281518110611fc557611fc5612f31565b60200260200101518181518110611fde57611fde612f31565b602002602001015160026000868581518110611ffc57611ffc612f31565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061204f5761204f612f31565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61208981612f8f565b9050611e5d565b5061209a81612f8f565b9050611e51565b505050565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215612197579160200282015b8281111561219757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061213d565b506121a3929150612365565b5090565b8280548282559060005260206000209081019282156121f4579160200282015b828111156121f457825180516121e491849160209091019061237a565b50916020019190600101906121c7565b506121a3929150612421565b50805461220c90612ede565b6000825580601f1061221c575050565b601f016020900490600052602060002090810190610c379190612365565b5080546000825590600052602060002090810190610c379190612365565b828054828255906000526020600020908101928215612197579160200282015b82811115612197578251825591602001919060010190612278565b60405180610120016040528061231360405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b5b808211156121a35760008155600101612366565b828054828255906000526020600020906007016008900481019282156121975791602002820160005b838211156123e457835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026123a3565b80156124145782816101000a81549063ffffffff02191690556004016020816003010492830192600103026123e4565b50506121a3929150612365565b808211156121a3576000612435828261243e565b50600101612421565b508054600082556007016008900490600052602060002090810190610c379190612365565b60006020828403121561247557600080fd5b5035919050565b60005b8381101561249757818101518382015260200161247f565b50506000910152565b600081518084526020808501945080840160005b838110156124d0578151875295820195908201906001016124b4565b509495945050505050565b60006101008251818552805180838701526101209250612501818488016020850161247c565b601f19601f82011686019150506020840151612535602087018273ffffffffffffffffffffffffffffffffffffffff169052565b50604084015161255d604087018273ffffffffffffffffffffffffffffffffffffffff169052565b50606084015182868303016060870152612579838301826124a0565b925050506080830151848203608086015261259482826124a0565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b60006101008083526125d38184018c6124db565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b60208152600061262860208301846124a0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156126825761268261262f565b60405290565b604051610100810167ffffffffffffffff811182821017156126825761268261262f565b604051610120810167ffffffffffffffff811182821017156126825761268261262f565b60405160e0810167ffffffffffffffff811182821017156126825761268261262f565b604051601f8201601f1916810167ffffffffffffffff8111828210171561271c5761271c61262f565b604052919050565b600067ffffffffffffffff82111561273e5761273e61262f565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610c3757600080fd5b803561277581612748565b919050565b600082601f83011261278b57600080fd5b813560206127a061279b83612724565b6126f3565b82815260059290921b840181019181810190868411156127bf57600080fd5b8286015b848110156127e35780356127d681612748565b83529183019183016127c3565b509695505050505050565b600082601f8301126127ff57600080fd5b8135602061280f61279b83612724565b828152600592831b850182019282820191908785111561282e57600080fd5b8387015b858110156128f457803567ffffffffffffffff8111156128525760008081fd5b8801603f81018a136128645760008081fd5b85810135604061287661279b83612724565b82815291851b8301810191888101908d8411156128935760008081fd5b938201935b838510156128e357843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146128d35760008081fd5b8282529389019390890190612898565b885250505093850193508401612832565b5090979650505050505050565b60006020828403121561291357600080fd5b813567ffffffffffffffff8082111561292b57600080fd5b90830190610160828603121561294057600080fd5b61294861265e565b82358281111561295757600080fd5b6129638782860161277a565b8252506129726020840161276a565b60208201526129836040840161276a565b60408201526129946060840161276a565b60608201526129a56080840161276a565b60808201526129b660a0840161276a565b60a08201526129c760c0840161276a565b60c08201526129d860e0840161276a565b60e08201526101006129eb81850161276a565b908201526101206129fd84820161276a565b908201526101408381013583811115612a1557600080fd5b612a21888287016127ee565b918301919091525095945050505050565b60008060408385031215612a4557600080fd5b8235612a5081612748565b946020939093013593505050565b600067ffffffffffffffff821115612a7857612a7861262f565b50601f01601f191660200190565b600082601f830112612a9757600080fd5b8135612aa561279b82612a5e565b818152846020838601011115612aba57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112612ae857600080fd5b81356020612af861279b83612724565b82815260059290921b84018101918181019086841115612b1757600080fd5b8286015b848110156127e35780358352918301918301612b1b565b60006101008284031215612b4557600080fd5b612b4d612688565b9050813567ffffffffffffffff80821115612b6757600080fd5b612b7385838601612a86565b8352612b816020850161276a565b6020840152612b926040850161276a565b60408401526060840135915080821115612bab57600080fd5b612bb785838601612ad7565b60608401526080840135915080821115612bd057600080fd5b50612bdd84828501612ad7565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b63ffffffff81168114610c3757600080fd5b803561277581612c07565b8035801515811461277557600080fd5b60006101208284031215612c4757600080fd5b612c4f6126ac565b9050813567ffffffffffffffff80821115612c6957600080fd5b612c7585838601612b32565b83526020840135915080821115612c8b57600080fd5b50612c9884828501612ad7565b602083015250604082013560408201526060820135606082015260808201356080820152612cc860a08301612c19565b60a0820152612cd960c08301612c19565b60c0820152612cea60e08301612c19565b60e0820152610100612cfd818401612c24565b9082015292915050565b60008060408385031215612d1a57600080fd5b82359150602083013567ffffffffffffffff811115612d3857600080fd5b612d4485828601612c34565b9150509250929050565b60006020808385031215612d6157600080fd5b823567ffffffffffffffff80821115612d7957600080fd5b818501915085601f830112612d8d57600080fd5b8135612d9b61279b82612724565b81815260059190911b83018401908481019088831115612dba57600080fd5b8585015b83811015612df257803585811115612dd65760008081fd5b612de48b89838a0101612c34565b845250918601918601612dbe565b5098975050505050505050565b60006101208251818552612e15828601826124db565b91505060208301518482036020860152612e2f82826124a0565b91505060408301516040850152606083015160608501526080830151608085015260a0830151612e6760a086018263ffffffff169052565b5060c0830151612e7f60c086018263ffffffff169052565b5060e0830151612e9760e086018263ffffffff169052565b506101009283015115159390920192909252919050565b6020815260006126286020830184612dff565b600060208284031215612ed357600080fd5b813561262881612748565b600181811c90821680612ef257607f821691505b602082108103612f2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612fc057612fc0612f60565b5060010190565b805161277581612748565b600060208284031215612fe457600080fd5b815161262881612748565b60006020828403121561300157600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261304960c08301866124a0565b828103608084015261305b81866124a0565b91505060048310613095577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260a0830152979650505050505050565b600082601f8301126130b757600080fd5b81516130c561279b82612a5e565b8181528460208386010111156130da57600080fd5b6130eb82602083016020870161247c565b949350505050565b805161277581612c07565b60006020828403121561311057600080fd5b815167ffffffffffffffff8082111561312857600080fd5b9083019060e0828603121561313c57600080fd5b6131446126d0565b82518281111561315357600080fd5b61315f878286016130a6565b82525060208301518281111561317457600080fd5b613180878286016130a6565b60208301525061319260408401612fc7565b6040820152606083015160608201526131ad608084016130f3565b60808201526131be60a084016130f3565b60a08201526131cf60c084016130f3565b60c082015295945050505050565b600082613213577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f8211156120a157600081815260208120601f850160051c8101602086101561323f5750805b601f850160051c820191505b8181101561325e5782815560010161324b565b505050505050565b815167ffffffffffffffff8111156132805761328061262f565b6132948161328e8454612ede565b84613218565b602080601f8311600181146132e757600084156132b15750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561325e565b600085815260208120601f198616915b82811015613316578886015182559484019460019091019084016132f7565b508582101561335257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000815461336f81612ede565b80855260206001838116801561338c57600181146133c4576133f2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b89010195506133f2565b866000528260002060005b858110156133ea5781548a82018601529083019084016133cf565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b838110156124d057815487529582019560019182019101613416565b600061010080845261344681850184613362565b9050613469600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9081166020860152600284015416604085015283810360608501526134a681600385016133fd565b905083810360808501526134bd81600485016133fd565b600584015460a0860152600684015460c086015260079093015460e09094019390935250919050565b602081526000610120806020840152613503610140840185613432565b601f1984820301604085015261351c81600887016133fd565b60098601546060860152600a8601546080860152600b86015460a0860152600c86015463ffffffff80821660c0880152602082901c811660e0880152604082901c8116610100880152919250905061357d83860160ff8360601c1615159052565b50949350505050565b8181038181111561359957613599612f60565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613612577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613600858351612dff565b945092850192908501906001016135c6565b509297965050505050505056fea2646970667358221220fca7d65292e30aababe0788b874095e77d2c81dce540799e785ae8fc4d50bc0564736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
