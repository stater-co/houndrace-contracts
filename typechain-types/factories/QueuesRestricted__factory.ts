/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "deleteQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b50604051620053b5380380620053b58339810160408190526200003991620006ec565b80516101208201516001600055829190620000543362000282565b80518251146200006357600080fd5b60005b82518110156200017c5760005b82828151811062000088576200008862000825565b602002602001015151811015620001685760026000858481518110620000b257620000b262000825565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ef57620000ef62000825565b602002602001015182815181106200010b576200010b62000825565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c9190910291909117905562000160816200083b565b905062000073565b5062000174816200083b565b905062000066565b5050815180518392506004916200019991839160200190620002d4565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e08501516007850180548316918416919091179055610100850151600885018054909216921691909117905561012083015180516200027692600985019201906200033e565b50905050505062000863565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280548282559060005260206000209081019282156200032c579160200282015b828111156200032c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002f5565b506200033a9291506200039e565b5090565b82805482825590600052602060002090810192821562000390579160200282015b828111156200039057825180516200037f918491602090910190620003b5565b50916020019190600101906200035f565b506200033a92915062000463565b5b808211156200033a57600081556001016200039f565b828054828255906000526020600020906007016008900481019282156200032c5791602002820160005b838211156200042257835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003df565b8015620004545782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000422565b50506200033a9291506200039e565b808211156200033a5760006200047a828262000484565b5060010162000463565b508054600082556007016008900490600052602060002090810190620004ab91906200039e565b50565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620004ea57620004ea620004ae565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200051b576200051b620004ae565b604052919050565b60006001600160401b038211156200053f576200053f620004ae565b5060051b60200190565b80516001600160a01b03811681146200056157600080fd5b919050565b600082601f8301126200057857600080fd5b81516020620005916200058b8362000523565b620004f0565b82815260059290921b84018101918181019086841115620005b157600080fd5b8286015b84811015620005d757620005c98162000549565b8352918301918301620005b5565b509695505050505050565b600082601f830112620005f457600080fd5b81516020620006076200058b8362000523565b828152600592831b85018201928282019190878511156200062757600080fd5b8387015b85811015620006df5780516001600160401b038111156200064c5760008081fd5b8801603f81018a136200065f5760008081fd5b858101516040620006746200058b8362000523565b82815291851b8301810191888101908d841115620006925760008081fd5b938201935b83851015620006cd57845192506001600160e01b031983168314620006bc5760008081fd5b828252938901939089019062000697565b8852505050938501935084016200062b565b5090979650505050505050565b600060208284031215620006ff57600080fd5b81516001600160401b03808211156200071757600080fd5b9083019061014082860312156200072d57600080fd5b62000737620004c4565b8251828111156200074757600080fd5b620007558782860162000566565b825250620007666020840162000549565b6020820152620007796040840162000549565b60408201526200078c6060840162000549565b60608201526200079f6080840162000549565b6080820152620007b260a0840162000549565b60a0820152620007c560c0840162000549565b60c0820152620007d860e0840162000549565b60e0820152610100620007ed81850162000549565b9082015261012083810151838111156200080657600080fd5b6200081488828701620005e2565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200085c57634e487b7160e01b600052601160045260246000fd5b5060010190565b614b4280620008736000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e200c85711610066578063e200c857146102f8578063e3c5fc041461030b578063e7c4d37414610355578063f2fde38b1461036857600080fd5b80638da5cb5b146101ef578063af640d0f14610217578063d8de65871461022e578063ddf0b009146102d857600080fd5b806330f9a0f0116100d357806330f9a0f01461017d5780635b19e294146101905780635fcee296146101d4578063715018a6146101e757600080fd5b80630f7921ed1461010557806319e3e59214610135578063212049481461014a57806324e7c2c61461016a575b600080fd5b610118610113366004612dc1565b61037b565b60405161012c98979695949392919061311b565b60405180910390f35b610148610143366004612dc1565b6108a4565b005b61015d610158366004612dc1565b610d91565b60405161012c9190613171565b610148610178366004613444565b610df6565b61014861018b366004613a1f565b610f2f565b6101a361019e366004613ad0565b61142a565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161012c565b6101486101e2366004612dc1565b611470565b610148611a48565b60015460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012c565b61022060035481565b60405190815260200161012c565b600554600654600754600854600954600a54600b54600c546102799773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e08201526101000161012c565b6102eb6102e6366004612dc1565b611a5c565b60405161012c9190613bab565b61015d610306366004612dc1565b612006565b610340610319366004612dc1565b6000908152600e602052604090206012015468010000000000000000900463ffffffff1690565b60405163ffffffff909116815260200161012c565b610148610363366004613bbe565b612069565b610148610376366004613c05565b6124c7565b600e60205280600052604060002060009150905080600001604051806101200160405290816000820180546103af90613c22565b80601f01602080910402602001604051908101604052809291908181526020018280546103db90613c22565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104b657602002820191906000526020600020905b8154815260200190600101908083116104a2575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561050e57602002820191906000526020600020905b8154815260200190600101908083116104fa575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156105ab57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610580575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561061a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105ef575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561068957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161065e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107235760008481526020908190208301805460408051828502810185019091528181529283018282801561070f57602002820191906000526020600020905b8154815260200190600101908083116106fb575b5050505050815260200190600101906106b7565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107bc576000848152602090819020830180546040805182850281018501909152818152928301828280156107a857602002820191906000526020600020905b815481526020019060010190808311610794575b505050505081526020019060010190610750565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561084357602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561082157610821612f03565b8152602060019283018181049485019490930390920291018084116108025790505b50505091909252505050905250600f820154601083015460118401546012909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b6000805b3360009081526002602052604090205481101561096157336000908152600260205260408120805491357fffffffff0000000000000000000000000000000000000000000000000000000016918390811061090557610905613c75565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361095157600191505b61095a81613cd3565b90506108a8565b508061096c57600080fd5b6000828152600e6020908152604080832060120180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff166c01000000000000000000000000179055805160018082528183019092529182810190803683375050506000848152600e60205260408120600601548251929350918391906109f5576109f5613c75565b6020908102919091018101919091526009546000858152600e90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a91610a6e9160040190815260200190565b602060405180830381865afa158015610a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaf9190613d16565b905060005b6000858152600e6020526040902060030154811015610d5f576000858152600e60205260408120600301805483908110610af057610af0613c75565b90600052602060002001541115610d4f57600a546000868152600e60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610b4757610b47613c75565b9060005260206000200154876040518363ffffffff1660e01b8152600401610b79929190918252602082015260400190565b6020604051808303816000875af1158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc9190613d33565b600003610bc857600080fd5b600a546000868152600e602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110610c0e57610c0e613c75565b90600052602060002001546040518263ffffffff1660e01b8152600401610c3791815260200190565b602060405180830381865afa158015610c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c789190613d16565b600b5490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615610cab576000610cbe565b6000888152600e60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615610cf7576002610cfa565b60035b6040518863ffffffff1660e01b8152600401610d1b96959493929190613d4c565b6000604051808303818588803b158015610d3457600080fd5b505af1158015610d48573d6000803e3d6000fd5b5050505050505b610d5881613cd3565b9050610ab4565b5060405184907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a250505050565b6000818152600e6020908152604091829020600401805483518184028101840190945280845260609392830182828015610dea57602002820191906000526020600020905b815481526020019060010190808311610dd6575b50505050509050919050565b610dfe612580565b805180518291600491610e189183916020909101906128de565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051610f189260098501920190612968565b50508151610120830151610f2c9250612601565b50565b6000805b33600090815260026020526040902054811015610fec57336000908152600260205260408120805491357fffffffff00000000000000000000000000000000000000000000000000000000169183908110610f9057610f90613c75565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610fdc57600191505b610fe581613cd3565b9050610f33565b5080610ff757600080fd5b6000805b83518110156113cf57600954845173ffffffffffffffffffffffffffffffffffffffff9091169063854071ae9086908490811061103a5761103a613c75565b60200260200101516000015160a001516040518263ffffffff1660e01b815260040161106891815260200190565b602060405180830381865afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a99190613d33565b91508381815181106110bd576110bd613c75565b602002602001015160a0015163ffffffff168482815181106110e1576110e1613c75565b60200260200101516000015160c001516110fb9190613dba565b821061110657600080fd5b83818151811061111857611118613c75565b6020908102919091018101516003546000908152600e909252604090912081518051829081906111489082613e43565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516111c092600385019201906129c1565b50608082015180516111dc9160048401916020909101906129c1565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191611219918391602001906128de565b50602082810151805161123292600185019201906128de565b506040820151805161124e9160028401916020909101906128de565b506060820151805161126a9160038401916020909101906129fc565b50608082015180516112869160048401916020909101906129fc565b5060a082015180516112a2916005840191602090910190612a55565b5050505050602082015181600e0190805190602001906112c39291906129c1565b506040820151600f820155606082015160108201556080820151601182015560a08201516012909101805460c084015160e08501516101009095015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9687166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928716640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169690951695909517919091171691909117919091179055600380546000906113bb90613cd3565b909155506113c881613cd3565b9050610ffb565b5060016003546113df9190613f3f565b83516003546113ee9190613f3f565b7fa6bcf31909006b92649ed62ab4eaa36aa3d061c4f9b2a8f68247c4f86c9406d68560405161141d9190613f58565b60405180910390a3505050565b6002602052816000526040600020818154811061144657600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6000805b3360009081526002602052604090205481101561152d57336000908152600260205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106114d1576114d1613c75565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361151d57600191505b61152681613cd3565b9050611474565b508061153857600080fd5b604080516001808252818301909252600091602080830190803683375050506000848152600e602052604081206006015482519293509183919061157e5761157e613c75565b6020908102919091018101919091526009546000858152600e90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916115f79160040190815260200190565b602060405180830381865afa158015611614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116389190613d16565b905060005b6000858152600e60205260409020600301548110156118e8576000858152600e6020526040812060030180548390811061167957611679613c75565b906000526020600020015411156118d857600a546000868152600e60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106116d0576116d0613c75565b9060005260206000200154876040518363ffffffff1660e01b8152600401611702929190918252602082015260400190565b6020604051808303816000875af1158015611721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117459190613d33565b60000361175157600080fd5b600a546000868152600e602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf91908590811061179757611797613c75565b90600052602060002001546040518263ffffffff1660e01b81526004016117c091815260200190565b602060405180830381865afa1580156117dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118019190613d16565b600b5490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615611834576000611847565b6000888152600e60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615611880576002611883565b60035b6040518863ffffffff1660e01b81526004016118a496959493929190613d4c565b6000604051808303818588803b1580156118bd57600080fd5b505af11580156118d1573d6000803e3d6000fd5b5050505050505b6118e181613cd3565b905061163d565b506000848152600e602052604081209081816119048282612b04565b6001820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116909155600283018054909116905561194a600383016000612b3e565b611958600483016000612b3e565b6000600583018190556006830181905560078301819055600883019061197e8282612b3e565b61198c600183016000612b3e565b61199a600283016000612b3e565b6119a8600383016000612b5c565b6119b6600483016000612b5c565b6119c4600583016000612b7a565b506119d792505050600e83016000612b3e565b506000600f82018190556010820181905560118201819055601290910180547fffffffffffffffffffffffffffffffffffffff0000000000000000000000000016905560405185917f69e8bd1e5b8aab137b7e121055e1416a466fd9af5ca24bf7bfafd1d89ec5cb2191a250505050565b611a50612580565b611a5a6000612867565b565b611a64612b9f565b6000828152600e6020526040908190208151610240810190925280548290610120820190839082908290611a9790613c22565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac390613c22565b8015611b105780601f10611ae557610100808354040283529160200191611b10565b820191906000526020600020905b815481529060010190602001808311611af357829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015611b9e57602002820191906000526020600020905b815481526020019060010190808311611b8a575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611bf657602002820191906000526020600020905b815481526020019060010190808311611be2575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015611c9357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611c68575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d0257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611cd7575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611d7157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611d46575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611e0b57600084815260209081902083018054604080518285028101850190915281815292830182828015611df757602002820191906000526020600020905b815481526020019060010190808311611de3575b505050505081526020019060010190611d9f565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611ea457600084815260209081902083018054604080518285028101850190915281815292830182828015611e9057602002820191906000526020600020905b815481526020019060010190808311611e7c575b505050505081526020019060010190611e38565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611f2b57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611f0957611f09612f03565b815260206001928301818104948501949093039092029101808411611eea5790505b505050505081525050815250508152602001600e8201805480602002602001604051908101604052809291908181526020018280548015611f8b57602002820191906000526020600020905b815481526020019060010190808311611f77575b5050509183525050600f8201546020820152601082015460408201526011820154606082015260129091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600e6020908152604091829020600301805483518184028101840190945280845260609392830182828015610dea5760200282019190600052602060002090815481526020019060010190808311610dd65750505050509050919050565b6000805b3360009081526002602052604090205481101561212657336000908152600260205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106120ca576120ca613c75565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361211657600191505b61211f81613cd3565b905061206d565b508061213157600080fd5b600954825160a001516040517fb74a5fbe000000000000000000000000000000000000000000000000000000008152600481019190915260009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa1580156121a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121d09190810190614030565b835160c001519091506121e590600290613dba565b8160600151106121f457600080fd5b6000848152600e602052604090208351805185929190829081906122189082613e43565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161229092600385019201906129c1565b50608082015180516122ac9160048401916020909101906129c1565b5060a0820151600582015560c0820151600682015560e082015160078201556101008201518051805160088401916122e9918391602001906128de565b50602082810151805161230292600185019201906128de565b506040820151805161231e9160028401916020909101906128de565b506060820151805161233a9160038401916020909101906129fc565b50608082015180516123569160048401916020909101906129fc565b5060a08201518051612372916005840191602090910190612a55565b5050505050602082015181600e0190805190602001906123939291906129c1565b50604082810151600f830155606083015160108301556080830151601183015560a08301516012909201805460c085015160e08601516101009096015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9788166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928816640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090941697909616969096179190911716929092179290921790556000858152600e602052819020905185917f8b3fe05402e83d2bf5005cfe2f496358067b0210fefc1b56b592e1edb937b5d0916124b99190614a6c565b60405180910390a250505050565b6124cf612580565b73ffffffffffffffffffffffffffffffffffffffff8116612577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610f2c81612867565b60015473ffffffffffffffffffffffffffffffffffffffff163314611a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161256e565b805182511461260f57600080fd5b60005b82518110156128625760005b82828151811061263057612630613c75565b602002602001015151811015612851576002600085848151811061265657612656613c75565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061277457600260008584815181106126b8576126b8613c75565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061270c5761270c613c75565b6020026020010151828151811061272557612725613c75565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055612841565b82828151811061278657612786613c75565b6020026020010151818151811061279f5761279f613c75565b6020026020010151600260008685815181106127bd576127bd613c75565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061281057612810613c75565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61284a81613cd3565b905061261e565b5061285b81613cd3565b9050612612565b505050565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215612958579160200282015b8281111561295857825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906128fe565b50612964929150612c05565b5090565b8280548282559060005260206000209081019282156129b5579160200282015b828111156129b557825180516129a5918491602090910190612c1a565b5091602001919060010190612988565b50612964929150612cb4565b828054828255906000526020600020908101928215612958579160200282015b828111156129585782518255916020019190600101906129e1565b828054828255906000526020600020908101928215612a49579160200282015b82811115612a495782518051612a399184916020909101906129c1565b5091602001919060010190612a1c565b50612964929150612cd1565b82805482825590600052602060002090601f016020900481019282156129585791602002820160005b83821115612aca57835183826101000a81548160ff02191690836003811115612aa957612aa9612f03565b02179055509260200192600101602081600001049283019260010302612a7e565b8015612af75782816101000a81549060ff0219169055600101602081600001049283019260010302612aca565b5050612964929150612c05565b508054612b1090613c22565b6000825580601f10612b20575050565b601f016020900490600052602060002090810190610f2c9190612c05565b5080546000825590600052602060002090810190610f2c9190612c05565b5080546000825590600052602060002090810190610f2c9190612cd1565b50805460008255601f016020900490600052602060002090810190610f2c9190612c05565b604051806101200160405280612bb3612cee565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b5b808211156129645760008155600101612c06565b828054828255906000526020600020906007016008900481019282156129585791602002820160005b83821115612c8457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302612c43565b8015612af75782816101000a81549063ffffffff0219169055600401602081600301049283019260010302612c84565b80821115612964576000612cc88282612d9c565b50600101612cb4565b80821115612964576000612ce58282612b3e565b50600101612cd1565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016000815260200160008152602001612d976040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b508054600082556007016008900490600052602060002090810190610f2c9190612c05565b600060208284031215612dd357600080fd5b5035919050565b60005b83811015612df5578181015183820152602001612ddd565b50506000910152565b60008151808452612e16816020860160208601612dda565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015612e5a57815187529582019590820190600101612e3e565b509495945050505050565b600081518084526020808501945080840160005b83811015612e5a57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612e79565b600082825180855260208086019550808260051b84010181860160005b84811015612ef657601f19868403018952612ee4838351612e2a565b98840198925090830190600101612ec8565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612f69577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c08452612f8260c0850182612e65565b905060208084015185830382870152612f9b8382612e65565b92505060408401518583036040870152612fb58382612e65565b92505060608401518583036060870152612fcf8382612eab565b92505060808401518583036080870152612fe98382612eab565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156130335761301f828651612f32565b93830193600192909201919083019061300c565b509695505050505050565b6000610120825181855261305482860182612dfe565b915050602083015161307e602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516130a6604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526130be8282612e2a565b915050608083015184820360808601526130d88282612e2a565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526131118382612f6d565b9695505050505050565b600061010080835261312f8184018c61303e565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020815260006131846020830184612e2a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156131de576131de61318b565b60405290565b60405160c0810167ffffffffffffffff811182821017156131de576131de61318b565b604051610120810167ffffffffffffffff811182821017156131de576131de61318b565b60405160e0810167ffffffffffffffff811182821017156131de576131de61318b565b604051601f8201601f1916810167ffffffffffffffff811182821017156132775761327761318b565b604052919050565b600067ffffffffffffffff8211156132995761329961318b565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610f2c57600080fd5b80356132d0816132a3565b919050565b600082601f8301126132e657600080fd5b813560206132fb6132f68361327f565b61324e565b82815260059290921b8401810191818101908684111561331a57600080fd5b8286015b84811015613033578035613331816132a3565b835291830191830161331e565b600082601f83011261334f57600080fd5b8135602061335f6132f68361327f565b828152600592831b850182019282820191908785111561337e57600080fd5b8387015b85811015612ef657803567ffffffffffffffff8111156133a25760008081fd5b8801603f81018a136133b45760008081fd5b8581013560406133c66132f68361327f565b82815291851b8301810191888101908d8411156133e35760008081fd5b938201935b8385101561343357843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146134235760008081fd5b82825293890193908901906133e8565b885250505093850193508401613382565b60006020828403121561345657600080fd5b813567ffffffffffffffff8082111561346e57600080fd5b90830190610140828603121561348357600080fd5b61348b6131ba565b82358281111561349a57600080fd5b6134a6878286016132d5565b8252506134b5602084016132c5565b60208201526134c6604084016132c5565b60408201526134d7606084016132c5565b60608201526134e8608084016132c5565b60808201526134f960a084016132c5565b60a082015261350a60c084016132c5565b60c082015261351b60e084016132c5565b60e082015261010061352e8185016132c5565b90820152610120838101358381111561354657600080fd5b6135528882870161333e565b918301919091525095945050505050565b600067ffffffffffffffff82111561357d5761357d61318b565b50601f01601f191660200190565b600082601f83011261359c57600080fd5b81356135aa6132f682613563565b8181528460208386010111156135bf57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126135ed57600080fd5b813560206135fd6132f68361327f565b82815260059290921b8401810191818101908684111561361c57600080fd5b8286015b848110156130335780358352918301918301613620565b600082601f83011261364857600080fd5b813560206136586132f68361327f565b82815260059290921b8401810191818101908684111561367757600080fd5b8286015b8481101561303357803567ffffffffffffffff81111561369b5760008081fd5b6136a98986838b01016135dc565b84525091830191830161367b565b600082601f8301126136c857600080fd5b813560206136d86132f68361327f565b82815260059290921b840181019181810190868411156136f757600080fd5b8286015b84811015613033578035600481106137135760008081fd5b83529183019183016136fb565b600060c0828403121561373257600080fd5b61373a6131e4565b9050813567ffffffffffffffff8082111561375457600080fd5b613760858386016132d5565b8352602084013591508082111561377657600080fd5b613782858386016132d5565b6020840152604084013591508082111561379b57600080fd5b6137a7858386016132d5565b604084015260608401359150808211156137c057600080fd5b6137cc85838601613637565b606084015260808401359150808211156137e557600080fd5b6137f185838601613637565b608084015260a084013591508082111561380a57600080fd5b50613817848285016136b7565b60a08301525092915050565b6000610120828403121561383657600080fd5b61383e613207565b9050813567ffffffffffffffff8082111561385857600080fd5b6138648583860161358b565b8352613872602085016132c5565b6020840152613883604085016132c5565b6040840152606084013591508082111561389c57600080fd5b6138a8858386016135dc565b606084015260808401359150808211156138c157600080fd5b6138cd858386016135dc565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561390657600080fd5b61391286828701613720565b8385015250505092915050565b63ffffffff81168114610f2c57600080fd5b80356132d08161391f565b803580151581146132d057600080fd5b6000610120828403121561395f57600080fd5b613967613207565b9050813567ffffffffffffffff8082111561398157600080fd5b61398d85838601613823565b835260208401359150808211156139a357600080fd5b506139b0848285016135dc565b6020830152506040820135604082015260608201356060820152608082013560808201526139e060a08301613931565b60a08201526139f160c08301613931565b60c0820152613a0260e08301613931565b60e0820152610100613a1581840161393c565b9082015292915050565b60006020808385031215613a3257600080fd5b823567ffffffffffffffff80821115613a4a57600080fd5b818501915085601f830112613a5e57600080fd5b8135613a6c6132f68261327f565b81815260059190911b83018401908481019088831115613a8b57600080fd5b8585015b83811015613ac357803585811115613aa75760008081fd5b613ab58b89838a010161394c565b845250918601918601613a8f565b5098975050505050505050565b60008060408385031215613ae357600080fd5b8235613aee816132a3565b946020939093013593505050565b60006101208251818552613b128286018261303e565b91505060208301518482036020860152613b2c8282612e2a565b91505060408301516040850152606083015160608501526080830151608085015260a0830151613b6460a086018263ffffffff169052565b5060c0830151613b7c60c086018263ffffffff169052565b5060e0830151613b9460e086018263ffffffff169052565b506101009283015115159390920192909252919050565b6020815260006131846020830184613afc565b60008060408385031215613bd157600080fd5b82359150602083013567ffffffffffffffff811115613bef57600080fd5b613bfb8582860161394c565b9150509250929050565b600060208284031215613c1757600080fd5b8135613184816132a3565b600181811c90821680613c3657607f821691505b602082108103613c6f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613d0457613d04613ca4565b5060010190565b80516132d0816132a3565b600060208284031215613d2857600080fd5b8151613184816132a3565b600060208284031215613d4557600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c06060830152613d8d60c0830186612e2a565b8281036080840152613d9f8186612e2a565b915050613daf60a0830184612f32565b979650505050505050565b600082613df0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f82111561286257600081815260208120601f850160051c81016020861015613e1c5750805b601f850160051c820191505b81811015613e3b57828155600101613e28565b505050505050565b815167ffffffffffffffff811115613e5d57613e5d61318b565b613e7181613e6b8454613c22565b84613df5565b602080601f831160018114613ec45760008415613e8e5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555613e3b565b600085815260208120601f198616915b82811015613ef357888601518255948401946001909101908401613ed4565b5085821015613f2f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115613f5257613f52613ca4565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613fcb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613fb9858351613afc565b94509285019290850190600101613f7f565b5092979650505050505050565b600082601f830112613fe957600080fd5b8151613ff76132f682613563565b81815284602083860101111561400c57600080fd5b61401d826020830160208701612dda565b949350505050565b80516132d08161391f565b60006020828403121561404257600080fd5b815167ffffffffffffffff8082111561405a57600080fd5b9083019060e0828603121561406e57600080fd5b61407661322b565b82518281111561408557600080fd5b61409187828601613fd8565b8252506020830151828111156140a657600080fd5b6140b287828601613fd8565b6020830152506140c460408401613d0b565b6040820152606083015160608201526140df60808401614025565b60808201526140f060a08401614025565b60a082015261410160c08401614025565b60c082015295945050505050565b6000815461411c81613c22565b80855260206001838116801561413957600181146141715761419f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b890101955061419f565b866000528260002060005b858110156141975781548a820186015290830190840161417c565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b83811015612e5a578154875295820195600191820191016141c3565b6000815480845260208085019450836000528060002060005b83811015612e5a57815473ffffffffffffffffffffffffffffffffffffffff16875295820195600191820191016141f8565b600082825480855260208086019550808260051b840101856000528160002060005b84811015612ef657601f1986840301895261426783836141aa565b9884019892506001918201910161424c565b60c08252600061428c60c08401836141df565b60016020858303818701526142a3838387016141df565b925085830360408701526142ba83600287016141df565b92506060868403818801526142d2846003880161422a565b93506080878503818901526142ea856004890161422a565b94506005870160a0898703818b015286825461430a818a90815260200190565b600094855260208520995091505b80601f8501101561458757885460ff61433384828416612f32565b614344898501828460081c16612f32565b61435660408501828460101c16612f32565b614367888501828460181c16612f32565b61437787850182848c1c16612f32565b614388858501828460281c16612f32565b61439a60c08501828460301c16612f32565b60e06143ad818601838560381c16612f32565b6143c06101008601838560401c16612f32565b6143d36101208601838560481c16612f32565b6143e66101408601838560501c16612f32565b6143f96101608601838560581c16612f32565b61440b610180860183858c1c16612f32565b61441e6101a08601838560681c16612f32565b6144316101c08601838560701c16612f32565b6144446101e08601838560781c16612f32565b614456610200860183858b1c16612f32565b6144696102208601838560881c16612f32565b61447c6102408601838560901c16612f32565b61448f6102608601838560981c16612f32565b6144a161028086018385891c16612f32565b6144b46102a08601838560a81c16612f32565b6144c76102c08601838560b01c16612f32565b6144da6102e08601838560b81c16612f32565b6144ed6103008601838560c01c16612f32565b6145006103208601838560c81c16612f32565b6145136103408601838560d01c16612f32565b6145266103608601838560d81c16612f32565b61453861038086018385841c16612f32565b5061454c6103a08501828460e81c16612f32565b61455f6103c08501828460f01c16612f32565b506145716103e084018260f81c612f32565b5097870197928601926104009190910190614318565b975497808410156145a85761459f8260ff8b16612f32565b92870192908601905b808410156145c9576145c08260ff8b60081c16612f32565b92870192908601905b808410156145ea576145e18260ff8b60101c16612f32565b92870192908601905b8084101561460b576146028260ff8b60181c16612f32565b92870192908601905b8084101561462b576146228260ff8b8a1c16612f32565b92870192908601905b8084101561464c576146438260ff8b60281c16612f32565b92870192908601905b8084101561466d576146648260ff8b60301c16612f32565b92870192908601905b8084101561468e576146858260ff8b60381c16612f32565b92870192908601905b808410156146af576146a68260ff8b60401c16612f32565b92870192908601905b808410156146d0576146c78260ff8b60481c16612f32565b92870192908601905b808410156146f1576146e88260ff8b60501c16612f32565b92870192908601905b80841015614712576147098260ff8b60581c16612f32565b92870192908601905b80841015614732576147298260ff8b891c16612f32565b92870192908601905b808410156147535761474a8260ff8b60681c16612f32565b92870192908601905b808410156147745761476b8260ff8b60701c16612f32565b92870192908601905b808410156147955761478c8260ff8b60781c16612f32565b92870192908601905b808410156147b5576147ac8260ff8b881c16612f32565b92870192908601905b808410156147d6576147cd8260ff8b60881c16612f32565b92870192908601905b808410156147f7576147ee8260ff8b60901c16612f32565b92870192908601905b808410156148185761480f8260ff8b60981c16612f32565b92870192908601905b808410156148385761482f8260ff8b861c16612f32565b92870192908601905b80841015614859576148508260ff8b60a81c16612f32565b92870192908601905b8084101561487a576148718260ff8b60b01c16612f32565b92870192908601905b8084101561489b576148928260ff8b60b81c16612f32565b92870192908601905b808410156148bc576148b38260ff8b60c01c16612f32565b92870192908601905b808410156148dd576148d48260ff8b60c81c16612f32565b92870192908601905b808410156148fe576148f58260ff8b60d01c16612f32565b92870192908601905b8084101561491f576149168260ff8b60d81c16612f32565b92870192908601905b80841015614940576149378260ff8b60e01c16612f32565b92870192908601905b80841015614961576149588260ff8b60e81c16612f32565b92870192908601905b80841015614982576149798260ff8b60f01c16612f32565b92870192908601905b8084101561499c57614997828a60f81c612f32565b908601905b509a9950505050505050505050565b60006101208084526149bf8185018461410f565b90506149e2600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff908116602086015260028401541660408501528381036060850152614a1f81600385016141aa565b90508381036080850152614a3681600485016141aa565b9050600583015460a0850152600683015460c0850152600783015460e085015283810361010085015261401d8160088501614279565b602081526000610120806020840152614a896101408401856149ab565b601f19848203016040850152614aa281600e87016141aa565b600f860154606086015260108601546080860152601186015460a0860152601286015463ffffffff80821660c0880152602082901c811660e0880152604082901c81166101008801529192509050614b0383860160ff8360601c1615159052565b5094935050505056fea26469706673582212207cc7c26b4144ca57c13ca4fc3507ad3f197c288374014b3963485f0db0a95ff464736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
