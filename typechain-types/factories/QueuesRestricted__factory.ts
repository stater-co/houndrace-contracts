/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "deleteQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162005206380380620052068339810160408190526200003991620003de565b80620000453362000142565b600180558051600380546001600160a01b03199081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b80549093169416939093179055610120830151805184936200012692600c9291019062000251565b5050506101208101516200013a9062000192565b505062000541565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024d57600e6000838381518110620001b857620001b862000503565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e600084848151811062000208576200020862000503565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002458162000519565b905062000195565b5050565b828054828255906000526020600020908101928215620002a9579160200282015b82811115620002a957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000272565b50620002b7929150620002bb565b5090565b5b80821115620002b75760008155600101620002bc565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156200030e576200030e620002d2565b60405290565b80516001600160a01b03811681146200032c57600080fd5b919050565b600082601f8301126200034357600080fd5b815160206001600160401b0380831115620003625762000362620002d2565b8260051b604051601f19603f830116810181811084821117156200038a576200038a620002d2565b604052938452858101830193838101925087851115620003a957600080fd5b83870191505b84821015620003d357620003c38262000314565b83529183019190830190620003af565b979650505050505050565b600060208284031215620003f157600080fd5b81516001600160401b03808211156200040957600080fd5b9083019061014082860312156200041f57600080fd5b62000429620002e8565b620004348362000314565b8152620004446020840162000314565b6020820152620004576040840162000314565b60408201526200046a6060840162000314565b60608201526200047d6080840162000314565b60808201526200049060a0840162000314565b60a0820152620004a360c0840162000314565b60c0820152620004b660e0840162000314565b60e0820152610100620004cb81850162000314565b908201526101208381015183811115620004e457600080fd5b620004f28882870162000331565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053a57634e487b7160e01b600052601160045260246000fd5b5060010190565b614cb580620005516000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063ac766c4d116100b2578063ddf0b00911610081578063e200c85711610066578063e200c85714610336578063e3c5fc0414610349578063f2fde38b1461039357600080fd5b8063ddf0b00914610303578063e11523431461032357600080fd5b8063ac766c4d146101ee578063af640d0f14610201578063d63a8e1114610218578063d8de65871461024b57600080fd5b8063451383f2116100ee578063451383f2146101985780635fcee296146101ab578063715018a6146101be5780638da5cb5b146101c657600080fd5b80630f7921ed1461012057806319e3e5921461015057806321204948146101655780632df310b414610185575b600080fd5b61013361012e3660046128f8565b6103a6565b604051610147989796959493929190612c2b565b60405180910390f35b61016361015e3660046128f8565b6108c8565b005b6101786101733660046128f8565b610cc5565b6040516101479190612c81565b610163610193366004613373565b610d2a565b6101636101a6366004613424565b611135565b6101636101b93660046128f8565b611252565b61016361176d565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610147565b6101636101fc366004613530565b611781565b61020a60025481565b604051908152602001610147565b61023b610226366004613577565b600e6020526000908152604090205460ff1681565b6040519015158152602001610147565b600354600454600554600654600754600854600954600a54600b5461029c9873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610147565b6103166103113660046128f8565b611af1565b6040516101479190613692565b6101636103313660046128f8565b6120c8565b6101786103443660046128f8565b612200565b61037e6103573660046128f8565b6000908152600d602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610147565b6101636103a1366004613577565b612263565b600d60205280600052604060002060009150905080600001604051806101200160405290816000820180546103da906136a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610406906136a5565b80156104535780601f1061042857610100808354040283529160200191610453565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104e157602002820191906000526020600020905b8154815260200190600101908083116104cd575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561053957602002820191906000526020600020905b815481526020019060010190808311610525575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156105d657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105ab575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561064557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161061a575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156106b457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610689575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561074e5760008481526020908190208301805460408051828502810185019091528181529283018282801561073a57602002820191906000526020600020905b815481526020019060010190808311610726575b5050505050815260200190600101906106e2565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107e7576000848152602090819020830180546040805182850281018501909152818152928301828280156107d357602002820191906000526020600020905b8154815260200190600101908083116107bf575b50505050508152602001906001019061077b565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561086e57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561084c5761084c612a3a565b81526020600192830181810494850194909303909202910180841161082d5790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b6000818152600d60205260408082206013018054600160ff19909116811790915581518181528083019092528160200160208202803683375050506000838152600d602052604081206006015482519293509183919061092a5761092a6136f8565b6020908102919091018101919091526007546000848152600d90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916109a39160040190815260200190565b602060405180830381865afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e49190613732565b905060005b6000848152600d6020526040902060030154811015610c94576000848152600d60205260408120600301805483908110610a2557610a256136f8565b90600052602060002001541115610c84576008546000858152600d60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610a7c57610a7c6136f8565b9060005260206000200154866040518363ffffffff1660e01b8152600401610aae929190918252602082015260400190565b6020604051808303816000875af1158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af1919061374f565b600003610afd57600080fd5b6008546000858152600d602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110610b4357610b436136f8565b90600052602060002001546040518263ffffffff1660e01b8152600401610b6c91815260200190565b602060405180830381865afa158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad9190613732565b60095490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615610be0576000610bf3565b6000878152600d60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615610c2c576002610c2f565b60035b6040518863ffffffff1660e01b8152600401610c5096959493929190613768565b6000604051808303818588803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b5050505050505b610c8d81613805565b90506109e9565b5060405183907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a2505050565b6000818152600d6020908152604091829020600401805483518184028101840190945280845260609392830182828015610d1e57602002820191906000526020600020905b815481526020019060010190808311610d0a575b50505050509050919050565b6000805b82518110156110db57600754835173ffffffffffffffffffffffffffffffffffffffff9091169063854071ae90859084908110610d6d57610d6d6136f8565b60200260200101516000015160a001516040518263ffffffff1660e01b8152600401610d9b91815260200190565b602060405180830381865afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc919061374f565b9150828181518110610df057610df06136f8565b60200260200101516080015163ffffffff16838281518110610e1457610e146136f8565b60200260200101516000015160c00151610e2e919061383d565b8210610e3957600080fd5b828181518110610e4b57610e4b6136f8565b6020908102919091018101516002546000908152600d90925260409091208151805182908190610e7b90826138c7565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491909316911617905560608301518051610ef392600385019201906124e9565b5060808201518051610f0f9160048401916020909101906124e9565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610f4c91839160200190612534565b506020828101518051610f659260018501920190612534565b5060408201518051610f81916002840191602090910190612534565b5060608201518051610f9d9160038401916020909101906125ae565b5060808201518051610fb99160048401916020909101906125ae565b5060a08201518051610fd5916005840191602090910190612607565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015160c088015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560e0840151805161109a9350601285019291909101906126b6565b5061010091909101516013909101805460ff1916911515919091179055600280546000906110c790613805565b909155506110d481613805565b9050610d2e565b5060016002546110eb91906139c3565b82516002546110fa91906139c3565b7fbea7d9683fcc7bdd75bea1b30139630f62e89f6644e114633d239da671a558b28460405161112991906139dc565b60405180910390a35050565b61113d612317565b8051600380547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b805490931694169390931790556101208301518051849361123d92600c92910190612534565b5090505061124f816101200151612398565b50565b604080516001808252818301909252600091602080830190803683375050506000838152600d6020526040812060060154825192935091839190611298576112986136f8565b6020908102919091018101919091526007546000848152600d90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916113119160040190815260200190565b602060405180830381865afa15801561132e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113529190613732565b905060005b6000848152600d6020526040902060030154811015611602576000848152600d60205260408120600301805483908110611393576113936136f8565b906000526020600020015411156115f2576008546000858152600d60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106113ea576113ea6136f8565b9060005260206000200154866040518363ffffffff1660e01b815260040161141c929190918252602082015260400190565b6020604051808303816000875af115801561143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145f919061374f565b60000361146b57600080fd5b6008546000858152600d602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf9190859081106114b1576114b16136f8565b90600052602060002001546040518263ffffffff1660e01b81526004016114da91815260200190565b602060405180830381865afa1580156114f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151b9190613732565b60095490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c29085161561154e576000611561565b6000878152600d60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff83161561159a57600261159d565b60035b6040518863ffffffff1660e01b81526004016115be96959493929190613768565b6000604051808303818588803b1580156115d757600080fd5b505af11580156115eb573d6000803e3d6000fd5b5050505050505b6115fb81613805565b9050611357565b506000838152600d6020526040812090818161161e828261272b565b6001820180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169091556002830180549091169055611664600383016000612765565b611672600483016000612765565b600060058301819055600683018190556007830181905560088301906116988282612765565b6116a6600183016000612765565b6116b4600283016000612765565b6116c2600383016000612783565b6116d0600483016000612783565b6116de6005830160006127a1565b50506000600e8501819055600f8501819055601085018190556011850180547fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016905561173192506012850191506127a1565b50601301805460ff1916905560405183907f69e8bd1e5b8aab137b7e121055e1416a466fd9af5ca24bf7bfafd1d89ec5cb2190600090a2505050565b611775612317565b61177f6000612474565b565b600754815160a001516040517fb74a5fbe000000000000000000000000000000000000000000000000000000008152600481019190915260009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa1580156117f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118209190810190613ab4565b825160c001519091506118359060029061383d565b81606001511061184457600080fd5b6000838152600d6020526040902082518051849291908290819061186890826138c7565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516118e092600385019201906124e9565b50608082015180516118fc9160048401916020909101906124e9565b5060a0820151600582015560c0820151600682015560e0820151600782015561010082015180518051600884019161193991839160200190612534565b5060208281015180516119529260018501920190612534565b506040820151805161196e916002840191602090910190612534565b506060820151805161198a9160038401916020909101906125ae565b50608082015180516119a69160048401916020909101906125ae565b5060a082015180516119c2916005840191602090910190612607565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015160c088015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560e08401518051611a879350601285019291909101906126b6565b5061010091909101516013909101805460ff19169115159190911790556000838152600d602052604090819020905184917f967e444eb727b96d4ed3f41ee3feac8d52e001e1b0f3b5da735b533e946263d091611ae49190614bd6565b60405180910390a2505050565b611af96127c6565b6000828152600d6020526040908190208151610240810190925280548290610120820190839082908290611b2c906136a5565b80601f0160208091040260200160405190810160405280929190818152602001828054611b58906136a5565b8015611ba55780601f10611b7a57610100808354040283529160200191611ba5565b820191906000526020600020905b815481529060010190602001808311611b8857829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015611c3357602002820191906000526020600020905b815481526020019060010190808311611c1f575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611c8b57602002820191906000526020600020905b815481526020019060010190808311611c77575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015611d2857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611cfd575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d9757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611d6c575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611e0657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611ddb575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ea057600084815260209081902083018054604080518285028101850190915281815292830182828015611e8c57602002820191906000526020600020905b815481526020019060010190808311611e78575b505050505081526020019060010190611e34565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611f3957600084815260209081902083018054604080518285028101850190915281815292830182828015611f2557602002820191906000526020600020905b815481526020019060010190808311611f11575b505050505081526020019060010190611ecd565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611fc057602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611f9e57611f9e612a3a565b815260206001928301818104948501949093039092029101808411611f7f5790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e09094019391929091908301828280156120a857602002820191906000526020600020906000905b82829054906101000a900460ff16600681111561208657612086612a3a565b8152602060019283018181049485019490930390920291018084116120675790505b50505091835250506013919091015460ff16151560209091015292915050565b6120d0612317565b47811115612165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f1935050505061124f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f207769746864726177000000000000604482015260640161215c565b6000818152600d6020908152604091829020600301805483518184028101840190945280845260609392830182828015610d1e5760200282019190600052602060002090815481526020019060010190808311610d0a5750505050509050919050565b61226b612317565b73ffffffffffffffffffffffffffffffffffffffff811661230e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161215c565b61124f81612474565b60005473ffffffffffffffffffffffffffffffffffffffff16331461177f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161215c565b60005b815181101561247057600e60008383815181106123ba576123ba6136f8565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e6000848481518110612421576124216136f8565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff168252810191909152604001600020805460ff191691151591909117905561246981613805565b905061239b565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215612524579160200282015b82811115612524578251825591602001919060010190612509565b50612530929150612818565b5090565b828054828255906000526020600020908101928215612524579160200282015b8281111561252457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190612554565b8280548282559060005260206000209081019282156125fb579160200282015b828111156125fb57825180516125eb9184916020909101906124e9565b50916020019190600101906125ce565b5061253092915061282d565b82805482825590600052602060002090601f016020900481019282156125245791602002820160005b8382111561267c57835183826101000a81548160ff0219169083600381111561265b5761265b612a3a565b02179055509260200192600101602081600001049283019260010302612630565b80156126a95782816101000a81549060ff021916905560010160208160000104928301926001030261267c565b5050612530929150612818565b82805482825590600052602060002090601f016020900481019282156125245791602002820160005b8382111561267c57835183826101000a81548160ff0219169083600681111561270a5761270a612a3a565b021790555092602001926001016020816000010492830192600103026126df565b508054612737906136a5565b6000825580601f10612747575050565b601f01602090049060005260206000209081019061124f9190612818565b508054600082559060005260206000209081019061124f9190612818565b508054600082559060005260206000209081019061124f919061282d565b50805460008255601f01602090049060005260206000209081019061124f9190612818565b6040518061012001604052806127da61284a565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b808211156125305760008155600101612819565b808211156125305760006128418282612765565b5060010161282d565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016128f36040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561290a57600080fd5b5035919050565b60005b8381101561292c578181015183820152602001612914565b50506000910152565b6000815180845261294d816020860160208601612911565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561299157815187529582019590820190600101612975565b509495945050505050565b600081518084526020808501945080840160005b8381101561299157815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016129b0565b600082825180855260208086019550808260051b84010181860160005b84811015612a2d57601f19868403018952612a1b838351612961565b988401989250908301906001016129ff565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612a7957612a79612a3a565b9052565b6000815160c08452612a9260c085018261299c565b905060208084015185830382870152612aab838261299c565b92505060408401518583036040870152612ac5838261299c565b92505060608401518583036060870152612adf83826129e2565b92505060808401518583036080870152612af983826129e2565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015612b4357612b2f828651612a69565b938301936001929092019190830190612b1c565b509695505050505050565b60006101208251818552612b6482860182612935565b9150506020830151612b8e602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612bb6604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612bce8282612961565b91505060808301518482036080860152612be88282612961565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612c218382612a7d565b9695505050505050565b6000610100808352612c3f8184018c612b4e565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b602081526000612c946020830184612961565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612ced57612ced612c9b565b60405290565b604051610120810167ffffffffffffffff81118282101715612ced57612ced612c9b565b604051610140810167ffffffffffffffff81118282101715612ced57612ced612c9b565b60405160e0810167ffffffffffffffff81118282101715612ced57612ced612c9b565b604051601f8201601f1916810167ffffffffffffffff81118282101715612d8757612d87612c9b565b604052919050565b600067ffffffffffffffff821115612da957612da9612c9b565b5060051b60200190565b600067ffffffffffffffff821115612dcd57612dcd612c9b565b50601f01601f191660200190565b600082601f830112612dec57600080fd5b8135612dff612dfa82612db3565b612d5e565b818152846020838601011115612e1457600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461124f57600080fd5b8035612e5e81612e31565b919050565b600082601f830112612e7457600080fd5b81356020612e84612dfa83612d8f565b82815260059290921b84018101918181019086841115612ea357600080fd5b8286015b84811015612b435780358352918301918301612ea7565b600082601f830112612ecf57600080fd5b81356020612edf612dfa83612d8f565b82815260059290921b84018101918181019086841115612efe57600080fd5b8286015b84811015612b43578035612f1581612e31565b8352918301918301612f02565b600082601f830112612f3357600080fd5b81356020612f43612dfa83612d8f565b82815260059290921b84018101918181019086841115612f6257600080fd5b8286015b84811015612b4357803567ffffffffffffffff811115612f865760008081fd5b612f948986838b0101612e63565b845250918301918301612f66565b600082601f830112612fb357600080fd5b81356020612fc3612dfa83612d8f565b82815260059290921b84018101918181019086841115612fe257600080fd5b8286015b84811015612b4357803560048110612ffe5760008081fd5b8352918301918301612fe6565b600060c0828403121561301d57600080fd5b613025612cca565b9050813567ffffffffffffffff8082111561303f57600080fd5b61304b85838601612ebe565b8352602084013591508082111561306157600080fd5b61306d85838601612ebe565b6020840152604084013591508082111561308657600080fd5b61309285838601612ebe565b604084015260608401359150808211156130ab57600080fd5b6130b785838601612f22565b606084015260808401359150808211156130d057600080fd5b6130dc85838601612f22565b608084015260a08401359150808211156130f557600080fd5b5061310284828501612fa2565b60a08301525092915050565b6000610120828403121561312157600080fd5b613129612cf3565b9050813567ffffffffffffffff8082111561314357600080fd5b61314f85838601612ddb565b835261315d60208501612e53565b602084015261316e60408501612e53565b6040840152606084013591508082111561318757600080fd5b61319385838601612e63565b606084015260808401359150808211156131ac57600080fd5b6131b885838601612e63565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156131f157600080fd5b6131fd8682870161300b565b8385015250505092915050565b63ffffffff8116811461124f57600080fd5b8035612e5e8161320a565b600082601f83011261323857600080fd5b81356020613248612dfa83612d8f565b82815260059290921b8401810191818101908684111561326757600080fd5b8286015b84811015612b43578035600781106132835760008081fd5b835291830191830161326b565b80358015158114612e5e57600080fd5b600061012082840312156132b357600080fd5b6132bb612cf3565b9050813567ffffffffffffffff808211156132d557600080fd5b6132e18583860161310e565b835260208401356020840152604084013560408401526060840135606084015261330d6080850161321c565b608084015261331e60a0850161321c565b60a084015261332f60c0850161321c565b60c084015260e084013591508082111561334857600080fd5b5061335584828501613227565b60e083015250610100613369818401613290565b9082015292915050565b6000602080838503121561338657600080fd5b823567ffffffffffffffff8082111561339e57600080fd5b818501915085601f8301126133b257600080fd5b81356133c0612dfa82612d8f565b81815260059190911b830184019084810190888311156133df57600080fd5b8585015b83811015613417578035858111156133fb5760008081fd5b6134098b89838a01016132a0565b8452509186019186016133e3565b5098975050505050505050565b60006020828403121561343657600080fd5b813567ffffffffffffffff8082111561344e57600080fd5b90830190610140828603121561346357600080fd5b61346b612d17565b61347483612e53565b815261348260208401612e53565b602082015261349360408401612e53565b60408201526134a460608401612e53565b60608201526134b560808401612e53565b60808201526134c660a08401612e53565b60a08201526134d760c08401612e53565b60c08201526134e860e08401612e53565b60e08201526101006134fb818501612e53565b90820152610120838101358381111561351357600080fd5b61351f88828701612ebe565b918301919091525095945050505050565b6000806040838503121561354357600080fd5b82359150602083013567ffffffffffffffff81111561356157600080fd5b61356d858286016132a0565b9150509250929050565b60006020828403121561358957600080fd5b8135612c9481612e31565b60078110612a7957612a79612a3a565b600081518084526020808501945080840160005b83811015612991576135cb878351613594565b95820195908201906001016135b8565b600061012082518185526135f182860182612b4e565b9150506020830151602085015260408301516040850152606083015160608501526080830151613629608086018263ffffffff169052565b5060a083015161364160a086018263ffffffff169052565b5060c083015161365960c086018263ffffffff169052565b5060e083015184820360e086015261367182826135a4565b915050610100808401516136888287018215159052565b5090949350505050565b602081526000612c9460208301846135db565b600181811c908216806136b957607f821691505b6020821081036136f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051612e5e81612e31565b60006020828403121561374457600080fd5b8151612c9481612e31565b60006020828403121561376157600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c060608301526137a960c0830186612961565b82810360808401526137bb8186612961565b9150506137cb60a0830184612a69565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613836576138366137d6565b5060010190565b600082613873577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f8211156138c257600081815260208120601f850160051c8101602086101561389f5750805b601f850160051c820191505b818110156138be578281556001016138ab565b5050505b505050565b815167ffffffffffffffff8111156138e1576138e1612c9b565b6138f5816138ef84546136a5565b84613878565b602080601f83116001811461394857600084156139125750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556138be565b600085815260208120601f198616915b8281101561397757888601518255948401946001909101908401613958565b50858210156139b357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156139d6576139d66137d6565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a4f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613a3d8583516135db565b94509285019290850190600101613a03565b5092979650505050505050565b600082601f830112613a6d57600080fd5b8151613a7b612dfa82612db3565b818152846020838601011115613a9057600080fd5b613aa1826020830160208701612911565b949350505050565b8051612e5e8161320a565b600060208284031215613ac657600080fd5b815167ffffffffffffffff80821115613ade57600080fd5b9083019060e08286031215613af257600080fd5b613afa612d3b565b825182811115613b0957600080fd5b613b1587828601613a5c565b825250602083015182811115613b2a57600080fd5b613b3687828601613a5c565b602083015250613b4860408401613727565b604082015260608301516060820152613b6360808401613aa9565b6080820152613b7460a08401613aa9565b60a0820152613b8560c08401613aa9565b60c082015295945050505050565b60008154613ba0816136a5565b808552602060018381168015613bbd5760018114613bd757613c05565b60ff198516838901528284151560051b8901019550613c05565b866000528260002060005b85811015613bfd5781548a8201860152908301908401613be2565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b8381101561299157815487529582019560019182019101613c29565b6000815480845260208085019450836000528060002060005b8381101561299157815473ffffffffffffffffffffffffffffffffffffffff1687529582019560019182019101613c5e565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015613cdc578284038952613cca8483613c10565b98850198935060019182019101613cb3565b5091979650505050505050565b60c082526000613cfc60c0840183613c45565b6001602085830381870152613d1383838701613c45565b92508583036040870152613d2a8360028701613c45565b9250606086840381880152613d428460038801613c90565b9350608087850381890152613d5a8560048901613c90565b94506005870160a0898703818b0152868254613d7a818a90815260200190565b600094855260208520995091505b80601f85011015613ff757885460ff613da384828416612a69565b613db4898501828460081c16612a69565b613dc660408501828460101c16612a69565b613dd7888501828460181c16612a69565b613de787850182848c1c16612a69565b613df8858501828460281c16612a69565b613e0a60c08501828460301c16612a69565b60e0613e1d818601838560381c16612a69565b613e306101008601838560401c16612a69565b613e436101208601838560481c16612a69565b613e566101408601838560501c16612a69565b613e696101608601838560581c16612a69565b613e7b610180860183858c1c16612a69565b613e8e6101a08601838560681c16612a69565b613ea16101c08601838560701c16612a69565b613eb46101e08601838560781c16612a69565b613ec6610200860183858b1c16612a69565b613ed96102208601838560881c16612a69565b613eec6102408601838560901c16612a69565b613eff6102608601838560981c16612a69565b613f1161028086018385891c16612a69565b613f246102a08601838560a81c16612a69565b613f376102c08601838560b01c16612a69565b613f4a6102e08601838560b81c16612a69565b613f5d6103008601838560c01c16612a69565b613f706103208601838560c81c16612a69565b613f836103408601838560d01c16612a69565b613f966103608601838560d81c16612a69565b613fa861038086018385841c16612a69565b50613fbc6103a08501828460e81c16612a69565b613fcf6103c08501828460f01c16612a69565b50613fe16103e084018260f81c612a69565b5097870197928601926104009190910190613d88565b975497808410156140185761400f8260ff8b16612a69565b92870192908601905b80841015614039576140308260ff8b60081c16612a69565b92870192908601905b8084101561405a576140518260ff8b60101c16612a69565b92870192908601905b8084101561407b576140728260ff8b60181c16612a69565b92870192908601905b8084101561409b576140928260ff8b8a1c16612a69565b92870192908601905b808410156140bc576140b38260ff8b60281c16612a69565b92870192908601905b808410156140dd576140d48260ff8b60301c16612a69565b92870192908601905b808410156140fe576140f58260ff8b60381c16612a69565b92870192908601905b8084101561411f576141168260ff8b60401c16612a69565b92870192908601905b80841015614140576141378260ff8b60481c16612a69565b92870192908601905b80841015614161576141588260ff8b60501c16612a69565b92870192908601905b80841015614182576141798260ff8b60581c16612a69565b92870192908601905b808410156141a2576141998260ff8b891c16612a69565b92870192908601905b808410156141c3576141ba8260ff8b60681c16612a69565b92870192908601905b808410156141e4576141db8260ff8b60701c16612a69565b92870192908601905b80841015614205576141fc8260ff8b60781c16612a69565b92870192908601905b808410156142255761421c8260ff8b881c16612a69565b92870192908601905b808410156142465761423d8260ff8b60881c16612a69565b92870192908601905b808410156142675761425e8260ff8b60901c16612a69565b92870192908601905b808410156142885761427f8260ff8b60981c16612a69565b92870192908601905b808410156142a85761429f8260ff8b861c16612a69565b92870192908601905b808410156142c9576142c08260ff8b60a81c16612a69565b92870192908601905b808410156142ea576142e18260ff8b60b01c16612a69565b92870192908601905b8084101561430b576143028260ff8b60b81c16612a69565b92870192908601905b8084101561432c576143238260ff8b60c01c16612a69565b92870192908601905b8084101561434d576143448260ff8b60c81c16612a69565b92870192908601905b8084101561436e576143658260ff8b60d01c16612a69565b92870192908601905b8084101561438f576143868260ff8b60d81c16612a69565b92870192908601905b808410156143b0576143a78260ff8b60e01c16612a69565b92870192908601905b808410156143d1576143c88260ff8b60e81c16612a69565b92870192908601905b808410156143f2576143e98260ff8b60f01c16612a69565b92870192908601905b8084101561440c57614407828a60f81c612a69565b908601905b509a9950505050505050505050565b600061012080845261442f81850184613b93565b9050614452600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff90811660208601526002840154166040850152838103606085015261448f8160038501613c10565b905083810360808501526144a68160048501613c10565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152613aa18160088501613ce9565b805480835260008281526020808220940193909190825b82601f8201101561477357815460ff61450e88828416613594565b6020614521818a01838560081c16613594565b6040614534818b01848660101c16613594565b6060614547818c01858760181c16613594565b6080614559818d018688871c16613594565b60a0935061456e848d01868860281c16613594565b60c0614581818e01878960301c16613594565b60e0614594818f01888a60381c16613594565b6145a66101008f01888a881c16613594565b6145b96101208f01888a60481c16613594565b6145cc6101408f01888a60501c16613594565b6145df6101608f01888a60581c16613594565b6145f16101808f01888a871c16613594565b6146046101a08f01888a60681c16613594565b6146176101c08f01888a60701c16613594565b61462a6101e08f01888a60781c16613594565b61463c6102008f01888a861c16613594565b61464f6102208f01888a60881c16613594565b6146626102408f01888a60901c16613594565b6146756102608f01888a60981c16613594565b6146876102808f01888a891c16613594565b61469a6102a08f01888a60a81c16613594565b6146ad6102c08f01888a60b01c16613594565b6146c06102e08f01888a60b81c16613594565b6146d26103008f01888a851c16613594565b6146e56103208f01888a60c81c16613594565b6146f86103408f01888a60d01c16613594565b61470b6103608f01888a60d81c16613594565b61471d6103808f01888a841c16613594565b5050505050506147366103a08901828460e81c16613594565b6147496103c08901828460f01c16613594565b5061475b6103e088018260f81c613594565b506104009590950194600191909101906020016144f3565b905490828110156147965761478b8660ff8416613594565b602095909501946001015b828110156147b9576147ae8660ff8460081c16613594565b602095909501946001015b828110156147dc576147d18660ff8460101c16613594565b602095909501946001015b828110156147ff576147f48660ff8460181c16613594565b602095909501946001015b82811015614822576148178660ff8460201c16613594565b602095909501946001015b828110156148455761483a8660ff8460281c16613594565b602095909501946001015b828110156148685761485d8660ff8460301c16613594565b602095909501946001015b8281101561488b576148808660ff8460381c16613594565b602095909501946001015b828110156148ae576148a38660ff8460401c16613594565b602095909501946001015b828110156148d1576148c68660ff8460481c16613594565b602095909501946001015b828110156148f4576148e98660ff8460501c16613594565b602095909501946001015b828110156149175761490c8660ff8460581c16613594565b602095909501946001015b8281101561493a5761492f8660ff8460601c16613594565b602095909501946001015b8281101561495d576149528660ff8460681c16613594565b602095909501946001015b82811015614980576149758660ff8460701c16613594565b602095909501946001015b828110156149a3576149988660ff8460781c16613594565b602095909501946001015b828110156149c6576149bb8660ff8460801c16613594565b602095909501946001015b828110156149e9576149de8660ff8460881c16613594565b602095909501946001015b82811015614a0c57614a018660ff8460901c16613594565b602095909501946001015b82811015614a2f57614a248660ff8460981c16613594565b602095909501946001015b82811015614a5257614a478660ff8460a01c16613594565b602095909501946001015b82811015614a7557614a6a8660ff8460a81c16613594565b602095909501946001015b82811015614a9857614a8d8660ff8460b01c16613594565b602095909501946001015b82811015614abb57614ab08660ff8460b81c16613594565b602095909501946001015b82811015614ade57614ad38660ff8460c01c16613594565b602095909501946001015b82811015614b0157614af68660ff8460c81c16613594565b602095909501946001015b82811015614b2457614b198660ff8460d01c16613594565b602095909501946001015b82811015614b4757614b3c8660ff8460d81c16613594565b602095909501946001015b82811015614b6a57614b5f8660ff8460e01c16613594565b602095909501946001015b82811015614b8d57614b828660ff8460e81c16613594565b602095909501946001015b82811015614bb057614ba58660ff8460f01c16613594565b602095909501946001015b82811015614bcc57614bc5868360f81c613594565b6020860195505b5093949350505050565b602081526000610120806020840152614bf361014084018561441b565b600e8501546040850152600f850154606085015260108501546080850152601185015463ffffffff80821660a0870152602082901c811660c0870152614c4660e08701828460401c1663ffffffff169052565b5050601f1984820301610100850152614c6281601287016144dc565b9050614c72601386015460ff1690565b151591909301525091905056fea2646970667358221220555a25d2910799db767f615fdbf575a5219ab58be06e36fc257e7a346f2b573d64736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
