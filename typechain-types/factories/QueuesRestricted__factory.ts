/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "deleteQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b5060405162004c6b38038062004c6b83398101604081905262000039916200052d565b80516101208201516001600055829190620000543362000203565b80518251146200006357600080fd5b60005b8251811015620000fd5781818151811062000085576200008562000666565b602002602001015160026000858481518110620000a657620000a662000666565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f5906200067c565b905062000066565b5050815180518392506004916200011a9183916020019062000255565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051620001f79260098501920190620002bf565b509050505050620006a4565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215620002ad579160200282015b82811115620002ad57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000276565b50620002bb92915062000368565b5090565b82805482825590600052602060002090600701600890048101928215620002ad5791602002820160005b838211156200032c57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002e9565b80156200035e5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200032c565b5050620002bb9291505b5b80821115620002bb576000815560010162000369565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003bb57620003bb6200037f565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ec57620003ec6200037f565b604052919050565b60006001600160401b038211156200041057620004106200037f565b5060051b60200190565b80516001600160a01b03811681146200043257600080fd5b919050565b600082601f8301126200044957600080fd5b81516020620004626200045c83620003f4565b620003c1565b82815260059290921b840181019181810190868411156200048257600080fd5b8286015b84811015620004a8576200049a816200041a565b835291830191830162000486565b509695505050505050565b600082601f830112620004c557600080fd5b81516020620004d86200045c83620003f4565b82815260059290921b84018101918181019086841115620004f857600080fd5b8286015b84811015620004a85780516001600160e01b0319811681146200051f5760008081fd5b8352918301918301620004fc565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b9083019061014082860312156200056e57600080fd5b6200057862000395565b8251828111156200058857600080fd5b620005968782860162000437565b825250620005a7602084016200041a565b6020820152620005ba604084016200041a565b6040820152620005cd606084016200041a565b6060820152620005e0608084016200041a565b6080820152620005f360a084016200041a565b60a08201526200060660c084016200041a565b60c08201526200061960e084016200041a565b60e08201526101006200062e8185016200041a565b9082015261012083810151838111156200064757600080fd5b6200065588828701620004b3565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200069d57634e487b7160e01b600052601160045260246000fd5b5060010190565b6145b780620006b46000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063af640d0f11610097578063e3c5fc0411610066578063e3c5fc04146102a9578063e7c4d374146102f3578063f2fde38b14610306578063ffd9f5521461031957600080fd5b8063af640d0f146101b5578063d8de6587146101cc578063ddf0b00914610276578063e200c8571461029657600080fd5b806330f9a0f0116100d357806330f9a0f01461015f5780635fcee29614610172578063715018a6146101855780638da5cb5b1461018d57600080fd5b80630f7921ed146100fa57806319e3e5921461012a578063212049481461013f575b600080fd5b61010d6101083660046128d4565b61032c565b604051610121989796959493929190612c2e565b60405180910390f35b61013d6101383660046128d4565b610855565b005b61015261014d3660046128d4565b610cbd565b6040516101219190612c84565b61013d61016d36600461330d565b610d22565b61013d6101803660046128d4565b611198565b61013d6116eb565b60015460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610121565b6101be60035481565b604051908152602001610121565b600554600654600754600854600954600a54600b54600c546102179773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e082015261010001610121565b6102896102843660046128d4565b6116ff565b604051610121919061346d565b6101526102a43660046128d4565b611ca9565b6102de6102b73660046128d4565b6000908152600e602052604090206012015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610121565b61013d610301366004613480565b611d0c565b61013d6103143660046134c7565b6120e5565b61013d61032736600461356e565b6121a1565b600e60205280600052604060002060009150905080600001604051806101200160405290816000820180546103609061368d565b80601f016020809104026020016040519081016040528092919081815260200182805461038c9061368d565b80156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561046757602002820191906000526020600020905b815481526020019060010190808311610453575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104bf57602002820191906000526020600020905b8154815260200190600101908083116104ab575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561055c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610531575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105cb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105a0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561063a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161060f575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106d4576000848152602090819020830180546040805182850281018501909152818152928301828280156106c057602002820191906000526020600020905b8154815260200190600101908083116106ac575b505050505081526020019060010190610668565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561076d5760008481526020908190208301805460408051828502810185019091528181529283018282801561075957602002820191906000526020600020905b815481526020019060010190808311610745575b505050505081526020019060010190610701565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156107f457602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107d2576107d2612a16565b8152602060019283018181049485019490930390920291018084116107b35790505b50505091909252505050905250600f820154601083015460118401546012909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b3360009081526002602052604081205460e01b7fffffffff000000000000000000000000000000000000000000000000000000009081169135161461089957600080fd5b6000818152600e6020908152604080832060120180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff166c01000000000000000000000000179055805160018082528183019092529182810190803683375050506000838152600e6020526040812060060154825192935091839190610922576109226136e0565b6020908102919091018101919091526009546000848152600e90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a9161099b9160040190815260200190565b602060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc919061371a565b905060005b6000848152600e6020526040902060030154811015610c8c576000848152600e60205260408120600301805483908110610a1d57610a1d6136e0565b90600052602060002001541115610c7c57600a546000858152600e60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610a7457610a746136e0565b9060005260206000200154866040518363ffffffff1660e01b8152600401610aa6929190918252602082015260400190565b6020604051808303816000875af1158015610ac5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae99190613737565b600003610af557600080fd5b600a546000858152600e602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110610b3b57610b3b6136e0565b90600052602060002001546040518263ffffffff1660e01b8152600401610b6491815260200190565b602060405180830381865afa158015610b81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba5919061371a565b600b5490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615610bd8576000610beb565b6000878152600e60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615610c24576002610c27565b60035b6040518863ffffffff1660e01b8152600401610c4896959493929190613750565b6000604051808303818588803b158015610c6157600080fd5b505af1158015610c75573d6000803e3d6000fd5b5050505050505b610c85816137ed565b90506109e1565b5060405183907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a2505050565b6000818152600e6020908152604091829020600401805483518184028101840190945280845260609392830182828015610d1657602002820191906000526020600020905b815481526020019060010190808311610d02575b50505050509050919050565b3360009081526002602052604081205460e01b7fffffffff0000000000000000000000000000000000000000000000000000000090811691351614610d6657600080fd5b6000805b825181101561113e57600954835173ffffffffffffffffffffffffffffffffffffffff9091169063854071ae90859084908110610da957610da96136e0565b60200260200101516000015160a001516040518263ffffffff1660e01b8152600401610dd791815260200190565b602060405180830381865afa158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e189190613737565b9150828181518110610e2c57610e2c6136e0565b602002602001015160a0015163ffffffff16838281518110610e5057610e506136e0565b60200260200101516000015160c00151610e6a9190613825565b8210610e7557600080fd5b828181518110610e8757610e876136e0565b6020908102919091018101516003546000908152600e90925260409091208151805182908190610eb790826138ae565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491909316911617905560608301518051610f2f926003850192019061248c565b5060808201518051610f4b91600484019160209091019061248c565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610f88918391602001906124d7565b506020828101518051610fa192600185019201906124d7565b5060408201518051610fbd9160028401916020909101906124d7565b5060608201518051610fd9916003840191602090910190612551565b5060808201518051610ff5916004840191602090910190612551565b5060a082015180516110119160058401916020909101906125aa565b5050505050602082015181600e01908051906020019061103292919061248c565b506040820151600f820155606082015160108201556080820151601182015560a08201516012909101805460c084015160e08501516101009095015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9687166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928716640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090941696909516959095179190911716919091179190911790556003805460009061112a906137ed565b90915550611137816137ed565b9050610d6a565b50600160035461114e91906139aa565b825160035461115d91906139aa565b7fa6bcf31909006b92649ed62ab4eaa36aa3d061c4f9b2a8f68247c4f86c9406d68460405161118c91906139c3565b60405180910390a35050565b3360009081526002602052604081205460e01b7fffffffff00000000000000000000000000000000000000000000000000000000908116913516146111dc57600080fd5b604080516001808252818301909252600091602080830190803683375050506000838152600e6020526040812060060154825192935091839190611222576112226136e0565b6020908102919091018101919091526009546000848152600e90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a9161129b9160040190815260200190565b602060405180830381865afa1580156112b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dc919061371a565b905060005b6000848152600e602052604090206003015481101561158c576000848152600e6020526040812060030180548390811061131d5761131d6136e0565b9060005260206000200154111561157c57600a546000858152600e60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110611374576113746136e0565b9060005260206000200154866040518363ffffffff1660e01b81526004016113a6929190918252602082015260400190565b6020604051808303816000875af11580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e99190613737565b6000036113f557600080fd5b600a546000858152600e602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf91908590811061143b5761143b6136e0565b90600052602060002001546040518263ffffffff1660e01b815260040161146491815260200190565b602060405180830381865afa158015611481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a5919061371a565b600b5490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c2908516156114d85760006114eb565b6000878152600e60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615611524576002611527565b60035b6040518863ffffffff1660e01b815260040161154896959493929190613750565b6000604051808303818588803b15801561156157600080fd5b505af1158015611575573d6000803e3d6000fd5b5050505050505b611585816137ed565b90506112e1565b506000838152600e602052604081209081816115a88282612659565b6001820180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915560028301805490911690556115ee600383016000612693565b6115fc600483016000612693565b600060058301819055600683018190556007830181905560088301906116228282612693565b611630600183016000612693565b61163e600283016000612693565b61164c6003830160006126b1565b61165a6004830160006126b1565b6116686005830160006126cf565b5061167b92505050600e83016000612693565b506000600f82018190556010820181905560118201819055601290910180547fffffffffffffffffffffffffffffffffffffff0000000000000000000000000016905560405184917f69e8bd1e5b8aab137b7e121055e1416a466fd9af5ca24bf7bfafd1d89ec5cb2191a2505050565b6116f36122d7565b6116fd6000612358565b565b6117076126f4565b6000828152600e602052604090819020815161024081019092528054829061012082019083908290829061173a9061368d565b80601f01602080910402602001604051908101604052809291908181526020018280546117669061368d565b80156117b35780601f10611788576101008083540402835291602001916117b3565b820191906000526020600020905b81548152906001019060200180831161179657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561184157602002820191906000526020600020905b81548152602001906001019080831161182d575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561189957602002820191906000526020600020905b815481526020019060010190808311611885575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561193657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161190b575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156119a557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161197a575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611a1457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116119e9575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611aae57600084815260209081902083018054604080518285028101850190915281815292830182828015611a9a57602002820191906000526020600020905b815481526020019060010190808311611a86575b505050505081526020019060010190611a42565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611b4757600084815260209081902083018054604080518285028101850190915281815292830182828015611b3357602002820191906000526020600020905b815481526020019060010190808311611b1f575b505050505081526020019060010190611adb565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611bce57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611bac57611bac612a16565b815260206001928301818104948501949093039092029101808411611b8d5790505b505050505081525050815250508152602001600e8201805480602002602001604051908101604052809291908181526020018280548015611c2e57602002820191906000526020600020905b815481526020019060010190808311611c1a575b5050509183525050600f8201546020820152601082015460408201526011820154606082015260129091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600e6020908152604091829020600301805483518184028101840190945280845260609392830182828015610d165760200282019190600052602060002090815481526020019060010190808311610d025750505050509050919050565b3360009081526002602052604081205460e01b7fffffffff0000000000000000000000000000000000000000000000000000000090811691351614611d5057600080fd5b600954815160a001516040517fb74a5fbe000000000000000000000000000000000000000000000000000000008152600481019190915260009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa158015611dc7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611def9190810190613a9b565b825160c00151909150611e0490600290613825565b816060015110611e1357600080fd5b6000838152600e60205260409020825180518492919082908190611e3790826138ae565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491909316911617905560608301518051611eaf926003850192019061248c565b5060808201518051611ecb91600484019160209091019061248c565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191611f08918391602001906124d7565b506020828101518051611f2192600185019201906124d7565b5060408201518051611f3d9160028401916020909101906124d7565b5060608201518051611f59916003840191602090910190612551565b5060808201518051611f75916004840191602090910190612551565b5060a08201518051611f919160058401916020909101906125aa565b5050505050602082015181600e019080519060200190611fb292919061248c565b50604082810151600f830155606083015160108301556080830151601183015560a08301516012909201805460c085015160e08601516101009096015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9788166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928816640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090941697909616969096179190911716929092179290921790556000848152600e602052819020905184917f8b3fe05402e83d2bf5005cfe2f496358067b0210fefc1b56b592e1edb937b5d0916120d891906144e1565b60405180910390a2505050565b6120ed6122d7565b73ffffffffffffffffffffffffffffffffffffffff8116612195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61219e81612358565b50565b6121a96122d7565b8051805182916004916121c39183916020909101906124d7565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e08501516007850180548316918416919091179055610100850151600885018054909216921691909117905561012083015180516122c3926009850192019061275a565b5050815161012083015161219e92506123cf565b60015473ffffffffffffffffffffffffffffffffffffffff1633146116fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161218c565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80518251146123dd57600080fd5b60005b8251811015612487578181815181106123fb576123fb6136e0565b602002602001015160026000858481518110612419576124196136e0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080612480906137ed565b90506123e0565b505050565b8280548282559060005260206000209081019282156124c7579160200282015b828111156124c75782518255916020019190600101906124ac565b506124d39291506127f4565b5090565b8280548282559060005260206000209081019282156124c7579160200282015b828111156124c757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906124f7565b82805482825590600052602060002090810192821561259e579160200282015b8281111561259e578251805161258e91849160209091019061248c565b5091602001919060010190612571565b506124d3929150612809565b82805482825590600052602060002090601f016020900481019282156124c75791602002820160005b8382111561261f57835183826101000a81548160ff021916908360038111156125fe576125fe612a16565b021790555092602001926001016020816000010492830192600103026125d3565b801561264c5782816101000a81549060ff021916905560010160208160000104928301926001030261261f565b50506124d39291506127f4565b5080546126659061368d565b6000825580601f10612675575050565b601f01602090049060005260206000209081019061219e91906127f4565b508054600082559060005260206000209081019061219e91906127f4565b508054600082559060005260206000209081019061219e9190612809565b50805460008255601f01602090049060005260206000209081019061219e91906127f4565b604051806101200160405280612708612826565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b828054828255906000526020600020906007016008900481019282156124c75791602002820160005b838211156127c457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302612783565b801561264c5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026127c4565b5b808211156124d357600081556001016127f5565b808211156124d357600061281d8282612693565b50600101612809565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016128cf6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156128e657600080fd5b5035919050565b60005b838110156129085781810151838201526020016128f0565b50506000910152565b600081518084526129298160208601602086016128ed565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561296d57815187529582019590820190600101612951565b509495945050505050565b600081518084526020808501945080840160005b8381101561296d57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161298c565b600082825180855260208086019550808260051b84010181860160005b84811015612a0957601f198684030189526129f783835161293d565b988401989250908301906001016129db565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612a7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c08452612a9560c0850182612978565b905060208084015185830382870152612aae8382612978565b92505060408401518583036040870152612ac88382612978565b92505060608401518583036060870152612ae283826129be565b92505060808401518583036080870152612afc83826129be565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015612b4657612b32828651612a45565b938301936001929092019190830190612b1f565b509695505050505050565b60006101208251818552612b6782860182612911565b9150506020830151612b91602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612bb9604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612bd1828261293d565b91505060808301518482036080860152612beb828261293d565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612c248382612a80565b9695505050505050565b6000610100808352612c428184018c612b51565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b602081526000612c97602083018461293d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612cf057612cf0612c9e565b60405290565b604051610120810167ffffffffffffffff81118282101715612cf057612cf0612c9e565b604051610140810167ffffffffffffffff81118282101715612cf057612cf0612c9e565b60405160e0810167ffffffffffffffff81118282101715612cf057612cf0612c9e565b604051601f8201601f1916810167ffffffffffffffff81118282101715612d8a57612d8a612c9e565b604052919050565b600067ffffffffffffffff821115612dac57612dac612c9e565b5060051b60200190565b600067ffffffffffffffff821115612dd057612dd0612c9e565b50601f01601f191660200190565b600082601f830112612def57600080fd5b8135612e02612dfd82612db6565b612d61565b818152846020838601011115612e1757600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461219e57600080fd5b8035612e6181612e34565b919050565b600082601f830112612e7757600080fd5b81356020612e87612dfd83612d92565b82815260059290921b84018101918181019086841115612ea657600080fd5b8286015b84811015612b465780358352918301918301612eaa565b600082601f830112612ed257600080fd5b81356020612ee2612dfd83612d92565b82815260059290921b84018101918181019086841115612f0157600080fd5b8286015b84811015612b46578035612f1881612e34565b8352918301918301612f05565b600082601f830112612f3657600080fd5b81356020612f46612dfd83612d92565b82815260059290921b84018101918181019086841115612f6557600080fd5b8286015b84811015612b4657803567ffffffffffffffff811115612f895760008081fd5b612f978986838b0101612e66565b845250918301918301612f69565b600082601f830112612fb657600080fd5b81356020612fc6612dfd83612d92565b82815260059290921b84018101918181019086841115612fe557600080fd5b8286015b84811015612b46578035600481106130015760008081fd5b8352918301918301612fe9565b600060c0828403121561302057600080fd5b613028612ccd565b9050813567ffffffffffffffff8082111561304257600080fd5b61304e85838601612ec1565b8352602084013591508082111561306457600080fd5b61307085838601612ec1565b6020840152604084013591508082111561308957600080fd5b61309585838601612ec1565b604084015260608401359150808211156130ae57600080fd5b6130ba85838601612f25565b606084015260808401359150808211156130d357600080fd5b6130df85838601612f25565b608084015260a08401359150808211156130f857600080fd5b5061310584828501612fa5565b60a08301525092915050565b6000610120828403121561312457600080fd5b61312c612cf6565b9050813567ffffffffffffffff8082111561314657600080fd5b61315285838601612dde565b835261316060208501612e56565b602084015261317160408501612e56565b6040840152606084013591508082111561318a57600080fd5b61319685838601612e66565b606084015260808401359150808211156131af57600080fd5b6131bb85838601612e66565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156131f457600080fd5b6132008682870161300e565b8385015250505092915050565b63ffffffff8116811461219e57600080fd5b8035612e618161320d565b80358015158114612e6157600080fd5b6000610120828403121561324d57600080fd5b613255612cf6565b9050813567ffffffffffffffff8082111561326f57600080fd5b61327b85838601613111565b8352602084013591508082111561329157600080fd5b5061329e84828501612e66565b6020830152506040820135604082015260608201356060820152608082013560808201526132ce60a0830161321f565b60a08201526132df60c0830161321f565b60c08201526132f060e0830161321f565b60e082015261010061330381840161322a565b9082015292915050565b6000602080838503121561332057600080fd5b823567ffffffffffffffff8082111561333857600080fd5b818501915085601f83011261334c57600080fd5b813561335a612dfd82612d92565b81815260059190911b8301840190848101908883111561337957600080fd5b8585015b838110156133b1578035858111156133955760008081fd5b6133a38b89838a010161323a565b84525091860191860161337d565b5098975050505050505050565b600061012082518185526133d482860182612b51565b915050602083015184820360208601526133ee828261293d565b91505060408301516040850152606083015160608501526080830151608085015260a083015161342660a086018263ffffffff169052565b5060c083015161343e60c086018263ffffffff169052565b5060e083015161345660e086018263ffffffff169052565b506101009283015115159390920192909252919050565b602081526000612c9760208301846133be565b6000806040838503121561349357600080fd5b82359150602083013567ffffffffffffffff8111156134b157600080fd5b6134bd8582860161323a565b9150509250929050565b6000602082840312156134d957600080fd5b8135612c9781612e34565b600082601f8301126134f557600080fd5b81356020613505612dfd83612d92565b82815260059290921b8401810191818101908684111561352457600080fd5b8286015b84811015612b465780357fffffffff00000000000000000000000000000000000000000000000000000000811681146135615760008081fd5b8352918301918301613528565b60006020828403121561358057600080fd5b813567ffffffffffffffff8082111561359857600080fd5b9083019061014082860312156135ad57600080fd5b6135b5612d1a565b8235828111156135c457600080fd5b6135d087828601612ec1565b8252506135df60208401612e56565b60208201526135f060408401612e56565b604082015261360160608401612e56565b606082015261361260808401612e56565b608082015261362360a08401612e56565b60a082015261363460c08401612e56565b60c082015261364560e08401612e56565b60e0820152610100613658818501612e56565b90820152610120838101358381111561367057600080fd5b61367c888287016134e4565b918301919091525095945050505050565b600181811c908216806136a157607f821691505b6020821081036136da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051612e6181612e34565b60006020828403121561372c57600080fd5b8151612c9781612e34565b60006020828403121561374957600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261379160c083018661293d565b82810360808401526137a3818661293d565b9150506137b360a0830184612a45565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361381e5761381e6137be565b5060010190565b60008261385b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f82111561248757600081815260208120601f850160051c810160208610156138875750805b601f850160051c820191505b818110156138a657828155600101613893565b505050505050565b815167ffffffffffffffff8111156138c8576138c8612c9e565b6138dc816138d6845461368d565b84613860565b602080601f83116001811461392f57600084156138f95750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556138a6565b600085815260208120601f198616915b8281101561395e5788860151825594840194600190910190840161393f565b508582101561399a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156139bd576139bd6137be565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a36577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613a248583516133be565b945092850192908501906001016139ea565b5092979650505050505050565b600082601f830112613a5457600080fd5b8151613a62612dfd82612db6565b818152846020838601011115613a7757600080fd5b613a888260208301602087016128ed565b949350505050565b8051612e618161320d565b600060208284031215613aad57600080fd5b815167ffffffffffffffff80821115613ac557600080fd5b9083019060e08286031215613ad957600080fd5b613ae1612d3e565b825182811115613af057600080fd5b613afc87828601613a43565b825250602083015182811115613b1157600080fd5b613b1d87828601613a43565b602083015250613b2f6040840161370f565b604082015260608301516060820152613b4a60808401613a90565b6080820152613b5b60a08401613a90565b60a0820152613b6c60c08401613a90565b60c082015295945050505050565b60008154613b878161368d565b808552602060018381168015613ba45760018114613bdc57613c0a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b8901019550613c0a565b866000528260002060005b85811015613c025781548a8201860152908301908401613be7565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b8381101561296d57815487529582019560019182019101613c2e565b6000815480845260208085019450836000528060002060005b8381101561296d57815473ffffffffffffffffffffffffffffffffffffffff1687529582019560019182019101613c63565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015613ce1578284038952613ccf8483613c15565b98850198935060019182019101613cb8565b5091979650505050505050565b60c082526000613d0160c0840183613c4a565b6001602085830381870152613d1883838701613c4a565b92508583036040870152613d2f8360028701613c4a565b9250606086840381880152613d478460038801613c95565b9350608087850381890152613d5f8560048901613c95565b94506005870160a0898703818b0152868254613d7f818a90815260200190565b600094855260208520995091505b80601f85011015613ffc57885460ff613da884828416612a45565b613db9898501828460081c16612a45565b613dcb60408501828460101c16612a45565b613ddc888501828460181c16612a45565b613dec87850182848c1c16612a45565b613dfd858501828460281c16612a45565b613e0f60c08501828460301c16612a45565b60e0613e22818601838560381c16612a45565b613e356101008601838560401c16612a45565b613e486101208601838560481c16612a45565b613e5b6101408601838560501c16612a45565b613e6e6101608601838560581c16612a45565b613e80610180860183858c1c16612a45565b613e936101a08601838560681c16612a45565b613ea66101c08601838560701c16612a45565b613eb96101e08601838560781c16612a45565b613ecb610200860183858b1c16612a45565b613ede6102208601838560881c16612a45565b613ef16102408601838560901c16612a45565b613f046102608601838560981c16612a45565b613f1661028086018385891c16612a45565b613f296102a08601838560a81c16612a45565b613f3c6102c08601838560b01c16612a45565b613f4f6102e08601838560b81c16612a45565b613f626103008601838560c01c16612a45565b613f756103208601838560c81c16612a45565b613f886103408601838560d01c16612a45565b613f9b6103608601838560d81c16612a45565b613fad61038086018385841c16612a45565b50613fc16103a08501828460e81c16612a45565b613fd46103c08501828460f01c16612a45565b50613fe66103e084018260f81c612a45565b5097870197928601926104009190910190613d8d565b9754978084101561401d576140148260ff8b16612a45565b92870192908601905b8084101561403e576140358260ff8b60081c16612a45565b92870192908601905b8084101561405f576140568260ff8b60101c16612a45565b92870192908601905b80841015614080576140778260ff8b60181c16612a45565b92870192908601905b808410156140a0576140978260ff8b8a1c16612a45565b92870192908601905b808410156140c1576140b88260ff8b60281c16612a45565b92870192908601905b808410156140e2576140d98260ff8b60301c16612a45565b92870192908601905b80841015614103576140fa8260ff8b60381c16612a45565b92870192908601905b808410156141245761411b8260ff8b60401c16612a45565b92870192908601905b808410156141455761413c8260ff8b60481c16612a45565b92870192908601905b808410156141665761415d8260ff8b60501c16612a45565b92870192908601905b808410156141875761417e8260ff8b60581c16612a45565b92870192908601905b808410156141a75761419e8260ff8b891c16612a45565b92870192908601905b808410156141c8576141bf8260ff8b60681c16612a45565b92870192908601905b808410156141e9576141e08260ff8b60701c16612a45565b92870192908601905b8084101561420a576142018260ff8b60781c16612a45565b92870192908601905b8084101561422a576142218260ff8b881c16612a45565b92870192908601905b8084101561424b576142428260ff8b60881c16612a45565b92870192908601905b8084101561426c576142638260ff8b60901c16612a45565b92870192908601905b8084101561428d576142848260ff8b60981c16612a45565b92870192908601905b808410156142ad576142a48260ff8b861c16612a45565b92870192908601905b808410156142ce576142c58260ff8b60a81c16612a45565b92870192908601905b808410156142ef576142e68260ff8b60b01c16612a45565b92870192908601905b80841015614310576143078260ff8b60b81c16612a45565b92870192908601905b80841015614331576143288260ff8b60c01c16612a45565b92870192908601905b80841015614352576143498260ff8b60c81c16612a45565b92870192908601905b808410156143735761436a8260ff8b60d01c16612a45565b92870192908601905b808410156143945761438b8260ff8b60d81c16612a45565b92870192908601905b808410156143b5576143ac8260ff8b60e01c16612a45565b92870192908601905b808410156143d6576143cd8260ff8b60e81c16612a45565b92870192908601905b808410156143f7576143ee8260ff8b60f01c16612a45565b92870192908601905b808410156144115761440c828a60f81c612a45565b908601905b509a9950505050505050505050565b600061012080845261443481850184613b7a565b9050614457600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9081166020860152600284015416604085015283810360608501526144948160038501613c15565b905083810360808501526144ab8160048501613c15565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152613a888160088501613cee565b6020815260006101208060208401526144fe610140840185614420565b601f1984820301604085015261451781600e8701613c15565b600f860154606086015260108601546080860152601186015460a0860152601286015463ffffffff80821660c0880152602082901c811660e0880152604082901c8116610100880152919250905061457883860160ff8360601c1615159052565b5094935050505056fea2646970667358221220551ec190766fc1ddeb4c138767831ea79c910b992037e9c2612ef049c220edee64736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
