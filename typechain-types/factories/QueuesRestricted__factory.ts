/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "deleteQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620052c7380380620052c78339810160408190526200003891620003d9565b8062000044336200013d565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b929101906200024c565b50505061012081015162000135906200018d565b50506200053c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024857600d6000838381518110620001b357620001b3620004fe565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d6000848481518110620002035762000203620004fe565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002408162000514565b905062000190565b5050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b600060208284031215620003ec57600080fd5b81516001600160401b03808211156200040457600080fd5b9083019061014082860312156200041a57600080fd5b62000424620002e3565b6200042f836200030f565b81526200043f602084016200030f565b602082015262000452604084016200030f565b604082015262000465606084016200030f565b606082015262000478608084016200030f565b60808201526200048b60a084016200030f565b60a08201526200049e60c084016200030f565b60c0820152620004b160e084016200030f565b60e0820152610100620004c68185016200030f565b908201526101208381015183811115620004df57600080fd5b620004ed888287016200032c565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053557634e487b7160e01b600052601160045260246000fd5b5060010190565b614d7b806200054c6000396000f3fe6080604052600436106101035760003560e01c8063ac766c4d1161009c578063ddf0b0091161006e578063e200c85711610056578063e200c857146103d6578063e3c5fc04146103f6578063f2fde38b1461044d57005b8063ddf0b00914610389578063e1152343146103b657005b8063ac766c4d14610240578063af640d0f14610260578063d63a8e1114610284578063d8de6587146102c457005b8063451383f2116100d5578063451383f2146101b65780635fcee296146101d6578063715018a6146101f65780638da5cb5b1461020b57005b80630f7921ed1461010c57806319e3e5921461014957806321204948146101695780632df310b41461019657005b3661010a57005b005b34801561011857600080fd5b5061012c6101273660046129be565b61046d565b604051610140989796959493929190612cf1565b60405180910390f35b34801561015557600080fd5b5061010a6101643660046129be565b61098f565b34801561017557600080fd5b506101896101843660046129be565b610d8c565b6040516101409190612d47565b3480156101a257600080fd5b5061010a6101b1366004613439565b610df1565b3480156101c257600080fd5b5061010a6101d13660046134ea565b6111fb565b3480156101e257600080fd5b5061010a6101f13660046129be565b611318565b34801561020257600080fd5b5061010a611833565b34801561021757600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610140565b34801561024c57600080fd5b5061010a61025b3660046135f6565b611847565b34801561026c57600080fd5b5061027660015481565b604051908152602001610140565b34801561029057600080fd5b506102b461029f36600461363d565b600d6020526000908152604090205460ff1681565b6040519015158152602001610140565b3480156102d057600080fd5b50600254600354600454600554600654600754600854600954600a546103229873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610140565b34801561039557600080fd5b506103a96103a43660046129be565b611bb7565b6040516101409190613758565b3480156103c257600080fd5b5061010a6103d13660046129be565b61218e565b3480156103e257600080fd5b506101896103f13660046129be565b6122c6565b34801561040257600080fd5b506104386104113660046129be565b6000908152600c602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610140565b34801561045957600080fd5b5061010a61046836600461363d565b612329565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546104a19061376b565b80601f01602080910402602001604051908101604052809291908181526020018280546104cd9061376b565b801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156105a857602002820191906000526020600020905b815481526020019060010190808311610594575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561060057602002820191906000526020600020905b8154815260200190600101908083116105ec575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561069d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610672575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561070c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106e1575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561077b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610750575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108155760008481526020908190208301805460408051828502810185019091528181529283018282801561080157602002820191906000526020600020905b8154815260200190600101908083116107ed575b5050505050815260200190600101906107a9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108ae5760008481526020908190208301805460408051828502810185019091528181529283018282801561089a57602002820191906000526020600020905b815481526020019060010190808311610886575b505050505081526020019060010190610842565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561093557602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561091357610913612b00565b8152602060019283018181049485019490930390920291018084116108f45790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b6000818152600c60205260408082206013018054600160ff19909116811790915581518181528083019092528160200160208202803683375050506000838152600c60205260408120600601548251929350918391906109f1576109f16137be565b6020908102919091018101919091526006546000848152600c90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a91610a6a9160040190815260200190565b602060405180830381865afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab91906137f8565b905060005b6000848152600c6020526040902060030154811015610d5b576000848152600c60205260408120600301805483908110610aec57610aec6137be565b90600052602060002001541115610d4b576007546000858152600c60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610b4357610b436137be565b9060005260206000200154866040518363ffffffff1660e01b8152600401610b75929190918252602082015260400190565b6020604051808303816000875af1158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb89190613815565b600003610bc457600080fd5b6007546000858152600c602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110610c0a57610c0a6137be565b90600052602060002001546040518263ffffffff1660e01b8152600401610c3391815260200190565b602060405180830381865afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7491906137f8565b60085490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615610ca7576000610cba565b6000878152600c60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615610cf3576002610cf6565b60035b6040518863ffffffff1660e01b8152600401610d179695949392919061382e565b6000604051808303818588803b158015610d3057600080fd5b505af1158015610d44573d6000803e3d6000fd5b5050505050505b610d54816138cb565b9050610ab0565b5060405183907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a2505050565b6000818152600c6020908152604091829020600401805483518184028101840190945280845260609392830182828015610de557602002820191906000526020600020905b815481526020019060010190808311610dd1575b50505050509050919050565b6000805b82518110156111a257600654835173ffffffffffffffffffffffffffffffffffffffff9091169063854071ae90859084908110610e3457610e346137be565b60200260200101516000015160a001516040518263ffffffff1660e01b8152600401610e6291815260200190565b602060405180830381865afa158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea39190613815565b9150828181518110610eb757610eb76137be565b60200260200101516080015163ffffffff16838281518110610edb57610edb6137be565b60200260200101516000015160c00151610ef59190613903565b8210610f0057600080fd5b828181518110610f1257610f126137be565b6020908102919091018101516001546000908152600c90925260409091208151805182908190610f42908261398d565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491909316911617905560608301518051610fba92600385019201906125af565b5060808201518051610fd69160048401916020909101906125af565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191611013918391602001906125fa565b50602082810151805161102c92600185019201906125fa565b50604082015180516110489160028401916020909101906125fa565b5060608201518051611064916003840191602090910190612674565b5060808201518051611080916004840191602090910190612674565b5060a0820151805161109c9160058401916020909101906126cd565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015160c088015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560e0840151805161116193506012850192919091019061277c565b5061010091909101516013909101805460ff19169115159190911790556001805460009061118e906138cb565b9091555061119b816138cb565b9050610df5565b50600180546111b19190613a89565b82516001546111c09190613a89565b7fbea7d9683fcc7bdd75bea1b30139630f62e89f6644e114633d239da671a558b2846040516111ef9190613aa2565b60405180910390a35050565b6112036123dd565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a805490931694169390931790556101208301518051849361130392600b929101906125fa565b5090505061131581610120015161245e565b50565b604080516001808252818301909252600091602080830190803683375050506000838152600c602052604081206006015482519293509183919061135e5761135e6137be565b6020908102919091018101919091526006546000848152600c90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916113d79160040190815260200190565b602060405180830381865afa1580156113f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141891906137f8565b905060005b6000848152600c60205260409020600301548110156116c8576000848152600c60205260408120600301805483908110611459576114596137be565b906000526020600020015411156116b8576007546000858152600c60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106114b0576114b06137be565b9060005260206000200154866040518363ffffffff1660e01b81526004016114e2929190918252602082015260400190565b6020604051808303816000875af1158015611501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115259190613815565b60000361153157600080fd5b6007546000858152600c602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110611577576115776137be565b90600052602060002001546040518263ffffffff1660e01b81526004016115a091815260200190565b602060405180830381865afa1580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e191906137f8565b60085490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615611614576000611627565b6000878152600c60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615611660576002611663565b60035b6040518863ffffffff1660e01b81526004016116849695949392919061382e565b6000604051808303818588803b15801561169d57600080fd5b505af11580156116b1573d6000803e3d6000fd5b5050505050505b6116c1816138cb565b905061141d565b506000838152600c602052604081209081816116e482826127f1565b6001820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116909155600283018054909116905561172a60038301600061282b565b61173860048301600061282b565b6000600583018190556006830181905560078301819055600883019061175e828261282b565b61176c60018301600061282b565b61177a60028301600061282b565b611788600383016000612849565b611796600483016000612849565b6117a4600583016000612867565b50506000600e8501819055600f8501819055601085018190556011850180547fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001690556117f79250601285019150612867565b50601301805460ff1916905560405183907f69e8bd1e5b8aab137b7e121055e1416a466fd9af5ca24bf7bfafd1d89ec5cb2190600090a2505050565b61183b6123dd565b611845600061253a565b565b600654815160a001516040517fb74a5fbe000000000000000000000000000000000000000000000000000000008152600481019190915260009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa1580156118be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118e69190810190613b7a565b825160c001519091506118fb90600290613903565b81606001511061190a57600080fd5b6000838152600c6020526040902082518051849291908290819061192e908261398d565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516119a692600385019201906125af565b50608082015180516119c29160048401916020909101906125af565b5060a0820151600582015560c0820151600682015560e082015160078201556101008201518051805160088401916119ff918391602001906125fa565b506020828101518051611a1892600185019201906125fa565b5060408201518051611a349160028401916020909101906125fa565b5060608201518051611a50916003840191602090910190612674565b5060808201518051611a6c916004840191602090910190612674565b5060a08201518051611a889160058401916020909101906126cd565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015160c088015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560e08401518051611b4d93506012850192919091019061277c565b5061010091909101516013909101805460ff19169115159190911790556000838152600c602052604090819020905184917f967e444eb727b96d4ed3f41ee3feac8d52e001e1b0f3b5da735b533e946263d091611baa9190614c9c565b60405180910390a2505050565b611bbf61288c565b6000828152600c6020526040908190208151610240810190925280548290610120820190839082908290611bf29061376b565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1e9061376b565b8015611c6b5780601f10611c4057610100808354040283529160200191611c6b565b820191906000526020600020905b815481529060010190602001808311611c4e57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015611cf957602002820191906000526020600020905b815481526020019060010190808311611ce5575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611d5157602002820191906000526020600020905b815481526020019060010190808311611d3d575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015611dee57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611dc3575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611e5d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611e32575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611ecc57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611ea1575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611f6657600084815260209081902083018054604080518285028101850190915281815292830182828015611f5257602002820191906000526020600020905b815481526020019060010190808311611f3e575b505050505081526020019060010190611efa565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611fff57600084815260209081902083018054604080518285028101850190915281815292830182828015611feb57602002820191906000526020600020905b815481526020019060010190808311611fd7575b505050505081526020019060010190611f93565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561208657602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561206457612064612b00565b8152602060019283018181049485019490930390920291018084116120455790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e090940193919290919083018282801561216e57602002820191906000526020600020906000905b82829054906101000a900460ff16600681111561214c5761214c612b00565b81526020600192830181810494850194909303909202910180841161212d5790505b50505091835250506013919091015460ff16151560209091015292915050565b6121966123dd565b4781111561222b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f19350505050611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f2077697468647261770000000000006044820152606401612222565b6000818152600c6020908152604091829020600301805483518184028101840190945280845260609392830182828015610de55760200282019190600052602060002090815481526020019060010190808311610dd15750505050509050919050565b6123316123dd565b73ffffffffffffffffffffffffffffffffffffffff81166123d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401612222565b6113158161253a565b60005473ffffffffffffffffffffffffffffffffffffffff163314611845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401612222565b60005b815181101561253657600d6000838381518110612480576124806137be565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d60008484815181106124e7576124e76137be565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff168252810191909152604001600020805460ff191691151591909117905561252f816138cb565b9050612461565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156125ea579160200282015b828111156125ea5782518255916020019190600101906125cf565b506125f69291506128de565b5090565b8280548282559060005260206000209081019282156125ea579160200282015b828111156125ea57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061261a565b8280548282559060005260206000209081019282156126c1579160200282015b828111156126c157825180516126b19184916020909101906125af565b5091602001919060010190612694565b506125f69291506128f3565b82805482825590600052602060002090601f016020900481019282156125ea5791602002820160005b8382111561274257835183826101000a81548160ff0219169083600381111561272157612721612b00565b021790555092602001926001016020816000010492830192600103026126f6565b801561276f5782816101000a81549060ff0219169055600101602081600001049283019260010302612742565b50506125f69291506128de565b82805482825590600052602060002090601f016020900481019282156125ea5791602002820160005b8382111561274257835183826101000a81548160ff021916908360068111156127d0576127d0612b00565b021790555092602001926001016020816000010492830192600103026127a5565b5080546127fd9061376b565b6000825580601f1061280d575050565b601f01602090049060005260206000209081019061131591906128de565b508054600082559060005260206000209081019061131591906128de565b508054600082559060005260206000209081019061131591906128f3565b50805460008255601f01602090049060005260206000209081019061131591906128de565b6040518061012001604052806128a0612910565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b808211156125f657600081556001016128df565b808211156125f6576000612907828261282b565b506001016128f3565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016129b96040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156129d057600080fd5b5035919050565b60005b838110156129f25781810151838201526020016129da565b50506000910152565b60008151808452612a138160208601602086016129d7565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015612a5757815187529582019590820190600101612a3b565b509495945050505050565b600081518084526020808501945080840160005b83811015612a5757815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612a76565b600082825180855260208086019550808260051b84010181860160005b84811015612af357601f19868403018952612ae1838351612a27565b98840198925090830190600101612ac5565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612b3f57612b3f612b00565b9052565b6000815160c08452612b5860c0850182612a62565b905060208084015185830382870152612b718382612a62565b92505060408401518583036040870152612b8b8382612a62565b92505060608401518583036060870152612ba58382612aa8565b92505060808401518583036080870152612bbf8382612aa8565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015612c0957612bf5828651612b2f565b938301936001929092019190830190612be2565b509695505050505050565b60006101208251818552612c2a828601826129fb565b9150506020830151612c54602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612c7c604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612c948282612a27565b91505060808301518482036080860152612cae8282612a27565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612ce78382612b43565b9695505050505050565b6000610100808352612d058184018c612c14565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b602081526000612d5a6020830184612a27565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612db357612db3612d61565b60405290565b604051610120810167ffffffffffffffff81118282101715612db357612db3612d61565b604051610140810167ffffffffffffffff81118282101715612db357612db3612d61565b60405160e0810167ffffffffffffffff81118282101715612db357612db3612d61565b604051601f8201601f1916810167ffffffffffffffff81118282101715612e4d57612e4d612d61565b604052919050565b600067ffffffffffffffff821115612e6f57612e6f612d61565b5060051b60200190565b600067ffffffffffffffff821115612e9357612e93612d61565b50601f01601f191660200190565b600082601f830112612eb257600080fd5b8135612ec5612ec082612e79565b612e24565b818152846020838601011115612eda57600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461131557600080fd5b8035612f2481612ef7565b919050565b600082601f830112612f3a57600080fd5b81356020612f4a612ec083612e55565b82815260059290921b84018101918181019086841115612f6957600080fd5b8286015b84811015612c095780358352918301918301612f6d565b600082601f830112612f9557600080fd5b81356020612fa5612ec083612e55565b82815260059290921b84018101918181019086841115612fc457600080fd5b8286015b84811015612c09578035612fdb81612ef7565b8352918301918301612fc8565b600082601f830112612ff957600080fd5b81356020613009612ec083612e55565b82815260059290921b8401810191818101908684111561302857600080fd5b8286015b84811015612c0957803567ffffffffffffffff81111561304c5760008081fd5b61305a8986838b0101612f29565b84525091830191830161302c565b600082601f83011261307957600080fd5b81356020613089612ec083612e55565b82815260059290921b840181019181810190868411156130a857600080fd5b8286015b84811015612c09578035600481106130c45760008081fd5b83529183019183016130ac565b600060c082840312156130e357600080fd5b6130eb612d90565b9050813567ffffffffffffffff8082111561310557600080fd5b61311185838601612f84565b8352602084013591508082111561312757600080fd5b61313385838601612f84565b6020840152604084013591508082111561314c57600080fd5b61315885838601612f84565b6040840152606084013591508082111561317157600080fd5b61317d85838601612fe8565b6060840152608084013591508082111561319657600080fd5b6131a285838601612fe8565b608084015260a08401359150808211156131bb57600080fd5b506131c884828501613068565b60a08301525092915050565b600061012082840312156131e757600080fd5b6131ef612db9565b9050813567ffffffffffffffff8082111561320957600080fd5b61321585838601612ea1565b835261322360208501612f19565b602084015261323460408501612f19565b6040840152606084013591508082111561324d57600080fd5b61325985838601612f29565b6060840152608084013591508082111561327257600080fd5b61327e85838601612f29565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156132b757600080fd5b6132c3868287016130d1565b8385015250505092915050565b63ffffffff8116811461131557600080fd5b8035612f24816132d0565b600082601f8301126132fe57600080fd5b8135602061330e612ec083612e55565b82815260059290921b8401810191818101908684111561332d57600080fd5b8286015b84811015612c09578035600781106133495760008081fd5b8352918301918301613331565b80358015158114612f2457600080fd5b6000610120828403121561337957600080fd5b613381612db9565b9050813567ffffffffffffffff8082111561339b57600080fd5b6133a7858386016131d4565b83526020840135602084015260408401356040840152606084013560608401526133d3608085016132e2565b60808401526133e460a085016132e2565b60a08401526133f560c085016132e2565b60c084015260e084013591508082111561340e57600080fd5b5061341b848285016132ed565b60e08301525061010061342f818401613356565b9082015292915050565b6000602080838503121561344c57600080fd5b823567ffffffffffffffff8082111561346457600080fd5b818501915085601f83011261347857600080fd5b8135613486612ec082612e55565b81815260059190911b830184019084810190888311156134a557600080fd5b8585015b838110156134dd578035858111156134c15760008081fd5b6134cf8b89838a0101613366565b8452509186019186016134a9565b5098975050505050505050565b6000602082840312156134fc57600080fd5b813567ffffffffffffffff8082111561351457600080fd5b90830190610140828603121561352957600080fd5b613531612ddd565b61353a83612f19565b815261354860208401612f19565b602082015261355960408401612f19565b604082015261356a60608401612f19565b606082015261357b60808401612f19565b608082015261358c60a08401612f19565b60a082015261359d60c08401612f19565b60c08201526135ae60e08401612f19565b60e08201526101006135c1818501612f19565b9082015261012083810135838111156135d957600080fd5b6135e588828701612f84565b918301919091525095945050505050565b6000806040838503121561360957600080fd5b82359150602083013567ffffffffffffffff81111561362757600080fd5b61363385828601613366565b9150509250929050565b60006020828403121561364f57600080fd5b8135612d5a81612ef7565b60078110612b3f57612b3f612b00565b600081518084526020808501945080840160005b83811015612a575761369187835161365a565b958201959082019060010161367e565b600061012082518185526136b782860182612c14565b91505060208301516020850152604083015160408501526060830151606085015260808301516136ef608086018263ffffffff169052565b5060a083015161370760a086018263ffffffff169052565b5060c083015161371f60c086018263ffffffff169052565b5060e083015184820360e0860152613737828261366a565b9150506101008084015161374e8287018215159052565b5090949350505050565b602081526000612d5a60208301846136a1565b600181811c9082168061377f57607f821691505b6020821081036137b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051612f2481612ef7565b60006020828403121561380a57600080fd5b8151612d5a81612ef7565b60006020828403121561382757600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261386f60c0830186612a27565b82810360808401526138818186612a27565b91505061389160a0830184612b2f565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036138fc576138fc61389c565b5060010190565b600082613939577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f82111561398857600081815260208120601f850160051c810160208610156139655750805b601f850160051c820191505b8181101561398457828155600101613971565b5050505b505050565b815167ffffffffffffffff8111156139a7576139a7612d61565b6139bb816139b5845461376b565b8461393e565b602080601f831160018114613a0e57600084156139d85750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555613984565b600085815260208120601f198616915b82811015613a3d57888601518255948401946001909101908401613a1e565b5085821015613a7957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115613a9c57613a9c61389c565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613b15577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613b038583516136a1565b94509285019290850190600101613ac9565b5092979650505050505050565b600082601f830112613b3357600080fd5b8151613b41612ec082612e79565b818152846020838601011115613b5657600080fd5b613b678260208301602087016129d7565b949350505050565b8051612f24816132d0565b600060208284031215613b8c57600080fd5b815167ffffffffffffffff80821115613ba457600080fd5b9083019060e08286031215613bb857600080fd5b613bc0612e01565b825182811115613bcf57600080fd5b613bdb87828601613b22565b825250602083015182811115613bf057600080fd5b613bfc87828601613b22565b602083015250613c0e604084016137ed565b604082015260608301516060820152613c2960808401613b6f565b6080820152613c3a60a08401613b6f565b60a0820152613c4b60c08401613b6f565b60c082015295945050505050565b60008154613c668161376b565b808552602060018381168015613c835760018114613c9d57613ccb565b60ff198516838901528284151560051b8901019550613ccb565b866000528260002060005b85811015613cc35781548a8201860152908301908401613ca8565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b83811015612a5757815487529582019560019182019101613cef565b6000815480845260208085019450836000528060002060005b83811015612a5757815473ffffffffffffffffffffffffffffffffffffffff1687529582019560019182019101613d24565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015613da2578284038952613d908483613cd6565b98850198935060019182019101613d79565b5091979650505050505050565b60c082526000613dc260c0840183613d0b565b6001602085830381870152613dd983838701613d0b565b92508583036040870152613df08360028701613d0b565b9250606086840381880152613e088460038801613d56565b9350608087850381890152613e208560048901613d56565b94506005870160a0898703818b0152868254613e40818a90815260200190565b600094855260208520995091505b80601f850110156140bd57885460ff613e6984828416612b2f565b613e7a898501828460081c16612b2f565b613e8c60408501828460101c16612b2f565b613e9d888501828460181c16612b2f565b613ead87850182848c1c16612b2f565b613ebe858501828460281c16612b2f565b613ed060c08501828460301c16612b2f565b60e0613ee3818601838560381c16612b2f565b613ef66101008601838560401c16612b2f565b613f096101208601838560481c16612b2f565b613f1c6101408601838560501c16612b2f565b613f2f6101608601838560581c16612b2f565b613f41610180860183858c1c16612b2f565b613f546101a08601838560681c16612b2f565b613f676101c08601838560701c16612b2f565b613f7a6101e08601838560781c16612b2f565b613f8c610200860183858b1c16612b2f565b613f9f6102208601838560881c16612b2f565b613fb26102408601838560901c16612b2f565b613fc56102608601838560981c16612b2f565b613fd761028086018385891c16612b2f565b613fea6102a08601838560a81c16612b2f565b613ffd6102c08601838560b01c16612b2f565b6140106102e08601838560b81c16612b2f565b6140236103008601838560c01c16612b2f565b6140366103208601838560c81c16612b2f565b6140496103408601838560d01c16612b2f565b61405c6103608601838560d81c16612b2f565b61406e61038086018385841c16612b2f565b506140826103a08501828460e81c16612b2f565b6140956103c08501828460f01c16612b2f565b506140a76103e084018260f81c612b2f565b5097870197928601926104009190910190613e4e565b975497808410156140de576140d58260ff8b16612b2f565b92870192908601905b808410156140ff576140f68260ff8b60081c16612b2f565b92870192908601905b80841015614120576141178260ff8b60101c16612b2f565b92870192908601905b80841015614141576141388260ff8b60181c16612b2f565b92870192908601905b80841015614161576141588260ff8b8a1c16612b2f565b92870192908601905b80841015614182576141798260ff8b60281c16612b2f565b92870192908601905b808410156141a35761419a8260ff8b60301c16612b2f565b92870192908601905b808410156141c4576141bb8260ff8b60381c16612b2f565b92870192908601905b808410156141e5576141dc8260ff8b60401c16612b2f565b92870192908601905b80841015614206576141fd8260ff8b60481c16612b2f565b92870192908601905b808410156142275761421e8260ff8b60501c16612b2f565b92870192908601905b808410156142485761423f8260ff8b60581c16612b2f565b92870192908601905b808410156142685761425f8260ff8b891c16612b2f565b92870192908601905b80841015614289576142808260ff8b60681c16612b2f565b92870192908601905b808410156142aa576142a18260ff8b60701c16612b2f565b92870192908601905b808410156142cb576142c28260ff8b60781c16612b2f565b92870192908601905b808410156142eb576142e28260ff8b881c16612b2f565b92870192908601905b8084101561430c576143038260ff8b60881c16612b2f565b92870192908601905b8084101561432d576143248260ff8b60901c16612b2f565b92870192908601905b8084101561434e576143458260ff8b60981c16612b2f565b92870192908601905b8084101561436e576143658260ff8b861c16612b2f565b92870192908601905b8084101561438f576143868260ff8b60a81c16612b2f565b92870192908601905b808410156143b0576143a78260ff8b60b01c16612b2f565b92870192908601905b808410156143d1576143c88260ff8b60b81c16612b2f565b92870192908601905b808410156143f2576143e98260ff8b60c01c16612b2f565b92870192908601905b808410156144135761440a8260ff8b60c81c16612b2f565b92870192908601905b808410156144345761442b8260ff8b60d01c16612b2f565b92870192908601905b808410156144555761444c8260ff8b60d81c16612b2f565b92870192908601905b808410156144765761446d8260ff8b60e01c16612b2f565b92870192908601905b808410156144975761448e8260ff8b60e81c16612b2f565b92870192908601905b808410156144b8576144af8260ff8b60f01c16612b2f565b92870192908601905b808410156144d2576144cd828a60f81c612b2f565b908601905b509a9950505050505050505050565b60006101208084526144f581850184613c59565b9050614518600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9081166020860152600284015416604085015283810360608501526145558160038501613cd6565b9050838103608085015261456c8160048501613cd6565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152613b678160088501613daf565b805480835260008281526020808220940193909190825b82601f8201101561483957815460ff6145d48882841661365a565b60206145e7818a01838560081c1661365a565b60406145fa818b01848660101c1661365a565b606061460d818c01858760181c1661365a565b608061461f818d018688871c1661365a565b60a09350614634848d01868860281c1661365a565b60c0614647818e01878960301c1661365a565b60e061465a818f01888a60381c1661365a565b61466c6101008f01888a881c1661365a565b61467f6101208f01888a60481c1661365a565b6146926101408f01888a60501c1661365a565b6146a56101608f01888a60581c1661365a565b6146b76101808f01888a871c1661365a565b6146ca6101a08f01888a60681c1661365a565b6146dd6101c08f01888a60701c1661365a565b6146f06101e08f01888a60781c1661365a565b6147026102008f01888a861c1661365a565b6147156102208f01888a60881c1661365a565b6147286102408f01888a60901c1661365a565b61473b6102608f01888a60981c1661365a565b61474d6102808f01888a891c1661365a565b6147606102a08f01888a60a81c1661365a565b6147736102c08f01888a60b01c1661365a565b6147866102e08f01888a60b81c1661365a565b6147986103008f01888a851c1661365a565b6147ab6103208f01888a60c81c1661365a565b6147be6103408f01888a60d01c1661365a565b6147d16103608f01888a60d81c1661365a565b6147e36103808f01888a841c1661365a565b5050505050506147fc6103a08901828460e81c1661365a565b61480f6103c08901828460f01c1661365a565b506148216103e088018260f81c61365a565b506104009590950194600191909101906020016145b9565b9054908281101561485c576148518660ff841661365a565b602095909501946001015b8281101561487f576148748660ff8460081c1661365a565b602095909501946001015b828110156148a2576148978660ff8460101c1661365a565b602095909501946001015b828110156148c5576148ba8660ff8460181c1661365a565b602095909501946001015b828110156148e8576148dd8660ff8460201c1661365a565b602095909501946001015b8281101561490b576149008660ff8460281c1661365a565b602095909501946001015b8281101561492e576149238660ff8460301c1661365a565b602095909501946001015b82811015614951576149468660ff8460381c1661365a565b602095909501946001015b82811015614974576149698660ff8460401c1661365a565b602095909501946001015b828110156149975761498c8660ff8460481c1661365a565b602095909501946001015b828110156149ba576149af8660ff8460501c1661365a565b602095909501946001015b828110156149dd576149d28660ff8460581c1661365a565b602095909501946001015b82811015614a00576149f58660ff8460601c1661365a565b602095909501946001015b82811015614a2357614a188660ff8460681c1661365a565b602095909501946001015b82811015614a4657614a3b8660ff8460701c1661365a565b602095909501946001015b82811015614a6957614a5e8660ff8460781c1661365a565b602095909501946001015b82811015614a8c57614a818660ff8460801c1661365a565b602095909501946001015b82811015614aaf57614aa48660ff8460881c1661365a565b602095909501946001015b82811015614ad257614ac78660ff8460901c1661365a565b602095909501946001015b82811015614af557614aea8660ff8460981c1661365a565b602095909501946001015b82811015614b1857614b0d8660ff8460a01c1661365a565b602095909501946001015b82811015614b3b57614b308660ff8460a81c1661365a565b602095909501946001015b82811015614b5e57614b538660ff8460b01c1661365a565b602095909501946001015b82811015614b8157614b768660ff8460b81c1661365a565b602095909501946001015b82811015614ba457614b998660ff8460c01c1661365a565b602095909501946001015b82811015614bc757614bbc8660ff8460c81c1661365a565b602095909501946001015b82811015614bea57614bdf8660ff8460d01c1661365a565b602095909501946001015b82811015614c0d57614c028660ff8460d81c1661365a565b602095909501946001015b82811015614c3057614c258660ff8460e01c1661365a565b602095909501946001015b82811015614c5357614c488660ff8460e81c1661365a565b602095909501946001015b82811015614c7657614c6b8660ff8460f01c1661365a565b602095909501946001015b82811015614c9257614c8b868360f81c61365a565b6020860195505b5093949350505050565b602081526000610120806020840152614cb96101408401856144e1565b600e8501546040850152600f850154606085015260108501546080850152601185015463ffffffff80821660a0870152602082901c811660c0870152614d0c60e08701828460401c1663ffffffff169052565b5050601f1984820301610100850152614d2881601287016145a2565b9050614d38601386015460ff1690565b151591909301525091905056fea26469706673582212207590bea32b677b340b0fb6f86f7abd7176aa1caee5d9e3795f0fd89b25b2c20b64736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
