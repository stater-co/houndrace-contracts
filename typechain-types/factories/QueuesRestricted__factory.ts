/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "deleteQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620050a5380380620050a58339810160408190526200003991620003de565b80620000453362000142565b600180558051600380546001600160a01b03199081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b80549093169416939093179055610120830151805184936200012692600c9291019062000251565b5050506101208101516200013a9062000192565b505062000541565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024d57600e6000838381518110620001b857620001b862000503565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e600084848151811062000208576200020862000503565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002458162000519565b905062000195565b5050565b828054828255906000526020600020908101928215620002a9579160200282015b82811115620002a957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000272565b50620002b7929150620002bb565b5090565b5b80821115620002b75760008155600101620002bc565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156200030e576200030e620002d2565b60405290565b80516001600160a01b03811681146200032c57600080fd5b919050565b600082601f8301126200034357600080fd5b815160206001600160401b0380831115620003625762000362620002d2565b8260051b604051601f19603f830116810181811084821117156200038a576200038a620002d2565b604052938452858101830193838101925087851115620003a957600080fd5b83870191505b84821015620003d357620003c38262000314565b83529183019190830190620003af565b979650505050505050565b600060208284031215620003f157600080fd5b81516001600160401b03808211156200040957600080fd5b9083019061014082860312156200041f57600080fd5b62000429620002e8565b620004348362000314565b8152620004446020840162000314565b6020820152620004576040840162000314565b60408201526200046a6060840162000314565b60608201526200047d6080840162000314565b60808201526200049060a0840162000314565b60a0820152620004a360c0840162000314565b60c0820152620004b660e0840162000314565b60e0820152610100620004cb81850162000314565b908201526101208381015183811115620004e457600080fd5b620004f28882870162000331565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053a57634e487b7160e01b600052601160045260246000fd5b5060010190565b614b5480620005516000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063ac766c4d11610097578063ddf0b00911610066578063ddf0b009146102e8578063e200c85714610308578063e3c5fc041461031b578063f2fde38b1461036557600080fd5b8063ac766c4d146101d3578063af640d0f146101e6578063d63a8e11146101fd578063d8de65871461023057600080fd5b8063451383f2116100d3578063451383f21461017d5780635fcee29614610190578063715018a6146101a35780638da5cb5b146101ab57600080fd5b80630f7921ed1461010557806319e3e59214610135578063212049481461014a5780632df310b41461016a575b600080fd5b610118610113366004612797565b610378565b60405161012c989796959493929190612aca565b60405180910390f35b610148610143366004612797565b61089a565b005b61015d610158366004612797565b610c97565b60405161012c9190612b20565b610148610178366004613212565b610cfc565b61014861018b3660046132c3565b611107565b61014861019e366004612797565b611224565b61014861173f565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012c565b6101486101e13660046133cf565b611753565b6101ef60025481565b60405190815260200161012c565b61022061020b366004613416565b600e6020526000908152604090205460ff1681565b604051901515815260200161012c565b600354600454600554600654600754600854600954600a54600b546102819873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e08301529091166101008201526101200161012c565b6102fb6102f6366004612797565b611ac3565b60405161012c9190613531565b61015d610316366004612797565b61209a565b610350610329366004612797565b6000908152600d602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff909116815260200161012c565b610148610373366004613416565b6120fd565b600d60205280600052604060002060009150905080600001604051806101200160405290816000820180546103ac90613544565b80601f01602080910402602001604051908101604052809291908181526020018280546103d890613544565b80156104255780601f106103fa57610100808354040283529160200191610425565b820191906000526020600020905b81548152906001019060200180831161040857829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104b357602002820191906000526020600020905b81548152602001906001019080831161049f575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561050b57602002820191906000526020600020905b8154815260200190600101908083116104f7575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156105a857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161057d575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561061757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105ec575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161065b575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107205760008481526020908190208301805460408051828502810185019091528181529283018282801561070c57602002820191906000526020600020905b8154815260200190600101908083116106f8575b5050505050815260200190600101906106b4565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107b9576000848152602090819020830180546040805182850281018501909152818152928301828280156107a557602002820191906000526020600020905b815481526020019060010190808311610791575b50505050508152602001906001019061074d565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561084057602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561081e5761081e6128d9565b8152602060019283018181049485019490930390920291018084116107ff5790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b6000818152600d60205260408082206013018054600160ff19909116811790915581518181528083019092528160200160208202803683375050506000838152600d60205260408120600601548251929350918391906108fc576108fc613597565b6020908102919091018101919091526007546000848152600d90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916109759160040190815260200190565b602060405180830381865afa158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b691906135d1565b905060005b6000848152600d6020526040902060030154811015610c66576000848152600d602052604081206003018054839081106109f7576109f7613597565b90600052602060002001541115610c56576008546000858152600d60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610a4e57610a4e613597565b9060005260206000200154866040518363ffffffff1660e01b8152600401610a80929190918252602082015260400190565b6020604051808303816000875af1158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac391906135ee565b600003610acf57600080fd5b6008546000858152600d602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110610b1557610b15613597565b90600052602060002001546040518263ffffffff1660e01b8152600401610b3e91815260200190565b602060405180830381865afa158015610b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7f91906135d1565b60095490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615610bb2576000610bc5565b6000878152600d60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615610bfe576002610c01565b60035b6040518863ffffffff1660e01b8152600401610c2296959493929190613607565b6000604051808303818588803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b5050505050505b610c5f816136a4565b90506109bb565b5060405183907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a2505050565b6000818152600d6020908152604091829020600401805483518184028101840190945280845260609392830182828015610cf057602002820191906000526020600020905b815481526020019060010190808311610cdc575b50505050509050919050565b6000805b82518110156110ad57600754835173ffffffffffffffffffffffffffffffffffffffff9091169063854071ae90859084908110610d3f57610d3f613597565b60200260200101516000015160a001516040518263ffffffff1660e01b8152600401610d6d91815260200190565b602060405180830381865afa158015610d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dae91906135ee565b9150828181518110610dc257610dc2613597565b60200260200101516080015163ffffffff16838281518110610de657610de6613597565b60200260200101516000015160c00151610e0091906136dc565b8210610e0b57600080fd5b828181518110610e1d57610e1d613597565b6020908102919091018101516002546000908152600d90925260409091208151805182908190610e4d9082613766565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491909316911617905560608301518051610ec59260038501920190612388565b5060808201518051610ee1916004840191602090910190612388565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191610f1e918391602001906123d3565b506020828101518051610f3792600185019201906123d3565b5060408201518051610f539160028401916020909101906123d3565b5060608201518051610f6f91600384019160209091019061244d565b5060808201518051610f8b91600484019160209091019061244d565b5060a08201518051610fa79160058401916020909101906124a6565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015160c088015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560e0840151805161106c935060128501929190910190612555565b5061010091909101516013909101805460ff191691151591909117905560028054600090611099906136a4565b909155506110a6816136a4565b9050610d00565b5060016002546110bd9190613862565b82516002546110cc9190613862565b7fbea7d9683fcc7bdd75bea1b30139630f62e89f6644e114633d239da671a558b2846040516110fb919061387b565b60405180910390a35050565b61110f6121b6565b8051600380547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b805490931694169390931790556101208301518051849361120f92600c929101906123d3565b50905050611221816101200151612237565b50565b604080516001808252818301909252600091602080830190803683375050506000838152600d602052604081206006015482519293509183919061126a5761126a613597565b6020908102919091018101919091526007546000848152600d90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916112e39160040190815260200190565b602060405180830381865afa158015611300573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132491906135d1565b905060005b6000848152600d60205260409020600301548110156115d4576000848152600d6020526040812060030180548390811061136557611365613597565b906000526020600020015411156115c4576008546000858152600d60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106113bc576113bc613597565b9060005260206000200154866040518363ffffffff1660e01b81526004016113ee929190918252602082015260400190565b6020604051808303816000875af115801561140d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143191906135ee565b60000361143d57600080fd5b6008546000858152600d602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf91908590811061148357611483613597565b90600052602060002001546040518263ffffffff1660e01b81526004016114ac91815260200190565b602060405180830381865afa1580156114c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ed91906135d1565b60095490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615611520576000611533565b6000878152600d60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff83161561156c57600261156f565b60035b6040518863ffffffff1660e01b815260040161159096959493929190613607565b6000604051808303818588803b1580156115a957600080fd5b505af11580156115bd573d6000803e3d6000fd5b5050505050505b6115cd816136a4565b9050611329565b506000838152600d602052604081209081816115f082826125ca565b6001820180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169091556002830180549091169055611636600383016000612604565b611644600483016000612604565b6000600583018190556006830181905560078301819055600883019061166a8282612604565b611678600183016000612604565b611686600283016000612604565b611694600383016000612622565b6116a2600483016000612622565b6116b0600583016000612640565b50506000600e8501819055600f8501819055601085018190556011850180547fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001690556117039250601285019150612640565b50601301805460ff1916905560405183907f69e8bd1e5b8aab137b7e121055e1416a466fd9af5ca24bf7bfafd1d89ec5cb2190600090a2505050565b6117476121b6565b6117516000612313565b565b600754815160a001516040517fb74a5fbe000000000000000000000000000000000000000000000000000000008152600481019190915260009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa1580156117ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117f29190810190613953565b825160c00151909150611807906002906136dc565b81606001511061181657600080fd5b6000838152600d6020526040902082518051849291908290819061183a9082613766565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516118b29260038501920190612388565b50608082015180516118ce916004840191602090910190612388565b5060a0820151600582015560c0820151600682015560e0820151600782015561010082015180518051600884019161190b918391602001906123d3565b50602082810151805161192492600185019201906123d3565b50604082015180516119409160028401916020909101906123d3565b506060820151805161195c91600384019160209091019061244d565b506080820151805161197891600484019160209091019061244d565b5060a082015180516119949160058401916020909101906124a6565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015160c088015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560e08401518051611a59935060128501929190910190612555565b5061010091909101516013909101805460ff19169115159190911790556000838152600d602052604090819020905184917f967e444eb727b96d4ed3f41ee3feac8d52e001e1b0f3b5da735b533e946263d091611ab69190614a75565b60405180910390a2505050565b611acb612665565b6000828152600d6020526040908190208151610240810190925280548290610120820190839082908290611afe90613544565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2a90613544565b8015611b775780601f10611b4c57610100808354040283529160200191611b77565b820191906000526020600020905b815481529060010190602001808311611b5a57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015611c0557602002820191906000526020600020905b815481526020019060010190808311611bf1575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611c5d57602002820191906000526020600020905b815481526020019060010190808311611c49575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015611cfa57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611ccf575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d6957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611d3e575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611dd857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611dad575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611e7257600084815260209081902083018054604080518285028101850190915281815292830182828015611e5e57602002820191906000526020600020905b815481526020019060010190808311611e4a575b505050505081526020019060010190611e06565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611f0b57600084815260209081902083018054604080518285028101850190915281815292830182828015611ef757602002820191906000526020600020905b815481526020019060010190808311611ee3575b505050505081526020019060010190611e9f565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611f9257602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611f7057611f706128d9565b815260206001928301818104948501949093039092029101808411611f515790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e090940193919290919083018282801561207a57602002820191906000526020600020906000905b82829054906101000a900460ff166007811115612058576120586128d9565b8152602060019283018181049485019490930390920291018084116120395790505b50505091835250506013919091015460ff16151560209091015292915050565b6000818152600d6020908152604091829020600301805483518184028101840190945280845260609392830182828015610cf05760200282019190600052602060002090815481526020019060010190808311610cdc5750505050509050919050565b6121056121b6565b73ffffffffffffffffffffffffffffffffffffffff81166121ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61122181612313565b60005473ffffffffffffffffffffffffffffffffffffffff163314611751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016121a4565b60005b815181101561230f57600e600083838151811061225957612259613597565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e60008484815181106122c0576122c0613597565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff168252810191909152604001600020805460ff1916911515919091179055612308816136a4565b905061223a565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156123c3579160200282015b828111156123c35782518255916020019190600101906123a8565b506123cf9291506126b7565b5090565b8280548282559060005260206000209081019282156123c3579160200282015b828111156123c357825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906123f3565b82805482825590600052602060002090810192821561249a579160200282015b8281111561249a578251805161248a918491602090910190612388565b509160200191906001019061246d565b506123cf9291506126cc565b82805482825590600052602060002090601f016020900481019282156123c35791602002820160005b8382111561251b57835183826101000a81548160ff021916908360038111156124fa576124fa6128d9565b021790555092602001926001016020816000010492830192600103026124cf565b80156125485782816101000a81549060ff021916905560010160208160000104928301926001030261251b565b50506123cf9291506126b7565b82805482825590600052602060002090601f016020900481019282156123c35791602002820160005b8382111561251b57835183826101000a81548160ff021916908360078111156125a9576125a96128d9565b0217905550926020019260010160208160000104928301926001030261257e565b5080546125d690613544565b6000825580601f106125e6575050565b601f01602090049060005260206000209081019061122191906126b7565b508054600082559060005260206000209081019061122191906126b7565b508054600082559060005260206000209081019061122191906126cc565b50805460008255601f01602090049060005260206000209081019061122191906126b7565b6040518061012001604052806126796126e9565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b808211156123cf57600081556001016126b8565b808211156123cf5760006126e08282612604565b506001016126cc565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016127926040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156127a957600080fd5b5035919050565b60005b838110156127cb5781810151838201526020016127b3565b50506000910152565b600081518084526127ec8160208601602086016127b0565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561283057815187529582019590820190600101612814565b509495945050505050565b600081518084526020808501945080840160005b8381101561283057815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161284f565b600082825180855260208086019550808260051b84010181860160005b848110156128cc57601f198684030189526128ba838351612800565b9884019892509083019060010161289e565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612918576129186128d9565b9052565b6000815160c0845261293160c085018261283b565b90506020808401518583038287015261294a838261283b565b92505060408401518583036040870152612964838261283b565b9250506060840151858303606087015261297e8382612881565b925050608084015185830360808701526129988382612881565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156129e2576129ce828651612908565b9383019360019290920191908301906129bb565b509695505050505050565b60006101208251818552612a03828601826127d4565b9150506020830151612a2d602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612a55604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612a6d8282612800565b91505060808301518482036080860152612a878282612800565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612ac0838261291c565b9695505050505050565b6000610100808352612ade8184018c6129ed565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b602081526000612b336020830184612800565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612b8c57612b8c612b3a565b60405290565b604051610120810167ffffffffffffffff81118282101715612b8c57612b8c612b3a565b604051610140810167ffffffffffffffff81118282101715612b8c57612b8c612b3a565b60405160e0810167ffffffffffffffff81118282101715612b8c57612b8c612b3a565b604051601f8201601f1916810167ffffffffffffffff81118282101715612c2657612c26612b3a565b604052919050565b600067ffffffffffffffff821115612c4857612c48612b3a565b5060051b60200190565b600067ffffffffffffffff821115612c6c57612c6c612b3a565b50601f01601f191660200190565b600082601f830112612c8b57600080fd5b8135612c9e612c9982612c52565b612bfd565b818152846020838601011115612cb357600080fd5b816020850160208301376000918101602001919091529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461122157600080fd5b8035612cfd81612cd0565b919050565b600082601f830112612d1357600080fd5b81356020612d23612c9983612c2e565b82815260059290921b84018101918181019086841115612d4257600080fd5b8286015b848110156129e25780358352918301918301612d46565b600082601f830112612d6e57600080fd5b81356020612d7e612c9983612c2e565b82815260059290921b84018101918181019086841115612d9d57600080fd5b8286015b848110156129e2578035612db481612cd0565b8352918301918301612da1565b600082601f830112612dd257600080fd5b81356020612de2612c9983612c2e565b82815260059290921b84018101918181019086841115612e0157600080fd5b8286015b848110156129e257803567ffffffffffffffff811115612e255760008081fd5b612e338986838b0101612d02565b845250918301918301612e05565b600082601f830112612e5257600080fd5b81356020612e62612c9983612c2e565b82815260059290921b84018101918181019086841115612e8157600080fd5b8286015b848110156129e257803560048110612e9d5760008081fd5b8352918301918301612e85565b600060c08284031215612ebc57600080fd5b612ec4612b69565b9050813567ffffffffffffffff80821115612ede57600080fd5b612eea85838601612d5d565b83526020840135915080821115612f0057600080fd5b612f0c85838601612d5d565b60208401526040840135915080821115612f2557600080fd5b612f3185838601612d5d565b60408401526060840135915080821115612f4a57600080fd5b612f5685838601612dc1565b60608401526080840135915080821115612f6f57600080fd5b612f7b85838601612dc1565b608084015260a0840135915080821115612f9457600080fd5b50612fa184828501612e41565b60a08301525092915050565b60006101208284031215612fc057600080fd5b612fc8612b92565b9050813567ffffffffffffffff80821115612fe257600080fd5b612fee85838601612c7a565b8352612ffc60208501612cf2565b602084015261300d60408501612cf2565b6040840152606084013591508082111561302657600080fd5b61303285838601612d02565b6060840152608084013591508082111561304b57600080fd5b61305785838601612d02565b608084015260a084013560a084015260c084013560c084015260e084013560e08401526101009150818401358181111561309057600080fd5b61309c86828701612eaa565b8385015250505092915050565b63ffffffff8116811461122157600080fd5b8035612cfd816130a9565b600082601f8301126130d757600080fd5b813560206130e7612c9983612c2e565b82815260059290921b8401810191818101908684111561310657600080fd5b8286015b848110156129e2578035600881106131225760008081fd5b835291830191830161310a565b80358015158114612cfd57600080fd5b6000610120828403121561315257600080fd5b61315a612b92565b9050813567ffffffffffffffff8082111561317457600080fd5b61318085838601612fad565b83526020840135602084015260408401356040840152606084013560608401526131ac608085016130bb565b60808401526131bd60a085016130bb565b60a08401526131ce60c085016130bb565b60c084015260e08401359150808211156131e757600080fd5b506131f4848285016130c6565b60e08301525061010061320881840161312f565b9082015292915050565b6000602080838503121561322557600080fd5b823567ffffffffffffffff8082111561323d57600080fd5b818501915085601f83011261325157600080fd5b813561325f612c9982612c2e565b81815260059190911b8301840190848101908883111561327e57600080fd5b8585015b838110156132b65780358581111561329a5760008081fd5b6132a88b89838a010161313f565b845250918601918601613282565b5098975050505050505050565b6000602082840312156132d557600080fd5b813567ffffffffffffffff808211156132ed57600080fd5b90830190610140828603121561330257600080fd5b61330a612bb6565b61331383612cf2565b815261332160208401612cf2565b602082015261333260408401612cf2565b604082015261334360608401612cf2565b606082015261335460808401612cf2565b608082015261336560a08401612cf2565b60a082015261337660c08401612cf2565b60c082015261338760e08401612cf2565b60e082015261010061339a818501612cf2565b9082015261012083810135838111156133b257600080fd5b6133be88828701612d5d565b918301919091525095945050505050565b600080604083850312156133e257600080fd5b82359150602083013567ffffffffffffffff81111561340057600080fd5b61340c8582860161313f565b9150509250929050565b60006020828403121561342857600080fd5b8135612b3381612cd0565b60088110612918576129186128d9565b600081518084526020808501945080840160005b838110156128305761346a878351613433565b9582019590820190600101613457565b60006101208251818552613490828601826129ed565b91505060208301516020850152604083015160408501526060830151606085015260808301516134c8608086018263ffffffff169052565b5060a08301516134e060a086018263ffffffff169052565b5060c08301516134f860c086018263ffffffff169052565b5060e083015184820360e08601526135108282613443565b915050610100808401516135278287018215159052565b5090949350505050565b602081526000612b33602083018461347a565b600181811c9082168061355857607f821691505b602082108103613591577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051612cfd81612cd0565b6000602082840312156135e357600080fd5b8151612b3381612cd0565b60006020828403121561360057600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261364860c0830186612800565b828103608084015261365a8186612800565b91505061366a60a0830184612908565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036136d5576136d5613675565b5060010190565b600082613712577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f82111561376157600081815260208120601f850160051c8101602086101561373e5750805b601f850160051c820191505b8181101561375d5782815560010161374a565b5050505b505050565b815167ffffffffffffffff81111561378057613780612b3a565b6137948161378e8454613544565b84613717565b602080601f8311600181146137e757600084156137b15750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561375d565b600085815260208120601f198616915b82811015613816578886015182559484019460019091019084016137f7565b508582101561385257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561387557613875613675565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156138ee577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526138dc85835161347a565b945092850192908501906001016138a2565b5092979650505050505050565b600082601f83011261390c57600080fd5b815161391a612c9982612c52565b81815284602083860101111561392f57600080fd5b6139408260208301602087016127b0565b949350505050565b8051612cfd816130a9565b60006020828403121561396557600080fd5b815167ffffffffffffffff8082111561397d57600080fd5b9083019060e0828603121561399157600080fd5b613999612bda565b8251828111156139a857600080fd5b6139b4878286016138fb565b8252506020830151828111156139c957600080fd5b6139d5878286016138fb565b6020830152506139e7604084016135c6565b604082015260608301516060820152613a0260808401613948565b6080820152613a1360a08401613948565b60a0820152613a2460c08401613948565b60c082015295945050505050565b60008154613a3f81613544565b808552602060018381168015613a5c5760018114613a7657613aa4565b60ff198516838901528284151560051b8901019550613aa4565b866000528260002060005b85811015613a9c5781548a8201860152908301908401613a81565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b8381101561283057815487529582019560019182019101613ac8565b6000815480845260208085019450836000528060002060005b8381101561283057815473ffffffffffffffffffffffffffffffffffffffff1687529582019560019182019101613afd565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015613b7b578284038952613b698483613aaf565b98850198935060019182019101613b52565b5091979650505050505050565b60c082526000613b9b60c0840183613ae4565b6001602085830381870152613bb283838701613ae4565b92508583036040870152613bc98360028701613ae4565b9250606086840381880152613be18460038801613b2f565b9350608087850381890152613bf98560048901613b2f565b94506005870160a0898703818b0152868254613c19818a90815260200190565b600094855260208520995091505b80601f85011015613e9657885460ff613c4284828416612908565b613c53898501828460081c16612908565b613c6560408501828460101c16612908565b613c76888501828460181c16612908565b613c8687850182848c1c16612908565b613c97858501828460281c16612908565b613ca960c08501828460301c16612908565b60e0613cbc818601838560381c16612908565b613ccf6101008601838560401c16612908565b613ce26101208601838560481c16612908565b613cf56101408601838560501c16612908565b613d086101608601838560581c16612908565b613d1a610180860183858c1c16612908565b613d2d6101a08601838560681c16612908565b613d406101c08601838560701c16612908565b613d536101e08601838560781c16612908565b613d65610200860183858b1c16612908565b613d786102208601838560881c16612908565b613d8b6102408601838560901c16612908565b613d9e6102608601838560981c16612908565b613db061028086018385891c16612908565b613dc36102a08601838560a81c16612908565b613dd66102c08601838560b01c16612908565b613de96102e08601838560b81c16612908565b613dfc6103008601838560c01c16612908565b613e0f6103208601838560c81c16612908565b613e226103408601838560d01c16612908565b613e356103608601838560d81c16612908565b613e4761038086018385841c16612908565b50613e5b6103a08501828460e81c16612908565b613e6e6103c08501828460f01c16612908565b50613e806103e084018260f81c612908565b5097870197928601926104009190910190613c27565b97549780841015613eb757613eae8260ff8b16612908565b92870192908601905b80841015613ed857613ecf8260ff8b60081c16612908565b92870192908601905b80841015613ef957613ef08260ff8b60101c16612908565b92870192908601905b80841015613f1a57613f118260ff8b60181c16612908565b92870192908601905b80841015613f3a57613f318260ff8b8a1c16612908565b92870192908601905b80841015613f5b57613f528260ff8b60281c16612908565b92870192908601905b80841015613f7c57613f738260ff8b60301c16612908565b92870192908601905b80841015613f9d57613f948260ff8b60381c16612908565b92870192908601905b80841015613fbe57613fb58260ff8b60401c16612908565b92870192908601905b80841015613fdf57613fd68260ff8b60481c16612908565b92870192908601905b8084101561400057613ff78260ff8b60501c16612908565b92870192908601905b80841015614021576140188260ff8b60581c16612908565b92870192908601905b80841015614041576140388260ff8b891c16612908565b92870192908601905b80841015614062576140598260ff8b60681c16612908565b92870192908601905b808410156140835761407a8260ff8b60701c16612908565b92870192908601905b808410156140a45761409b8260ff8b60781c16612908565b92870192908601905b808410156140c4576140bb8260ff8b881c16612908565b92870192908601905b808410156140e5576140dc8260ff8b60881c16612908565b92870192908601905b80841015614106576140fd8260ff8b60901c16612908565b92870192908601905b808410156141275761411e8260ff8b60981c16612908565b92870192908601905b808410156141475761413e8260ff8b861c16612908565b92870192908601905b808410156141685761415f8260ff8b60a81c16612908565b92870192908601905b80841015614189576141808260ff8b60b01c16612908565b92870192908601905b808410156141aa576141a18260ff8b60b81c16612908565b92870192908601905b808410156141cb576141c28260ff8b60c01c16612908565b92870192908601905b808410156141ec576141e38260ff8b60c81c16612908565b92870192908601905b8084101561420d576142048260ff8b60d01c16612908565b92870192908601905b8084101561422e576142258260ff8b60d81c16612908565b92870192908601905b8084101561424f576142468260ff8b60e01c16612908565b92870192908601905b80841015614270576142678260ff8b60e81c16612908565b92870192908601905b80841015614291576142888260ff8b60f01c16612908565b92870192908601905b808410156142ab576142a6828a60f81c612908565b908601905b509a9950505050505050505050565b60006101208084526142ce81850184613a32565b90506142f1600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff90811660208601526002840154166040850152838103606085015261432e8160038501613aaf565b905083810360808501526143458160048501613aaf565b9050600583015460a0850152600683015460c0850152600783015460e08501528381036101008501526139408160088501613b88565b805480835260008281526020808220940193909190825b82601f8201101561461257815460ff6143ad88828416613433565b60206143c0818a01838560081c16613433565b60406143d3818b01848660101c16613433565b60606143e6818c01858760181c16613433565b60806143f8818d018688871c16613433565b60a0935061440d848d01868860281c16613433565b60c0614420818e01878960301c16613433565b60e0614433818f01888a60381c16613433565b6144456101008f01888a881c16613433565b6144586101208f01888a60481c16613433565b61446b6101408f01888a60501c16613433565b61447e6101608f01888a60581c16613433565b6144906101808f01888a871c16613433565b6144a36101a08f01888a60681c16613433565b6144b66101c08f01888a60701c16613433565b6144c96101e08f01888a60781c16613433565b6144db6102008f01888a861c16613433565b6144ee6102208f01888a60881c16613433565b6145016102408f01888a60901c16613433565b6145146102608f01888a60981c16613433565b6145266102808f01888a891c16613433565b6145396102a08f01888a60a81c16613433565b61454c6102c08f01888a60b01c16613433565b61455f6102e08f01888a60b81c16613433565b6145716103008f01888a851c16613433565b6145846103208f01888a60c81c16613433565b6145976103408f01888a60d01c16613433565b6145aa6103608f01888a60d81c16613433565b6145bc6103808f01888a841c16613433565b5050505050506145d56103a08901828460e81c16613433565b6145e86103c08901828460f01c16613433565b506145fa6103e088018260f81c613433565b50610400959095019460019190910190602001614392565b905490828110156146355761462a8660ff8416613433565b602095909501946001015b828110156146585761464d8660ff8460081c16613433565b602095909501946001015b8281101561467b576146708660ff8460101c16613433565b602095909501946001015b8281101561469e576146938660ff8460181c16613433565b602095909501946001015b828110156146c1576146b68660ff8460201c16613433565b602095909501946001015b828110156146e4576146d98660ff8460281c16613433565b602095909501946001015b82811015614707576146fc8660ff8460301c16613433565b602095909501946001015b8281101561472a5761471f8660ff8460381c16613433565b602095909501946001015b8281101561474d576147428660ff8460401c16613433565b602095909501946001015b82811015614770576147658660ff8460481c16613433565b602095909501946001015b82811015614793576147888660ff8460501c16613433565b602095909501946001015b828110156147b6576147ab8660ff8460581c16613433565b602095909501946001015b828110156147d9576147ce8660ff8460601c16613433565b602095909501946001015b828110156147fc576147f18660ff8460681c16613433565b602095909501946001015b8281101561481f576148148660ff8460701c16613433565b602095909501946001015b82811015614842576148378660ff8460781c16613433565b602095909501946001015b828110156148655761485a8660ff8460801c16613433565b602095909501946001015b828110156148885761487d8660ff8460881c16613433565b602095909501946001015b828110156148ab576148a08660ff8460901c16613433565b602095909501946001015b828110156148ce576148c38660ff8460981c16613433565b602095909501946001015b828110156148f1576148e68660ff8460a01c16613433565b602095909501946001015b82811015614914576149098660ff8460a81c16613433565b602095909501946001015b828110156149375761492c8660ff8460b01c16613433565b602095909501946001015b8281101561495a5761494f8660ff8460b81c16613433565b602095909501946001015b8281101561497d576149728660ff8460c01c16613433565b602095909501946001015b828110156149a0576149958660ff8460c81c16613433565b602095909501946001015b828110156149c3576149b88660ff8460d01c16613433565b602095909501946001015b828110156149e6576149db8660ff8460d81c16613433565b602095909501946001015b82811015614a09576149fe8660ff8460e01c16613433565b602095909501946001015b82811015614a2c57614a218660ff8460e81c16613433565b602095909501946001015b82811015614a4f57614a448660ff8460f01c16613433565b602095909501946001015b82811015614a6b57614a64868360f81c613433565b6020860195505b5093949350505050565b602081526000610120806020840152614a926101408401856142ba565b600e8501546040850152600f850154606085015260108501546080850152601185015463ffffffff80821660a0870152602082901c811660c0870152614ae560e08701828460401c1663ffffffff169052565b5050601f1984820301610100850152614b01816012870161437b565b9050614b11601386015460ff1690565b151591909301525091905056fea26469706673582212209442a44fa472af77909d2baf1c52acf8b521d621f814781209a206a9a414d52a64736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
