/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "raceUploader",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "createdQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceEntryTicketCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raceEntryTicket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b506040516200379638038062003796833981016040819052620000399162000703565b80516101408201516001600055829190620000543362000299565b80518251146200006357600080fd5b60005b82518110156200017c5760005b82828151811062000088576200008862000850565b602002602001015151811015620001685760026000858481518110620000b257620000b262000850565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ef57620000ef62000850565b602002602001015182815181106200010b576200010b62000850565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055620001608162000866565b905062000073565b50620001748162000866565b905062000066565b5050815180518392506004916200019991839160200190620002eb565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805483169184169190911790556101008501516008850180548316918416919091179055610120850151600985018054909216921691909117905561014083015180516200028d92600a850192019062000355565b5090505050506200088e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805482825590600052602060002090810192821562000343579160200282015b828111156200034357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200030c565b5062000351929150620003b5565b5090565b828054828255906000526020600020908101928215620003a7579160200282015b82811115620003a7578251805162000396918491602090910190620003cc565b509160200191906001019062000376565b50620003519291506200047a565b5b80821115620003515760008155600101620003b6565b82805482825590600052602060002090600701600890048101928215620003435791602002820160005b838211156200043957835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003f6565b80156200046b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000439565b505062000351929150620003b5565b80821115620003515760006200049182826200049b565b506001016200047a565b508054600082556007016008900490600052602060002090810190620004c29190620003b5565b50565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620005015762000501620004c5565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620005325762000532620004c5565b604052919050565b60006001600160401b03821115620005565762000556620004c5565b5060051b60200190565b80516001600160a01b03811681146200057857600080fd5b919050565b600082601f8301126200058f57600080fd5b81516020620005a8620005a2836200053a565b62000507565b82815260059290921b84018101918181019086841115620005c857600080fd5b8286015b84811015620005ee57620005e08162000560565b8352918301918301620005cc565b509695505050505050565b600082601f8301126200060b57600080fd5b815160206200061e620005a2836200053a565b828152600592831b85018201928282019190878511156200063e57600080fd5b8387015b85811015620006f65780516001600160401b03811115620006635760008081fd5b8801603f81018a13620006765760008081fd5b8581015160406200068b620005a2836200053a565b82815291851b8301810191888101908d841115620006a95760008081fd5b938201935b83851015620006e457845192506001600160e01b031983168314620006d35760008081fd5b8282529389019390890190620006ae565b88525050509385019350840162000642565b5090979650505050505050565b6000602082840312156200071657600080fd5b81516001600160401b03808211156200072e57600080fd5b9083019061016082860312156200074457600080fd5b6200074e620004db565b8251828111156200075e57600080fd5b6200076c878286016200057d565b8252506200077d6020840162000560565b6020820152620007906040840162000560565b6040820152620007a36060840162000560565b6060820152620007b66080840162000560565b6080820152620007c960a0840162000560565b60a0820152620007dc60c0840162000560565b60c0820152620007ef60e0840162000560565b60e08201526101006200080481850162000560565b908201526101206200081884820162000560565b9082015261014083810151838111156200083157600080fd5b6200083f88828701620005f9565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200088757634e487b7160e01b600052601160045260246000fd5b5060010190565b612ef8806200089e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063ddf0b00911610066578063ddf0b009146102db578063e200c857146102fb578063e3c5fc041461030e578063f2fde38b1461035857600080fd5b80638da5cb5b146101d157806390c14066146101f9578063af640d0f1461020c578063d8de65871461022357600080fd5b80633b930d0c116100d35780633b930d0c1461015f5780635b19e29414610172578063715018a6146101b6578063857b29e5146101be57600080fd5b80630f7921ed146100fa57806319e3e5921461012a578063212049481461013f575b600080fd5b61010d610108366004611dec565b61036b565b604051610121989796959493929190611f61565b60405180910390f35b61013d610138366004611dec565b61057a565b005b61015261014d366004611dec565b610aad565b6040516101219190611fb7565b61013d61016d36600461229e565b610b12565b6101856101803660046123cf565b610c62565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610121565b61013d610ca8565b61013d6101cc3660046126b0565b610cbc565b60015460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610121565b61013d6102073660046126f7565b610fa8565b61021560035481565b604051908152602001610121565b600554600654600754600854600954600a54600b54600c54600d546102749873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610121565b6102ee6102e9366004611dec565b6113f5565b6040516101219190612857565b610152610309366004611dec565b611684565b61034361031c366004611dec565b6000908152600f60205260409020600c015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610121565b61013d61036636600461286a565b6116e7565b600f602052806000526040600020600091509050806000016040518061010001604052908160008201805461039f90612887565b80601f01602080910402602001604051908101604052809291908181526020018280546103cb90612887565b80156104185780601f106103ed57610100808354040283529160200191610418565b820191906000526020600020905b8154815290600101906020018083116103fb57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104a657602002820191906000526020600020905b815481526020019060010190808311610492575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104fe57602002820191906000526020600020905b8154815260200190600101908083116104ea575b505050918352505060058201546020820152600682015460408201526007909101546060909101526009820154600a830154600b840154600c909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b6000805b3360009081526002602052604090205481101561063757336000908152600260205260408120805491357fffffffff000000000000000000000000000000000000000000000000000000001691839081106105db576105db6128da565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361062757600191505b61063081612938565b905061057e565b508061064257600080fd5b6000828152600f60209081526040808320600c0180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff166c01000000000000000000000000179055805160018082528183019092529182810190803683375050506000848152600f60205260408120600601548251929350918391906106cb576106cb6128da565b602002602001018181525050600080826000815181106106ed576106ed6128da565b602002602001015111156107aa576009546000858152600f6020526040908190206005015490517fead84e8400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ead84e84916107669160040190815260200190565b602060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a79190612970565b90505b60005b6000858152600f6020526040902060030154811015610a7b576000858152600f602052604081206003018054839081106107e9576107e96128da565b90600052602060002001541115610a6b57600a546000868152600f60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610840576108406128da565b9060005260206000200154876040518363ffffffff1660e01b8152600401610872929190918252602082015260400190565b6020604051808303816000875af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b5919061298d565b6000036108c157600080fd5b6000836000815181106108d6576108d66128da565b60200260200101511115610a6b57600a546000868152600f602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf91908590811061092a5761092a6128da565b90600052602060002001546040518263ffffffff1660e01b815260040161095391815260200190565b602060405180830381865afa158015610970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109949190612970565b600b5490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c2908516156109c75760006109da565b6000888152600f60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615610a13576002610a16565b60035b6040518863ffffffff1660e01b8152600401610a37969594939291906129a6565b6000604051808303818588803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b5050505050505b610a7481612938565b90506107ad565b5060405184907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a250505050565b6000818152600f6020908152604091829020600401805483518184028101840190945280845260609392830182828015610b0657602002820191906000526020600020905b815481526020019060010190808311610af2575b50505050509050919050565b610b1a6117a0565b805180518291600491610b34918391602090910190611afe565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e08501516007850180548316918416919091179055610100850151600885018054831691841691909117905561012085015160098501805490921692169190911790556101408301518051610c4b92600a8501920190611b88565b50508151610140830151610c5f9250611821565b50565b60026020528160005260406000208181548110610c7e57600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b610cb06117a0565b610cba6000611a87565b565b6000805b33600090815260026020526040902054811015610d7957336000908152600260205260408120805491357fffffffff00000000000000000000000000000000000000000000000000000000169183908110610d1d57610d1d6128da565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610d6957600191505b610d7281612938565b9050610cc0565b5080610d8457600080fd5b6000838152600f60205260409020825180518492919082908190610da89082612a92565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155604085015160028501805491909316911617905560608301518051610e209260038501920190611be1565b5060808201518051610e3c916004840191602090910190611be1565b5060a0820151600582015560c0820151600682015560e0909101516007909101556020828101518051610e759260088501920190611be1565b5060408281015160098301556060830151600a8301556080830151600b83015560a0830151600c909201805460c085015160e08601516101009096015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9788166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928816640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090941697909616969096179190911716929092179290921790556000848152600f602052819020905184917f15555e31e56029e131307529a854fd2606a24ed59b976f2435a7111e1683a2af91610f9b9190612d30565b60405180910390a2505050565b6000805b3360009081526002602052604090205481101561106557336000908152600260205260408120805491357fffffffff00000000000000000000000000000000000000000000000000000000169183908110611009576110096128da565b90600052602060002090600891828204019190066004029054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361105557600191505b61105e81612938565b9050610fac565b508061107057600080fd5b6000805b835181101561139a57600954845173ffffffffffffffffffffffffffffffffffffffff90911690633cc25270908690849081106110b3576110b36128da565b60200260200101516000015160a001516040518263ffffffff1660e01b81526004016110e191815260200190565b602060405180830381865afa1580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611122919061298d565b9150838181518110611136576111366128da565b602002602001015160a0015163ffffffff1684828151811061115a5761115a6128da565b60200260200101516000015160c001516111749190612dee565b821061117f57600080fd5b838181518110611191576111916128da565b6020908102919091018101516003546000908152600f909252604090912081518051829081906111c19082612a92565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516112399260038501920190611be1565b5060808201518051611255916004840191602090910190611be1565b5060a0820151600582015560c0820151600682015560e090910151600790910155602082810151805161128e9260088501920190611be1565b50604082015160098201556060820151600a8201556080820151600b82015560a0820151600c909101805460c084015160e08501516101009095015115156c01000000000000000000000000027fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff63ffffffff9687166801000000000000000002167fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff928716640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090941696909516959095179190911716919091179190911790556003805460009061138690612938565b9091555061139381612938565b9050611074565b5060016003546113aa9190612e29565b83516003546113b99190612e29565b7f8c0d15f9be4efa955274ee73bfb86e41fb64bb7a27d9b670e7cbecf28f7fa83e856040516113e89190612e42565b60405180910390a3505050565b6113fd611c1c565b6000828152600f602052604090819020815161022081019092528054829061012082019083908290829061143090612887565b80601f016020809104026020016040519081016040528092919081815260200182805461145c90612887565b80156114a95780601f1061147e576101008083540402835291602001916114a9565b820191906000526020600020905b81548152906001019060200180831161148c57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561153757602002820191906000526020600020905b815481526020019060010190808311611523575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561158f57602002820191906000526020600020905b81548152602001906001019080831161157b575b50505050508152602001600582015481526020016006820154815260200160078201548152505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561160957602002820191906000526020600020905b8154815260200190600101908083116115f5575b505050918352505060098201546020820152600a8201546040820152600b8201546060820152600c9091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600f6020908152604091829020600301805483518184028101840190945280845260609392830182828015610b065760200282019190600052602060002090815481526020019060010190808311610af25750505050509050919050565b6116ef6117a0565b73ffffffffffffffffffffffffffffffffffffffff8116611797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610c5f81611a87565b60015473ffffffffffffffffffffffffffffffffffffffff163314610cba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161178e565b805182511461182f57600080fd5b60005b8251811015611a825760005b828281518110611850576118506128da565b602002602001015151811015611a715760026000858481518110611876576118766128da565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061199457600260008584815181106118d8576118d86128da565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061192c5761192c6128da565b60200260200101518281518110611945576119456128da565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055611a61565b8282815181106119a6576119a66128da565b602002602001015181815181106119bf576119bf6128da565b6020026020010151600260008685815181106119dd576119dd6128da565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611a3057611a306128da565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b611a6a81612938565b905061183e565b50611a7b81612938565b9050611832565b505050565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215611b78579160200282015b82811115611b7857825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611b1e565b50611b84929150611cee565b5090565b828054828255906000526020600020908101928215611bd5579160200282015b82811115611bd55782518051611bc5918491602090910190611d03565b5091602001919060010190611ba8565b50611b84929150611daa565b828054828255906000526020600020908101928215611b78579160200282015b82811115611b78578251825591602001919060010190611c01565b604051806101200160405280611c9c60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b5b80821115611b845760008155600101611cef565b82805482825590600052602060002090600701600890048101928215611b785791602002820160005b83821115611d6d57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302611d2c565b8015611d9d5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611d6d565b5050611b84929150611cee565b80821115611b84576000611dbe8282611dc7565b50600101611daa565b508054600082556007016008900490600052602060002090810190610c5f9190611cee565b600060208284031215611dfe57600080fd5b5035919050565b600081518084526020808501945080840160005b83811015611e3557815187529582019590820190600101611e19565b509495945050505050565b6000610100825181855280518083870152600092505b80831015611e7857602083830101516101208488010152602083019250611e56565b610120925060008382880101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f82011686019150506020840151611ed7602087018273ffffffffffffffffffffffffffffffffffffffff169052565b506040840151611eff604087018273ffffffffffffffffffffffffffffffffffffffff169052565b50606084015182868303016060870152611f1b83830182611e05565b9250505060808301518482036080860152611f368282611e05565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b6000610100808352611f758184018c611e40565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b602081526000611fca6020830184611e05565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561202457612024611fd1565b60405290565b604051610100810167ffffffffffffffff8111828210171561202457612024611fd1565b604051610120810167ffffffffffffffff8111828210171561202457612024611fd1565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120b9576120b9611fd1565b604052919050565b600067ffffffffffffffff8211156120db576120db611fd1565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610c5f57600080fd5b8035612112816120e5565b919050565b600082601f83011261212857600080fd5b8135602061213d612138836120c1565b612072565b82815260059290921b8401810191818101908684111561215c57600080fd5b8286015b84811015612180578035612173816120e5565b8352918301918301612160565b509695505050505050565b600082601f83011261219c57600080fd5b813560206121ac612138836120c1565b828152600592831b85018201928282019190878511156121cb57600080fd5b8387015b8581101561229157803567ffffffffffffffff8111156121ef5760008081fd5b8801603f81018a136122015760008081fd5b858101356040612213612138836120c1565b82815291851b8301810191888101908d8411156122305760008081fd5b938201935b8385101561228057843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146122705760008081fd5b8282529389019390890190612235565b8852505050938501935084016121cf565b5090979650505050505050565b6000602082840312156122b057600080fd5b813567ffffffffffffffff808211156122c857600080fd5b9083019061016082860312156122dd57600080fd5b6122e5612000565b8235828111156122f457600080fd5b61230087828601612117565b82525061230f60208401612107565b602082015261232060408401612107565b604082015261233160608401612107565b606082015261234260808401612107565b608082015261235360a08401612107565b60a082015261236460c08401612107565b60c082015261237560e08401612107565b60e0820152610100612388818501612107565b9082015261012061239a848201612107565b9082015261014083810135838111156123b257600080fd5b6123be8882870161218b565b918301919091525095945050505050565b600080604083850312156123e257600080fd5b82356123ed816120e5565b946020939093013593505050565b600082601f83011261240c57600080fd5b813567ffffffffffffffff81111561242657612426611fd1565b61245760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612072565b81815284602083860101111561246c57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261249a57600080fd5b813560206124aa612138836120c1565b82815260059290921b840181019181810190868411156124c957600080fd5b8286015b8481101561218057803583529183019183016124cd565b600061010082840312156124f757600080fd5b6124ff61202a565b9050813567ffffffffffffffff8082111561251957600080fd5b612525858386016123fb565b835261253360208501612107565b602084015261254460408501612107565b6040840152606084013591508082111561255d57600080fd5b61256985838601612489565b6060840152608084013591508082111561258257600080fd5b5061258f84828501612489565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b803563ffffffff8116811461211257600080fd5b8035801515811461211257600080fd5b600061012082840312156125f057600080fd5b6125f861204e565b9050813567ffffffffffffffff8082111561261257600080fd5b61261e858386016124e4565b8352602084013591508082111561263457600080fd5b5061264184828501612489565b60208301525060408201356040820152606082013560608201526080820135608082015261267160a083016125b9565b60a082015261268260c083016125b9565b60c082015261269360e083016125b9565b60e08201526101006126a68184016125cd565b9082015292915050565b600080604083850312156126c357600080fd5b82359150602083013567ffffffffffffffff8111156126e157600080fd5b6126ed858286016125dd565b9150509250929050565b6000602080838503121561270a57600080fd5b823567ffffffffffffffff8082111561272257600080fd5b818501915085601f83011261273657600080fd5b8135612744612138826120c1565b81815260059190911b8301840190848101908883111561276357600080fd5b8585015b8381101561279b5780358581111561277f5760008081fd5b61278d8b89838a01016125dd565b845250918601918601612767565b5098975050505050505050565b600061012082518185526127be82860182611e40565b915050602083015184820360208601526127d88282611e05565b91505060408301516040850152606083015160608501526080830151608085015260a083015161281060a086018263ffffffff169052565b5060c083015161282860c086018263ffffffff169052565b5060e083015161284060e086018263ffffffff169052565b506101009283015115159390920192909252919050565b602081526000611fca60208301846127a8565b60006020828403121561287c57600080fd5b8135611fca816120e5565b600181811c9082168061289b57607f821691505b6020821081036128d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361296957612969612909565b5060010190565b60006020828403121561298257600080fd5b8151611fca816120e5565b60006020828403121561299f57600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c060608301526129e760c0830186611e05565b82810360808401526129f98186611e05565b91505060048310612a33577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260a0830152979650505050505050565b601f821115611a8257600081815260208120601f850160051c81016020861015612a6b5750805b601f850160051c820191505b81811015612a8a57828155600101612a77565b505050505050565b815167ffffffffffffffff811115612aac57612aac611fd1565b612ac081612aba8454612887565b84612a44565b602080601f831160018114612b135760008415612add5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612a8a565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612b6057888601518255948401946001909101908401612b41565b5085821015612b9c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60008154612bb981612887565b808552602060018381168015612bd65760018114612c0e57612c3c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b8901019550612c3c565b866000528260002060005b85811015612c345781548a8201860152908301908401612c19565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b83811015611e3557815487529582019560019182019101612c60565b6000610100808452612c9081850184612bac565b9050612cb3600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff908116602086015260028401541660408501528381036060850152612cf08160038501612c47565b90508381036080850152612d078160048501612c47565b600584015460a0860152600684015460c086015260079093015460e09094019390935250919050565b602081526000610120806020840152612d4d610140840185612c7c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848203016040850152612d848160088701612c47565b60098601546060860152600a8601546080860152600b86015460a0860152600c86015463ffffffff80821660c0880152602082901c811660e0880152604082901c81166101008801529192509050612de583860160ff8360601c1615159052565b50949350505050565b600082612e24577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b81810381811115612e3c57612e3c612909565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612eb5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612ea38583516127a8565b94509285019290850190600101612e69565b509297965050505050505056fea2646970667358221220aca21079e2508399217d80409d283df9bc06f670abedc95d8c528d6286fee78064736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
