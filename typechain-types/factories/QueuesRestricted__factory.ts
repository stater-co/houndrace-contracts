/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesRestricted,
  QueuesRestrictedInterface,
  QueuesConstructor,
} from "../QueuesRestricted";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "closeQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct[]",
        name: "theQueues",
        type: "tuple[]",
      },
    ],
    name: "createQueues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "deleteQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "editQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b506040516200516e3803806200516e8339810160408190526200003891620003d9565b8062000044336200013d565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b929101906200024c565b50505061012081015162000135906200018d565b50506200053c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024857600d6000838381518110620001b357620001b3620004fe565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d6000848481518110620002035762000203620004fe565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002408162000514565b905062000190565b5050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b600060208284031215620003ec57600080fd5b81516001600160401b03808211156200040457600080fd5b9083019061014082860312156200041a57600080fd5b62000424620002e3565b6200042f836200030f565b81526200043f602084016200030f565b602082015262000452604084016200030f565b604082015262000465606084016200030f565b606082015262000478608084016200030f565b60808201526200048b60a084016200030f565b60a08201526200049e60c084016200030f565b60c0820152620004b160e084016200030f565b60e0820152610100620004c68185016200030f565b908201526101208381015183811115620004df57600080fd5b620004ed888287016200032c565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053557634e487b7160e01b600052601160045260246000fd5b5060010190565b614c22806200054c6000396000f3fe6080604052600436106100eb5760003560e01c80639e2042cd11610084578063ddf0b00911610056578063ddf0b00914610370578063e11523431461039d578063e200c857146103bd578063f2fde38b146103dd57005b80639e2042cd14610227578063af640d0f14610247578063d63a8e111461026b578063d8de6587146102ab57005b80635fcee296116100bd5780635fcee2961461019d578063715018a6146101bd5780638da5cb5b146101d25780639e1687651461020757005b80630f7921ed146100f457806319e3e592146101305780632120494814610150578063451383f21461017d57005b366100f257005b005b34801561010057600080fd5b5061011461010f3660046128af565b6103fd565b6040516101279796959493929190612be2565b60405180910390f35b34801561013c57600080fd5b506100f261014b3660046128af565b61090d565b34801561015c57600080fd5b5061017061016b3660046128af565b610d0a565b6040516101279190612c2e565b34801561018957600080fd5b506100f2610198366004612e1f565b610d6f565b3480156101a957600080fd5b506100f26101b83660046128af565b610e8c565b3480156101c957600080fd5b506100f26113a7565b3480156101de57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610127565b34801561021357600080fd5b506100f261022236600461343e565b6113bb565b34801561023357600080fd5b506100f2610242366004613485565b6116f2565b34801561025357600080fd5b5061025d60015481565b604051908152602001610127565b34801561027757600080fd5b5061029b610286366004613536565b600d6020526000908152604090205460ff1681565b6040519015158152602001610127565b3480156102b757600080fd5b50600254600354600454600554600654600754600854600954600a546103099873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610127565b34801561037c57600080fd5b5061039061038b3660046128af565b611ac3565b6040516101279190613619565b3480156103a957600080fd5b506100f26103b83660046128af565b612087565b3480156103c957600080fd5b506101706103d83660046128af565b6121bf565b3480156103e957600080fd5b506100f26103f8366004613536565b612222565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546104319061362c565b80601f016020809104026020016040519081016040528092919081815260200182805461045d9061362c565b80156104aa5780601f1061047f576101008083540402835291602001916104aa565b820191906000526020600020905b81548152906001019060200180831161048d57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561053857602002820191906000526020600020905b815481526020019060010190808311610524575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561059057602002820191906000526020600020905b81548152602001906001019080831161057c575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561062d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610602575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561069c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610671575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561070b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106e0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107a55760008481526020908190208301805460408051828502810185019091528181529283018282801561079157602002820191906000526020600020905b81548152602001906001019080831161077d575b505050505081526020019060010190610739565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561083e5760008481526020908190208301805460408051828502810185019091528181529283018282801561082a57602002820191906000526020600020905b815481526020019060010190808311610816575b5050505050815260200190600101906107d2565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156108c557602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156108a3576108a36129f1565b8152602060019283018181049485019490930390920291018084116108845790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000009004169060ff1687565b6000818152600c60205260408082206013018054600160ff19909116811790915581518181528083019092528160200160208202803683375050506000838152600c602052604081206006015482519293509183919061096f5761096f61367f565b6020908102919091018101919091526006546000848152600c90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a916109e89160040190815260200190565b602060405180830381865afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2991906136b9565b905060005b6000848152600c6020526040902060030154811015610cd9576000848152600c60205260408120600301805483908110610a6a57610a6a61367f565b90600052602060002001541115610cc9576007546000858152600c60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc919084908110610ac157610ac161367f565b9060005260206000200154866040518363ffffffff1660e01b8152600401610af3929190918252602082015260400190565b6020604051808303816000875af1158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3691906136d6565b600003610b4257600080fd5b6007546000858152600c602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf919085908110610b8857610b8861367f565b90600052602060002001546040518263ffffffff1660e01b8152600401610bb191815260200190565b602060405180830381865afa158015610bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf291906136b9565b60085490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c290851615610c25576000610c38565b6000878152600c60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff831615610c71576002610c74565b60035b6040518863ffffffff1660e01b8152600401610c95969594939291906136ef565b6000604051808303818588803b158015610cae57600080fd5b505af1158015610cc2573d6000803e3d6000fd5b5050505050505b610cd28161378c565b9050610a2e565b5060405183907f1585b0b1b2d8bcdf8f81c972f72a61d4f8aa5d3ef0488f81b3e89589d275a92690600090a2505050565b6000818152600c6020908152604091829020600401805483518184028101840190945280845260609392830182828015610d6357602002820191906000526020600020905b815481526020019060010190808311610d4f575b50505050509050919050565b610d776122d6565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a8054909316941693909317905561012083015180518493610e7792600b929101906124a8565b50905050610e89816101200151612357565b50565b604080516001808252818301909252600091602080830190803683375050506000838152600c6020526040812060060154825192935091839190610ed257610ed261367f565b6020908102919091018101919091526006546000848152600c90925260408083206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ccdac71a91610f4b9160040190815260200190565b602060405180830381865afa158015610f68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8c91906136b9565b905060005b6000848152600c602052604090206003015481101561123c576000848152600c60205260408120600301805483908110610fcd57610fcd61367f565b9060005260206000200154111561122c576007546000858152600c60205260409020600301805473ffffffffffffffffffffffffffffffffffffffff9092169163894f39fc9190849081106110245761102461367f565b9060005260206000200154866040518363ffffffff1660e01b8152600401611056929190918252602082015260400190565b6020604051808303816000875af1158015611075573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109991906136d6565b6000036110a557600080fd5b6007546000858152600c602052604081206003018054919273ffffffffffffffffffffffffffffffffffffffff169163dadddaaf9190859081106110eb576110eb61367f565b90600052602060002001546040518263ffffffff1660e01b815260040161111491815260200190565b602060405180830381865afa158015611131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115591906136b9565b60085490915073ffffffffffffffffffffffffffffffffffffffff9081169063c01f59c29085161561118857600061119b565b6000878152600c60205260409020600601545b6040805160008152602081019091523090859088908a73ffffffffffffffffffffffffffffffffffffffff8316156111d45760026111d7565b60035b6040518863ffffffff1660e01b81526004016111f8969594939291906136ef565b6000604051808303818588803b15801561121157600080fd5b505af1158015611225573d6000803e3d6000fd5b5050505050505b6112358161378c565b9050610f91565b506000838152600c602052604081209081816112588282612532565b6001820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116909155600283018054909116905561129e60038301600061256c565b6112ac60048301600061256c565b600060058301819055600683018190556007830181905560088301906112d2828261256c565b6112e060018301600061256c565b6112ee60028301600061256c565b6112fc60038301600061258a565b61130a60048301600061258a565b6113186005830160006125a8565b50506000600e8501819055600f8501819055601085018190556011850180547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016905561136b92506012850191506125a8565b50601301805460ff1916905560405183907f69e8bd1e5b8aab137b7e121055e1416a466fd9af5ca24bf7bfafd1d89ec5cb2190600090a2505050565b6113af6122d6565b6113b96000612433565b565b600654815160a001516040517fb74a5fbe000000000000000000000000000000000000000000000000000000008152600481019190915260009173ffffffffffffffffffffffffffffffffffffffff169063b74a5fbe90602401600060405180830381865afa158015611432573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261145a919081019061381c565b825160c0015190915061146f906002906138fb565b81606001511061147e57600080fd5b6000838152600c602052604090208251805184929190829081906114a29082613985565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560408501516002850180549190931691161790556060830151805161151a92600385019201906125cd565b50608082015180516115369160048401916020909101906125cd565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191611573918391602001906124a8565b50602082810151805161158c92600185019201906124a8565b50604082015180516115a89160028401916020909101906124a8565b50606082015180516115c4916003840191602090910190612608565b50608082015180516115e0916004840191602090910190612608565b5060a082015180516115fc916005840191602090910190612661565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015163ffffffff908116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090921693169290921791909117905560c08401518051611689935060128501929190910190612710565b5060e091909101516013909101805460ff19169115159190911790556000838152600c602052604090819020905184917f82dbed37f78d77630588e56156586b3fa53d887f992c77b3ba34c1d257e47237916116e59190614ac4565b60405180910390a2505050565b6000805b8251811015611a6a57600654835173ffffffffffffffffffffffffffffffffffffffff9091169063854071ae908590849081106117355761173561367f565b60200260200101516000015160a001516040518263ffffffff1660e01b815260040161176391815260200190565b602060405180830381865afa158015611780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a491906136d6565b91508281815181106117b8576117b861367f565b60200260200101516080015163ffffffff168382815181106117dc576117dc61367f565b60200260200101516000015160c001516117f691906138fb565b821061180157600080fd5b8281815181106118135761181361367f565b6020908102919091018101516001546000908152600c909252604090912081518051829081906118439082613985565b5060208281015160018301805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556040850151600285018054919093169116179055606083015180516118bb92600385019201906125cd565b50608082015180516118d79160048401916020909101906125cd565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151805180516008840191611914918391602001906124a8565b50602082810151805161192d92600185019201906124a8565b50604082015180516119499160028401916020909101906124a8565b5060608201518051611965916003840191602090910190612608565b5060808201518051611981916004840191602090910190612608565b5060a0820151805161199d916005840191602090910190612661565b50505050602083810151600e8401556040840151600f84015560608401516010840155608084015160118401805460a087015163ffffffff908116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090921693169290921791909117905560c08401518051611a2a935060128501929190910190612710565b5060e091909101516013909101805460ff191691151591909117905560018054600090611a569061378c565b90915550611a638161378c565b90506116f6565b5060018054611a799190614b53565b8251600154611a889190614b53565b7f100e6e1e5486e93dafb771b4e1fad5eed26456eecd660e80d767191736d986d084604051611ab79190614b6c565b60405180910390a35050565b611acb612785565b6000828152600c6020526040908190208151610220810190925280548290610100820190839082908290611afe9061362c565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2a9061362c565b8015611b775780601f10611b4c57610100808354040283529160200191611b77565b820191906000526020600020905b815481529060010190602001808311611b5a57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015611c0557602002820191906000526020600020905b815481526020019060010190808311611bf1575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611c5d57602002820191906000526020600020905b815481526020019060010190808311611c49575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015611cfa57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611ccf575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d6957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611d3e575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611dd857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611dad575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611e7257600084815260209081902083018054604080518285028101850190915281815292830182828015611e5e57602002820191906000526020600020905b815481526020019060010190808311611e4a575b505050505081526020019060010190611e06565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611f0b57600084815260209081902083018054604080518285028101850190915281815292830182828015611ef757602002820191906000526020600020905b815481526020019060010190808311611ee3575b505050505081526020019060010190611e9f565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611f9257602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611f7057611f706129f1565b815260206001928301818104948501949093039092029101808411611f515790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000009091041660a084015260128401805482518185028101850190935280835260c090940193919290919083018282801561206757602002820191906000526020600020906000905b82829054906101000a900460ff166006811115612045576120456129f1565b8152602060019283018181049485019490930390920291018084116120265790505b50505091835250506013919091015460ff16151560209091015292915050565b61208f6122d6565b47811115612124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f19350505050610e89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f207769746864726177000000000000604482015260640161211b565b6000818152600c6020908152604091829020600301805483518184028101840190945280845260609392830182828015610d635760200282019190600052602060002090815481526020019060010190808311610d4f5750505050509050919050565b61222a6122d6565b73ffffffffffffffffffffffffffffffffffffffff81166122cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161211b565b610e8981612433565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161211b565b60005b815181101561242f57600d60008383815181106123795761237961367f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d60008484815181106123e0576123e061367f565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff168252810191909152604001600020805460ff19169115159190911790556124288161378c565b905061235a565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215612522579160200282015b8281111561252257825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906124c8565b5061252e9291506127cf565b5090565b50805461253e9061362c565b6000825580601f1061254e575050565b601f016020900490600052602060002090810190610e8991906127cf565b5080546000825590600052602060002090810190610e8991906127cf565b5080546000825590600052602060002090810190610e8991906127e4565b50805460008255601f016020900490600052602060002090810190610e8991906127cf565b828054828255906000526020600020908101928215612522579160200282015b828111156125225782518255916020019190600101906125ed565b828054828255906000526020600020908101928215612655579160200282015b8281111561265557825180516126459184916020909101906125cd565b5091602001919060010190612628565b5061252e9291506127e4565b82805482825590600052602060002090601f016020900481019282156125225791602002820160005b838211156126d657835183826101000a81548160ff021916908360038111156126b5576126b56129f1565b0217905550926020019260010160208160000104928301926001030261268a565b80156127035782816101000a81549060ff02191690556001016020816000010492830192600103026126d6565b505061252e9291506127cf565b82805482825590600052602060002090601f016020900481019282156125225791602002820160005b838211156126d657835183826101000a81548160ff02191690836006811115612764576127646129f1565b02179055509260200192600101602081600001049283019260010302612739565b604051806101000160405280612799612801565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c083015260e09091015290565b5b8082111561252e57600081556001016127d0565b8082111561252e5760006127f8828261256c565b506001016127e4565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016128aa6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156128c157600080fd5b5035919050565b60005b838110156128e35781810151838201526020016128cb565b50506000910152565b600081518084526129048160208601602086016128c8565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156129485781518752958201959082019060010161292c565b509495945050505050565b600081518084526020808501945080840160005b8381101561294857815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612967565b600082825180855260208086019550808260051b84010181860160005b848110156129e457601f198684030189526129d2838351612918565b988401989250908301906001016129b6565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612a3057612a306129f1565b9052565b6000815160c08452612a4960c0850182612953565b905060208084015185830382870152612a628382612953565b92505060408401518583036040870152612a7c8382612953565b92505060608401518583036060870152612a968382612999565b92505060808401518583036080870152612ab08382612999565b60a086810151888303918901919091528051808352908401945060009250908301905b80831015612afa57612ae6828651612a20565b938301936001929092019190830190612ad3565b509695505050505050565b60006101208251818552612b1b828601826128ec565b9150506020830151612b45602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612b6d604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152612b858282612918565b91505060808301518482036080860152612b9f8282612918565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612bd88382612a34565b9695505050505050565b60e081526000612bf560e083018a612b05565b6020830198909852506040810195909552606085019390935263ffffffff91821660808501521660a0830152151560c090910152919050565b602081526000612c416020830184612918565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612c9b57612c9b612c48565b60405290565b60405160c0810167ffffffffffffffff81118282101715612c9b57612c9b612c48565b604051610120810167ffffffffffffffff81118282101715612c9b57612c9b612c48565b604051610100810167ffffffffffffffff81118282101715612c9b57612c9b612c48565b60405160e0810167ffffffffffffffff81118282101715612c9b57612c9b612c48565b604051601f8201601f1916810167ffffffffffffffff81118282101715612d5857612d58612c48565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610e8957600080fd5b8035612d8d81612d60565b919050565b600067ffffffffffffffff821115612dac57612dac612c48565b5060051b60200190565b600082601f830112612dc757600080fd5b81356020612ddc612dd783612d92565b612d2f565b82815260059290921b84018101918181019086841115612dfb57600080fd5b8286015b84811015612afa578035612e1281612d60565b8352918301918301612dff565b600060208284031215612e3157600080fd5b813567ffffffffffffffff80821115612e4957600080fd5b908301906101408286031215612e5e57600080fd5b612e66612c77565b612e6f83612d82565b8152612e7d60208401612d82565b6020820152612e8e60408401612d82565b6040820152612e9f60608401612d82565b6060820152612eb060808401612d82565b6080820152612ec160a08401612d82565b60a0820152612ed260c08401612d82565b60c0820152612ee360e08401612d82565b60e0820152610100612ef6818501612d82565b908201526101208381013583811115612f0e57600080fd5b612f1a88828701612db6565b918301919091525095945050505050565b600067ffffffffffffffff821115612f4557612f45612c48565b50601f01601f191660200190565b600082601f830112612f6457600080fd5b8135612f72612dd782612f2b565b818152846020838601011115612f8757600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112612fb557600080fd5b81356020612fc5612dd783612d92565b82815260059290921b84018101918181019086841115612fe457600080fd5b8286015b84811015612afa5780358352918301918301612fe8565b600082601f83011261301057600080fd5b81356020613020612dd783612d92565b82815260059290921b8401810191818101908684111561303f57600080fd5b8286015b84811015612afa57803567ffffffffffffffff8111156130635760008081fd5b6130718986838b0101612fa4565b845250918301918301613043565b600082601f83011261309057600080fd5b813560206130a0612dd783612d92565b82815260059290921b840181019181810190868411156130bf57600080fd5b8286015b84811015612afa578035600481106130db5760008081fd5b83529183019183016130c3565b600060c082840312156130fa57600080fd5b613102612ca1565b9050813567ffffffffffffffff8082111561311c57600080fd5b61312885838601612db6565b8352602084013591508082111561313e57600080fd5b61314a85838601612db6565b6020840152604084013591508082111561316357600080fd5b61316f85838601612db6565b6040840152606084013591508082111561318857600080fd5b61319485838601612fff565b606084015260808401359150808211156131ad57600080fd5b6131b985838601612fff565b608084015260a08401359150808211156131d257600080fd5b506131df8482850161307f565b60a08301525092915050565b600061012082840312156131fe57600080fd5b613206612cc4565b9050813567ffffffffffffffff8082111561322057600080fd5b61322c85838601612f53565b835261323a60208501612d82565b602084015261324b60408501612d82565b6040840152606084013591508082111561326457600080fd5b61327085838601612fa4565b6060840152608084013591508082111561328957600080fd5b61329585838601612fa4565b608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156132ce57600080fd5b6132da868287016130e8565b8385015250505092915050565b63ffffffff81168114610e8957600080fd5b8035612d8d816132e7565b600082601f83011261331557600080fd5b81356020613325612dd783612d92565b82815260059290921b8401810191818101908684111561334457600080fd5b8286015b84811015612afa578035600781106133605760008081fd5b8352918301918301613348565b80358015158114612d8d57600080fd5b6000610100828403121561339057600080fd5b613398612ce8565b9050813567ffffffffffffffff808211156133b257600080fd5b6133be858386016131eb565b83526020840135602084015260408401356040840152606084013560608401526133ea608085016132f9565b60808401526133fb60a085016132f9565b60a084015260c084013591508082111561341457600080fd5b5061342184828501613304565b60c08301525061343360e0830161336d565b60e082015292915050565b6000806040838503121561345157600080fd5b82359150602083013567ffffffffffffffff81111561346f57600080fd5b61347b8582860161337d565b9150509250929050565b6000602080838503121561349857600080fd5b823567ffffffffffffffff808211156134b057600080fd5b818501915085601f8301126134c457600080fd5b81356134d2612dd782612d92565b81815260059190911b830184019084810190888311156134f157600080fd5b8585015b838110156135295780358581111561350d5760008081fd5b61351b8b89838a010161337d565b8452509186019186016134f5565b5098975050505050505050565b60006020828403121561354857600080fd5b8135612c4181612d60565b60078110612a3057612a306129f1565b6000610100825181855261357982860182612b05565b915050602080840151818601526040840151604086015260608401516060860152608084015163ffffffff80821660808801528060a08701511660a0880152505060c084015185830360c087015282815180855283850191508383019450600092505b80831015613603576135ef828651613553565b9383019360019290920191908301906135dc565b5060e08601519350612bd860e088018515159052565b602081526000612c416020830184613563565b600181811c9082168061364057607f821691505b602082108103613679577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051612d8d81612d60565b6000602082840312156136cb57600080fd5b8151612c4181612d60565b6000602082840312156136e857600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261373060c0830186612918565b82810360808401526137428186612918565b91505061375260a0830184612a20565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036137bd576137bd61375d565b5060010190565b600082601f8301126137d557600080fd5b81516137e3612dd782612f2b565b8181528460208386010111156137f857600080fd5b6138098260208301602087016128c8565b949350505050565b8051612d8d816132e7565b60006020828403121561382e57600080fd5b815167ffffffffffffffff8082111561384657600080fd5b9083019060e0828603121561385a57600080fd5b613862612d0c565b82518281111561387157600080fd5b61387d878286016137c4565b82525060208301518281111561389257600080fd5b61389e878286016137c4565b6020830152506138b0604084016136ae565b6040820152606083015160608201526138cb60808401613811565b60808201526138dc60a08401613811565b60a08201526138ed60c08401613811565b60c082015295945050505050565b600082613931577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f82111561398057600081815260208120601f850160051c8101602086101561395d5750805b601f850160051c820191505b8181101561397c57828155600101613969565b5050505b505050565b815167ffffffffffffffff81111561399f5761399f612c48565b6139b3816139ad845461362c565b84613936565b602080601f831160018114613a0657600084156139d05750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561397c565b600085815260208120601f198616915b82811015613a3557888601518255948401946001909101908401613a16565b5085821015613a7157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60008154613a8e8161362c565b808552602060018381168015613aab5760018114613ac557613af3565b60ff198516838901528284151560051b8901019550613af3565b866000528260002060005b85811015613aeb5781548a8201860152908301908401613ad0565b890184019650505b505050505092915050565b6000815480845260208085019450836000528060002060005b8381101561294857815487529582019560019182019101613b17565b6000815480845260208085019450836000528060002060005b8381101561294857815473ffffffffffffffffffffffffffffffffffffffff1687529582019560019182019101613b4c565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015613bca578284038952613bb88483613afe565b98850198935060019182019101613ba1565b5091979650505050505050565b60c082526000613bea60c0840183613b33565b6001602085830381870152613c0183838701613b33565b92508583036040870152613c188360028701613b33565b9250606086840381880152613c308460038801613b7e565b9350608087850381890152613c488560048901613b7e565b94506005870160a0898703818b0152868254613c68818a90815260200190565b600094855260208520995091505b80601f85011015613ee557885460ff613c9184828416612a20565b613ca2898501828460081c16612a20565b613cb460408501828460101c16612a20565b613cc5888501828460181c16612a20565b613cd587850182848c1c16612a20565b613ce6858501828460281c16612a20565b613cf860c08501828460301c16612a20565b60e0613d0b818601838560381c16612a20565b613d1e6101008601838560401c16612a20565b613d316101208601838560481c16612a20565b613d446101408601838560501c16612a20565b613d576101608601838560581c16612a20565b613d69610180860183858c1c16612a20565b613d7c6101a08601838560681c16612a20565b613d8f6101c08601838560701c16612a20565b613da26101e08601838560781c16612a20565b613db4610200860183858b1c16612a20565b613dc76102208601838560881c16612a20565b613dda6102408601838560901c16612a20565b613ded6102608601838560981c16612a20565b613dff61028086018385891c16612a20565b613e126102a08601838560a81c16612a20565b613e256102c08601838560b01c16612a20565b613e386102e08601838560b81c16612a20565b613e4b6103008601838560c01c16612a20565b613e5e6103208601838560c81c16612a20565b613e716103408601838560d01c16612a20565b613e846103608601838560d81c16612a20565b613e9661038086018385841c16612a20565b50613eaa6103a08501828460e81c16612a20565b613ebd6103c08501828460f01c16612a20565b50613ecf6103e084018260f81c612a20565b5097870197928601926104009190910190613c76565b97549780841015613f0657613efd8260ff8b16612a20565b92870192908601905b80841015613f2757613f1e8260ff8b60081c16612a20565b92870192908601905b80841015613f4857613f3f8260ff8b60101c16612a20565b92870192908601905b80841015613f6957613f608260ff8b60181c16612a20565b92870192908601905b80841015613f8957613f808260ff8b8a1c16612a20565b92870192908601905b80841015613faa57613fa18260ff8b60281c16612a20565b92870192908601905b80841015613fcb57613fc28260ff8b60301c16612a20565b92870192908601905b80841015613fec57613fe38260ff8b60381c16612a20565b92870192908601905b8084101561400d576140048260ff8b60401c16612a20565b92870192908601905b8084101561402e576140258260ff8b60481c16612a20565b92870192908601905b8084101561404f576140468260ff8b60501c16612a20565b92870192908601905b80841015614070576140678260ff8b60581c16612a20565b92870192908601905b80841015614090576140878260ff8b891c16612a20565b92870192908601905b808410156140b1576140a88260ff8b60681c16612a20565b92870192908601905b808410156140d2576140c98260ff8b60701c16612a20565b92870192908601905b808410156140f3576140ea8260ff8b60781c16612a20565b92870192908601905b808410156141135761410a8260ff8b881c16612a20565b92870192908601905b808410156141345761412b8260ff8b60881c16612a20565b92870192908601905b808410156141555761414c8260ff8b60901c16612a20565b92870192908601905b808410156141765761416d8260ff8b60981c16612a20565b92870192908601905b808410156141965761418d8260ff8b861c16612a20565b92870192908601905b808410156141b7576141ae8260ff8b60a81c16612a20565b92870192908601905b808410156141d8576141cf8260ff8b60b01c16612a20565b92870192908601905b808410156141f9576141f08260ff8b60b81c16612a20565b92870192908601905b8084101561421a576142118260ff8b60c01c16612a20565b92870192908601905b8084101561423b576142328260ff8b60c81c16612a20565b92870192908601905b8084101561425c576142538260ff8b60d01c16612a20565b92870192908601905b8084101561427d576142748260ff8b60d81c16612a20565b92870192908601905b8084101561429e576142958260ff8b60e01c16612a20565b92870192908601905b808410156142bf576142b68260ff8b60e81c16612a20565b92870192908601905b808410156142e0576142d78260ff8b60f01c16612a20565b92870192908601905b808410156142fa576142f5828a60f81c612a20565b908601905b509a9950505050505050505050565b600061012080845261431d81850184613a81565b9050614340600184015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff90811660208601526002840154166040850152838103606085015261437d8160038501613afe565b905083810360808501526143948160048501613afe565b9050600583015460a0850152600683015460c0850152600783015460e08501528381036101008501526138098160088501613bd7565b805480835260008281526020808220940193909190825b82601f8201101561466157815460ff6143fc88828416613553565b602061440f818a01838560081c16613553565b6040614422818b01848660101c16613553565b6060614435818c01858760181c16613553565b6080614447818d018688871c16613553565b60a0935061445c848d01868860281c16613553565b60c061446f818e01878960301c16613553565b60e0614482818f01888a60381c16613553565b6144946101008f01888a881c16613553565b6144a76101208f01888a60481c16613553565b6144ba6101408f01888a60501c16613553565b6144cd6101608f01888a60581c16613553565b6144df6101808f01888a871c16613553565b6144f26101a08f01888a60681c16613553565b6145056101c08f01888a60701c16613553565b6145186101e08f01888a60781c16613553565b61452a6102008f01888a861c16613553565b61453d6102208f01888a60881c16613553565b6145506102408f01888a60901c16613553565b6145636102608f01888a60981c16613553565b6145756102808f01888a891c16613553565b6145886102a08f01888a60a81c16613553565b61459b6102c08f01888a60b01c16613553565b6145ae6102e08f01888a60b81c16613553565b6145c06103008f01888a851c16613553565b6145d36103208f01888a60c81c16613553565b6145e66103408f01888a60d01c16613553565b6145f96103608f01888a60d81c16613553565b61460b6103808f01888a841c16613553565b5050505050506146246103a08901828460e81c16613553565b6146376103c08901828460f01c16613553565b506146496103e088018260f81c613553565b506104009590950194600191909101906020016143e1565b90549082811015614684576146798660ff8416613553565b602095909501946001015b828110156146a75761469c8660ff8460081c16613553565b602095909501946001015b828110156146ca576146bf8660ff8460101c16613553565b602095909501946001015b828110156146ed576146e28660ff8460181c16613553565b602095909501946001015b82811015614710576147058660ff8460201c16613553565b602095909501946001015b82811015614733576147288660ff8460281c16613553565b602095909501946001015b828110156147565761474b8660ff8460301c16613553565b602095909501946001015b828110156147795761476e8660ff8460381c16613553565b602095909501946001015b8281101561479c576147918660ff8460401c16613553565b602095909501946001015b828110156147bf576147b48660ff8460481c16613553565b602095909501946001015b828110156147e2576147d78660ff8460501c16613553565b602095909501946001015b82811015614805576147fa8660ff8460581c16613553565b602095909501946001015b828110156148285761481d8660ff8460601c16613553565b602095909501946001015b8281101561484b576148408660ff8460681c16613553565b602095909501946001015b8281101561486e576148638660ff8460701c16613553565b602095909501946001015b82811015614891576148868660ff8460781c16613553565b602095909501946001015b828110156148b4576148a98660ff8460801c16613553565b602095909501946001015b828110156148d7576148cc8660ff8460881c16613553565b602095909501946001015b828110156148fa576148ef8660ff8460901c16613553565b602095909501946001015b8281101561491d576149128660ff8460981c16613553565b602095909501946001015b82811015614940576149358660ff8460a01c16613553565b602095909501946001015b82811015614963576149588660ff8460a81c16613553565b602095909501946001015b828110156149865761497b8660ff8460b01c16613553565b602095909501946001015b828110156149a95761499e8660ff8460b81c16613553565b602095909501946001015b828110156149cc576149c18660ff8460c01c16613553565b602095909501946001015b828110156149ef576149e48660ff8460c81c16613553565b602095909501946001015b82811015614a1257614a078660ff8460d01c16613553565b602095909501946001015b82811015614a3557614a2a8660ff8460d81c16613553565b602095909501946001015b82811015614a5857614a4d8660ff8460e01c16613553565b602095909501946001015b82811015614a7b57614a708660ff8460e81c16613553565b602095909501946001015b82811015614a9e57614a938660ff8460f01c16613553565b602095909501946001015b82811015614aba57614ab3868360f81c613553565b6020860195505b5093949350505050565b602081526000610100806020840152614ae1610120840185614309565b600e8501546040850152600f850154606085015260108501546080850152601185015463ffffffff80821660a087015260209190911c1660c0850152838103601f190160e0850152614b3681601287016143ca565b9050614b46601386015460ff1690565b1515919093015250919050565b81810381811115614b6657614b6661375d565b92915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614bdf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452614bcd858351613563565b94509285019290850190600101614b93565b509297965050505050505056fea2646970667358221220cba8625f9ff101b1915441ea72760a7d26c647d3060383e2917e01a4f7a30f9164736f6c63430008110033";

type QueuesRestrictedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesRestrictedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesRestricted__factory extends ContractFactory {
  constructor(...args: QueuesRestrictedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesRestricted";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesRestricted> {
    return super.deploy(input, overrides || {}) as Promise<QueuesRestricted>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesRestricted {
    return super.attach(address) as QueuesRestricted;
  }
  connect(signer: Signer): QueuesRestricted__factory {
    return super.connect(signer) as QueuesRestricted__factory;
  }
  static readonly contractName: "QueuesRestricted";
  public readonly contractName: "QueuesRestricted";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesRestrictedInterface {
    return new utils.Interface(_abi) as QueuesRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesRestricted {
    return new Contract(address, _abi, signerOrProvider) as QueuesRestricted;
  }
}
