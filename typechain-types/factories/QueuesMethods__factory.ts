/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162004788380380620047888339810160408190526200003991620003c9565b8062000045336200012d565b600180558051600380546001600160a01b03199081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80549093169416939093179055610100830151805184936200011192600b929101906200023c565b50505061010081015162000125906200017d565b505062000518565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200023857600d6000838381518110620001a357620001a3620004da565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d6000848481518110620001f357620001f3620004da565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200023081620004f0565b905062000180565b5050565b82805482825590600052602060002090810192821562000294579160200282015b828111156200029457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200025d565b50620002a2929150620002a6565b5090565b5b80821115620002a25760008155600101620002a7565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620002f957620002f9620002bd565b60405290565b80516001600160a01b03811681146200031757600080fd5b919050565b600082601f8301126200032e57600080fd5b815160206001600160401b03808311156200034d576200034d620002bd565b8260051b604051601f19603f83011681018181108482111715620003755762000375620002bd565b6040529384528581018301938381019250878511156200039457600080fd5b83870191505b84821015620003be57620003ae82620002ff565b835291830191908301906200039a565b979650505050505050565b600060208284031215620003dc57600080fd5b81516001600160401b0380821115620003f457600080fd5b9083019061012082860312156200040a57600080fd5b62000414620002d3565b6200041f83620002ff565b81526200042f60208401620002ff565b60208201526200044260408401620002ff565b60408201526200045560608401620002ff565b60608201526200046860808401620002ff565b60808201526200047b60a08401620002ff565b60a08201526200048e60c08401620002ff565b60c0820152620004a160e08401620002ff565b60e08201526101008084015183811115620004bb57600080fd5b620004c9888287016200031c565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200051157634e487b7160e01b600052601160045260246000fd5b5060010190565b61426080620005286000396000f3fe6080604052600436106100dd5760003560e01c8063d63a8e111161007f578063e200c85711610059578063e200c857146102ec578063e3c5fc041461030c578063ec7bbea314610363578063f2fde38b1461038357600080fd5b8063d63a8e11146101e2578063d8de658714610222578063ddf0b009146102bf57600080fd5b80638da5cb5b116100bb5780638da5cb5b14610163578063982d64d41461018b578063acb9671a1461019e578063af640d0f146101be57600080fd5b80630f7921ed146100e2578063212049481461011f578063715018a61461014c575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461237b565b6103a3565b604051610116989796959493929190612687565b60405180910390f35b34801561012b57600080fd5b5061013f61013a36600461237b565b610891565b60405161011691906126dd565b34801561015857600080fd5b506101616108f6565b005b34801561016f57600080fd5b506000546040516001600160a01b039091168152602001610116565b6101616101993660046126f7565b61090a565b3480156101aa57600080fd5b506101616101b93660046128ba565b6112f4565b3480156101ca57600080fd5b506101d460025481565b604051908152602001610116565b3480156101ee57600080fd5b506102126101fd3660046129b4565b600d6020526000908152604090205460ff1681565b6040519015158152602001610116565b34801561022e57600080fd5b50600354600454600554600654600754600854600954600a5461026d976001600160a01b03908116978116968116958116948116938116928116911688565b604080516001600160a01b03998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e082015261010001610116565b3480156102cb57600080fd5b506102df6102da36600461237b565b6113ef565b6040516101169190612a18565b3480156102f857600080fd5b5061013f61030736600461237b565b611992565b34801561031857600080fd5b5061034e61032736600461237b565b6000908152600c602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610116565b34801561036f57600080fd5b5061016161037e3660046126f7565b6119f5565b34801561038f57600080fd5b5061016161039e3660046129b4565b611f8f565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546103d790612ac2565b80601f016020809104026020016040519081016040528092919081815260200182805461040390612ac2565b80156104505780601f1061042557610100808354040283529160200191610450565b820191906000526020600020905b81548152906001019060200180831161043357829003601f168201915b505050918352505060018201546001600160a01b03908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104d157602002820191906000526020600020905b8154815260200190600101908083116104bd575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561052957602002820191906000526020600020905b815481526020019060010190808311610515575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156105b957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161059b575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561061b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105fd575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561067d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161065f575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107175760008481526020908190208301805460408051828502810185019091528181529283018282801561070357602002820191906000526020600020905b8154815260200190600101908083116106ef575b5050505050815260200190600101906106ab565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107b05760008481526020908190208301805460408051828502810185019091528181529283018282801561079c57602002820191906000526020600020905b815481526020019060010190808311610788575b505050505081526020019060010190610744565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561083757602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610815576108156124b0565b8152602060019283018181049485019490930390920291018084116107f65790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b6000818152600c60209081526040918290206004018054835181840281018401909452808452606093928301828280156108ea57602002820191906000526020600020905b8154815260200190600101908083116108d6575b50505050509050919050565b6108fe612036565b61090860006120aa565b565b60026001540361097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556000828152600c602052604090206011015463ffffffff16158015906109b857506000828152600c602052604090206013015460ff16155b8015610a2557506000828152600c60205260409020600f01541580156109ed57506000828152600c60205260409020600e0154155b80610a2557506000828152600c60205260409020600e01544210801590610a2557506000828152600c60205260409020600f01544211155b8015610abd57506008546040517fdadddaaf0000000000000000000000000000000000000000000000000000000081526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab29190612b20565b6001600160a01b0316145b8015610b0257506000828152600c6020526040902060110154610aee90640100000000900463ffffffff1642612b6c565b6000838152600c6020526040902060100154105b610b0b57600080fd5b6008546040517f30ace5ff000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906330ace5ff90602401600060405180830381865afa158015610b6e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b969190810190612e63565b6000848152600c602052604090206011015481516060015191925063ffffffff68010000000000000000909104811691161015610bd257600080fd5b6000805b6000858152600c6020526040902060120154811015610c7b57826040015160c001516007811115610c0957610c096124b0565b6000868152600c60205260409020601201805483908110610c2c57610c2c612f84565b90600052602060002090602091828204019190069054906101000a900460ff166007811115610c5d57610c5d6124b0565b03610c6b5760019150610c7b565b610c7481612fb3565b9050610bd6565b5080610c8657600080fd5b60005b6000858152600c6020526040902060030154811015610ced576000858152600c60205260409020600301805485919083908110610cc857610cc8612f84565b906000526020600020015403610cdd57600080fd5b610ce681612fb3565b9050610c89565b506000848152600c6020908152604080832060038101805460018082018355918652848620018890556004918201805491820181558552929093204292019190915560085490517f894f39fc000000000000000000000000000000000000000000000000000000008152918201859052602482018690526001600160a01b03169063894f39fc906044016020604051808303816000875af1158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba9190612feb565b15610dc457600080fd5b6007546000858152600c60205260408082206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815291926001600160a01b03169163ccdac71a91610e219160040190815260200190565b602060405180830381865afa158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e629190612b20565b6006546040517fb3aa39b600000000000000000000000000000000000000000000000000000000815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610ece573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef2919061305f565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050836020015181600081518110610f3557610f35612f84565b602090810291909101015260095484516001600160a01b039182169163c01f59c2911615610f64576000610f6a565b85602001515b60095487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610fa4576002610fa7565b60035b6040518863ffffffff1660e01b8152600401610fc8969594939291906130a5565b6000604051808303818588803b158015610fe157600080fd5b505af1158015610ff5573d6000803e3d6000fd5b505050505082602001518160008151811061101257611012612f84565b602090810291909101015260095483516001600160a01b039182169163c01f59c2911615611041576000611047565b84602001515b60095486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615611081576002611084565b60035b6040518863ffffffff1660e01b81526004016110a5969594939291906130a5565b6000604051808303818588803b1580156110be57600080fd5b505af11580156110d2573d6000803e3d6000fd5b50505050508160200151816000815181106110ef576110ef612f84565b602090810291909101015260095482516001600160a01b039182169163c01f59c291161561111e576000611124565b83602001515b60095485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561115e576002611161565b60035b6040518863ffffffff1660e01b8152600401611182969594939291906130a5565b6000604051808303818588803b15801561119b57600080fd5b505af11580156111af573d6000803e3d6000fd5b50505060008b8152600c60205260409020601181015460039091015463ffffffff909116900391506112b6905057600a5460008a8152600c60205260409081902090517ffcf696350000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163fcf6963591611236918d9190600401614165565b600060405180830381600087803b15801561125057600080fd5b505af1158015611264573d6000803e3d6000fd5b50505060008a8152600c602052604081206112839250600301906121e5565b6000898152600c602052604081206112a0916004909101906121e5565b6000898152600c60205260409020426010909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450506001805550505050505050565b6112fc612036565b8051600380547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80549093169416939093179055610100830151805184936113da92600b92910190612203565b509050506113ec816101000151612112565b50565b6113f7612280565b6000828152600c602052604090819020815161024081019092528054829061012082019083908290829061142a90612ac2565b80601f016020809104026020016040519081016040528092919081815260200182805461145690612ac2565b80156114a35780601f10611478576101008083540402835291602001916114a3565b820191906000526020600020905b81548152906001019060200180831161148657829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561152457602002820191906000526020600020905b815481526020019060010190808311611510575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561157c57602002820191906000526020600020905b815481526020019060010190808311611568575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561160c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115ee575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561166e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611650575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156116d057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116b2575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561176a5760008481526020908190208301805460408051828502810185019091528181529283018282801561175657602002820191906000526020600020905b815481526020019060010190808311611742575b5050505050815260200190600101906116fe565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611803576000848152602090819020830180546040805182850281018501909152818152928301828280156117ef57602002820191906000526020600020905b8154815260200190600101908083116117db575b505050505081526020019060010190611797565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561188a57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611868576118686124b0565b8152602060019283018181049485019490930390920291018084116118495790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e090940193919290919083018282801561197257602002820191906000526020600020906000905b82829054906101000a900460ff166007811115611950576119506124b0565b8152602060019283018181049485019490930390920291018084116119315790505b50505091835250506013919091015460ff16151560209091015292915050565b6000818152600c60209081526040918290206003018054835181840281018401909452808452606093928301828280156108ea57602002820191906000526020600020908154815260200190600101908083116108d65750505050509050919050565b600260015403611a61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610972565b60026001556008546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aed9190612b20565b90506001600160a01b0381163314611b0457600080fd5b6000838152600c6020908152604080832060030180548251818502810185019093528083529192909190830182828015611b5d57602002820191906000526020600020905b815481526020019060010190808311611b49575b5050506000878152600c6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611bbf57602002820191906000526020600020905b815481526020019060010190808311611bab575b5050506000888152600c60205260408120939450611be393600301925090506121e5565b6000858152600c60205260408120611c00916004909101906121e5565b815115611d33576000805b8351811015611d265785848281518110611c2757611c27612f84565b602002602001015103611c8b576000878152600c602052604090206011015460019250611c6290640100000000900463ffffffff1642612b6c565b838281518110611c7457611c74612f84565b602002602001015110611c8657600080fd5b611d16565b6000878152600c602052604090208451600390910190859083908110611cb357611cb3612f84565b602090810291909101810151825460018101845560009384528284200155888252600c9052604090208351600490910190849083908110611cf657611cf6612f84565b602090810291909101810151825460018101845560009384529190922001555b611d1f81612fb3565b9050611c0b565b5080611d3157600080fd5b505b6008546040517f894f39fc000000000000000000000000000000000000000000000000000000008152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc29190612feb565b14611dcc57600080fd5b6006546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611e2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e53919061305f565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611e9457611e94612f84565b602090810291909101015260095482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015611ee5578160200160208202803683370190505b50875187906001600160a01b031615611eff576002611f02565b60035b6040518763ffffffff1660e01b8152600401611f23969594939291906130a5565b600060405180830381600087803b158015611f3d57600080fd5b505af1158015611f51573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a35050600180555050505050565b611f97612036565b6001600160a01b03811661202d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610972565b6113ec816120aa565b6000546001600160a01b03163314610908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610972565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156121e157600d600083838151811061213457612134612f84565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d600084848151811061218157612181612f84565b6020908102919091018101516001600160a01b0316825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556121da81612fb3565b9050612115565b5050565b50805460008255906000526020600020908101906113ec91906122d2565b828054828255906000526020600020908101928215612270579160200282015b8281111561227057825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178255602090920191600190910190612223565b5061227c9291506122d2565b5090565b6040518061012001604052806122946122e7565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b8082111561227c57600081556001016122d3565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016123766040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561238d57600080fd5b5035919050565b60005b838110156123af578181015183820152602001612397565b50506000910152565b600081518084526123d0816020860160208601612394565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015612414578151875295820195908201906001016123f8565b509495945050505050565b600081518084526020808501945080840160005b838110156124145781516001600160a01b031687529582019590820190600101612433565b600082825180855260208086019550808260051b84010181860160005b848110156124a357601f198684030189526124918383516123e4565b98840198925090830190600101612475565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106124ef576124ef6124b0565b9052565b6000815160c0845261250860c085018261241f565b905060208084015185830382870152612521838261241f565b9250506040840151858303604087015261253b838261241f565b925050606084015185830360608701526125558382612458565b9250506080840151858303608087015261256f8382612458565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156125b9576125a58286516124df565b938301936001929092019190830190612592565b509695505050505050565b600061012082518185526125da828601826123b8565b91505060208301516125f760208601826001600160a01b03169052565b50604083015161261260408601826001600160a01b03169052565b506060830151848203606086015261262a82826123e4565b9150506080830151848203608086015261264482826123e4565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261267d83826124f3565b9695505050505050565b600061010080835261269b8184018c6125c4565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020815260006126f060208301846123e4565b9392505050565b6000806040838503121561270a57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561276c5761276c612719565b60405290565b60405160e0810167ffffffffffffffff8111828210171561276c5761276c612719565b6040516080810167ffffffffffffffff8111828210171561276c5761276c612719565b60405160c0810167ffffffffffffffff8111828210171561276c5761276c612719565b604051601f8201601f1916810167ffffffffffffffff8111828210171561280457612804612719565b604052919050565b6001600160a01b03811681146113ec57600080fd5b803561282c8161280c565b919050565b600082601f83011261284257600080fd5b8135602067ffffffffffffffff82111561285e5761285e612719565b8160051b61286d8282016127db565b928352848101820192828101908785111561288757600080fd5b83870192505b848310156128af5782356128a08161280c565b8252918301919083019061288d565b979650505050505050565b6000602082840312156128cc57600080fd5b813567ffffffffffffffff808211156128e457600080fd5b9083019061012082860312156128f957600080fd5b612901612748565b61290a83612821565b815261291860208401612821565b602082015261292960408401612821565b604082015261293a60608401612821565b606082015261294b60808401612821565b608082015261295c60a08401612821565b60a082015261296d60c08401612821565b60c082015261297e60e08401612821565b60e0820152610100808401358381111561299757600080fd5b6129a388828701612831565b918301919091525095945050505050565b6000602082840312156129c657600080fd5b81356126f08161280c565b600881106124ef576124ef6124b0565b600081518084526020808501945080840160005b8381101561241457612a088783516129d1565b95820195908201906001016129f5565b6020815260008251610120806020850152612a376101408501836125c4565b91506020850151604085015260408501516060850152606085015160808501526080850151612a6e60a086018263ffffffff169052565b5060a085015163ffffffff811660c08601525060c085015163ffffffff811660e08601525060e0850151610100601f198685030181870152612ab084836129e1565b96015115159190940152509192915050565b600181811c90821680612ad657607f821691505b602082108103612b0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b805161282c8161280c565b600060208284031215612b3257600080fd5b81516126f08161280c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612b7f57612b7f612b3d565b92915050565b805163ffffffff8116811461282c57600080fd5b8051801515811461282c57600080fd5b6000610100808385031215612bbd57600080fd5b6040519081019067ffffffffffffffff82118183101715612be057612be0612719565b8160405280925083519150612bf48261280c565b818152612c0360208501612b15565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c0820152612c4660e08501612b99565b60e0820152505092915050565b600082601f830112612c6457600080fd5b60405161090080820182811067ffffffffffffffff82111715612c8957612c89612719565b60405283018185821115612c9c57600080fd5b845b82811015612cbd57612caf81612b85565b825260209182019101612c9e565b509195945050505050565b600082601f830112612cd957600080fd5b815167ffffffffffffffff811115612cf357612cf3612719565b612d066020601f19601f840116016127db565b818152846020838601011115612d1b57600080fd5b612d2c826020830160208701612394565b949350505050565b80516008811061282c57600080fd5b60006109c08284031215612d5657600080fd5b612d5e612772565b905081518152602082015160208201526040820151604082015260608201516060820152612d8f8360808401612c53565b608082015261098082015167ffffffffffffffff811115612daf57600080fd5b612dbb84828501612cc8565b60a083015250612dce6109a08301612d34565b60c082015292915050565b600060808284031215612deb57600080fd5b612df3612795565b9050815167ffffffffffffffff80821115612e0d57600080fd5b612e1985838601612cc8565b83526020840151915080821115612e2f57600080fd5b50612e3c84828501612cc8565b60208301525060408201516040820152612e5860608301612b99565b606082015292915050565b600060208284031215612e7557600080fd5b815167ffffffffffffffff80821115612e8d57600080fd5b90830190818503610200811215612ea357600080fd5b612eab612795565b60c0821215612eb957600080fd5b612ec16127b8565b91508351612ece8161280c565b808352506020840151602083015260408401516040830152612ef260608501612b85565b6060830152612f0360808501612b85565b6080830152612f1460a08501612b85565b60a0830152818152612f298760c08601612ba9565b60208201526101c0840151915082821115612f4357600080fd5b612f4f87838601612d43565b60408201526101e0840151915082821115612f6957600080fd5b612f7587838601612dd9565b60608201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612fe457612fe4612b3d565b5060010190565b600060208284031215612ffd57600080fd5b5051919050565b60006040828403121561301657600080fd5b6040516040810181811067ffffffffffffffff8211171561303957613039612719565b8060405250809150825161304c8161280c565b8152602092830151920191909152919050565b600080600060c0848603121561307457600080fd5b61307e8585613004565b925061308d8560408601613004565b915061309c8560808601613004565b90509250925092565b60006001600160a01b038089168352808816602084015280871660408401525060c060608301526130d960c08301866123e4565b82810360808401526130eb81866123e4565b9150506128af60a08301846124df565b8054600090600181811c908083168061311557607f831692505b6020808410820361314f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8388526020880182801561316a576001811461319e576131c9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b820197506131c9565b60008981526020902060005b878110156131c3578154848201529086019084016131aa565b83019850505b5050505050505092915050565b6000815480845260208085019450836000528060002060005b83811015612414578154875295820195600191820191016131ef565b6000815480845260208085019450836000528060002060005b838110156124145781546001600160a01b031687529582019560019182019101613224565b6000815480845260208085019450848260051b8601856000528260002060005b858110156124a357838303895261328083836131d6565b98850198925060019182019101613269565b60c0825260006132a560c084018361320b565b60016020858303818701526132bc8383870161320b565b925085830360408701526132d3836002870161320b565b92506060868403818801526132eb8460038801613249565b93506080878503818901526133038560048901613249565b94506005870160a0898703818b0152868254613323818a90815260200190565b600094855260208520995091505b80601f850110156135a057885460ff61334c848284166124df565b61335d898501828460081c166124df565b61336f60408501828460101c166124df565b613380888501828460181c166124df565b61339087850182848c1c166124df565b6133a1858501828460281c166124df565b6133b360c08501828460301c166124df565b60e06133c6818601838560381c166124df565b6133d96101008601838560401c166124df565b6133ec6101208601838560481c166124df565b6133ff6101408601838560501c166124df565b6134126101608601838560581c166124df565b613424610180860183858c1c166124df565b6134376101a08601838560681c166124df565b61344a6101c08601838560701c166124df565b61345d6101e08601838560781c166124df565b61346f610200860183858b1c166124df565b6134826102208601838560881c166124df565b6134956102408601838560901c166124df565b6134a86102608601838560981c166124df565b6134ba61028086018385891c166124df565b6134cd6102a08601838560a81c166124df565b6134e06102c08601838560b01c166124df565b6134f36102e08601838560b81c166124df565b6135066103008601838560c01c166124df565b6135196103208601838560c81c166124df565b61352c6103408601838560d01c166124df565b61353f6103608601838560d81c166124df565b61355161038086018385841c166124df565b506135656103a08501828460e81c166124df565b6135786103c08501828460f01c166124df565b5061358a6103e084018260f81c6124df565b5097870197928601926104009190910190613331565b975497808410156135c1576135b88260ff8b166124df565b92870192908601905b808410156135e2576135d98260ff8b60081c166124df565b92870192908601905b80841015613603576135fa8260ff8b60101c166124df565b92870192908601905b808410156136245761361b8260ff8b60181c166124df565b92870192908601905b808410156136445761363b8260ff8b8a1c166124df565b92870192908601905b808410156136655761365c8260ff8b60281c166124df565b92870192908601905b808410156136865761367d8260ff8b60301c166124df565b92870192908601905b808410156136a75761369e8260ff8b60381c166124df565b92870192908601905b808410156136c8576136bf8260ff8b60401c166124df565b92870192908601905b808410156136e9576136e08260ff8b60481c166124df565b92870192908601905b8084101561370a576137018260ff8b60501c166124df565b92870192908601905b8084101561372b576137228260ff8b60581c166124df565b92870192908601905b8084101561374b576137428260ff8b891c166124df565b92870192908601905b8084101561376c576137638260ff8b60681c166124df565b92870192908601905b8084101561378d576137848260ff8b60701c166124df565b92870192908601905b808410156137ae576137a58260ff8b60781c166124df565b92870192908601905b808410156137ce576137c58260ff8b881c166124df565b92870192908601905b808410156137ef576137e68260ff8b60881c166124df565b92870192908601905b80841015613810576138078260ff8b60901c166124df565b92870192908601905b80841015613831576138288260ff8b60981c166124df565b92870192908601905b80841015613851576138488260ff8b861c166124df565b92870192908601905b80841015613872576138698260ff8b60a81c166124df565b92870192908601905b808410156138935761388a8260ff8b60b01c166124df565b92870192908601905b808410156138b4576138ab8260ff8b60b81c166124df565b92870192908601905b808410156138d5576138cc8260ff8b60c01c166124df565b92870192908601905b808410156138f6576138ed8260ff8b60c81c166124df565b92870192908601905b808410156139175761390e8260ff8b60d01c166124df565b92870192908601905b808410156139385761392f8260ff8b60d81c166124df565b92870192908601905b80841015613959576139508260ff8b60e01c166124df565b92870192908601905b8084101561397a576139718260ff8b60e81c166124df565b92870192908601905b8084101561399b576139928260ff8b60f01c166124df565b92870192908601905b808410156139b5576139b0828a60f81c6124df565b908601905b509a9950505050505050505050565b60006101208084526139d8818501846130fb565b90506139ee60018401546001600160a01b031690565b6001600160a01b03908116602086015260028401541660408501528381036060850152613a1e81600385016131d6565b90508381036080850152613a3581600485016131d6565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152612d2c8160088501613292565b805480835260008281526020808220940193909190825b82601f82011015613d0257815460ff613a9d888284166129d1565b6020613ab0818a01838560081c166129d1565b6040613ac3818b01848660101c166129d1565b6060613ad6818c01858760181c166129d1565b6080613ae8818d018688871c166129d1565b60a09350613afd848d01868860281c166129d1565b60c0613b10818e01878960301c166129d1565b60e0613b23818f01888a60381c166129d1565b613b356101008f01888a881c166129d1565b613b486101208f01888a60481c166129d1565b613b5b6101408f01888a60501c166129d1565b613b6e6101608f01888a60581c166129d1565b613b806101808f01888a871c166129d1565b613b936101a08f01888a60681c166129d1565b613ba66101c08f01888a60701c166129d1565b613bb96101e08f01888a60781c166129d1565b613bcb6102008f01888a861c166129d1565b613bde6102208f01888a60881c166129d1565b613bf16102408f01888a60901c166129d1565b613c046102608f01888a60981c166129d1565b613c166102808f01888a891c166129d1565b613c296102a08f01888a60a81c166129d1565b613c3c6102c08f01888a60b01c166129d1565b613c4f6102e08f01888a60b81c166129d1565b613c616103008f01888a851c166129d1565b613c746103208f01888a60c81c166129d1565b613c876103408f01888a60d01c166129d1565b613c9a6103608f01888a60d81c166129d1565b613cac6103808f01888a841c166129d1565b505050505050613cc56103a08901828460e81c166129d1565b613cd86103c08901828460f01c166129d1565b50613cea6103e088018260f81c6129d1565b50610400959095019460019190910190602001613a82565b90549082811015613d2557613d1a8660ff84166129d1565b602095909501946001015b82811015613d4857613d3d8660ff8460081c166129d1565b602095909501946001015b82811015613d6b57613d608660ff8460101c166129d1565b602095909501946001015b82811015613d8e57613d838660ff8460181c166129d1565b602095909501946001015b82811015613db157613da68660ff8460201c166129d1565b602095909501946001015b82811015613dd457613dc98660ff8460281c166129d1565b602095909501946001015b82811015613df757613dec8660ff8460301c166129d1565b602095909501946001015b82811015613e1a57613e0f8660ff8460381c166129d1565b602095909501946001015b82811015613e3d57613e328660ff8460401c166129d1565b602095909501946001015b82811015613e6057613e558660ff8460481c166129d1565b602095909501946001015b82811015613e8357613e788660ff8460501c166129d1565b602095909501946001015b82811015613ea657613e9b8660ff8460581c166129d1565b602095909501946001015b82811015613ec957613ebe8660ff8460601c166129d1565b602095909501946001015b82811015613eec57613ee18660ff8460681c166129d1565b602095909501946001015b82811015613f0f57613f048660ff8460701c166129d1565b602095909501946001015b82811015613f3257613f278660ff8460781c166129d1565b602095909501946001015b82811015613f5557613f4a8660ff8460801c166129d1565b602095909501946001015b82811015613f7857613f6d8660ff8460881c166129d1565b602095909501946001015b82811015613f9b57613f908660ff8460901c166129d1565b602095909501946001015b82811015613fbe57613fb38660ff8460981c166129d1565b602095909501946001015b82811015613fe157613fd68660ff8460a01c166129d1565b602095909501946001015b8281101561400457613ff98660ff8460a81c166129d1565b602095909501946001015b828110156140275761401c8660ff8460b01c166129d1565b602095909501946001015b8281101561404a5761403f8660ff8460b81c166129d1565b602095909501946001015b8281101561406d576140628660ff8460c01c166129d1565b602095909501946001015b82811015614090576140858660ff8460c81c166129d1565b602095909501946001015b828110156140b3576140a88660ff8460d01c166129d1565b602095909501946001015b828110156140d6576140cb8660ff8460d81c166129d1565b602095909501946001015b828110156140f9576140ee8660ff8460e01c166129d1565b602095909501946001015b8281101561411c576141118660ff8460e81c166129d1565b602095909501946001015b8281101561413f576141348660ff8460f01c166129d1565b602095909501946001015b8281101561415b57614154868360f81c6129d1565b6020860195505b5093949350505050565b8281526040602082015260006101208060408401526141886101608401856139c4565b600e8501546060850152600f8501546080850152601085015460a0850152601185015463ffffffff80821660c0870152602082901c811660e087015260409190911c166101008501528381037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001828501526142078160128701613a6b565b915050614218601385015460ff1690565b8015156101408501525094935050505056fea26469706673582212201ca2b3ae4f437fca543a8178862650294a90ef8d25c219e0b94ab2e35c7aaaf064736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
