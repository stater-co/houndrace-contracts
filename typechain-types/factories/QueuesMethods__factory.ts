/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620037d7380380620037d78339810160408190526200003891620003c4565b80620000443362000128565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000237565b505050610100810151620001209062000178565b505062000513565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200023357600c60008383815181106200019e576200019e620004d5565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600c6000848481518110620001ee57620001ee620004d5565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200022b81620004eb565b90506200017b565b5050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d929150620002a1565b5090565b5b808211156200029d5760008155600101620002a2565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620002f457620002f4620002b8565b60405290565b80516001600160a01b03811681146200031257600080fd5b919050565b600082601f8301126200032957600080fd5b815160206001600160401b0380831115620003485762000348620002b8565b8260051b604051601f19603f83011681018181108482111715620003705762000370620002b8565b6040529384528581018301938381019250878511156200038f57600080fd5b83870191505b84821015620003b957620003a982620002fa565b8352918301919083019062000395565b979650505050505050565b600060208284031215620003d757600080fd5b81516001600160401b0380821115620003ef57600080fd5b9083019061012082860312156200040557600080fd5b6200040f620002ce565b6200041a83620002fa565b81526200042a60208401620002fa565b60208201526200043d60408401620002fa565b60408201526200045060608401620002fa565b60608201526200046360808401620002fa565b60808201526200047660a08401620002fa565b60a08201526200048960c08401620002fa565b60c08201526200049c60e08401620002fa565b60e08201526101008084015183811115620004b657600080fd5b620004c48882870162000317565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200050c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6132b480620005236000396000f3fe6080604052600436106100ae5760003560e01c80630f7921ed146100b757806321204948146100f3578063715018a6146101205780638da5cb5b14610135578063982d64d414610162578063acb9671a14610175578063af640d0f14610195578063d63a8e11146101b9578063d8de6587146101f9578063ddf0b00914610296578063e1152343146102c3578063e200c857146102e3578063ec7bbea314610303578063f2fde38b1461032357005b366100b557005b005b3480156100c357600080fd5b506100d76100d23660046120c2565b610343565b6040516100ea97969594939291906123b6565b60405180910390f35b3480156100ff57600080fd5b5061011361010e3660046120c2565b610821565b6040516100ea9190612402565b34801561012c57600080fd5b506100b5610886565b34801561014157600080fd5b5061014a61089a565b6040516001600160a01b0390911681526020016100ea565b6100b561017036600461241c565b6108a9565b34801561018157600080fd5b506100b5610190366004612545565b61116e565b3480156101a157600080fd5b506101ab60015481565b6040519081526020016100ea565b3480156101c557600080fd5b506101e96101d436600461263e565b600c6020526000908152604090205460ff1681565b60405190151581526020016100ea565b34801561020557600080fd5b50600254600354600454600554600654600754600854600954610244976001600160a01b03908116978116968116958116948116938116928116911688565b604080516001600160a01b03998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e0820152610100016100ea565b3480156102a257600080fd5b506102b66102b13660046120c2565b611251565b6040516100ea919061265b565b3480156102cf57600080fd5b506100b56102de3660046120c2565b611750565b3480156102ef57600080fd5b506101136102fe3660046120c2565b61183d565b34801561030f57600080fd5b506100b561031e36600461241c565b6118a0565b34801561032f57600080fd5b506100b561033e36600461263e565b611d79565b600b6020528060005260406000206000915090508060000160405180610120016040529081600082018054610377906126ce565b80601f01602080910402602001604051908101604052809291908181526020018280546103a3906126ce565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561047157602002820191906000526020600020905b81548152602001906001019080831161045d575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104c957602002820191906000526020600020905b8154815260200190600101908083116104b5575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561055957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161053b575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161059d575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561061d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ff575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106b7576000848152602090819020830180546040805182850281018501909152818152928301828280156106a357602002820191906000526020600020905b81548152602001906001019080831161068f575b50505050508152602001906001019061064b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107505760008481526020908190208301805460408051828502810185019091528181529283018282801561073c57602002820191906000526020600020905b815481526020019060010190808311610728575b5050505050815260200190600101906106e4565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156107d757602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107b5576107b56121fa565b8152602060019283018181049485019490930390920291018084116107965790505b50505091909252505050905250600e820154600f83015460108401546011909401549293919290919063ffffffff80821691600160201b810490911690600160401b900460ff1687565b6000818152600b602090815260409182902060040180548351818402810184019094528084526060939283018282801561087a57602002820191906000526020600020905b815481526020019060010190808311610866575b50505050509050919050565b61088e611def565b6108986000611e4e565b565b6000546001600160a01b031690565b6000828152600b602052604090206011015463ffffffff16158015906108e857506000828152600b6020526040902060110154600160401b900460ff16155b801561095557506000828152600b60205260409020600f015415801561091d57506000828152600b60205260409020600e0154155b8061095557506000828152600b60205260409020600e0154421080159061095557506000828152600b60205260409020600f01544211155b80156109d4575060075460405163dadddaaf60e01b81526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa1580156109a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c99190612708565b6001600160a01b0316145b8015610a1857506000828152600b6020526040902060110154610a0490600160201b900463ffffffff164261273b565b6000838152600b6020526040902060100154105b610a2157600080fd5b60005b6000838152600b6020526040902060030154811015610a88576000838152600b60205260409020600301805483919083908110610a6357610a63612754565b906000526020600020015403610a7857600080fd5b610a818161276a565b9050610a24565b506000828152600b6020908152604080832060038101805460018082018355918652848620018690556004918201805491820181558552929093204292019190915560075490516373d1aa2760e01b81529182018390526001600160a01b0316906373d1aa2790602401600060405180830381600087803b158015610b0c57600080fd5b505af1158015610b20573d6000803e3d6000fd5b5050600754604051632253ce7f60e21b815260048101859052602481018690526001600160a01b03909116925063894f39fc91506044016020604051808303816000875af1158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a9190612783565b15610ba457600080fd5b6006546000838152600b602052604080822060050154905163666d638d60e11b815291926001600160a01b03169163ccdac71a91610be89160040190815260200190565b602060405180830381865afa158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c299190612708565b6005546040516359d51cdb60e11b815260048101869052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610c7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca091906127f6565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050836020015181600081518110610ce357610ce3612754565b602090810291909101015260085484516001600160a01b039182169163c01f59c2911615610d12576000610d18565b85602001515b60085487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610d52576002610d55565b60035b6040518863ffffffff1660e01b8152600401610d769695949392919061283c565b6000604051808303818588803b158015610d8f57600080fd5b505af1158015610da3573d6000803e3d6000fd5b5050505050826020015181600081518110610dc057610dc0612754565b602090810291909101015260085483516001600160a01b039182169163c01f59c2911615610def576000610df5565b84602001515b60085486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610e2f576002610e32565b60035b6040518863ffffffff1660e01b8152600401610e539695949392919061283c565b6000604051808303818588803b158015610e6c57600080fd5b505af1158015610e80573d6000803e3d6000fd5b5050505050816020015181600081518110610e9d57610e9d612754565b602090810291909101015260085482516001600160a01b039182169163c01f59c2911615610ecc576000610ed2565b83602001515b60085485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610f0c576002610f0f565b60035b6040518863ffffffff1660e01b8152600401610f309695949392919061283c565b6000604051808303818588803b158015610f4957600080fd5b505af1158015610f5d573d6000803e3d6000fd5b5050506000898152600b60205260409020601181015460039091015463ffffffff909116900391506111369050576006546000888152600b6020526040908190206005015490516311a3439360e01b81526001600160a01b03909216916311a3439391610fd09160040190815260200190565b600060405180830381600087803b158015610fea57600080fd5b505af1158015610ffe573d6000803e3d6000fd5b505060095460008a8152600b60205260409081902090516309ad2e2b60e41b81526001600160a01b039092169350639ad2e2b092506110459160089091019060040161309c565b600060405180830381600087803b15801561105f57600080fd5b505af1158015611073573d6000803e3d6000fd5b505060095460008a8152600b6020526040908190209051635469bf7360e01b81526001600160a01b039092169350635469bf7392506110b6918b90600401613153565b600060405180830381600087803b1580156110d057600080fd5b505af11580156110e4573d6000803e3d6000fd5b5050506000888152600b60205260408120611103925060030190611f53565b6000878152600b6020526040812061112091600490910190611f53565b6000878152600b60205260409020426010909101555b6040513390879089907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450505050505050565b611176611def565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361123c92600a92910190611f71565b5090505061124e816101000151611e9e565b50565b611259611fd6565b6000828152600b602052604090819020815161020081019092528054829060e082019083908290829061128b906126ce565b80601f01602080910402602001604051908101604052809291908181526020018280546112b7906126ce565b80156113045780601f106112d957610100808354040283529160200191611304565b820191906000526020600020905b8154815290600101906020018083116112e757829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561138557602002820191906000526020600020905b815481526020019060010190808311611371575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156113dd57602002820191906000526020600020905b8154815260200190600101908083116113c9575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561146d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161144f575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156114cf57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114b1575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561153157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611513575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115cb576000848152602090819020830180546040805182850281018501909152818152928301828280156115b757602002820191906000526020600020905b8154815260200190600101908083116115a3575b50505050508152602001906001019061155f565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156116645760008481526020908190208301805460408051828502810185019091528181529283018282801561165057602002820191906000526020600020905b81548152602001906001019080831161163c575b5050505050815260200190600101906115f8565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156116eb57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156116c9576116c96121fa565b8152602060019283018181049485019490930390920291018084116116aa5790505b505050919092525050509052508152600e8201546020820152600f82015460408201526010820154606082015260119091015463ffffffff8082166080840152600160201b82041660a0830152600160401b900460ff16151560c09091015292915050565b611758611def565b478111156117c55760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6117cd61089a565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061124e5760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016117bc565b6000818152600b602090815260409182902060030180548351818402810184019094528084526060939283018282801561087a57602002820191906000526020600020908154815260200190600101908083116108665750505050509050919050565b60075460405163dadddaaf60e01b8152600481018390526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa1580156118ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190e9190612708565b90506001600160a01b038116331461192557600080fd5b6000838152600b602090815260408083206003018054825181850281018501909352808352919290919083018282801561197e57602002820191906000526020600020905b81548152602001906001019080831161196a575b5050506000878152600b60209081526040808320600401805482518185028101850190935280835296975092959094509192508301828280156119e057602002820191906000526020600020905b8154815260200190600101908083116119cc575b5050506000888152600b60205260408120939450611a049360030192509050611f53565b6000858152600b60205260408120611a2191600490910190611f53565b815115611b53576000805b8351811015611b465785848281518110611a4857611a48612754565b602002602001015103611aab576000878152600b602052604090206011015460019250611a8290600160201b900463ffffffff164261273b565b838281518110611a9457611a94612754565b602002602001015110611aa657600080fd5b611b36565b6000878152600b602052604090208451600390910190859083908110611ad357611ad3612754565b602090810291909101810151825460018101845560009384528284200155888252600b9052604090208351600490910190849083908110611b1657611b16612754565b602090810291909101810151825460018101845560009384529190922001555b611b3f8161276a565b9050611a2c565b5080611b5157600080fd5b505b600754604051632253ce7f60e21b8152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611ba5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc99190612783565b14611bd357600080fd5b6005546040516359d51cdb60e11b8152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4191906127f6565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611c8257611c82612754565b602090810291909101015260085482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015611cd3578160200160208202803683370190505b50875187906001600160a01b031615611ced576002611cf0565b60035b6040518763ffffffff1660e01b8152600401611d119695949392919061283c565b600060405180830381600087803b158015611d2b57600080fd5b505af1158015611d3f573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a350505050505050565b611d81611def565b6001600160a01b038116611de65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016117bc565b61124e81611e4e565b33611df861089a565b6001600160a01b0316146108985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016117bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015611f4f57600c6000838381518110611ec057611ec0612754565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600c6000848481518110611f0d57611f0d612754565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055611f488161276a565b9050611ea1565b5050565b508054600082559060005260206000209081019061124e9190612019565b828054828255906000526020600020908101928215611fc6579160200282015b82811115611fc657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611f91565b50611fd2929150612019565b5090565b6040518060e00160405280611fe961202e565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b5b80821115611fd2576000815560010161201a565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016120bd6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156120d457600080fd5b5035919050565b6000815180845260005b81811015612101576020818501810151868301820152016120e5565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b8381101561215e57815187529582019590820190600101612142565b509495945050505050565b600081518084526020808501945080840160005b8381101561215e5781516001600160a01b03168752958201959082019060010161217d565b600082825180855260208086019550808260051b84010181860160005b848110156121ed57601f198684030189526121db83835161212e565b988401989250908301906001016121bf565b5090979650505050505050565b634e487b7160e01b600052602160045260246000fd5b6004811061222e57634e487b7160e01b600052602160045260246000fd5b9052565b6000815160c0845261224760c0850182612169565b9050602080840151858303828701526122608382612169565b9250506040840151858303604087015261227a8382612169565b9250506060840151858303606087015261229483826121a2565b925050608084015185830360808701526122ae83826121a2565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156122f8576122e4828651612210565b9383019360019290920191908301906122d1565b509695505050505050565b60006101208251818552612319828601826120db565b915050602083015161232e6020860182612121565b5060408301516123416040860182612121565b5060608301518482036060860152612359828261212e565b91505060808301518482036080860152612373828261212e565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526123ac8382612232565b9695505050505050565b60e0815260006123c960e083018a612303565b6020830198909852506040810195909552606085019390935263ffffffff91821660808501521660a0830152151560c090910152919050565b602081526000612415602083018461212e565b9392505050565b6000806040838503121561242f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156124775761247761243e565b60405290565b6001600160a01b038116811461124e57600080fd5b803561249d8161247d565b919050565b600082601f8301126124b357600080fd5b813560206001600160401b03808311156124cf576124cf61243e565b8260051b604051601f19603f830116810181811084821117156124f4576124f461243e565b60405293845285810183019383810192508785111561251257600080fd5b83870191505b8482101561253a57813561252b8161247d565b83529183019190830190612518565b979650505050505050565b60006020828403121561255757600080fd5b81356001600160401b038082111561256e57600080fd5b90830190610120828603121561258357600080fd5b61258b612454565b61259483612492565b81526125a260208401612492565b60208201526125b360408401612492565b60408201526125c460608401612492565b60608201526125d560808401612492565b60808201526125e660a08401612492565b60a08201526125f760c08401612492565b60c082015261260860e08401612492565b60e0820152610100808401358381111561262157600080fd5b61262d888287016124a2565b918301919091525095945050505050565b60006020828403121561265057600080fd5b81356124158161247d565b602081526000825160e06020840152612678610100840182612303565b9050602084015160408401526040840151606084015260608401516080840152608084015163ffffffff80821660a08601528060a08701511660c0860152505060c0840151151560e08401528091505092915050565b600181811c908216806126e257607f821691505b60208210810361270257634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561271a57600080fd5b81516124158161247d565b634e487b7160e01b600052601160045260246000fd5b8181038181111561274e5761274e612725565b92915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161277c5761277c612725565b5060010190565b60006020828403121561279557600080fd5b5051919050565b6000604082840312156127ae57600080fd5b604080519081016001600160401b03811182821017156127d0576127d061243e565b806040525080915082516127e38161247d565b8152602092830151920191909152919050565b600080600060c0848603121561280b57600080fd5b612815858561279c565b9250612824856040860161279c565b9150612833856080860161279c565b90509250925092565b6001600160a01b03878116825286811660208301528516604082015260c0606082018190526000906128709083018661212e565b8281036080840152612882818661212e565b91505061253a60a0830184612210565b6001600160a01b031690565b6000815480845260208085019450836000528060002060005b8381101561215e5781546001600160a01b0316875295820195600191820191016128b7565b6000815480845260208085019450836000528060002060005b8381101561215e578154875295820195600191820191016128f5565b600081548084526020808501808196508360051b81019150856000528260002060005b8581101561295d57828403895261294b84836128dc565b98850198935060019182019101612934565b5091979650505050505050565b60c08252600061297d60c084018361289e565b60016020858303818701526129948383870161289e565b925085830360408701526129ab836002870161289e565b92506060868403818801526129c38460038801612911565b93506080878503818901526129db8560048901612911565b94506005870160a0898703818b01528682546129fb818a90815260200190565b600094855260208520995091505b80601f85011015612c7857885460ff612a2484828416612210565b612a35898501828460081c16612210565b612a4760408501828460101c16612210565b612a58888501828460181c16612210565b612a6887850182848c1c16612210565b612a79858501828460281c16612210565b612a8b60c08501828460301c16612210565b60e0612a9e818601838560381c16612210565b612ab16101008601838560401c16612210565b612ac46101208601838560481c16612210565b612ad76101408601838560501c16612210565b612aea6101608601838560581c16612210565b612afc610180860183858c1c16612210565b612b0f6101a08601838560681c16612210565b612b226101c08601838560701c16612210565b612b356101e08601838560781c16612210565b612b47610200860183858b1c16612210565b612b5a6102208601838560881c16612210565b612b6d6102408601838560901c16612210565b612b806102608601838560981c16612210565b612b9261028086018385891c16612210565b612ba56102a08601838560a81c16612210565b612bb86102c08601838560b01c16612210565b612bcb6102e08601838560b81c16612210565b612bde6103008601838560c01c16612210565b612bf16103208601838560c81c16612210565b612c046103408601838560d01c16612210565b612c176103608601838560d81c16612210565b612c2961038086018385841c16612210565b50612c3d6103a08501828460e81c16612210565b612c506103c08501828460f01c16612210565b50612c626103e084018260f81c612210565b5097870197928601926104009190910190612a09565b97549780841015612c9957612c908260ff8b16612210565b92870192908601905b80841015612cba57612cb18260ff8b60081c16612210565b92870192908601905b80841015612cdb57612cd28260ff8b60101c16612210565b92870192908601905b80841015612cfc57612cf38260ff8b60181c16612210565b92870192908601905b80841015612d1c57612d138260ff8b8a1c16612210565b92870192908601905b80841015612d3d57612d348260ff8b60281c16612210565b92870192908601905b80841015612d5e57612d558260ff8b60301c16612210565b92870192908601905b80841015612d7f57612d768260ff8b60381c16612210565b92870192908601905b80841015612da057612d978260ff8b60401c16612210565b92870192908601905b80841015612dc157612db88260ff8b60481c16612210565b92870192908601905b80841015612de257612dd98260ff8b60501c16612210565b92870192908601905b80841015612e0357612dfa8260ff8b60581c16612210565b92870192908601905b80841015612e2357612e1a8260ff8b891c16612210565b92870192908601905b80841015612e4457612e3b8260ff8b60681c16612210565b92870192908601905b80841015612e6557612e5c8260ff8b60701c16612210565b92870192908601905b80841015612e8657612e7d8260ff8b60781c16612210565b92870192908601905b80841015612ea657612e9d8260ff8b881c16612210565b92870192908601905b80841015612ec757612ebe8260ff8b60881c16612210565b92870192908601905b80841015612ee857612edf8260ff8b60901c16612210565b92870192908601905b80841015612f0957612f008260ff8b60981c16612210565b92870192908601905b80841015612f2957612f208260ff8b861c16612210565b92870192908601905b80841015612f4a57612f418260ff8b60a81c16612210565b92870192908601905b80841015612f6b57612f628260ff8b60b01c16612210565b92870192908601905b80841015612f8c57612f838260ff8b60b81c16612210565b92870192908601905b80841015612fad57612fa48260ff8b60c01c16612210565b92870192908601905b80841015612fce57612fc58260ff8b60c81c16612210565b92870192908601905b80841015612fef57612fe68260ff8b60d01c16612210565b92870192908601905b80841015613010576130078260ff8b60d81c16612210565b92870192908601905b80841015613031576130288260ff8b60e01c16612210565b92870192908601905b80841015613052576130498260ff8b60e81c16612210565b92870192908601905b808410156130735761306a8260ff8b60f01c16612210565b92870192908601905b8084101561308d57613088828a60f81c612210565b908601905b509a9950505050505050505050565b602081526000612415602083018461296a565b8054600090600181811c90808316806130c957607f831692505b602080841082036130ea57634e487b7160e01b600052602260045260246000fd5b83885260208801828015613105576001811461311b57613146565b60ff198716825285151560051b82019750613146565b60008981526020902060005b8781101561314057815484820152908601908401613127565b83019850505b5050505050505092915050565b604080825260e0908201526101208082015260006131756102408301856130af565b6131826001860154612892565b613190610140850182612121565b5061319e6002860154612892565b6131ac610160850182612121565b5061011f1980848303016101808501526131c982600388016128dc565b915080848303016101a08501526131e382600488016128dc565b915060058601546101c085015260068601546101e0850152600786015461020085015280848303016102208501525061321f816008870161296a565b600e8601546060850152600f8601546080850152601086015460a0850152601186015463ffffffff80821660c0870152602082901c1660e0860152604081901c60ff16151561010086015290915050602092909201929092529291505056fea2646970667358221220cfd0d4a5c121c8c888a6851cfaed8ddf608eeefe9f684c3bb28239b7d3e661b564736f6c63430008100033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
