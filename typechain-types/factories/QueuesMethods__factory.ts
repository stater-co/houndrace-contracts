/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "raceUploader",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceUploader",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b50604051620039cc380380620039cc833981016040819052620000399162000703565b80516101408201516001600055829190620000543362000299565b80518251146200006357600080fd5b60005b82518110156200017c5760005b82828151811062000088576200008862000850565b602002602001015151811015620001685760026000858481518110620000b257620000b262000850565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ef57620000ef62000850565b602002602001015182815181106200010b576200010b62000850565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055620001608162000866565b905062000073565b50620001748162000866565b905062000066565b5050815180518392506004916200019991839160200190620002eb565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805483169184169190911790556101008501516008850180548316918416919091179055610120850151600985018054909216921691909117905561014083015180516200028d92600a850192019062000355565b5090505050506200088e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805482825590600052602060002090810192821562000343579160200282015b828111156200034357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200030c565b5062000351929150620003b5565b5090565b828054828255906000526020600020908101928215620003a7579160200282015b82811115620003a7578251805162000396918491602090910190620003cc565b509160200191906001019062000376565b50620003519291506200047a565b5b80821115620003515760008155600101620003b6565b82805482825590600052602060002090600701600890048101928215620003435791602002820160005b838211156200043957835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003f6565b80156200046b5782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000439565b505062000351929150620003b5565b80821115620003515760006200049182826200049b565b506001016200047a565b508054600082556007016008900490600052602060002090810190620004c29190620003b5565b50565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620005015762000501620004c5565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620005325762000532620004c5565b604052919050565b60006001600160401b03821115620005565762000556620004c5565b5060051b60200190565b80516001600160a01b03811681146200057857600080fd5b919050565b600082601f8301126200058f57600080fd5b81516020620005a8620005a2836200053a565b62000507565b82815260059290921b84018101918181019086841115620005c857600080fd5b8286015b84811015620005ee57620005e08162000560565b8352918301918301620005cc565b509695505050505050565b600082601f8301126200060b57600080fd5b815160206200061e620005a2836200053a565b828152600592831b85018201928282019190878511156200063e57600080fd5b8387015b85811015620006f65780516001600160401b03811115620006635760008081fd5b8801603f81018a13620006765760008081fd5b8581015160406200068b620005a2836200053a565b82815291851b8301810191888101908d841115620006a95760008081fd5b938201935b83851015620006e457845192506001600160e01b031983168314620006d35760008081fd5b8282529389019390890190620006ae565b88525050509385019350840162000642565b5090979650505050505050565b6000602082840312156200071657600080fd5b81516001600160401b03808211156200072e57600080fd5b9083019061016082860312156200074457600080fd5b6200074e620004db565b8251828111156200075e57600080fd5b6200076c878286016200057d565b8252506200077d6020840162000560565b6020820152620007906040840162000560565b6040820152620007a36060840162000560565b6060820152620007b66080840162000560565b6080820152620007c960a0840162000560565b60a0820152620007dc60c0840162000560565b60c0820152620007ef60e0840162000560565b60e08201526101006200080481850162000560565b908201526101206200081884820162000560565b9082015261014083810151838111156200083157600080fd5b6200083f88828701620005f9565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200088757634e487b7160e01b600052601160045260246000fd5b5060010190565b61312e806200089e6000396000f3fe6080604052600436106100dd5760003560e01c8063af640d0f1161007f578063e200c85711610059578063e200c85714610332578063e3c5fc0414610352578063ec7bbea3146103a9578063f2fde38b146103c957600080fd5b8063af640d0f1461021c578063d8de658714610240578063ddf0b0091461030557600080fd5b80635b19e294116100bb5780635b19e2941461016e578063715018a6146101bf5780638da5cb5b146101d4578063982d64d41461020957600080fd5b80630f7921ed146100e2578063212049481461011f5780633b930d0c1461014c575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461245a565b6103e9565b6040516101169897969594939291906125b6565b60405180910390f35b34801561012b57600080fd5b5061013f61013a36600461245a565b6105f8565b604051610116919061260c565b34801561015857600080fd5b5061016c6101673660046128f6565b61065d565b005b34801561017a57600080fd5b5061018e610189366004612a27565b6107ad565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610116565b3480156101cb57600080fd5b5061016c6107f3565b3480156101e057600080fd5b5060015460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610116565b61016c610217366004612a53565b610807565b34801561022857600080fd5b5061023260035481565b604051908152602001610116565b34801561024c57600080fd5b50600554600654600754600854600954600a54600b54600c54600d5461029e9873ffffffffffffffffffffffffffffffffffffffff908116988116978116968116958116948116938116928116911689565b6040805173ffffffffffffffffffffffffffffffffffffffff9a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610116565b34801561031157600080fd5b5061032561032036600461245a565b6112a0565b6040516101169190612a75565b34801561033e57600080fd5b5061013f61034d36600461245a565b61152f565b34801561035e57600080fd5b5061039461036d36600461245a565b6000908152600f60205260409020600c015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610116565b3480156103b557600080fd5b5061016c6103c4366004612a53565b611592565b3480156103d557600080fd5b5061016c6103e4366004612b27565b611b7c565b600f602052806000526040600020600091509050806000016040518061010001604052908160008201805461041d90612b44565b80601f016020809104026020016040519081016040528092919081815260200182805461044990612b44565b80156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561052457602002820191906000526020600020905b815481526020019060010190808311610510575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561057c57602002820191906000526020600020905b815481526020019060010190808311610568575b505050918352505060058201546020820152600682015460408201526007909101546060909101526009820154600a830154600b840154600c909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b6000818152600f602090815260409182902060040180548351818402810184019094528084526060939283018282801561065157602002820191906000526020600020905b81548152602001906001019080831161063d575b50505050509050919050565b610665611c30565b80518051829160049161067f918391602090910190612189565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805483169184169190911790556101208501516009850180549092169216919091179055610140830151805161079692600a8501920190612213565b505081516101408301516107aa9250611cb1565b50565b600260205281600052604060002081815481106107c957600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6107fb611c30565b6108056000611f17565b565b600260005403610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260005561088682611f8e565b6000828152600f60205260409020600c01546108a79063ffffffff16611f8e565b6000828152600f60205260409020600c01546108d5906c01000000000000000000000000900460ff16612001565b6000828152600f60205260409020600a8101546009909101546108f89190612070565b600a546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018390526109929173ffffffffffffffffffffffffffffffffffffffff169063dadddaaf90602401602060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d9190612b97565b6120e9565b61099b336120e9565b6000828152600f60205260409020600b810154600c909101546109cc9190640100000000900463ffffffff16612070565b6000828152600f60205260409020600c015463ffffffff1615801590610a1457506000828152600f60205260409020600c01546c01000000000000000000000000900460ff16155b8015610a8157506000828152600f60205260409020600a0154158015610a4957506000828152600f6020526040902060090154155b80610a8157506000828152600f60205260409020600901544210801590610a8157506000828152600f60205260409020600a01544211155b8015610b335750600a546040517fdadddaaf00000000000000000000000000000000000000000000000000000000815260048101839052339173ffffffffffffffffffffffffffffffffffffffff169063dadddaaf90602401602060405180830381865afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190612b97565b73ffffffffffffffffffffffffffffffffffffffff16145b8015610b7857506000828152600f60205260409020600c0154610b6490640100000000900463ffffffff1642612be3565b6000838152600f60205260409020600b0154105b610b8157600080fd5b600a546040517f30ace5ff0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff16906330ace5ff90602401600060405180830381865afa158015610bf1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c199190810190612e7c565b6000848152600f60209081526040909120600c015482519091015191925063ffffffff68010000000000000000909104811691161015610c5857600080fd5b6000805b6000858152600f6020526040902060080154811015610ccb57604080840151608001516000878152600f60205291909120600801805483908110610ca257610ca2612f59565b906000526020600020015403610cbb5760019150610ccb565b610cc481612f88565b9050610c5c565b5080610cd657600080fd5b60005b6000858152600f6020526040902060030154811015610d3d576000858152600f60205260409020600301805485919083908110610d1857610d18612f59565b906000526020600020015403610d2d57600080fd5b610d3681612f88565b9050610cd9565b506000848152600f60209081526040808320600381018054600180820183559186528486200188905560048083018054928301815586529385204291015560095488855260059091015491517fccdac71a0000000000000000000000000000000000000000000000000000000081529283019190915273ffffffffffffffffffffffffffffffffffffffff169063ccdac71a90602401602060405180830381865afa158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e149190612b97565b6008546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018890529192506000918291829173ffffffffffffffffffffffffffffffffffffffff9091169063b3aa39b69060240160c060405180830381865afa158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb19190612ffb565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050836020015181600081518110610ef457610ef4612f59565b6020908102919091010152600b54845173ffffffffffffffffffffffffffffffffffffffff9182169163c01f59c2911615610f30576000610f36565b85602001515b600d54875160408051600080825260208201909252339373ffffffffffffffffffffffffffffffffffffffff169291508773ffffffffffffffffffffffffffffffffffffffff8d1615610f8a576002610f8d565b60035b6040518863ffffffff1660e01b8152600401610fae96959493929190613041565b6000604051808303818588803b158015610fc757600080fd5b505af1158015610fdb573d6000803e3d6000fd5b5050505050826020015181600081518110610ff857610ff8612f59565b6020908102919091010152600b54835173ffffffffffffffffffffffffffffffffffffffff9182169163c01f59c291161561103457600061103a565b84602001515b600b54865160408051600080825260208201909252339373ffffffffffffffffffffffffffffffffffffffff169291508773ffffffffffffffffffffffffffffffffffffffff8d161561108e576002611091565b60035b6040518863ffffffff1660e01b81526004016110b296959493929190613041565b6000604051808303818588803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b50505050508160200151816000815181106110fc576110fc612f59565b6020908102919091010152600b54825173ffffffffffffffffffffffffffffffffffffffff9182169163c01f59c291161561113857600061113e565b83602001515b600b54855160408051600080825260208201909252339373ffffffffffffffffffffffffffffffffffffffff169291508773ffffffffffffffffffffffffffffffffffffffff8d1615611192576002611195565b60035b6040518863ffffffff1660e01b81526004016111b696959493929190613041565b6000604051808303818588803b1580156111cf57600080fd5b505af11580156111e3573d6000803e3d6000fd5b50505060008b8152600f60205260409020600c81015460039091015463ffffffff909116900391506112619050576000898152600f6020526040812061122e9160039091019061226c565b6000898152600f6020526040812061124b9160049091019061226c565b6000898152600f6020526040902042600b909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a45050600160005550505050505050565b6112a861228a565b6000828152600f60205260409081902081516102208101909252805482906101208201908390829082906112db90612b44565b80601f016020809104026020016040519081016040528092919081815260200182805461130790612b44565b80156113545780601f1061132957610100808354040283529160200191611354565b820191906000526020600020905b81548152906001019060200180831161133757829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156113e257602002820191906000526020600020905b8154815260200190600101908083116113ce575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561143a57602002820191906000526020600020905b815481526020019060010190808311611426575b5050505050815260200160058201548152602001600682015481526020016007820154815250508152602001600882018054806020026020016040519081016040528092919081815260200182805480156114b457602002820191906000526020600020905b8154815260200190600101908083116114a0575b505050918352505060098201546020820152600a8201546040820152600b8201546060820152600c9091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600f6020908152604091829020600301805483518184028101840190945280845260609392830182828015610651576020028201919060005260206000209081548152602001906001019080831161063d5750505050509050919050565b6002600054036115fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161086f565b60026000908155600a546040517fdadddaaf0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063dadddaaf90602401602060405180830381865afa158015611674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116989190612b97565b905073ffffffffffffffffffffffffffffffffffffffff811633146116bc57600080fd5b6000838152600f602090815260408083206003018054825181850281018501909352808352919290919083018282801561171557602002820191906000526020600020905b815481526020019060010190808311611701575b5050506000878152600f602090815260408083206004018054825181850281018501909352808352969750929590945091925083018282801561177757602002820191906000526020600020905b815481526020019060010190808311611763575b5050506000888152600f6020526040812093945061179b936003019250905061226c565b6000858152600f602052604081206117b89160049091019061226c565b8151156118eb576000805b83518110156118de57858482815181106117df576117df612f59565b602002602001015103611843576000878152600f60205260409020600c01546001925061181a90640100000000900463ffffffff1642612be3565b83828151811061182c5761182c612f59565b60200260200101511061183e57600080fd5b6118ce565b6000878152600f60205260409020845160039091019085908390811061186b5761186b612f59565b602090810291909101810151825460018101845560009384528284200155888252600f90526040902083516004909101908490839081106118ae576118ae612f59565b602090810291909101810151825460018101845560009384529190922001555b6118d781612f88565b90506117c3565b50806118e957600080fd5b505b600a546040517f894f39fc0000000000000000000000000000000000000000000000000000000081526004810186905260006024820152869173ffffffffffffffffffffffffffffffffffffffff169063894f39fc906044016020604051808303816000875af1158015611963573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198791906130df565b1461199157600080fd5b6008546040517fb3aa39b60000000000000000000000000000000000000000000000000000000081526004810187905260009173ffffffffffffffffffffffffffffffffffffffff169063b3aa39b69060240160c060405180830381865afa158015611a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a259190612ffb565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611a6657611a66612f59565b6020908102919091010152600b54825173ffffffffffffffffffffffffffffffffffffffff9091169063c01f59c290829088906000604051908082528060200260200182016040528015611ac4578160200160208202803683370190505b508751879073ffffffffffffffffffffffffffffffffffffffff1615611aeb576002611aee565b60035b6040518763ffffffff1660e01b8152600401611b0f96959493929190613041565b600060405180830381600087803b158015611b2957600080fd5b505af1158015611b3d573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a3505060016000555050505050565b611b84611c30565b73ffffffffffffffffffffffffffffffffffffffff8116611c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161086f565b6107aa81611f17565b60015473ffffffffffffffffffffffffffffffffffffffff163314610805576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161086f565b8051825114611cbf57600080fd5b60005b8251811015611f125760005b828281518110611ce057611ce0612f59565b602002602001015151811015611f015760026000858481518110611d0657611d06612f59565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110611e245760026000858481518110611d6857611d68612f59565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838381518110611dbc57611dbc612f59565b60200260200101518281518110611dd557611dd5612f59565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055611ef1565b828281518110611e3657611e36612f59565b60200260200101518181518110611e4f57611e4f612f59565b602002602001015160026000868581518110611e6d57611e6d612f59565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611ec057611ec0612f59565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b611efa81612f88565b9050611cce565b50611f0b81612f88565b9050611cc2565b505050565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6107aa81604051602401611fa491815260200190565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff5b1bba900000000000000000000000000000000000000000000000000000000179052612168565b60405181151560248201526107aa9060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f32458eed00000000000000000000000000000000000000000000000000000000179052612168565b60405160248101839052604481018290526120e59060640160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6c0f698000000000000000000000000000000000000000000000000000000000179052612168565b5050565b60405173ffffffffffffffffffffffffffffffffffffffff821660248201526107aa9060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c2ecbc2000000000000000000000000000000000000000000000000000000001790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054828255906000526020600020908101928215612203579160200282015b8281111561220357825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906121a9565b5061220f92915061235c565b5090565b828054828255906000526020600020908101928215612260579160200282015b828111156122605782518051612250918491602090910190612371565b5091602001919060010190612233565b5061220f929150612418565b50805460008255906000526020600020908101906107aa919061235c565b60405180610120016040528061230a60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b5b8082111561220f576000815560010161235d565b828054828255906000526020600020906007016008900481019282156122035791602002820160005b838211156123db57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261239a565b801561240b5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026123db565b505061220f92915061235c565b8082111561220f57600061242c8282612435565b50600101612418565b5080546000825560070160089004906000526020600020908101906107aa919061235c565b60006020828403121561246c57600080fd5b5035919050565b60005b8381101561248e578181015183820152602001612476565b50506000910152565b600081518084526020808501945080840160005b838110156124c7578151875295820195908201906001016124ab565b509495945050505050565b600061010082518185528051808387015261012092506124f88184880160208501612473565b601f19601f8201168601915050602084015161252c602087018273ffffffffffffffffffffffffffffffffffffffff169052565b506040840151612554604087018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608401518286830301606087015261257083830182612497565b925050506080830151848203608086015261258b8282612497565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b60006101008083526125ca8184018c6124d2565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b60208152600061261f6020830184612497565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561267957612679612626565b60405290565b60405160e0810167ffffffffffffffff8111828210171561267957612679612626565b6040516080810167ffffffffffffffff8111828210171561267957612679612626565b6040805190810167ffffffffffffffff8111828210171561267957612679612626565b604051601f8201601f1916810167ffffffffffffffff8111828210171561271157612711612626565b604052919050565b600067ffffffffffffffff82111561273357612733612626565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146107aa57600080fd5b803561276a8161273d565b919050565b600082601f83011261278057600080fd5b8135602061279561279083612719565b6126e8565b82815260059290921b840181019181810190868411156127b457600080fd5b8286015b848110156127d85780356127cb8161273d565b83529183019183016127b8565b509695505050505050565b600082601f8301126127f457600080fd5b8135602061280461279083612719565b828152600592831b850182019282820191908785111561282357600080fd5b8387015b858110156128e957803567ffffffffffffffff8111156128475760008081fd5b8801603f81018a136128595760008081fd5b85810135604061286b61279083612719565b82815291851b8301810191888101908d8411156128885760008081fd5b938201935b838510156128d857843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146128c85760008081fd5b828252938901939089019061288d565b885250505093850193508401612827565b5090979650505050505050565b60006020828403121561290857600080fd5b813567ffffffffffffffff8082111561292057600080fd5b90830190610160828603121561293557600080fd5b61293d612655565b82358281111561294c57600080fd5b6129588782860161276f565b8252506129676020840161275f565b60208201526129786040840161275f565b60408201526129896060840161275f565b606082015261299a6080840161275f565b60808201526129ab60a0840161275f565b60a08201526129bc60c0840161275f565b60c08201526129cd60e0840161275f565b60e08201526101006129e081850161275f565b908201526101206129f284820161275f565b908201526101408381013583811115612a0a57600080fd5b612a16888287016127e3565b918301919091525095945050505050565b60008060408385031215612a3a57600080fd5b8235612a458161273d565b946020939093013593505050565b60008060408385031215612a6657600080fd5b50508035926020909101359150565b6020815260008251610120806020850152612a946101408501836124d2565b91506020850151601f19858403016040860152612ab18382612497565b9250506040850151606085015260608501516080850152608085015160a085015260a0850151612ae960c086018263ffffffff169052565b5060c085015163ffffffff811660e08601525060e0850151610100612b158187018363ffffffff169052565b90950151151593019290925250919050565b600060208284031215612b3957600080fd5b813561261f8161273d565b600181811c90821680612b5857607f821691505b602082108103612b91577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612ba957600080fd5b815161261f8161273d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612bf657612bf6612bb4565b92915050565b805163ffffffff8116811461276a57600080fd5b8051801515811461276a57600080fd5b600060608284031215612c3257600080fd5b6040516060810181811067ffffffffffffffff82111715612c5557612c55612626565b80604052508091508251815260208301516020820152612c7760408401612c10565b60408201525092915050565b600082601f830112612c9457600080fd5b60405161090080820182811067ffffffffffffffff82111715612cb957612cb9612626565b60405283018185821115612ccc57600080fd5b845b82811015612ced57612cdf81612bfc565b825260209182019101612cce565b509195945050505050565b600082601f830112612d0957600080fd5b815167ffffffffffffffff811115612d2357612d23612626565b612d366020601f19601f840116016126e8565b818152846020838601011115612d4b57600080fd5b612d5c826020830160208701612473565b949350505050565b60006109c08284031215612d7757600080fd5b612d7f61267f565b90508151815260208201516020820152604082015160408201526060820151606082015260808201516080820152612dba8360a08401612c83565b60a08201526109a082015167ffffffffffffffff811115612dda57600080fd5b612de684828501612cf8565b60c08301525092915050565b600060808284031215612e0457600080fd5b612e0c6126a2565b9050815167ffffffffffffffff80821115612e2657600080fd5b612e3285838601612cf8565b83526020840151915080821115612e4857600080fd5b50612e5584828501612cf8565b60208301525060408201516040820152612e7160608301612c10565b606082015292915050565b600060208284031215612e8e57600080fd5b815167ffffffffffffffff80821115612ea657600080fd5b9083019081850360e0811215612ebb57600080fd5b612ec36126a2565b6040821215612ed157600080fd5b612ed96126c5565b915083518252612eeb60208501612bfc565b6020830152818152612f008760408601612c20565b602082015260a0840151915082821115612f1957600080fd5b612f2587838601612d64565b604082015260c0840151915082821115612f3e57600080fd5b612f4a87838601612df2565b60608201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612fb957612fb9612bb4565b5060010190565b600060408284031215612fd257600080fd5b612fda6126c5565b90508151612fe78161273d565b808252506020820151602082015292915050565b600080600060c0848603121561301057600080fd5b61301a8585612fc0565b92506130298560408601612fc0565b91506130388560808601612fc0565b90509250925092565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015280871660408401525060c0606083015261308260c0830186612497565b82810360808401526130948186612497565b915050600483106130ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260a0830152979650505050505050565b6000602082840312156130f157600080fd5b505191905056fea26469706673582212208442255e05bcef251c8dd79e35d95e84ef98502bfb8ff51e707145a7466e888064736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
