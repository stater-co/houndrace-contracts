/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b506040516200451f3803806200451f8339810160408190526200003991620003de565b80620000453362000142565b600180558051600380546001600160a01b03199081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b80549093169416939093179055610120830151805184936200012692600c9291019062000251565b5050506101208101516200013a9062000192565b505062000541565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024d57600e6000838381518110620001b857620001b862000503565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e600084848151811062000208576200020862000503565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002458162000519565b905062000195565b5050565b828054828255906000526020600020908101928215620002a9579160200282015b82811115620002a957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000272565b50620002b7929150620002bb565b5090565b5b80821115620002b75760008155600101620002bc565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156200030e576200030e620002d2565b60405290565b80516001600160a01b03811681146200032c57600080fd5b919050565b600082601f8301126200034357600080fd5b815160206001600160401b0380831115620003625762000362620002d2565b8260051b604051601f19603f830116810181811084821117156200038a576200038a620002d2565b604052938452858101830193838101925087851115620003a957600080fd5b83870191505b84821015620003d357620003c38262000314565b83529183019190830190620003af565b979650505050505050565b600060208284031215620003f157600080fd5b81516001600160401b03808211156200040957600080fd5b9083019061014082860312156200041f57600080fd5b62000429620002e8565b620004348362000314565b8152620004446020840162000314565b6020820152620004576040840162000314565b60408201526200046a6060840162000314565b60608201526200047d6080840162000314565b60808201526200049060a0840162000314565b60a0820152620004a360c0840162000314565b60c0820152620004b660e0840162000314565b60e0820152610100620004cb81850162000314565b908201526101208381015183811115620004e457600080fd5b620004f28882870162000331565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053a57634e487b7160e01b600052601160045260246000fd5b5060010190565b613fce80620005516000396000f3fe6080604052600436106100dd5760003560e01c8063d63a8e111161007f578063e200c85711610059578063e200c857146102fa578063e3c5fc041461031a578063ec7bbea314610371578063f2fde38b1461039157600080fd5b8063d63a8e11146101e2578063d8de658714610222578063ddf0b009146102cd57600080fd5b8063715018a6116100bb578063715018a61461016e5780638da5cb5b14610183578063982d64d4146101ab578063af640d0f146101be57600080fd5b80630f7921ed146100e2578063212049481461011f578063451383f21461014c575b600080fd5b3480156100ee57600080fd5b506101026100fd366004612360565b6103b1565b60405161011698979695949392919061266c565b60405180910390f35b34801561012b57600080fd5b5061013f61013a366004612360565b61089f565b60405161011691906126c2565b34801561015857600080fd5b5061016c610167366004612837565b610904565b005b34801561017a57600080fd5b5061016c610a14565b34801561018f57600080fd5b506000546040516001600160a01b039091168152602001610116565b61016c6101b9366004612943565b610a28565b3480156101ca57600080fd5b506101d460025481565b604051908152602001610116565b3480156101ee57600080fd5b506102126101fd366004612965565b600e6020526000908152604090205460ff1681565b6040519015158152602001610116565b34801561022e57600080fd5b50600354600454600554600654600754600854600954600a54600b54610273986001600160a01b03908116988116978116968116958116948116938116928116911689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610116565b3480156102d957600080fd5b506102ed6102e8366004612360565b6113d4565b60405161011691906129c9565b34801561030657600080fd5b5061013f610315366004612360565b611977565b34801561032657600080fd5b5061035c610335366004612360565b6000908152600d602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610116565b34801561037d57600080fd5b5061016c61038c366004612943565b6119da565b34801561039d57600080fd5b5061016c6103ac366004612965565b611f74565b600d60205280600052604060002060009150905080600001604051806101200160405290816000820180546103e590612a73565b80601f016020809104026020016040519081016040528092919081815260200182805461041190612a73565b801561045e5780601f106104335761010080835404028352916020019161045e565b820191906000526020600020905b81548152906001019060200180831161044157829003601f168201915b505050918352505060018201546001600160a01b03908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104df57602002820191906000526020600020905b8154815260200190600101908083116104cb575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561053757602002820191906000526020600020905b815481526020019060010190808311610523575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156105c757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105a9575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561062957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161060b575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561068b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161066d575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107255760008481526020908190208301805460408051828502810185019091528181529283018282801561071157602002820191906000526020600020905b8154815260200190600101908083116106fd575b5050505050815260200190600101906106b9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107be576000848152602090819020830180546040805182850281018501909152818152928301828280156107aa57602002820191906000526020600020905b815481526020019060010190808311610796575b505050505081526020019060010190610752565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561084557602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561082357610823612495565b8152602060019283018181049485019490930390920291018084116108045790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b6000818152600d60209081526040918290206004018054835181840281018401909452808452606093928301828280156108f857602002820191906000526020600020905b8154815260200190600101908083116108e4575b50505050509050919050565b61090c61201b565b8051600380547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b80549093169416939093179055610120830151805184936109ff92600c929101906121ca565b50905050610a1181610120015161208f565b50565b610a1c61201b565b610a266000612162565b565b600260015403610a99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556000828152600d602052604090206011015463ffffffff1615801590610ad657506000828152600d602052604090206013015460ff16155b8015610b4357506000828152600d60205260409020600f0154158015610b0b57506000828152600d60205260409020600e0154155b80610b4357506000828152600d60205260409020600e01544210801590610b4357506000828152600d60205260409020600f01544211155b8015610bdb57506008546040517fdadddaaf0000000000000000000000000000000000000000000000000000000081526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190612ac6565b6001600160a01b0316145b8015610c2057506000828152600d6020526040902060110154610c0c90640100000000900463ffffffff1642612b12565b6000838152600d6020526040902060100154105b610c2957600080fd5b600b546040517f85e3f058000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906385e3f05890602401600060405180830381865afa158015610c8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb49190810190612c27565b90506000805b6000858152600d6020526040902060120154811015610d5b578260c001516007811115610ce957610ce9612495565b6000868152600d60205260409020601201805483908110610d0c57610d0c612ce2565b90600052602060002090602091828204019190069054906101000a900460ff166007811115610d3d57610d3d612495565b03610d4b5760019150610d5b565b610d5481612d11565b9050610cba565b5080610d6657600080fd5b60005b6000858152600d6020526040902060030154811015610dcd576000858152600d60205260409020600301805485919083908110610da857610da8612ce2565b906000526020600020015403610dbd57600080fd5b610dc681612d11565b9050610d69565b506000848152600d6020908152604080832060038101805460018082018355918652848620018890556004918201805491820181558552929093204292019190915560085490517f894f39fc000000000000000000000000000000000000000000000000000000008152918201859052602482018690526001600160a01b03169063894f39fc906044016020604051808303816000875af1158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a9190612d49565b15610ea457600080fd5b6007546000858152600d60205260408082206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815291926001600160a01b03169163ccdac71a91610f019160040190815260200190565b602060405180830381865afa158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612ac6565b6006546040517fb3aa39b600000000000000000000000000000000000000000000000000000000815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd29190612dbd565b6040805160018082528183019092529396509194509250600091906020808301908036833701905050905083602001518160008151811061101557611015612ce2565b602090810291909101015260095484516001600160a01b039182169163c01f59c291161561104457600061104a565b85602001515b60095487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615611084576002611087565b60035b6040518863ffffffff1660e01b81526004016110a896959493929190612e03565b6000604051808303818588803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b50505050508260200151816000815181106110f2576110f2612ce2565b602090810291909101015260095483516001600160a01b039182169163c01f59c2911615611121576000611127565b84602001515b60095486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615611161576002611164565b60035b6040518863ffffffff1660e01b815260040161118596959493929190612e03565b6000604051808303818588803b15801561119e57600080fd5b505af11580156111b2573d6000803e3d6000fd5b50505050508160200151816000815181106111cf576111cf612ce2565b602090810291909101015260095482516001600160a01b039182169163c01f59c29116156111fe576000611204565b83602001515b60095485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561123e576002611241565b60035b6040518863ffffffff1660e01b815260040161126296959493929190612e03565b6000604051808303818588803b15801561127b57600080fd5b505af115801561128f573d6000803e3d6000fd5b50505060008b8152600d60205260409020601181015460039091015463ffffffff90911690039150611396905057600a5460008a8152600d60205260409081902090517ffcf696350000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163fcf6963591611316918d9190600401613ed3565b600060405180830381600087803b15801561133057600080fd5b505af1158015611344573d6000803e3d6000fd5b50505060008a8152600d60205260408120611363925060030190612247565b6000898152600d6020526040812061138091600490910190612247565b6000898152600d60205260409020426010909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450506001805550505050505050565b6113dc612265565b6000828152600d602052604090819020815161024081019092528054829061012082019083908290829061140f90612a73565b80601f016020809104026020016040519081016040528092919081815260200182805461143b90612a73565b80156114885780601f1061145d57610100808354040283529160200191611488565b820191906000526020600020905b81548152906001019060200180831161146b57829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561150957602002820191906000526020600020905b8154815260200190600101908083116114f5575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561156157602002820191906000526020600020905b81548152602001906001019080831161154d575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156115f157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115d3575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561165357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611635575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156116b557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611697575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561174f5760008481526020908190208301805460408051828502810185019091528181529283018282801561173b57602002820191906000526020600020905b815481526020019060010190808311611727575b5050505050815260200190600101906116e3565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156117e8576000848152602090819020830180546040805182850281018501909152818152928301828280156117d457602002820191906000526020600020905b8154815260200190600101908083116117c0575b50505050508152602001906001019061177c565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561186f57602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561184d5761184d612495565b81526020600192830181810494850194909303909202910180841161182e5790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e090940193919290919083018282801561195757602002820191906000526020600020906000905b82829054906101000a900460ff16600781111561193557611935612495565b8152602060019283018181049485019490930390920291018084116119165790505b50505091835250506013919091015460ff16151560209091015292915050565b6000818152600d60209081526040918290206003018054835181840281018401909452808452606093928301828280156108f857602002820191906000526020600020908154815260200190600101908083116108e45750505050509050919050565b600260015403611a46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a90565b60026001556008546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad29190612ac6565b90506001600160a01b0381163314611ae957600080fd5b6000838152600d6020908152604080832060030180548251818502810185019093528083529192909190830182828015611b4257602002820191906000526020600020905b815481526020019060010190808311611b2e575b5050506000878152600d6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611ba457602002820191906000526020600020905b815481526020019060010190808311611b90575b5050506000888152600d60205260408120939450611bc89360030192509050612247565b6000858152600d60205260408120611be591600490910190612247565b815115611d18576000805b8351811015611d0b5785848281518110611c0c57611c0c612ce2565b602002602001015103611c70576000878152600d602052604090206011015460019250611c4790640100000000900463ffffffff1642612b12565b838281518110611c5957611c59612ce2565b602002602001015110611c6b57600080fd5b611cfb565b6000878152600d602052604090208451600390910190859083908110611c9857611c98612ce2565b602090810291909101810151825460018101845560009384528284200155888252600d9052604090208351600490910190849083908110611cdb57611cdb612ce2565b602090810291909101810151825460018101845560009384529190922001555b611d0481612d11565b9050611bf0565b5080611d1657600080fd5b505b6008546040517f894f39fc000000000000000000000000000000000000000000000000000000008152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da79190612d49565b14611db157600080fd5b6006546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e389190612dbd565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611e7957611e79612ce2565b602090810291909101015260095482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015611eca578160200160208202803683370190505b50875187906001600160a01b031615611ee4576002611ee7565b60035b6040518763ffffffff1660e01b8152600401611f0896959493929190612e03565b600060405180830381600087803b158015611f2257600080fd5b505af1158015611f36573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a35050600180555050505050565b611f7c61201b565b6001600160a01b038116612012576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610a90565b610a1181612162565b6000546001600160a01b03163314610a26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a90565b60005b815181101561215e57600e60008383815181106120b1576120b1612ce2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008484815181106120fe576120fe612ce2565b6020908102919091018101516001600160a01b0316825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561215781612d11565b9050612092565b5050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215612237579160200282015b8281111561223757825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039091161782556020909201916001909101906121ea565b506122439291506122b7565b5090565b5080546000825590600052602060002090810190610a1191906122b7565b6040518061012001604052806122796122cc565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b8082111561224357600081556001016122b8565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200161235b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561237257600080fd5b5035919050565b60005b8381101561239457818101518382015260200161237c565b50506000910152565b600081518084526123b5816020860160208601612379565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156123f9578151875295820195908201906001016123dd565b509495945050505050565b600081518084526020808501945080840160005b838110156123f95781516001600160a01b031687529582019590820190600101612418565b600082825180855260208086019550808260051b84010181860160005b8481101561248857601f198684030189526124768383516123c9565b9884019892509083019060010161245a565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106124d4576124d4612495565b9052565b6000815160c084526124ed60c0850182612404565b9050602080840151858303828701526125068382612404565b925050604084015185830360408701526125208382612404565b9250506060840151858303606087015261253a838261243d565b92505060808401518583036080870152612554838261243d565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561259e5761258a8286516124c4565b938301936001929092019190830190612577565b509695505050505050565b600061012082518185526125bf8286018261239d565b91505060208301516125dc60208601826001600160a01b03169052565b5060408301516125f760408601826001600160a01b03169052565b506060830151848203606086015261260f82826123c9565b9150506080830151848203608086015261262982826123c9565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261266283826124d8565b9695505050505050565b60006101008083526126808184018c6125a9565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020815260006126d560208301846123c9565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561272f5761272f6126dc565b60405290565b60405160e0810167ffffffffffffffff8111828210171561272f5761272f6126dc565b604051601f8201601f1916810167ffffffffffffffff81118282101715612781576127816126dc565b604052919050565b6001600160a01b0381168114610a1157600080fd5b80356127a981612789565b919050565b600082601f8301126127bf57600080fd5b8135602067ffffffffffffffff8211156127db576127db6126dc565b8160051b6127ea828201612758565b928352848101820192828101908785111561280457600080fd5b83870192505b8483101561282c57823561281d81612789565b8252918301919083019061280a565b979650505050505050565b60006020828403121561284957600080fd5b813567ffffffffffffffff8082111561286157600080fd5b90830190610140828603121561287657600080fd5b61287e61270b565b6128878361279e565b81526128956020840161279e565b60208201526128a66040840161279e565b60408201526128b76060840161279e565b60608201526128c86080840161279e565b60808201526128d960a0840161279e565b60a08201526128ea60c0840161279e565b60c08201526128fb60e0840161279e565b60e082015261010061290e81850161279e565b90820152610120838101358381111561292657600080fd5b612932888287016127ae565b918301919091525095945050505050565b6000806040838503121561295657600080fd5b50508035926020909101359150565b60006020828403121561297757600080fd5b81356126d581612789565b600881106124d4576124d4612495565b600081518084526020808501945080840160005b838110156123f9576129b9878351612982565b95820195908201906001016129a6565b60208152600082516101208060208501526129e86101408501836125a9565b91506020850151604085015260408501516060850152606085015160808501526080850151612a1f60a086018263ffffffff169052565b5060a085015163ffffffff811660c08601525060c085015163ffffffff811660e08601525060e0850151610100601f198685030181870152612a618483612992565b96015115159190940152509192915050565b600181811c90821680612a8757607f821691505b602082108103612ac0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612ad857600080fd5b81516126d581612789565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612b2557612b25612ae3565b92915050565b600082601f830112612b3c57600080fd5b6040516106c080820182811067ffffffffffffffff82111715612b6157612b616126dc565b60405283018185821115612b7457600080fd5b845b82811015612ba157805163ffffffff81168114612b935760008081fd5b825260209182019101612b76565b509195945050505050565b600082601f830112612bbd57600080fd5b815167ffffffffffffffff811115612bd757612bd76126dc565b612bea6020601f19601f84011601612758565b818152846020838601011115612bff57600080fd5b612c10826020830160208701612379565b949350505050565b8051600881106127a957600080fd5b600060208284031215612c3957600080fd5b815167ffffffffffffffff80821115612c5157600080fd5b908301906107808286031215612c6657600080fd5b612c6e612735565b82518152602083015160208201526040830151604082015260608301516060820152612c9d8660808501612b2b565b608082015261074083015182811115612cb557600080fd5b612cc187828601612bac565b60a083015250612cd46107608401612c18565b60c082015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d4257612d42612ae3565b5060010190565b600060208284031215612d5b57600080fd5b5051919050565b600060408284031215612d7457600080fd5b6040516040810181811067ffffffffffffffff82111715612d9757612d976126dc565b80604052508091508251612daa81612789565b8152602092830151920191909152919050565b600080600060c08486031215612dd257600080fd5b612ddc8585612d62565b9250612deb8560408601612d62565b9150612dfa8560808601612d62565b90509250925092565b60006001600160a01b038089168352808816602084015280871660408401525060c06060830152612e3760c08301866123c9565b8281036080840152612e4981866123c9565b91505061282c60a08301846124c4565b8054600090600181811c9080831680612e7357607f831692505b60208084108203612ead577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b83885260208801828015612ec85760018114612efc57612f27565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b82019750612f27565b60008981526020902060005b87811015612f2157815484820152908601908401612f08565b83019850505b5050505050505092915050565b6000815480845260208085019450836000528060002060005b838110156123f957815487529582019560019182019101612f4d565b6000815480845260208085019450836000528060002060005b838110156123f95781546001600160a01b031687529582019560019182019101612f82565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015612ff3578284038952612fe18483612f34565b98850198935060019182019101612fca565b5091979650505050505050565b60c08252600061301360c0840183612f69565b600160208583038187015261302a83838701612f69565b925085830360408701526130418360028701612f69565b92506060868403818801526130598460038801612fa7565b93506080878503818901526130718560048901612fa7565b94506005870160a0898703818b0152868254613091818a90815260200190565b600094855260208520995091505b80601f8501101561330e57885460ff6130ba848284166124c4565b6130cb898501828460081c166124c4565b6130dd60408501828460101c166124c4565b6130ee888501828460181c166124c4565b6130fe87850182848c1c166124c4565b61310f858501828460281c166124c4565b61312160c08501828460301c166124c4565b60e0613134818601838560381c166124c4565b6131476101008601838560401c166124c4565b61315a6101208601838560481c166124c4565b61316d6101408601838560501c166124c4565b6131806101608601838560581c166124c4565b613192610180860183858c1c166124c4565b6131a56101a08601838560681c166124c4565b6131b86101c08601838560701c166124c4565b6131cb6101e08601838560781c166124c4565b6131dd610200860183858b1c166124c4565b6131f06102208601838560881c166124c4565b6132036102408601838560901c166124c4565b6132166102608601838560981c166124c4565b61322861028086018385891c166124c4565b61323b6102a08601838560a81c166124c4565b61324e6102c08601838560b01c166124c4565b6132616102e08601838560b81c166124c4565b6132746103008601838560c01c166124c4565b6132876103208601838560c81c166124c4565b61329a6103408601838560d01c166124c4565b6132ad6103608601838560d81c166124c4565b6132bf61038086018385841c166124c4565b506132d36103a08501828460e81c166124c4565b6132e66103c08501828460f01c166124c4565b506132f86103e084018260f81c6124c4565b509787019792860192610400919091019061309f565b9754978084101561332f576133268260ff8b166124c4565b92870192908601905b80841015613350576133478260ff8b60081c166124c4565b92870192908601905b80841015613371576133688260ff8b60101c166124c4565b92870192908601905b80841015613392576133898260ff8b60181c166124c4565b92870192908601905b808410156133b2576133a98260ff8b8a1c166124c4565b92870192908601905b808410156133d3576133ca8260ff8b60281c166124c4565b92870192908601905b808410156133f4576133eb8260ff8b60301c166124c4565b92870192908601905b808410156134155761340c8260ff8b60381c166124c4565b92870192908601905b808410156134365761342d8260ff8b60401c166124c4565b92870192908601905b808410156134575761344e8260ff8b60481c166124c4565b92870192908601905b808410156134785761346f8260ff8b60501c166124c4565b92870192908601905b80841015613499576134908260ff8b60581c166124c4565b92870192908601905b808410156134b9576134b08260ff8b891c166124c4565b92870192908601905b808410156134da576134d18260ff8b60681c166124c4565b92870192908601905b808410156134fb576134f28260ff8b60701c166124c4565b92870192908601905b8084101561351c576135138260ff8b60781c166124c4565b92870192908601905b8084101561353c576135338260ff8b881c166124c4565b92870192908601905b8084101561355d576135548260ff8b60881c166124c4565b92870192908601905b8084101561357e576135758260ff8b60901c166124c4565b92870192908601905b8084101561359f576135968260ff8b60981c166124c4565b92870192908601905b808410156135bf576135b68260ff8b861c166124c4565b92870192908601905b808410156135e0576135d78260ff8b60a81c166124c4565b92870192908601905b80841015613601576135f88260ff8b60b01c166124c4565b92870192908601905b80841015613622576136198260ff8b60b81c166124c4565b92870192908601905b808410156136435761363a8260ff8b60c01c166124c4565b92870192908601905b808410156136645761365b8260ff8b60c81c166124c4565b92870192908601905b808410156136855761367c8260ff8b60d01c166124c4565b92870192908601905b808410156136a65761369d8260ff8b60d81c166124c4565b92870192908601905b808410156136c7576136be8260ff8b60e01c166124c4565b92870192908601905b808410156136e8576136df8260ff8b60e81c166124c4565b92870192908601905b80841015613709576137008260ff8b60f01c166124c4565b92870192908601905b808410156137235761371e828a60f81c6124c4565b908601905b509a9950505050505050505050565b600061012080845261374681850184612e59565b905061375c60018401546001600160a01b031690565b6001600160a01b0390811660208601526002840154166040850152838103606085015261378c8160038501612f34565b905083810360808501526137a38160048501612f34565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152612c108160088501613000565b805480835260008281526020808220940193909190825b82601f82011015613a7057815460ff61380b88828416612982565b602061381e818a01838560081c16612982565b6040613831818b01848660101c16612982565b6060613844818c01858760181c16612982565b6080613856818d018688871c16612982565b60a0935061386b848d01868860281c16612982565b60c061387e818e01878960301c16612982565b60e0613891818f01888a60381c16612982565b6138a36101008f01888a881c16612982565b6138b66101208f01888a60481c16612982565b6138c96101408f01888a60501c16612982565b6138dc6101608f01888a60581c16612982565b6138ee6101808f01888a871c16612982565b6139016101a08f01888a60681c16612982565b6139146101c08f01888a60701c16612982565b6139276101e08f01888a60781c16612982565b6139396102008f01888a861c16612982565b61394c6102208f01888a60881c16612982565b61395f6102408f01888a60901c16612982565b6139726102608f01888a60981c16612982565b6139846102808f01888a891c16612982565b6139976102a08f01888a60a81c16612982565b6139aa6102c08f01888a60b01c16612982565b6139bd6102e08f01888a60b81c16612982565b6139cf6103008f01888a851c16612982565b6139e26103208f01888a60c81c16612982565b6139f56103408f01888a60d01c16612982565b613a086103608f01888a60d81c16612982565b613a1a6103808f01888a841c16612982565b505050505050613a336103a08901828460e81c16612982565b613a466103c08901828460f01c16612982565b50613a586103e088018260f81c612982565b506104009590950194600191909101906020016137f0565b90549082811015613a9357613a888660ff8416612982565b602095909501946001015b82811015613ab657613aab8660ff8460081c16612982565b602095909501946001015b82811015613ad957613ace8660ff8460101c16612982565b602095909501946001015b82811015613afc57613af18660ff8460181c16612982565b602095909501946001015b82811015613b1f57613b148660ff8460201c16612982565b602095909501946001015b82811015613b4257613b378660ff8460281c16612982565b602095909501946001015b82811015613b6557613b5a8660ff8460301c16612982565b602095909501946001015b82811015613b8857613b7d8660ff8460381c16612982565b602095909501946001015b82811015613bab57613ba08660ff8460401c16612982565b602095909501946001015b82811015613bce57613bc38660ff8460481c16612982565b602095909501946001015b82811015613bf157613be68660ff8460501c16612982565b602095909501946001015b82811015613c1457613c098660ff8460581c16612982565b602095909501946001015b82811015613c3757613c2c8660ff8460601c16612982565b602095909501946001015b82811015613c5a57613c4f8660ff8460681c16612982565b602095909501946001015b82811015613c7d57613c728660ff8460701c16612982565b602095909501946001015b82811015613ca057613c958660ff8460781c16612982565b602095909501946001015b82811015613cc357613cb88660ff8460801c16612982565b602095909501946001015b82811015613ce657613cdb8660ff8460881c16612982565b602095909501946001015b82811015613d0957613cfe8660ff8460901c16612982565b602095909501946001015b82811015613d2c57613d218660ff8460981c16612982565b602095909501946001015b82811015613d4f57613d448660ff8460a01c16612982565b602095909501946001015b82811015613d7257613d678660ff8460a81c16612982565b602095909501946001015b82811015613d9557613d8a8660ff8460b01c16612982565b602095909501946001015b82811015613db857613dad8660ff8460b81c16612982565b602095909501946001015b82811015613ddb57613dd08660ff8460c01c16612982565b602095909501946001015b82811015613dfe57613df38660ff8460c81c16612982565b602095909501946001015b82811015613e2157613e168660ff8460d01c16612982565b602095909501946001015b82811015613e4457613e398660ff8460d81c16612982565b602095909501946001015b82811015613e6757613e5c8660ff8460e01c16612982565b602095909501946001015b82811015613e8a57613e7f8660ff8460e81c16612982565b602095909501946001015b82811015613ead57613ea28660ff8460f01c16612982565b602095909501946001015b82811015613ec957613ec2868360f81c612982565b6020860195505b5093949350505050565b828152604060208201526000610120806040840152613ef6610160840185613732565b600e8501546060850152600f8501546080850152601085015460a0850152601185015463ffffffff80821660c0870152602082901c811660e087015260409190911c166101008501528381037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00182850152613f7581601287016137d9565b915050613f86601385015460ff1690565b8015156101408501525094935050505056fea2646970667358221220b51d8975042b77069e01f15fb1ba267069f4c064f23da026837770c471ac93ee64736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
