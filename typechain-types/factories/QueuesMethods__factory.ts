/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint32[]",
                    name: "paymentType",
                    type: "uint32[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162003256380380620032568339810160408190526200003891620003c4565b80620000443362000128565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000237565b505050610100810151620001209062000178565b505062000513565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200023357600c60008383815181106200019e576200019e620004d5565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600c6000848481518110620001ee57620001ee620004d5565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200022b81620004eb565b90506200017b565b5050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d929150620002a1565b5090565b5b808211156200029d5760008155600101620002a2565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620002f457620002f4620002b8565b60405290565b80516001600160a01b03811681146200031257600080fd5b919050565b600082601f8301126200032957600080fd5b815160206001600160401b0380831115620003485762000348620002b8565b8260051b604051601f19603f83011681018181108482111715620003705762000370620002b8565b6040529384528581018301938381019250878511156200038f57600080fd5b83870191505b84821015620003b957620003a982620002fa565b8352918301919083019062000395565b979650505050505050565b600060208284031215620003d757600080fd5b81516001600160401b0380821115620003ef57600080fd5b9083019061012082860312156200040557600080fd5b6200040f620002ce565b6200041a83620002fa565b81526200042a60208401620002fa565b60208201526200043d60408401620002fa565b60408201526200045060608401620002fa565b60608201526200046360808401620002fa565b60808201526200047660a08401620002fa565b60a08201526200048960c08401620002fa565b60c08201526200049c60e08401620002fa565b60e08201526101008084015183811115620004b657600080fd5b620004c48882870162000317565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200050c57634e487b7160e01b600052601160045260246000fd5b5060010190565b612d3380620005236000396000f3fe6080604052600436106100ae5760003560e01c80630f7921ed146100b757806321204948146100f3578063715018a6146101205780638da5cb5b14610135578063982d64d414610162578063acb9671a14610175578063af640d0f14610195578063d63a8e11146101b9578063d8de6587146101f9578063ddf0b00914610296578063e1152343146102c3578063e200c857146102e3578063ec7bbea314610303578063f2fde38b1461032357005b366100b557005b005b3480156100c357600080fd5b506100d76100d23660046120ba565b610343565b6040516100ea9796959493929190612372565b60405180910390f35b3480156100ff57600080fd5b5061011361010e3660046120ba565b61081d565b6040516100ea91906123be565b34801561012c57600080fd5b506100b5610882565b34801561014157600080fd5b5061014a610896565b6040516001600160a01b0390911681526020016100ea565b6100b56101703660046123d8565b6108a5565b34801561018157600080fd5b506100b5610190366004612501565b61116a565b3480156101a157600080fd5b506101ab60015481565b6040519081526020016100ea565b3480156101c557600080fd5b506101e96101d43660046125fa565b600c6020526000908152604090205460ff1681565b60405190151581526020016100ea565b34801561020557600080fd5b50600254600354600454600554600654600754600854600954610244976001600160a01b03908116978116968116958116948116938116928116911688565b604080516001600160a01b03998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e0820152610100016100ea565b3480156102a257600080fd5b506102b66102b13660046120ba565b61124d565b6040516100ea9190612617565b3480156102cf57600080fd5b506100b56102de3660046120ba565b611748565b3480156102ef57600080fd5b506101136102fe3660046120ba565b611835565b34801561030f57600080fd5b506100b561031e3660046123d8565b611898565b34801561032f57600080fd5b506100b561033e3660046125fa565b611d71565b600b60205280600052604060002060009150905080600001604051806101200160405290816000820180546103779061268a565b80601f01602080910402602001604051908101604052809291908181526020018280546103a39061268a565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561047157602002820191906000526020600020905b81548152602001906001019080831161045d575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104c957602002820191906000526020600020905b8154815260200190600101908083116104b5575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561055957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161053b575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161059d575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561061d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ff575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106b7576000848152602090819020830180546040805182850281018501909152818152928301828280156106a357602002820191906000526020600020905b81548152602001906001019080831161068f575b50505050508152602001906001019061064b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107505760008481526020908190208301805460408051828502810185019091528181529283018282801561073c57602002820191906000526020600020905b815481526020019060010190808311610728575b5050505050815260200190600101906106e4565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156107d357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116107965790505b50505091909252505050905250600e820154600f83015460108401546011909401549293919290919063ffffffff80821691600160201b810490911690600160401b900460ff1687565b6000818152600b602090815260409182902060040180548351818402810184019094528084526060939283018282801561087657602002820191906000526020600020905b815481526020019060010190808311610862575b50505050509050919050565b61088a611de7565b6108946000611e46565b565b6000546001600160a01b031690565b6000828152600b602052604090206011015463ffffffff16158015906108e457506000828152600b6020526040902060110154600160401b900460ff16155b801561095157506000828152600b60205260409020600f015415801561091957506000828152600b60205260409020600e0154155b8061095157506000828152600b60205260409020600e0154421080159061095157506000828152600b60205260409020600f01544211155b80156109d0575060075460405163dadddaaf60e01b81526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c591906126c4565b6001600160a01b0316145b8015610a1457506000828152600b6020526040902060110154610a0090600160201b900463ffffffff16426126f7565b6000838152600b6020526040902060100154105b610a1d57600080fd5b60005b6000838152600b6020526040902060030154811015610a84576000838152600b60205260409020600301805483919083908110610a5f57610a5f612710565b906000526020600020015403610a7457600080fd5b610a7d81612726565b9050610a20565b506000828152600b6020908152604080832060038101805460018082018355918652848620018690556004918201805491820181558552929093204292019190915560075490516373d1aa2760e01b81529182018390526001600160a01b0316906373d1aa2790602401600060405180830381600087803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b5050600754604051632253ce7f60e21b815260048101859052602481018690526001600160a01b03909116925063894f39fc91506044016020604051808303816000875af1158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b96919061273f565b15610ba057600080fd5b6006546000838152600b602052604080822060050154905163666d638d60e11b815291926001600160a01b03169163ccdac71a91610be49160040190815260200190565b602060405180830381865afa158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2591906126c4565b6005546040516359d51cdb60e11b815260048101869052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610c78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9c91906127b2565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050836020015181600081518110610cdf57610cdf612710565b602090810291909101015260085484516001600160a01b039182169163400f959f911615610d0e576000610d14565b85602001515b60085487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610d4e576002610d51565b60035b6040518863ffffffff1660e01b8152600401610d72969594939291906127f8565b6000604051808303818588803b158015610d8b57600080fd5b505af1158015610d9f573d6000803e3d6000fd5b5050505050826020015181600081518110610dbc57610dbc612710565b602090810291909101015260085483516001600160a01b039182169163400f959f911615610deb576000610df1565b84602001515b60085486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610e2b576002610e2e565b60035b6040518863ffffffff1660e01b8152600401610e4f969594939291906127f8565b6000604051808303818588803b158015610e6857600080fd5b505af1158015610e7c573d6000803e3d6000fd5b5050505050816020015181600081518110610e9957610e99612710565b602090810291909101015260085482516001600160a01b039182169163400f959f911615610ec8576000610ece565b83602001515b60085485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610f08576002610f0b565b60035b6040518863ffffffff1660e01b8152600401610f2c969594939291906127f8565b6000604051808303818588803b158015610f4557600080fd5b505af1158015610f59573d6000803e3d6000fd5b5050506000898152600b60205260409020601181015460039091015463ffffffff909116900391506111329050576006546000888152600b6020526040908190206005015490516311a3439360e01b81526001600160a01b03909216916311a3439391610fcc9160040190815260200190565b600060405180830381600087803b158015610fe657600080fd5b505af1158015610ffa573d6000803e3d6000fd5b505060095460008a8152600b60205260409081902090516307e2dc6b60e31b81526001600160a01b039092169350633f16e358925061104191600890910190600401612b1b565b600060405180830381600087803b15801561105b57600080fd5b505af115801561106f573d6000803e3d6000fd5b505060095460008a8152600b6020526040908190209051630a759d5560e21b81526001600160a01b0390921693506329d6755492506110b2918b90600401612bd2565b600060405180830381600087803b1580156110cc57600080fd5b505af11580156110e0573d6000803e3d6000fd5b5050506000888152600b602052604081206110ff925060030190611f4b565b6000878152600b6020526040812061111c91600490910190611f4b565b6000878152600b60205260409020426010909101555b6040513390879089907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450505050505050565b611172611de7565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361123892600a92910190611f69565b5090505061124a816101000151611e96565b50565b611255611fce565b6000828152600b602052604090819020815161020081019092528054829060e08201908390829082906112879061268a565b80601f01602080910402602001604051908101604052809291908181526020018280546112b39061268a565b80156113005780601f106112d557610100808354040283529160200191611300565b820191906000526020600020905b8154815290600101906020018083116112e357829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561138157602002820191906000526020600020905b81548152602001906001019080831161136d575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156113d957602002820191906000526020600020905b8154815260200190600101908083116113c5575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561146957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161144b575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156114cb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114ad575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561152d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161150f575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115c7576000848152602090819020830180546040805182850281018501909152818152928301828280156115b357602002820191906000526020600020905b81548152602001906001019080831161159f575b50505050508152602001906001019061155b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156116605760008481526020908190208301805460408051828502810185019091528181529283018282801561164c57602002820191906000526020600020905b815481526020019060010190808311611638575b5050505050815260200190600101906115f4565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156116e357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116116a65790505b505050919092525050509052508152600e8201546020820152600f82015460408201526010820154606082015260119091015463ffffffff8082166080840152600160201b82041660a0830152600160401b900460ff16151560c09091015292915050565b611750611de7565b478111156117bd5760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6117c5610896565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061124a5760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016117b4565b6000818152600b602090815260409182902060030180548351818402810184019094528084526060939283018282801561087657602002820191906000526020600020908154815260200190600101908083116108625750505050509050919050565b60075460405163dadddaaf60e01b8152600481018390526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa1580156118e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190691906126c4565b90506001600160a01b038116331461191d57600080fd5b6000838152600b602090815260408083206003018054825181850281018501909352808352919290919083018282801561197657602002820191906000526020600020905b815481526020019060010190808311611962575b5050506000878152600b60209081526040808320600401805482518185028101850190935280835296975092959094509192508301828280156119d857602002820191906000526020600020905b8154815260200190600101908083116119c4575b5050506000888152600b602052604081209394506119fc9360030192509050611f4b565b6000858152600b60205260408120611a1991600490910190611f4b565b815115611b4b576000805b8351811015611b3e5785848281518110611a4057611a40612710565b602002602001015103611aa3576000878152600b602052604090206011015460019250611a7a90600160201b900463ffffffff16426126f7565b838281518110611a8c57611a8c612710565b602002602001015110611a9e57600080fd5b611b2e565b6000878152600b602052604090208451600390910190859083908110611acb57611acb612710565b602090810291909101810151825460018101845560009384528284200155888252600b9052604090208351600490910190849083908110611b0e57611b0e612710565b602090810291909101810151825460018101845560009384529190922001555b611b3781612726565b9050611a24565b5080611b4957600080fd5b505b600754604051632253ce7f60e21b8152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc1919061273f565b14611bcb57600080fd5b6005546040516359d51cdb60e11b8152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3991906127b2565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611c7a57611c7a612710565b602090810291909101015260085482516001600160a01b039091169063400f959f90829088906000604051908082528060200260200182016040528015611ccb578160200160208202803683370190505b50875187906001600160a01b031615611ce5576002611ce8565b60035b6040518763ffffffff1660e01b8152600401611d09969594939291906127f8565b600060405180830381600087803b158015611d2357600080fd5b505af1158015611d37573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a350505050505050565b611d79611de7565b6001600160a01b038116611dde5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016117b4565b61124a81611e46565b33611df0610896565b6001600160a01b0316146108945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016117b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015611f4757600c6000838381518110611eb857611eb8612710565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600c6000848481518110611f0557611f05612710565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055611f4081612726565b9050611e99565b5050565b508054600082559060005260206000209081019061124a9190612011565b828054828255906000526020600020908101928215611fbe579160200282015b82811115611fbe57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611f89565b50611fca929150612011565b5090565b6040518060e00160405280611fe1612026565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b5b80821115611fca5760008155600101612012565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016120b56040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156120cc57600080fd5b5035919050565b6000815180845260005b818110156120f9576020818501810151868301820152016120dd565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b838110156121565781518752958201959082019060010161213a565b509495945050505050565b600081518084526020808501945080840160005b838110156121565781516001600160a01b031687529582019590820190600101612175565b600081518084526020808501808196508360051b8101915082860160005b858110156121e25782840389526121d0848351612126565b988501989350908401906001016121b8565b5091979650505050505050565b6000815160c0845261220460c0850182612161565b90506020808401518583038287015261221d8382612161565b925050604084015185830360408701526122378382612161565b92505060608401518583036060870152612251838261219a565b9250506080840151858303608087015261226b838261219a565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156122b457845163ffffffff16825293830193600192909201919083019061228e565b509695505050505050565b600061012082518185526122d5828601826120d3565b91505060208301516122ea6020860182612119565b5060408301516122fd6040860182612119565b50606083015184820360608601526123158282612126565b9150506080830151848203608086015261232f8282612126565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261236883826121ef565b9695505050505050565b60e08152600061238560e083018a6122bf565b6020830198909852506040810195909552606085019390935263ffffffff91821660808501521660a0830152151560c090910152919050565b6020815260006123d16020830184612126565b9392505050565b600080604083850312156123eb57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715612433576124336123fa565b60405290565b6001600160a01b038116811461124a57600080fd5b803561245981612439565b919050565b600082601f83011261246f57600080fd5b813560206001600160401b038083111561248b5761248b6123fa565b8260051b604051601f19603f830116810181811084821117156124b0576124b06123fa565b6040529384528581018301938381019250878511156124ce57600080fd5b83870191505b848210156124f65781356124e781612439565b835291830191908301906124d4565b979650505050505050565b60006020828403121561251357600080fd5b81356001600160401b038082111561252a57600080fd5b90830190610120828603121561253f57600080fd5b612547612410565b6125508361244e565b815261255e6020840161244e565b602082015261256f6040840161244e565b60408201526125806060840161244e565b60608201526125916080840161244e565b60808201526125a260a0840161244e565b60a08201526125b360c0840161244e565b60c08201526125c460e0840161244e565b60e082015261010080840135838111156125dd57600080fd5b6125e98882870161245e565b918301919091525095945050505050565b60006020828403121561260c57600080fd5b81356123d181612439565b602081526000825160e060208401526126346101008401826122bf565b9050602084015160408401526040840151606084015260608401516080840152608084015163ffffffff80821660a08601528060a08701511660c0860152505060c0840151151560e08401528091505092915050565b600181811c9082168061269e57607f821691505b6020821081036126be57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156126d657600080fd5b81516123d181612439565b634e487b7160e01b600052601160045260246000fd5b8181038181111561270a5761270a6126e1565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060018201612738576127386126e1565b5060010190565b60006020828403121561275157600080fd5b5051919050565b60006040828403121561276a57600080fd5b604080519081016001600160401b038111828210171561278c5761278c6123fa565b8060405250809150825161279f81612439565b8152602092830151920191909152919050565b600080600060c084860312156127c757600080fd5b6127d18585612758565b92506127e08560408601612758565b91506127ef8560808601612758565b90509250925092565b6001600160a01b03878116825286811660208301528516604082015260c06060820181905260009061282c90830186612126565b828103608084015261283e8186612126565b91505060ff831660a0830152979650505050505050565b6001600160a01b031690565b6000815480845260208085019450836000528060002060005b838110156121565781546001600160a01b03168752958201956001918201910161287a565b6000815480845260208085019450836000528060002060005b83811015612156578154875295820195600191820191016128b8565b600081548084526020808501808196508360051b81019150856000528260002060005b858110156121e257828403895261290e848361289f565b988501989350600191820191016128f7565b60c08252600061293360c0840183612861565b600160208583038187015261294a83838701612861565b92506040868403818801526129628460028801612861565b935060608785038189015261297a85600389016128d4565b94506080888603818a01526129928660048a016128d4565b95506005880160a08a8803818c01528782546129b2818b90815260200190565b6000948552602085209a5091505b80600785011015612a3057895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c908301529888019860089390930192610100909101906129c0565b98549880841015612a4d5763ffffffff8a16825292880192908701905b80841015612a695789881c63ffffffff16825292880192908701905b80841015612a855789871c63ffffffff16825292880192908701905b80841015612aa15789861c63ffffffff16825292880192908701905b80841015612abd5789851c63ffffffff16825292880192908701905b80841015612ad95789831c63ffffffff16825292880192908701905b80841015612af75760c08a901c63ffffffff16825292880192908701905b80841015612b0b5760e08a901c8252908701905b509b9a5050505050505050505050565b6020815260006123d16020830184612920565b8054600090600181811c9080831680612b4857607f831692505b60208084108203612b6957634e487b7160e01b600052602260045260246000fd5b83885260208801828015612b845760018114612b9a57612bc5565b60ff198716825285151560051b82019750612bc5565b60008981526020902060005b87811015612bbf57815484820152908601908401612ba6565b83019850505b5050505050505092915050565b604080825260e090820152610120808201526000612bf4610240830185612b2e565b612c016001860154612855565b612c0f610140850182612119565b50612c1d6002860154612855565b612c2b610160850182612119565b5061011f198084830301610180850152612c48826003880161289f565b915080848303016101a0850152612c62826004880161289f565b915060058601546101c085015260068601546101e08501526007860154610200850152808483030161022085015250612c9e8160088701612920565b600e8601546060850152600f8601546080850152601086015460a0850152601186015463ffffffff80821660c0870152602082901c1660e0860152604081901c60ff16151561010086015290915050602092909201929092529291505056fea26469706673582212200c58bf4c22e2719003eefad0dba8cda59e1f06bde679229a8099d6d35735b38e64736f6c63430008100033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
