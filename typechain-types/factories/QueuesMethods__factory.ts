/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raceFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162003376380380620033768339810160408190526200003891620003a5565b80620000443362000109565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c083015180518493620000e39260089291019062000218565b5060e0919091015160079091015560c0810151620001019062000159565b5050620004d7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200021457600b60008383815181106200017f576200017f62000499565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b6000848481518110620001cf57620001cf62000499565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200020c81620004af565b90506200015c565b5050565b82805482825590600052602060002090810192821562000270579160200282015b828111156200027057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000239565b506200027e92915062000282565b5090565b5b808211156200027e576000815560010162000283565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d557620002d562000299565b60405290565b80516001600160a01b0381168114620002f357600080fd5b919050565b600082601f8301126200030a57600080fd5b815160206001600160401b038083111562000329576200032962000299565b8260051b604051601f19603f8301168101818110848211171562000351576200035162000299565b6040529384528581018301938381019250878511156200037057600080fd5b83870191505b848210156200039a576200038a82620002db565b8352918301919083019062000376565b979650505050505050565b600060208284031215620003b857600080fd5b81516001600160401b0380821115620003d057600080fd5b908301906101008286031215620003e657600080fd5b620003f0620002af565b620003fb83620002db565b81526200040b60208401620002db565b60208201526200041e60408401620002db565b60408201526200043160608401620002db565b60608201526200044460808401620002db565b60808201526200045760a08401620002db565b60a082015260c0830151828111156200046f57600080fd5b6200047d87828601620002f8565b60c08301525060e083015160e082015280935050505092915050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d057634e487b7160e01b600052601160045260246000fd5b5060010190565b612e8f80620004e76000396000f3fe6080604052600436106100ae5760003560e01c80630f7921ed146100b75780636eaf8703146100f6578063715018a6146101165780638da5cb5b1461012b578063982d64d414610158578063af640d0f1461016b578063b3aa39b61461018f578063d63a8e11146101af578063d8de6587146101ef578063ddf0b0091461027c578063e1152343146102a9578063e200c857146102c9578063ec7bbea3146102f6578063f2fde38b1461031657005b366100b557005b005b3480156100c357600080fd5b506100d76100d236600461214f565b610336565b6040516100ed9a99989796959493929190612354565b60405180910390f35b34801561010257600080fd5b506100b5610111366004612506565b610702565b34801561012257600080fd5b506100b56107c5565b34801561013757600080fd5b506101406107d9565b6040516001600160a01b0390911681526020016100ed565b6100b56101663660046125e6565b6107e8565b34801561017757600080fd5b5061018160015481565b6040519081526020016100ed565b34801561019b57600080fd5b506101816101aa36600461214f565b610e84565b3480156101bb57600080fd5b506101df6101ca366004612608565b600b6020526000908152604090205460ff1681565b60405190151581526020016100ed565b3480156101fb57600080fd5b50600254600354600454600554600654600754600954610232966001600160a01b0390811696811695811694811693811692169087565b604080516001600160a01b03988916815296881660208801529487169486019490945291851660608501528416608084015290921660a082015260c081019190915260e0016100ed565b34801561028857600080fd5b5061029c61029736600461214f565b610f84565b6040516100ed919061262c565b3480156102b557600080fd5b506100b56102c436600461214f565b611441565b3480156102d557600080fd5b506102e96102e436600461214f565b61152e565b6040516100ed9190612725565b34801561030257600080fd5b506100b56103113660046125e6565b611593565b34801561032257600080fd5b506100b5610331366004612608565b611e45565b600a6020526000908152604090208054819061035190612738565b80601f016020809104026020016040519081016040528092919081815260200182805461037d90612738565b80156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b505050505090806003015490806004015490806005015490806006015490806007015490806008016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561045657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610438575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156104b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161049a575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561051a57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104fc575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156105b4576000848152602090819020830180546040805182850281018501909152818152928301828280156105a057602002820191906000526020600020905b81548152602001906001019080831161058c575b505050505081526020019060010190610548565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561064d5760008481526020908190208301805460408051828502810185019091528181529283018282801561063957602002820191906000526020600020905b815481526020019060010190808311610625575b5050505050815260200190600101906105e1565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156106d057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106935790505b50505091909252505050600e9091015463ffffffff80821691600160201b81049091169060ff600160401b909104168a565b61070a611ebb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c0830151805184936107a79260089291019061201f565b5060e082015181600701559050506107c28160c00151611f1a565b50565b6107cd611ebb565b6107d76000611fcf565b565b6000546001600160a01b031690565b6000828152600a60205260409020600e015463ffffffff161580159061082757506000828152600a60205260409020600e0154600160401b900460ff16155b801561089457506000828152600a602052604090206006015415801561085c57506000828152600a6020526040902060050154155b8061089457506000828152600a6020526040902060050154421080159061089457506000828152600a60205260409020600601544211155b8015610913575060035460405163dadddaaf60e01b81526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061277d565b6001600160a01b0316145b801561095757506000828152600a60205260409020600e015461094390600160201b900463ffffffff16426127b0565b6000838152600a6020526040902060070154105b61096057600080fd5b60005b6000838152600a60205260409020600101548110156109c7576000838152600a602052604090206001018054839190839081106109a2576109a26127c3565b9060005260206000200154036109b757600080fd5b6109c0816127d9565b9050610963565b506000828152600a60209081526040808320600180820180548083018255908652848620018690556002909101805491820181558452919092204291015560035490516373d1aa2760e01b8152600481018390526001600160a01b03909116906373d1aa2790602401600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b5050600354604051632253ce7f60e21b815260048101859052602481018690526001600160a01b03909116925063894f39fc91506044016020604051808303816000875af1158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad891906127f2565b15610ae257600080fd5b6002546000838152600a602052604080822060030154905163666d638d60e11b815291926001600160a01b03169163ccdac71a91610b269160040190815260200190565b602060405180830381865afa158015610b43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b67919061277d565b6040805160018082528183019092529192506000919060208083019080368337019050509050610b9684610e84565b81600081518110610ba957610ba96127c3565b60209081029190910101526005546001600160a01b039081169063400f959f90841615610bd7576000610bf3565b82600081518110610bea57610bea6127c3565b60200260200101515b60055460408051600081526020810190915233916001600160a01b039081169188918890831615610c25576002610c28565b60035b6040518863ffffffff1660e01b8152600401610c499695949392919061280b565b6000604051808303818588803b158015610c6257600080fd5b505af1158015610c76573d6000803e3d6000fd5b5050506000868152600a60205260409020600e81015460019091015463ffffffff90911690039150610e4f9050576002546000858152600a6020526040908190206003015490516311a3439360e01b81526001600160a01b03909216916311a3439391610ce99160040190815260200190565b600060405180830381600087803b158015610d0357600080fd5b505af1158015610d17573d6000803e3d6000fd5b50506007546000878152600a60205260409081902090516307e2dc6b60e31b81526001600160a01b039092169350633f16e3589250610d5e91600890910190600401612b2f565b600060405180830381600087803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b50506007546000878152600a6020526040908190209051636348e0e360e11b81526001600160a01b03909216935063c691c1c69250610dcf918890600401612be6565b600060405180830381600087803b158015610de957600080fd5b505af1158015610dfd573d6000803e3d6000fd5b5050506000858152600a60205260408120610e1c925060010190612084565b6000848152600a60205260408120610e3991600290910190612084565b6000848152600a60205260409020426007909101555b6040513390849086907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450505050565b6000818152600a60205260408120600e015460095463ffffffff90911690610ead908290612cc7565b610eb79190612ce9565b6000838152600a602052604090819020600480820154600e8301546002546003909401549451635ba52fdf60e11b8152928301949094529263ffffffff169182916001600160a01b039091169063b74a5fbe90602401600060405180830381865afa158015610f2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f529190810190612d7b565b60600151610f609190612cc7565b610f6a9190612ce9565b610f749190612ce9565b610f7e9190612ce9565b92915050565b610f8c6120a2565b6000828152600a60205260409081902081516101808101909252805482908290610fb590612738565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe190612738565b801561102e5780601f106110035761010080835404028352916020019161102e565b820191906000526020600020905b81548152906001019060200180831161101157829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561108657602002820191906000526020600020905b815481526020019060010190808311611072575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156110de57602002820191906000526020600020905b8154815260200190600101908083116110ca575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561118257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611164575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156111e457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111c6575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561124657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611228575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112e0576000848152602090819020830180546040805182850281018501909152818152928301828280156112cc57602002820191906000526020600020905b8154815260200190600101908083116112b8575b505050505081526020019060010190611274565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156113795760008481526020908190208301805460408051828502810185019091528181529283018282801561136557602002820191906000526020600020905b815481526020019060010190808311611351575b50505050508152602001906001019061130d565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156113fc57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116113bf5790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b8204166040830152600160401b900460ff16151560609091015292915050565b611449611ebb565b478111156114b65760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6114be6107d9565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506107c25760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016114ad565b6000818152600a602090815260409182902060010180548351818402810184019094528084526060939283018282801561158757602002820191906000526020600020905b815481526020019060010190808311611573575b50505050509050919050565b6000828152600a6020526040808220815161018081019092528054829082906115bb90612738565b80601f01602080910402602001604051908101604052809291908181526020018280546115e790612738565b80156116345780601f1061160957610100808354040283529160200191611634565b820191906000526020600020905b81548152906001019060200180831161161757829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561168c57602002820191906000526020600020905b815481526020019060010190808311611678575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156116e457602002820191906000526020600020905b8154815260200190600101908083116116d0575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561178857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161176a575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156117ea57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117cc575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561184c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161182e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156118e6576000848152602090819020830180546040805182850281018501909152818152928301828280156118d257602002820191906000526020600020905b8154815260200190600101908083116118be575b50505050508152602001906001019061187a565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561197f5760008481526020908190208301805460408051828502810185019091528181529283018282801561196b57602002820191906000526020600020905b815481526020019060010190808311611957575b505050505081526020019060010190611913565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611a0257602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116119c55790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b820416604080840191909152600160401b90910460ff16151560609283015260025491830151905163666d638d60e11b815260048101919091529192506000916001600160a01b039091169063ccdac71a90602401602060405180830381865afa158015611a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abd919061277d565b6020808401516040808601516000898152600a90945290832093945090929091611aea9160010190612084565b6000868152600a60205260408120611b0791600290910190612084565b815115611c26576000805b8351811015611c195786848281518110611b2e57611b2e6127c3565b602002602001015103611b7e5761014086015160019250611b559063ffffffff16426127b0565b838281518110611b6757611b676127c3565b602002602001015110611b7957600080fd5b611c09565b600a6000898152602001908152602001600020600101848281518110611ba657611ba66127c3565b602090810291909101810151825460018101845560009384528284200155898252600a9052604090208351600290910190849083908110611be957611be96127c3565b602090810291909101810151825460018101845560009384529190922001555b611c12816127d9565b9050611b12565b5080611c2457600080fd5b505b600354604051632253ce7f60e21b8152600481018790526000602482015287916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611c78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9c91906127f2565b14611ca657600080fd5b60035460405163dadddaaf60e01b8152600481018790526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d14919061277d565b6040805160018082528183019092529192506000919060208083019080368337019050509050611d4388610e84565b81600081518110611d5657611d566127c3565b60209081029190910101526005546001600160a01b031663400f959f8184886000604051908082528060200260200182016040528015611da0578160200160208202803683370190505b50866001600160a01b038c1615611db8576002611dbb565b60035b6040518763ffffffff1660e01b8152600401611ddc9695949392919061280b565b600060405180830381600087803b158015611df657600080fd5b505af1158015611e0a573d6000803e3d6000fd5b50506040518992508a91507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a35050505050505050565b611e4d611ebb565b6001600160a01b038116611eb25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016114ad565b6107c281611fcf565b33611ec46107d9565b6001600160a01b0316146107d75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114ad565b60005b8151811015611fcb57600b6000838381518110611f3c57611f3c6127c3565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b6000848481518110611f8957611f896127c3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055611fc4816127d9565b9050611f1d565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215612074579160200282015b8281111561207457825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061203f565b5061208092915061213a565b5090565b50805460008255906000526020600020908101906107c2919061213a565b604051806101800160405280606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200161211f6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b81526000602082018190526040820181905260609091015290565b5b80821115612080576000815560010161213b565b60006020828403121561216157600080fd5b5035919050565b60005b8381101561218357818101518382015260200161216b565b50506000910152565b600081518084526121a4816020860160208601612168565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156121f15781516001600160a01b0316875295820195908201906001016121cc565b509495945050505050565b600081518084526020808501945080840160005b838110156121f157815187529582019590820190600101612210565b600082825180855260208086019550808260051b84010181860160005b8481101561227757601f198684030189526122658383516121fc565b98840198925090830190600101612249565b5090979650505050505050565b6000815160c0845261229960c08501826121b8565b9050602080840151858303828701526122b283826121b8565b925050604084015185830360408701526122cc83826121b8565b925050606084015185830360608701526122e6838261222c565b92505060808401518583036080870152612300838261222c565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561234957845163ffffffff168252938301936001929092019190830190612323565b509695505050505050565b60006101408083526123688184018e61218c565b90508b60208401528a60408401528960608401528860808401528760a084015282810360c084015261239a8188612284565b63ffffffff96871660e085015294909516610100830152509015156101209091015298975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612401576124016123c8565b60405290565b60405160e081016001600160401b0381118282101715612401576124016123c8565b604051601f8201601f191681016001600160401b0381118282101715612451576124516123c8565b604052919050565b6001600160a01b03811681146107c257600080fd5b803561247981612459565b919050565b600082601f83011261248f57600080fd5b813560206001600160401b038211156124aa576124aa6123c8565b8160051b6124b9828201612429565b92835284810182019282810190878511156124d357600080fd5b83870192505b848310156124fb5782356124ec81612459565b825291830191908301906124d9565b979650505050505050565b60006020828403121561251857600080fd5b81356001600160401b038082111561252f57600080fd5b90830190610100828603121561254457600080fd5b61254c6123de565b6125558361246e565b81526125636020840161246e565b60208201526125746040840161246e565b60408201526125856060840161246e565b60608201526125966080840161246e565b60808201526125a760a0840161246e565b60a082015260c0830135828111156125be57600080fd5b6125ca8782860161247e565b60c08301525060e083013560e082015280935050505092915050565b600080604083850312156125f957600080fd5b50508035926020909101359150565b60006020828403121561261a57600080fd5b813561262581612459565b9392505050565b602081526000825161018080602085015261264b6101a085018361218c565b91506020850151601f198086850301604087015261266984836121fc565b9350604087015191508086850301606087015261268684836121fc565b935060608701516080870152608087015160a087015260a087015160c087015260c087015160e087015260e087015191506101008281880152808801519250506101208187860301818801526126dc8584612284565b945080880151925050506101406126fa8187018363ffffffff169052565b86015190506101606127138682018363ffffffff169052565b90950151151593019290925250919050565b60208152600061262560208301846121fc565b600181811c9082168061274c57607f821691505b60208210810361276c57634e487b7160e01b600052602260045260246000fd5b50919050565b805161247981612459565b60006020828403121561278f57600080fd5b815161262581612459565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f7e57610f7e61279a565b634e487b7160e01b600052603260045260246000fd5b6000600182016127eb576127eb61279a565b5060010190565b60006020828403121561280457600080fd5b5051919050565b6001600160a01b03878116825286811660208301528516604082015260c06060820181905260009061283f908301866121fc565b828103608084015261285181866121fc565b91505060ff831660a0830152979650505050505050565b6000815480845260208085019450836000528060002060005b838110156121f15781546001600160a01b031687529582019560019182019101612881565b6000815480845260208085019450836000528060002060005b838110156121f1578154875295820195600191820191016128bf565b600081548084526020808501808196508360051b81019150856000528260002060005b8581101561292757828403895261291584836128a6565b988501989350600191820191016128fe565b5091979650505050505050565b60c08252600061294760c0840183612868565b600160208583038187015261295e83838701612868565b92506040868403818801526129768460028801612868565b935060608785038189015261298e85600389016128db565b94506080888603818a01526129a68660048a016128db565b95506005880160a08a8803818c01528782546129c6818b90815260200190565b6000948552602085209a5091505b80600785011015612a4457895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c908301529888019860089390930192610100909101906129d4565b98549880841015612a615763ffffffff8a16825292880192908701905b80841015612a7d5789881c63ffffffff16825292880192908701905b80841015612a995789871c63ffffffff16825292880192908701905b80841015612ab55789861c63ffffffff16825292880192908701905b80841015612ad15789851c63ffffffff16825292880192908701905b80841015612aed5789831c63ffffffff16825292880192908701905b80841015612b0b5760c08a901c63ffffffff16825292880192908701905b80841015612b1f5760e08a901c8252908701905b509b9a5050505050505050505050565b6020815260006126256020830184612934565b8054600090600181811c9080831680612b5c57607f831692505b60208084108203612b7d57634e487b7160e01b600052602260045260246000fd5b83885260208801828015612b985760018114612bae57612bd9565b60ff198716825285151560051b82019750612bd9565b60008981526020902060005b87811015612bd357815484820152908601908401612bba565b83019850505b5050505050505092915050565b604081526000610180806040840152612c036101c0840186612b42565b603f1980858303016060860152612c1d82600189016128a6565b915080858303016080860152612c3682600289016128a6565b9150600387015460a0860152600487015460c0860152600587015460e086015260068701546101008601526007870154610120860152808583030161014086015250612c858160088801612934565b600e87015463ffffffff808216610160880152602082901c1684870152604081901c60ff1615156101a087015290915050602093909301939093525092915050565b600082612ce457634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610f7e57610f7e61279a565b600082601f830112612d0d57600080fd5b81516001600160401b03811115612d2657612d266123c8565b612d39601f8201601f1916602001612429565b818152846020838601011115612d4e57600080fd5b612d5f826020830160208701612168565b949350505050565b805163ffffffff8116811461247957600080fd5b600060208284031215612d8d57600080fd5b81516001600160401b0380821115612da457600080fd5b9083019060e08286031215612db857600080fd5b612dc0612407565b825182811115612dcf57600080fd5b612ddb87828601612cfc565b825250602083015182811115612df057600080fd5b612dfc87828601612cfc565b602083015250612e0e60408401612772565b604082015260608301516060820152612e2960808401612d67565b6080820152612e3a60a08401612d67565b60a0820152612e4b60c08401612d67565b60c08201529594505050505056fea26469706673582212202c32d190aacceece2ea4a333fcb053e55960f68a22ef16c0d5eb9f5f013c1dfa64736f6c63430008100033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
