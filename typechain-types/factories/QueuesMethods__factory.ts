/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620032d0380380620032d0833981016040819052620000389162000399565b806200004433620000fe565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c083015180518493620000e3926008929101906200020d565b50505060c0810151620000f6906200014e565b5050620004bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200020957600a60008383815181106200017457620001746200047f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600a6000848481518110620001c457620001c46200047f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002018162000495565b905062000151565b5050565b82805482825590600052602060002090810192821562000265579160200282015b828111156200026557825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200022e565b506200027392915062000277565b5090565b5b8082111562000273576000815560010162000278565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002c957620002c96200028e565b60405290565b80516001600160a01b0381168114620002e757600080fd5b919050565b600082601f830112620002fe57600080fd5b815160206001600160401b03808311156200031d576200031d6200028e565b8260051b604051601f19603f830116810181811084821117156200034557620003456200028e565b6040529384528581018301938381019250878511156200036457600080fd5b83870191505b848210156200038e576200037e82620002cf565b835291830191908301906200036a565b979650505050505050565b600060208284031215620003ac57600080fd5b81516001600160401b0380821115620003c457600080fd5b9083019060e08286031215620003d957600080fd5b620003e3620002a4565b620003ee83620002cf565b8152620003fe60208401620002cf565b60208201526200041160408401620002cf565b60408201526200042460608401620002cf565b60608201526200043760808401620002cf565b60808201526200044a60a08401620002cf565b60a082015260c0830151828111156200046257600080fd5b6200047087828601620002ec565b60c08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004b657634e487b7160e01b600052601160045260246000fd5b5060010190565b612e0380620004cd6000396000f3fe6080604052600436106100ae5760003560e01c80630f7921ed146100b7578063715018a6146100f65780638da5cb5b1461010b578063982d64d414610138578063af640d0f1461014b578063b3aa39b61461016f578063d63a8e111461018f578063d8de6587146101cf578063ddf0b00914610250578063e11523431461027d578063e200c8571461029d578063e8ee0e3b146102ca578063ec7bbea3146102ea578063f2fde38b1461030a57005b366100b557005b005b3480156100c357600080fd5b506100d76100d23660046120df565b61032a565b6040516100ed9a999897969594939291906122f0565b60405180910390f35b34801561010257600080fd5b506100b56106f6565b34801561011757600080fd5b5061012061070a565b6040516001600160a01b0390911681526020016100ed565b6100b5610146366004612364565b610719565b34801561015757600080fd5b5061016160015481565b6040519081526020016100ed565b34801561017b57600080fd5b5061016161018a3660046120df565b610da0565b34801561019b57600080fd5b506101bf6101aa3660046123ab565b600a6020526000908152604090205460ff1681565b60405190151581526020016100ed565b3480156101db57600080fd5b5060025460035460045460055460065460075461020e956001600160a01b03908116958116948116938116928116911686565b604080516001600160a01b03978816815295871660208701529386169385019390935290841660608401528316608083015290911660a082015260c0016100ed565b34801561025c57600080fd5b5061027061026b3660046120df565b610e5f565b6040516100ed91906123cf565b34801561028957600080fd5b506100b56102983660046120df565b61131c565b3480156102a957600080fd5b506102bd6102b83660046120df565b61140c565b6040516100ed91906124c8565b3480156102d657600080fd5b506100b56102e53660046125d1565b611471565b3480156102f657600080fd5b506100b5610305366004612364565b611527565b34801561031657600080fd5b506100b56103253660046123ab565b611dd5565b600960205260009081526040902080548190610345906126a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610371906126a3565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b505050505090806003015490806004015490806005015490806006015490806007015490806008016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561044a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161042c575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156104ac57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161048e575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561050e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104f0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156105a85760008481526020908190208301805460408051828502810185019091528181529283018282801561059457602002820191906000526020600020905b815481526020019060010190808311610580575b50505050508152602001906001019061053c565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156106415760008481526020908190208301805460408051828502810185019091528181529283018282801561062d57602002820191906000526020600020905b815481526020019060010190808311610619575b5050505050815260200190600101906105d5565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106875790505b50505091909252505050600e9091015463ffffffff80821691600160201b81049091169060ff600160401b909104168a565b6106fe611e4b565b6107086000611eaa565b565b6000546001600160a01b031690565b6000828152600960205260409020600e015463ffffffff161580159061075857506000828152600960205260409020600e0154600160401b900460ff16155b80156107c5575060008281526009602052604090206006015415801561078d5750600082815260096020526040902060050154155b806107c5575060008281526009602052604090206005015442108015906107c557506000828152600960205260409020600601544211155b8015610844575060035460405163dadddaaf60e01b81526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610815573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083991906126e8565b6001600160a01b0316145b801561088857506000828152600960205260409020600e015461087490600160201b900463ffffffff164261271b565b600083815260096020526040902060070154105b61089157600080fd5b60005b6000838152600960205260409020600101548110156108f85760008381526009602052604090206001018054839190839081106108d3576108d3612732565b9060005260206000200154036108e857600080fd5b6108f181612748565b9050610894565b506000828152600960209081526040808320600180820180548083018255908652848620018690556002909101805491820181558452919092204291015560035490516373d1aa2760e01b8152600481018390526001600160a01b03909116906373d1aa2790602401600060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b5050600354604051632253ce7f60e21b815260048101859052602481018690526001600160a01b03909116925063894f39fc91506044016020604051808303816000875af11580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a099190612761565b15610a1357600080fd5b60025460008381526009602052604080822060030154905163666d638d60e11b815291926001600160a01b03169163ccdac71a91610a579160040190815260200190565b602060405180830381865afa158015610a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9891906126e8565b6040805160018082528183019092529192506000919060208083019080368337505050600085815260096020526040812060040154825192935091839190610ae257610ae2612732565b60209081029190910101526005546001600160a01b039081169063400f959f90841615610b10576000610b2c565b82600081518110610b2357610b23612732565b60200260200101515b60055460408051600081526020810190915233916001600160a01b039081169188918890831615610b5e576002610b61565b60035b6040518863ffffffff1660e01b8152600401610b829695949392919061277a565b6000604051808303818588803b158015610b9b57600080fd5b505af1158015610baf573d6000803e3d6000fd5b5050506000868152600960205260409020600e81015460019091015463ffffffff90911690039150610d6b905057600254600085815260096020526040908190206003015490516311a3439360e01b81526001600160a01b03909216916311a3439391610c229160040190815260200190565b600060405180830381600087803b158015610c3c57600080fd5b505af1158015610c50573d6000803e3d6000fd5b50506007546000878152600960205260409081902090516307e2dc6b60e31b81526001600160a01b039092169350633f16e3589250610c9791600890910190600401612a9e565b600060405180830381600087803b158015610cb157600080fd5b505af1158015610cc5573d6000803e3d6000fd5b5050600754600087815260096020526040908190209051636348e0e360e11b81526001600160a01b03909216935063c691c1c69250610d08918890600401612b55565b600060405180830381600087803b158015610d2257600080fd5b505af1158015610d36573d6000803e3d6000fd5b5050506000858152600960205260408120610d55925060010190611faf565b6000848152600960205260409020426007909101555b6040513390849086907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450505050565b600081815260096020526040808220600480820154600e8301546002546003909401549451635ba52fdf60e11b8152928301949094529263ffffffff16916001600160a01b03169063b74a5fbe90602401600060405180830381865afa158015610e0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e369190810190612cb5565b60600151610e449190612d93565b610e4e9190612db5565b610e59906001612db5565b92915050565b610e67611fcd565b6000828152600960205260409081902081516101808101909252805482908290610e90906126a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebc906126a3565b8015610f095780601f10610ede57610100808354040283529160200191610f09565b820191906000526020600020905b815481529060010190602001808311610eec57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f6157602002820191906000526020600020905b815481526020019060010190808311610f4d575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610fb957602002820191906000526020600020905b815481526020019060010190808311610fa5575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561105d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161103f575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156110bf57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110a1575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561112157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611103575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111bb576000848152602090819020830180546040805182850281018501909152818152928301828280156111a757602002820191906000526020600020905b815481526020019060010190808311611193575b50505050508152602001906001019061114f565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112545760008481526020908190208301805460408051828502810185019091528181529283018282801561124057602002820191906000526020600020905b81548152602001906001019080831161122c575b5050505050815260200190600101906111e8565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156112d757602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161129a5790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b8204166040830152600160401b900460ff16151560609091015292915050565b611324611e4b565b478111156113915760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b61139961070a565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506114095760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b6044820152606401611388565b50565b60008181526009602090815260409182902060010180548351818402810184019094528084526060939283018282801561146557602002820191906000526020600020905b815481526020019060010190808311611451575b50505050509050919050565b611479611e4b565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c08301518051849361151692600892910190612065565b509050506114098160c00151611efa565b6000828152600960205260408082208151610180810190925280548290829061154f906126a3565b80601f016020809104026020016040519081016040528092919081815260200182805461157b906126a3565b80156115c85780601f1061159d576101008083540402835291602001916115c8565b820191906000526020600020905b8154815290600101906020018083116115ab57829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561162057602002820191906000526020600020905b81548152602001906001019080831161160c575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561167857602002820191906000526020600020905b815481526020019060010190808311611664575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561171c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116fe575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561177e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611760575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156117e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117c2575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561187a5760008481526020908190208301805460408051828502810185019091528181529283018282801561186657602002820191906000526020600020905b815481526020019060010190808311611852575b50505050508152602001906001019061180e565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611913576000848152602090819020830180546040805182850281018501909152818152928301828280156118ff57602002820191906000526020600020905b8154815260200190600101908083116118eb575b5050505050815260200190600101906118a7565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561199657602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116119595790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b820416604080840191909152600160401b90910460ff16151560609283015260025491830151905163666d638d60e11b815260048101919091529192506000916001600160a01b039091169063ccdac71a90602401602060405180830381865afa158015611a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5191906126e8565b6020808401516040808601516000898152600990945290832093945090929091611a7e9160010190611faf565b6000868152600960205260408120611a9b91600290910190611faf565b815115611bba576000805b8351811015611bad5786848281518110611ac257611ac2612732565b602002602001015103611b125761014086015160019250611ae99063ffffffff164261271b565b838281518110611afb57611afb612732565b602002602001015110611b0d57600080fd5b611b9d565b60096000898152602001908152602001600020600101848281518110611b3a57611b3a612732565b60209081029190910181015182546001810184556000938452828420015589825260099052604090208351600290910190849083908110611b7d57611b7d612732565b602090810291909101810151825460018101845560009384529190922001555b611ba681612748565b9050611aa6565b5080611bb857600080fd5b505b600354604051632253ce7f60e21b8152600481018790526000602482015287916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c309190612761565b14611c3a57600080fd5b60035460405163dadddaaf60e01b8152600481018790526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca891906126e8565b6040805160018082528183019092529192506000919060208083019080368337019050509050856080015181600081518110611ce657611ce6612732565b60209081029190910101526005546001600160a01b031663400f959f8184886000604051908082528060200260200182016040528015611d30578160200160208202803683370190505b50866001600160a01b038c1615611d48576002611d4b565b60035b6040518763ffffffff1660e01b8152600401611d6c9695949392919061277a565b600060405180830381600087803b158015611d8657600080fd5b505af1158015611d9a573d6000803e3d6000fd5b50506040518992508a91507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a35050505050505050565b611ddd611e4b565b6001600160a01b038116611e425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611388565b61140981611eaa565b33611e5461070a565b6001600160a01b0316146107085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611388565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015611fab57600a6000838381518110611f1c57611f1c612732565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600a6000848481518110611f6957611f69612732565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055611fa481612748565b9050611efd565b5050565b508054600082559060005260206000209081019061140991906120ca565b604051806101800160405280606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200161204a6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b81526000602082018190526040820181905260609091015290565b8280548282559060005260206000209081019282156120ba579160200282015b828111156120ba57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612085565b506120c69291506120ca565b5090565b5b808211156120c657600081556001016120cb565b6000602082840312156120f157600080fd5b5035919050565b60005b838110156121135781810151838201526020016120fb565b83811115612122576000848401525b50505050565b600081518084526121408160208601602086016120f8565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561218d5781516001600160a01b031687529582019590820190600101612168565b509495945050505050565b600081518084526020808501945080840160005b8381101561218d578151875295820195908201906001016121ac565b600082825180855260208086019550808260051b84010181860160005b8481101561221357601f19868403018952612201838351612198565b988401989250908301906001016121e5565b5090979650505050505050565b6000815160c0845261223560c0850182612154565b90506020808401518583038287015261224e8382612154565b925050604084015185830360408701526122688382612154565b9250506060840151858303606087015261228283826121c8565b9250506080840151858303608087015261229c83826121c8565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156122e557845163ffffffff1682529383019360019290920191908301906122bf565b509695505050505050565b60006101408083526123048184018e612128565b90508b60208401528a60408401528960608401528860808401528760a084015282810360c08401526123368188612220565b63ffffffff96871660e085015294909516610100830152509015156101209091015298975050505050505050565b6000806040838503121561237757600080fd5b50508035926020909101359150565b6001600160a01b038116811461140957600080fd5b80356123a681612386565b919050565b6000602082840312156123bd57600080fd5b81356123c881612386565b9392505050565b60208152600082516101808060208501526123ee6101a0850183612128565b91506020850151601f198086850301604087015261240c8483612198565b935060408701519150808685030160608701526124298483612198565b935060608701516080870152608087015160a087015260a087015160c087015260c087015160e087015260e0870151915061010082818801528088015192505061012081878603018188015261247f8584612220565b9450808801519250505061014061249d8187018363ffffffff169052565b86015190506101606124b68682018363ffffffff169052565b90950151151593019290925250919050565b6020815260006123c86020830184612198565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715612513576125136124db565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612541576125416124db565b604052919050565b600082601f83011261255a57600080fd5b813560206001600160401b03821115612575576125756124db565b8160051b612584828201612519565b928352848101820192828101908785111561259e57600080fd5b83870192505b848310156125c65782356125b781612386565b825291830191908301906125a4565b979650505050505050565b6000602082840312156125e357600080fd5b81356001600160401b03808211156125fa57600080fd5b9083019060e0828603121561260e57600080fd5b6126166124f1565b61261f8361239b565b815261262d6020840161239b565b602082015261263e6040840161239b565b604082015261264f6060840161239b565b60608201526126606080840161239b565b608082015261267160a0840161239b565b60a082015260c08301358281111561268857600080fd5b61269487828601612549565b60c08301525095945050505050565b600181811c908216806126b757607f821691505b6020821081036126d757634e487b7160e01b600052602260045260246000fd5b50919050565b80516123a681612386565b6000602082840312156126fa57600080fd5b81516123c881612386565b634e487b7160e01b600052601160045260246000fd5b60008282101561272d5761272d612705565b500390565b634e487b7160e01b600052603260045260246000fd5b60006001820161275a5761275a612705565b5060010190565b60006020828403121561277357600080fd5b5051919050565b6001600160a01b03878116825286811660208301528516604082015260c0606082018190526000906127ae90830186612198565b82810360808401526127c08186612198565b91505060ff831660a0830152979650505050505050565b6000815480845260208085019450836000528060002060005b8381101561218d5781546001600160a01b0316875295820195600191820191016127f0565b6000815480845260208085019450836000528060002060005b8381101561218d5781548752958201956001918201910161282e565b600081548084526020808501808196508360051b81019150856000528260002060005b858110156128965782840389526128848483612815565b9885019893506001918201910161286d565b5091979650505050505050565b60c0825260006128b660c08401836127d7565b60016020858303818701526128cd838387016127d7565b92506040868403818801526128e584600288016127d7565b93506060878503818901526128fd856003890161284a565b94506080888603818a01526129158660048a0161284a565b95506005880160a08a8803818c0152878254612935818b90815260200190565b6000948552602085209a5091505b806007850110156129b357895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c90830152988801986008939093019261010090910190612943565b985498808410156129d05763ffffffff8a16825292880192908701905b808410156129ec5789881c63ffffffff16825292880192908701905b80841015612a085789871c63ffffffff16825292880192908701905b80841015612a245789861c63ffffffff16825292880192908701905b80841015612a405789851c63ffffffff16825292880192908701905b80841015612a5c5789831c63ffffffff16825292880192908701905b80841015612a7a5760c08a901c63ffffffff16825292880192908701905b80841015612a8e5760e08a901c8252908701905b509b9a5050505050505050505050565b6020815260006123c860208301846128a3565b8054600090600181811c9080831680612acb57607f831692505b60208084108203612aec57634e487b7160e01b600052602260045260246000fd5b83885260208801828015612b075760018114612b1d57612b48565b60ff198716825285151560051b82019750612b48565b60008981526020902060005b87811015612b4257815484820152908601908401612b29565b83019850505b5050505050505092915050565b604081526000610180806040840152612b726101c0840186612ab1565b603f1980858303016060860152612b8c8260018901612815565b915080858303016080860152612ba58260028901612815565b9150600387015460a0860152600487015460c0860152600587015460e086015260068701546101008601526007870154610120860152808583030161014086015250612bf481600888016128a3565b600e87015463ffffffff808216610160880152602082901c1684870152604081901c60ff1615156101a087015290915050602093909301939093525092915050565b600082601f830112612c4757600080fd5b81516001600160401b03811115612c6057612c606124db565b612c73601f8201601f1916602001612519565b818152846020838601011115612c8857600080fd5b612c998260208301602087016120f8565b949350505050565b805163ffffffff811681146123a657600080fd5b600060208284031215612cc757600080fd5b81516001600160401b0380821115612cde57600080fd5b9083019060e08286031215612cf257600080fd5b612cfa6124f1565b825182811115612d0957600080fd5b612d1587828601612c36565b825250602083015182811115612d2a57600080fd5b612d3687828601612c36565b602083015250612d48604084016126dd565b604082015260608301516060820152612d6360808401612ca1565b6080820152612d7460a08401612ca1565b60a0820152612d8560c08401612ca1565b60c082015295945050505050565b600082612db057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612dc857612dc8612705565b50019056fea26469706673582212201ee2bd91b8e0851017a3c4897f750e7b8759a20a442362765c8da3221048b3b164736f6c634300080f0033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
