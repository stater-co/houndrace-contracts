/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162004684380380620046848339810160408190526200003891620003d9565b8062000044336200013d565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b929101906200024c565b50505061012081015162000135906200018d565b50506200053c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024857600d6000838381518110620001b357620001b3620004fe565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d6000848481518110620002035762000203620004fe565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002408162000514565b905062000190565b5050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b600060208284031215620003ec57600080fd5b81516001600160401b03808211156200040457600080fd5b9083019061014082860312156200041a57600080fd5b62000424620002e3565b6200042f836200030f565b81526200043f602084016200030f565b602082015262000452604084016200030f565b604082015262000465606084016200030f565b606082015262000478608084016200030f565b60808201526200048b60a084016200030f565b60a08201526200049e60c084016200030f565b60c0820152620004b160e084016200030f565b60e0820152610100620004c68185016200030f565b908201526101208381015183811115620004df57600080fd5b620004ed888287016200032c565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053557634e487b7160e01b600052601160045260246000fd5b5060010190565b614138806200054c6000396000f3fe6080604052600436106100d55760003560e01c8063d63a8e1111610079578063e115234311610056578063e1152343146102f3578063e200c85714610313578063ec7bbea314610333578063f2fde38b1461035357005b8063d63a8e11146101db578063d8de65871461021b578063ddf0b009146102c657005b8063715018a6116100b2578063715018a6146101675780638da5cb5b1461017c578063982d64d4146101a4578063af640d0f146101b757005b80630f7921ed146100de578063212049481461011a578063451383f21461014757005b366100dc57005b005b3480156100ea57600080fd5b506100fe6100f93660046124c0565b610373565b60405161011197969594939291906127cc565b60405180910390f35b34801561012657600080fd5b5061013a6101353660046124c0565b61084f565b6040516101119190612818565b34801561015357600080fd5b506100dc61016236600461298d565b6108b4565b34801561017357600080fd5b506100dc6109c4565b34801561018857600080fd5b506000546040516001600160a01b039091168152602001610111565b6100dc6101b2366004612a99565b6109d8565b3480156101c357600080fd5b506101cd60015481565b604051908152602001610111565b3480156101e757600080fd5b5061020b6101f6366004612abb565b600d6020526000908152604090205460ff1681565b6040519015158152602001610111565b34801561022757600080fd5b50600254600354600454600554600654600754600854600954600a5461026c986001600160a01b03908116988116978116968116958116948116938116928116911689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610111565b3480156102d257600080fd5b506102e66102e13660046124c0565b611499565b6040516101119190612b1f565b3480156102ff57600080fd5b506100dc61030e3660046124c0565b611a29565b34801561031f57600080fd5b5061013a61032e3660046124c0565b611b54565b34801561033f57600080fd5b506100dc61034e366004612a99565b611bb7565b34801561035f57600080fd5b506100dc61036e366004612abb565b6120dc565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546103a790612bc0565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390612bc0565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b505050918352505060018201546001600160a01b03908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104a157602002820191906000526020600020905b81548152602001906001019080831161048d575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104f957602002820191906000526020600020905b8154815260200190600101908083116104e5575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561058957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161056b575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105eb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105cd575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561064d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161062f575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106e7576000848152602090819020830180546040805182850281018501909152818152928301828280156106d357602002820191906000526020600020905b8154815260200190600101908083116106bf575b50505050508152602001906001019061067b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107805760008481526020908190208301805460408051828502810185019091528181529283018282801561076c57602002820191906000526020600020905b815481526020019060010190808311610758575b505050505081526020019060010190610714565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561080757602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107e5576107e56125f5565b8152602060019283018181049485019490930390920291018084116107c65790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000009004169060ff1687565b6000818152600c60209081526040918290206004018054835181840281018401909452808452606093928301828280156108a857602002820191906000526020600020905b815481526020019060010190808311610894575b50505050509050919050565b6108bc612183565b8051600280547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936109af92600b92910190612332565b509050506109c18161012001516121f7565b50565b6109cc612183565b6109d660006122ca565b565b6000828152600c602052604090206011015463ffffffff1615801590610a1057506000828152600c602052604090206013015460ff16155b8015610a7d57506000828152600c60205260409020600f0154158015610a4557506000828152600c60205260409020600e0154155b80610a7d57506000828152600c60205260409020600e01544210801590610a7d57506000828152600c60205260409020600f01544211155b8015610b1057506007546040517fddc6a171000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063ddc6a17190604401602060405180830381865afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190612c13565b8015610b5557506000828152600c6020526040902060110154610b4190640100000000900463ffffffff1642612c64565b6000838152600c6020526040902060100154105b610b5e57600080fd5b600a546040517f85e3f058000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906385e3f05890602401600060405180830381865afa158015610bc1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610be99190810190612d79565b90506000805b6000858152600c6020526040902060120154811015610c90578260c001516006811115610c1e57610c1e6125f5565b6000868152600c60205260409020601201805483908110610c4157610c41612e34565b90600052602060002090602091828204019190069054906101000a900460ff166006811115610c7257610c726125f5565b03610c805760019150610c90565b610c8981612e63565b9050610bef565b5080610c9b57600080fd5b60005b6000858152600c6020526040902060030154811015610d02576000858152600c60205260409020600301805485919083908110610cdd57610cdd612e34565b906000526020600020015403610cf257600080fd5b610cfb81612e63565b9050610c9e565b506000848152600c6020908152604080832060038101805460018082018355918652848620018890556004918201805491820181558552929093204292019190915560075490517f73d1aa270000000000000000000000000000000000000000000000000000000081529182018590526001600160a01b0316906373d1aa2790602401600060405180830381600087803b158015610d9f57600080fd5b505af1158015610db3573d6000803e3d6000fd5b50506007546040517f894f39fc00000000000000000000000000000000000000000000000000000000815260048101879052602481018890526001600160a01b03909116925063894f39fc91506044016020604051808303816000875af1158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e469190612e9b565b15610e5057600080fd5b6006546000858152600c60205260408082206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815291926001600160a01b03169163ccdac71a91610ead9160040190815260200190565b602060405180830381865afa158015610eca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eee9190612eb4565b6005546040517fb3aa39b600000000000000000000000000000000000000000000000000000000815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7e9190612f2c565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050836020015181600081518110610fc157610fc1612e34565b602090810291909101015260085484516001600160a01b039182169163c01f59c2911615610ff0576000610ff6565b85602001515b60085487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615611030576002611033565b60035b6040518863ffffffff1660e01b815260040161105496959493929190612f72565b6000604051808303818588803b15801561106d57600080fd5b505af1158015611081573d6000803e3d6000fd5b505050505082602001518160008151811061109e5761109e612e34565b602090810291909101015260085483516001600160a01b039182169163c01f59c29116156110cd5760006110d3565b84602001515b60085486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561110d576002611110565b60035b6040518863ffffffff1660e01b815260040161113196959493929190612f72565b6000604051808303818588803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505050505081602001518160008151811061117b5761117b612e34565b602090810291909101015260085482516001600160a01b039182169163c01f59c29116156111aa5760006111b0565b83602001515b60085485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d16156111ea5760026111ed565b60035b6040518863ffffffff1660e01b815260040161120e96959493929190612f72565b6000604051808303818588803b15801561122757600080fd5b505af115801561123b573d6000803e3d6000fd5b50505060008b8152600c60205260409020601181015460039091015463ffffffff9091169003915061145f90505760065460008a8152600c6020526040908190206005015490517f11a343930000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916311a34393916112c79160040190815260200190565b600060405180830381600087803b1580156112e157600080fd5b505af11580156112f5573d6000803e3d6000fd5b505060095460008c8152600c60205260409081902090517f9ad2e2b00000000000000000000000000000000000000000000000000000000081526001600160a01b039092169350639ad2e2b09250611355916008909101906004016137bc565b600060405180830381600087803b15801561136f57600080fd5b505af1158015611383573d6000803e3d6000fd5b505060095460008c8152600c60205260409081902090517fd347c56f0000000000000000000000000000000000000000000000000000000081526001600160a01b03909216935063d347c56f92506113df918d9060040161404b565b600060405180830381600087803b1580156113f957600080fd5b505af115801561140d573d6000803e3d6000fd5b50505060008a8152600c6020526040812061142c9250600301906123af565b6000898152600c60205260408120611449916004909101906123af565b6000898152600c60205260409020426010909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a4505050505050505050565b6114a16123cd565b6000828152600c60205260409081902081516102208101909252805482906101008201908390829082906114d490612bc0565b80601f016020809104026020016040519081016040528092919081815260200182805461150090612bc0565b801561154d5780601f106115225761010080835404028352916020019161154d565b820191906000526020600020905b81548152906001019060200180831161153057829003601f168201915b505050918352505060018201546001600160a01b03908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156115ce57602002820191906000526020600020905b8154815260200190600101908083116115ba575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561162657602002820191906000526020600020905b815481526020019060010190808311611612575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156116b657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611698575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561171857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116fa575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561177a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161175c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156118145760008481526020908190208301805460408051828502810185019091528181529283018282801561180057602002820191906000526020600020905b8154815260200190600101908083116117ec575b5050505050815260200190600101906117a8565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156118ad5760008481526020908190208301805460408051828502810185019091528181529283018282801561189957602002820191906000526020600020905b815481526020019060010190808311611885575b505050505081526020019060010190611841565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561193457602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611912576119126125f5565b8152602060019283018181049485019490930390920291018084116118f35790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000009091041660a084015260128401805482518185028101850190935280835260c0909401939192909190830182828015611a0957602002820191906000526020600020906000905b82829054906101000a900460ff1660068111156119e7576119e76125f5565b8152602060019283018181049485019490930390920291018084116119c85790505b50505091835250506013919091015460ff16151560209091015292915050565b611a31612183565b47811115611ac6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050506109c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f2077697468647261770000000000006044820152606401611abd565b6000818152600c60209081526040918290206003018054835181840281018401909452808452606093928301828280156108a857602002820191906000526020600020908154815260200190600101908083116108945750505050509050919050565b6007546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3e9190612eb4565b90506001600160a01b0381163314611c5557600080fd5b6000838152600c6020908152604080832060030180548251818502810185019093528083529192909190830182828015611cae57602002820191906000526020600020905b815481526020019060010190808311611c9a575b5050506000878152600c6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611d1057602002820191906000526020600020905b815481526020019060010190808311611cfc575b5050506000888152600c60205260408120939450611d3493600301925090506123af565b6000858152600c60205260408120611d51916004909101906123af565b815115611e84576000805b8351811015611e775785848281518110611d7857611d78612e34565b602002602001015103611ddc576000878152600c602052604090206011015460019250611db390640100000000900463ffffffff1642612c64565b838281518110611dc557611dc5612e34565b602002602001015110611dd757600080fd5b611e67565b6000878152600c602052604090208451600390910190859083908110611e0457611e04612e34565b602090810291909101810151825460018101845560009384528284200155888252600c9052604090208351600490910190849083908110611e4757611e47612e34565b602090810291909101810151825460018101845560009384529190922001555b611e7081612e63565b9050611d5c565b5080611e8257600080fd5b505b6007546040517f894f39fc000000000000000000000000000000000000000000000000000000008152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f139190612e9b565b14611f1d57600080fd5b6005546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611f80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa49190612f2c565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611fe557611fe5612e34565b602090810291909101015260085482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015612036578160200160208202803683370190505b50875187906001600160a01b031615612050576002612053565b60035b6040518763ffffffff1660e01b815260040161207496959493929190612f72565b600060405180830381600087803b15801561208e57600080fd5b505af11580156120a2573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a350505050505050565b6120e4612183565b6001600160a01b03811661217a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611abd565b6109c1816122ca565b6000546001600160a01b031633146109d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611abd565b60005b81518110156122c657600d600083838151811061221957612219612e34565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d600084848151811061226657612266612e34565b6020908102919091018101516001600160a01b0316825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556122bf81612e63565b90506121fa565b5050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561239f579160200282015b8281111561239f57825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178255602090920191600190910190612352565b506123ab929150612417565b5090565b50805460008255906000526020600020908101906109c19190612417565b6040518061010001604052806123e161242c565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c083015260e09091015290565b5b808211156123ab5760008155600101612418565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016124bb6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156124d257600080fd5b5035919050565b60005b838110156124f45781810151838201526020016124dc565b50506000910152565b600081518084526125158160208601602086016124d9565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156125595781518752958201959082019060010161253d565b509495945050505050565b600081518084526020808501945080840160005b838110156125595781516001600160a01b031687529582019590820190600101612578565b600082825180855260208086019550808260051b84010181860160005b848110156125e857601f198684030189526125d6838351612529565b988401989250908301906001016125ba565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612634576126346125f5565b9052565b6000815160c0845261264d60c0850182612564565b9050602080840151858303828701526126668382612564565b925050604084015185830360408701526126808382612564565b9250506060840151858303606087015261269a838261259d565b925050608084015185830360808701526126b4838261259d565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156126fe576126ea828651612624565b9383019360019290920191908301906126d7565b509695505050505050565b6000610120825181855261271f828601826124fd565b915050602083015161273c60208601826001600160a01b03169052565b50604083015161275760408601826001600160a01b03169052565b506060830151848203606086015261276f8282612529565b915050608083015184820360808601526127898282612529565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526127c28382612638565b9695505050505050565b60e0815260006127df60e083018a612709565b6020830198909852506040810195909552606085019390935263ffffffff91821660808501521660a0830152151560c090910152919050565b60208152600061282b6020830184612529565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561288557612885612832565b60405290565b60405160e0810167ffffffffffffffff8111828210171561288557612885612832565b604051601f8201601f1916810167ffffffffffffffff811182821017156128d7576128d7612832565b604052919050565b6001600160a01b03811681146109c157600080fd5b80356128ff816128df565b919050565b600082601f83011261291557600080fd5b8135602067ffffffffffffffff82111561293157612931612832565b8160051b6129408282016128ae565b928352848101820192828101908785111561295a57600080fd5b83870192505b84831015612982578235612973816128df565b82529183019190830190612960565b979650505050505050565b60006020828403121561299f57600080fd5b813567ffffffffffffffff808211156129b757600080fd5b9083019061014082860312156129cc57600080fd5b6129d4612861565b6129dd836128f4565b81526129eb602084016128f4565b60208201526129fc604084016128f4565b6040820152612a0d606084016128f4565b6060820152612a1e608084016128f4565b6080820152612a2f60a084016128f4565b60a0820152612a4060c084016128f4565b60c0820152612a5160e084016128f4565b60e0820152610100612a648185016128f4565b908201526101208381013583811115612a7c57600080fd5b612a8888828701612904565b918301919091525095945050505050565b60008060408385031215612aac57600080fd5b50508035926020909101359150565b600060208284031215612acd57600080fd5b813561282b816128df565b60078110612634576126346125f5565b600081518084526020808501945080840160005b8381101561255957612b0f878351612ad8565b9582019590820190600101612afc565b6020815260008251610100806020850152612b3e610120850183612709565b915060208501516040850152604085015160608501526060850151608085015263ffffffff60808601511660a085015260a0850151612b8560c086018263ffffffff169052565b5060c0850151601f198584030160e0860152612ba18382612ae8565b92505060e0850151612bb68286018215159052565b5090949350505050565b600181811c90821680612bd457607f821691505b602082108103612c0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612c2557600080fd5b8151801515811461282b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612c7757612c77612c35565b92915050565b600082601f830112612c8e57600080fd5b6040516106c080820182811067ffffffffffffffff82111715612cb357612cb3612832565b60405283018185821115612cc657600080fd5b845b82811015612cf357805163ffffffff81168114612ce55760008081fd5b825260209182019101612cc8565b509195945050505050565b600082601f830112612d0f57600080fd5b815167ffffffffffffffff811115612d2957612d29612832565b612d3c6020601f19601f840116016128ae565b818152846020838601011115612d5157600080fd5b612d628260208301602087016124d9565b949350505050565b8051600781106128ff57600080fd5b600060208284031215612d8b57600080fd5b815167ffffffffffffffff80821115612da357600080fd5b908301906107808286031215612db857600080fd5b612dc061288b565b82518152602083015160208201526040830151604082015260608301516060820152612def8660808501612c7d565b608082015261074083015182811115612e0757600080fd5b612e1387828601612cfe565b60a083015250612e266107608401612d6a565b60c082015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e9457612e94612c35565b5060010190565b600060208284031215612ead57600080fd5b5051919050565b600060208284031215612ec657600080fd5b815161282b816128df565b600060408284031215612ee357600080fd5b6040516040810181811067ffffffffffffffff82111715612f0657612f06612832565b80604052508091508251612f19816128df565b8152602092830151920191909152919050565b600080600060c08486031215612f4157600080fd5b612f4b8585612ed1565b9250612f5a8560408601612ed1565b9150612f698560808601612ed1565b90509250925092565b60006001600160a01b038089168352808816602084015280871660408401525060c06060830152612fa660c0830186612529565b8281036080840152612fb88186612529565b91505061298260a0830184612624565b6000815480845260208085019450836000528060002060005b838110156125595781546001600160a01b031687529582019560019182019101612fe1565b6000815480845260208085019450836000528060002060005b838110156125595781548752958201956001918201910161301f565b600082825480855260208086019550808260051b840101856000528160002060005b848110156125e857601f198684030189526130788383613006565b9884019892506001918201910161305d565b60c08252600061309d60c0840183612fc8565b60016020858303818701526130b483838701612fc8565b925085830360408701526130cb8360028701612fc8565b92506060868403818801526130e3846003880161303b565b93506080878503818901526130fb856004890161303b565b94506005870160a0898703818b015286825461311b818a90815260200190565b600094855260208520995091505b80601f8501101561339857885460ff61314484828416612624565b613155898501828460081c16612624565b61316760408501828460101c16612624565b613178888501828460181c16612624565b61318887850182848c1c16612624565b613199858501828460281c16612624565b6131ab60c08501828460301c16612624565b60e06131be818601838560381c16612624565b6131d16101008601838560401c16612624565b6131e46101208601838560481c16612624565b6131f76101408601838560501c16612624565b61320a6101608601838560581c16612624565b61321c610180860183858c1c16612624565b61322f6101a08601838560681c16612624565b6132426101c08601838560701c16612624565b6132556101e08601838560781c16612624565b613267610200860183858b1c16612624565b61327a6102208601838560881c16612624565b61328d6102408601838560901c16612624565b6132a06102608601838560981c16612624565b6132b261028086018385891c16612624565b6132c56102a08601838560a81c16612624565b6132d86102c08601838560b01c16612624565b6132eb6102e08601838560b81c16612624565b6132fe6103008601838560c01c16612624565b6133116103208601838560c81c16612624565b6133246103408601838560d01c16612624565b6133376103608601838560d81c16612624565b61334961038086018385841c16612624565b5061335d6103a08501828460e81c16612624565b6133706103c08501828460f01c16612624565b506133826103e084018260f81c612624565b5097870197928601926104009190910190613129565b975497808410156133b9576133b08260ff8b16612624565b92870192908601905b808410156133da576133d18260ff8b60081c16612624565b92870192908601905b808410156133fb576133f28260ff8b60101c16612624565b92870192908601905b8084101561341c576134138260ff8b60181c16612624565b92870192908601905b8084101561343c576134338260ff8b8a1c16612624565b92870192908601905b8084101561345d576134548260ff8b60281c16612624565b92870192908601905b8084101561347e576134758260ff8b60301c16612624565b92870192908601905b8084101561349f576134968260ff8b60381c16612624565b92870192908601905b808410156134c0576134b78260ff8b60401c16612624565b92870192908601905b808410156134e1576134d88260ff8b60481c16612624565b92870192908601905b80841015613502576134f98260ff8b60501c16612624565b92870192908601905b808410156135235761351a8260ff8b60581c16612624565b92870192908601905b808410156135435761353a8260ff8b891c16612624565b92870192908601905b808410156135645761355b8260ff8b60681c16612624565b92870192908601905b808410156135855761357c8260ff8b60701c16612624565b92870192908601905b808410156135a65761359d8260ff8b60781c16612624565b92870192908601905b808410156135c6576135bd8260ff8b881c16612624565b92870192908601905b808410156135e7576135de8260ff8b60881c16612624565b92870192908601905b80841015613608576135ff8260ff8b60901c16612624565b92870192908601905b80841015613629576136208260ff8b60981c16612624565b92870192908601905b80841015613649576136408260ff8b861c16612624565b92870192908601905b8084101561366a576136618260ff8b60a81c16612624565b92870192908601905b8084101561368b576136828260ff8b60b01c16612624565b92870192908601905b808410156136ac576136a38260ff8b60b81c16612624565b92870192908601905b808410156136cd576136c48260ff8b60c01c16612624565b92870192908601905b808410156136ee576136e58260ff8b60c81c16612624565b92870192908601905b8084101561370f576137068260ff8b60d01c16612624565b92870192908601905b80841015613730576137278260ff8b60d81c16612624565b92870192908601905b80841015613751576137488260ff8b60e01c16612624565b92870192908601905b80841015613772576137698260ff8b60e81c16612624565b92870192908601905b808410156137935761378a8260ff8b60f01c16612624565b92870192908601905b808410156137ad576137a8828a60f81c612624565b908601905b509a9950505050505050505050565b60208152600061282b602083018461308a565b8054600090600181811c90808316806137e957607f831692505b60208084108203613823577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8388526020880182801561383e57600181146138725761389d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b8201975061389d565b60008981526020902060005b878110156138975781548482015290860190840161387e565b83019850505b5050505050505092915050565b60006101208084526138be818501846137cf565b90506138d460018401546001600160a01b031690565b6001600160a01b039081166020860152600284015416604085015283810360608501526139048160038501613006565b9050838103608085015261391b8160048501613006565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152612d62816008850161308a565b805480835260008281526020808220940193909190825b82601f82011015613be857815460ff61398388828416612ad8565b6020613996818a01838560081c16612ad8565b60406139a9818b01848660101c16612ad8565b60606139bc818c01858760181c16612ad8565b60806139ce818d018688871c16612ad8565b60a093506139e3848d01868860281c16612ad8565b60c06139f6818e01878960301c16612ad8565b60e0613a09818f01888a60381c16612ad8565b613a1b6101008f01888a881c16612ad8565b613a2e6101208f01888a60481c16612ad8565b613a416101408f01888a60501c16612ad8565b613a546101608f01888a60581c16612ad8565b613a666101808f01888a871c16612ad8565b613a796101a08f01888a60681c16612ad8565b613a8c6101c08f01888a60701c16612ad8565b613a9f6101e08f01888a60781c16612ad8565b613ab16102008f01888a861c16612ad8565b613ac46102208f01888a60881c16612ad8565b613ad76102408f01888a60901c16612ad8565b613aea6102608f01888a60981c16612ad8565b613afc6102808f01888a891c16612ad8565b613b0f6102a08f01888a60a81c16612ad8565b613b226102c08f01888a60b01c16612ad8565b613b356102e08f01888a60b81c16612ad8565b613b476103008f01888a851c16612ad8565b613b5a6103208f01888a60c81c16612ad8565b613b6d6103408f01888a60d01c16612ad8565b613b806103608f01888a60d81c16612ad8565b613b926103808f01888a841c16612ad8565b505050505050613bab6103a08901828460e81c16612ad8565b613bbe6103c08901828460f01c16612ad8565b50613bd06103e088018260f81c612ad8565b50610400959095019460019190910190602001613968565b90549082811015613c0b57613c008660ff8416612ad8565b602095909501946001015b82811015613c2e57613c238660ff8460081c16612ad8565b602095909501946001015b82811015613c5157613c468660ff8460101c16612ad8565b602095909501946001015b82811015613c7457613c698660ff8460181c16612ad8565b602095909501946001015b82811015613c9757613c8c8660ff8460201c16612ad8565b602095909501946001015b82811015613cba57613caf8660ff8460281c16612ad8565b602095909501946001015b82811015613cdd57613cd28660ff8460301c16612ad8565b602095909501946001015b82811015613d0057613cf58660ff8460381c16612ad8565b602095909501946001015b82811015613d2357613d188660ff8460401c16612ad8565b602095909501946001015b82811015613d4657613d3b8660ff8460481c16612ad8565b602095909501946001015b82811015613d6957613d5e8660ff8460501c16612ad8565b602095909501946001015b82811015613d8c57613d818660ff8460581c16612ad8565b602095909501946001015b82811015613daf57613da48660ff8460601c16612ad8565b602095909501946001015b82811015613dd257613dc78660ff8460681c16612ad8565b602095909501946001015b82811015613df557613dea8660ff8460701c16612ad8565b602095909501946001015b82811015613e1857613e0d8660ff8460781c16612ad8565b602095909501946001015b82811015613e3b57613e308660ff8460801c16612ad8565b602095909501946001015b82811015613e5e57613e538660ff8460881c16612ad8565b602095909501946001015b82811015613e8157613e768660ff8460901c16612ad8565b602095909501946001015b82811015613ea457613e998660ff8460981c16612ad8565b602095909501946001015b82811015613ec757613ebc8660ff8460a01c16612ad8565b602095909501946001015b82811015613eea57613edf8660ff8460a81c16612ad8565b602095909501946001015b82811015613f0d57613f028660ff8460b01c16612ad8565b602095909501946001015b82811015613f3057613f258660ff8460b81c16612ad8565b602095909501946001015b82811015613f5357613f488660ff8460c01c16612ad8565b602095909501946001015b82811015613f7657613f6b8660ff8460c81c16612ad8565b602095909501946001015b82811015613f9957613f8e8660ff8460d01c16612ad8565b602095909501946001015b82811015613fbc57613fb18660ff8460d81c16612ad8565b602095909501946001015b82811015613fdf57613fd48660ff8460e01c16612ad8565b602095909501946001015b8281101561400257613ff78660ff8460e81c16612ad8565b602095909501946001015b828110156140255761401a8660ff8460f01c16612ad8565b602095909501946001015b828110156140415761403a868360f81c612ad8565b6020860195505b5093949350505050565b6040815260006101008060408401526140686101408401866138aa565b600e8601546060850152600f8601546080850152601086015460a0850152601186015463ffffffff80821660c087015260209190911c1660e08501528381037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001828501526140da8160128801613951565b9150506140eb601386015460ff1690565b15156101208401526020909201929092529291505056fea2646970667358221220923d7398c16462a2ff4a88b0f6b1475fd46232651011104baf168e3435c64aac64736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
