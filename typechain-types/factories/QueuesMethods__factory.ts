/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b506040516200374a3803806200374a833981016040819052620000389162000399565b806200004433620000fe565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c083015180518493620000e3926008929101906200020d565b50505060c0810151620000f6906200014e565b5050620004bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200020957600a60008383815181106200017457620001746200047f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600a6000848481518110620001c457620001c46200047f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002018162000495565b905062000151565b5050565b82805482825590600052602060002090810192821562000265579160200282015b828111156200026557825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200022e565b506200027392915062000277565b5090565b5b8082111562000273576000815560010162000278565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002c957620002c96200028e565b60405290565b80516001600160a01b0381168114620002e757600080fd5b919050565b600082601f830112620002fe57600080fd5b815160206001600160401b03808311156200031d576200031d6200028e565b8260051b604051601f19603f830116810181811084821117156200034557620003456200028e565b6040529384528581018301938381019250878511156200036457600080fd5b83870191505b848210156200038e576200037e82620002cf565b835291830191908301906200036a565b979650505050505050565b600060208284031215620003ac57600080fd5b81516001600160401b0380821115620003c457600080fd5b9083019060e08286031215620003d957600080fd5b620003e3620002a4565b620003ee83620002cf565b8152620003fe60208401620002cf565b60208201526200041160408401620002cf565b60408201526200042460608401620002cf565b60608201526200043760808401620002cf565b60808201526200044a60a08401620002cf565b60a082015260c0830151828111156200046257600080fd5b6200047087828601620002ec565b60c08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004b657634e487b7160e01b600052601160045260246000fd5b5060010190565b61327d80620004cd6000396000f3fe6080604052600436106100ae5760003560e01c80630f7921ed146100b7578063715018a6146100f65780638da5cb5b1461010b578063982d64d414610138578063af640d0f1461014b578063b3aa39b61461016f578063d63a8e111461018f578063d8de6587146101cf578063ddf0b00914610250578063e11523431461027d578063e200c8571461029d578063e8ee0e3b146102ca578063ec7bbea3146102ea578063f2fde38b1461030a57005b366100b557005b005b3480156100c357600080fd5b506100d76100d23660046124c1565b61032a565b6040516100ed9a999897969594939291906126ce565b60405180910390f35b34801561010257600080fd5b506100b56106f6565b34801561011757600080fd5b5061012061070a565b6040516001600160a01b0390911681526020016100ed565b6100b5610146366004612742565b610719565b34801561015757600080fd5b5061016160015481565b6040519081526020016100ed565b34801561017b57600080fd5b5061016161018a3660046124c1565b610dd7565b34801561019b57600080fd5b506101bf6101aa366004612789565b600a6020526000908152604090205460ff1681565b60405190151581526020016100ed565b3480156101db57600080fd5b5060025460035460045460055460065460075461020e956001600160a01b03908116958116948116938116928116911686565b604080516001600160a01b03978816815295871660208701529386169385019390935290841660608401528316608083015290911660a082015260c0016100ed565b34801561025c57600080fd5b5061027061026b3660046124c1565b610e96565b6040516100ed91906127ad565b34801561028957600080fd5b506100b56102983660046124c1565b611353565b3480156102a957600080fd5b506102bd6102b83660046124c1565b611443565b6040516100ed91906128a6565b3480156102d657600080fd5b506100b56102e53660046129af565b6114a8565b3480156102f657600080fd5b506100b5610305366004612742565b61155e565b34801561031657600080fd5b506100b5610325366004612789565b612039565b60096020526000908152604090208054819061034590612a81565b80601f016020809104026020016040519081016040528092919081815260200182805461037190612a81565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b505050505090806003015490806004015490806005015490806006015490806007015490806008016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561044a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161042c575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156104ac57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161048e575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561050e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104f0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156105a85760008481526020908190208301805460408051828502810185019091528181529283018282801561059457602002820191906000526020600020905b815481526020019060010190808311610580575b50505050508152602001906001019061053c565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156106415760008481526020908190208301805460408051828502810185019091528181529283018282801561062d57602002820191906000526020600020905b815481526020019060010190808311610619575b5050505050815260200190600101906105d5565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106875790505b50505091909252505050600e9091015463ffffffff80821691600160201b81049091169060ff600160401b909104168a565b6106fe6120af565b610708600061210e565b565b6000546001600160a01b031690565b61073e604051806040016040528060048152602001634f4b203160e01b81525061215e565b6000828152600960205260409020600e015463ffffffff161580159061077d57506000828152600960205260409020600e0154600160401b900460ff16155b80156107ea57506000828152600960205260409020600601541580156107b25750600082815260096020526040902060050154155b806107ea575060008281526009602052604090206005015442108015906107ea57506000828152600960205260409020600601544211155b801561080757506000828152600960205260409020600401543410155b8015610886575060035460405163dadddaaf60e01b81526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087b9190612ac6565b6001600160a01b0316145b80156108ca57506000828152600960205260409020600e01546108b690600160201b900463ffffffff1642612af9565b600083815260096020526040902060070154105b6108d357600080fd5b6108f86040518060400160405280600481526020016327a5901960e11b81525061215e565b60005b60008381526009602052604090206001015481101561095f57600083815260096020526040902060010180548391908390811061093a5761093a612b10565b90600052602060002001540361094f57600080fd5b61095881612b26565b90506108fb565b5061098760405180604001604052806005815260200164027a59019960dd1b815250826121a1565b6000828152600960209081526040808320600180820180548083018255908652848620018690556002909101805491820181558452928290204293019290925581518083019092526007825266027a59019971a960cd1b908201526109eb9061215e565b6003546040516373d1aa2760e01b8152600481018390526001600160a01b03909116906373d1aa2790602401600060405180830381600087803b158015610a3157600080fd5b505af1158015610a45573d6000803e3d6000fd5b50505050610a7160405180604001604052806007815260200166027a59019971b160cd1b81525061215e565b600354604051632253ce7f60e21b815260048101839052602481018490526001600160a01b039091169063894f39fc906044016020604051808303816000875af1158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae79190612b3f565b15610af157600080fd5b610b166040518060400160405280600481526020016313d2c80d60e21b81525061215e565b6000828152600960205260409020600e81015460019091015463ffffffff9091169003610da457600254600083815260096020526040808220600301549051635ba52fdf60e11b815291926001600160a01b03169163b74a5fbe91610b819160040190815260200190565b600060405180830381865afa158015610b9e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bc69190810190612bd7565b9050610bfd6040518060400160405280600f81526020016e022b738bab2bab2903ab9b4b7339d1608d1b81525082604001516121ea565b60025460408201516001600160a01b03918216916311a34393911615610c24576000610c2a565b82606001515b6000868152600960205260409081902060030154905160e084901b6001600160e01b031916815260048101919091526024016000604051808303818588803b158015610c7557600080fd5b505af1158015610c89573d6000803e3d6000fd5b50506007546000878152600960205260409081902090516307e2dc6b60e31b81526001600160a01b039092169450633f16e3589350610ccf925060080190600401612f7c565b600060405180830381600087803b158015610ce957600080fd5b505af1158015610cfd573d6000803e3d6000fd5b5050600754600086815260096020526040908190209051636348e0e360e11b81526001600160a01b03909216935063c691c1c69250610d40918790600401613033565b600060405180830381600087803b158015610d5a57600080fd5b505af1158015610d6e573d6000803e3d6000fd5b5050506000848152600960205260408120610d8d925060010190612391565b506000828152600960205260409020426007909101555b6040513390829084907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a45050565b600081815260096020526040808220600480820154600e8301546002546003909401549451635ba52fdf60e11b8152928301949094529263ffffffff16916001600160a01b03169063b74a5fbe90602401600060405180830381865afa158015610e45573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e6d9190810190612bd7565b60600151610e7b9190613114565b610e859190613136565b610e90906001613136565b92915050565b610e9e6123af565b6000828152600960205260409081902081516101808101909252805482908290610ec790612a81565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef390612a81565b8015610f405780601f10610f1557610100808354040283529160200191610f40565b820191906000526020600020905b815481529060010190602001808311610f2357829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f9857602002820191906000526020600020905b815481526020019060010190808311610f84575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ff057602002820191906000526020600020905b815481526020019060010190808311610fdc575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561109457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611076575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156110f657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110d8575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561115857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161113a575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111f2576000848152602090819020830180546040805182850281018501909152818152928301828280156111de57602002820191906000526020600020905b8154815260200190600101908083116111ca575b505050505081526020019060010190611186565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561128b5760008481526020908190208301805460408051828502810185019091528181529283018282801561127757602002820191906000526020600020905b815481526020019060010190808311611263575b50505050508152602001906001019061121f565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561130e57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116112d15790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b8204166040830152600160401b900460ff16151560609091015292915050565b61135b6120af565b478111156113c85760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6113d061070a565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506114405760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016113bf565b50565b60008181526009602090815260409182902060010180548351818402810184019094528084526060939283018282801561149c57602002820191906000526020600020905b815481526020019060010190808311611488575b50505050509050919050565b6114b06120af565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c08301518051849361154d92600892910190612447565b509050506114408160c0015161222f565b6000828152600960205260408082208151610180810190925280548290829061158690612a81565b80601f01602080910402602001604051908101604052809291908181526020018280546115b290612a81565b80156115ff5780601f106115d4576101008083540402835291602001916115ff565b820191906000526020600020905b8154815290600101906020018083116115e257829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561165757602002820191906000526020600020905b815481526020019060010190808311611643575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156116af57602002820191906000526020600020905b81548152602001906001019080831161169b575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561175357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611735575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156117b557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611797575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561181757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117f9575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156118b15760008481526020908190208301805460408051828502810185019091528181529283018282801561189d57602002820191906000526020600020905b815481526020019060010190808311611889575b505050505081526020019060010190611845565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561194a5760008481526020908190208301805460408051828502810185019091528181529283018282801561193657602002820191906000526020600020905b815481526020019060010190808311611922575b5050505050815260200190600101906118de565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156119cd57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116119905790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b820416604080840191909152600160401b90910460ff161515606092830152600254918301519051635ba52fdf60e11b815260048101919091529192506000916001600160a01b039091169063b74a5fbe90602401600060405180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a8c9190810190612bd7565b6020808401516040808601516000898152600990945290832093945090929091611ab99160010190612391565b6000868152600960205260408120611ad691600290910190612391565b815115611d36576000805b8351811015611d0157611b556040518060400160405280600d81526020016c02830b93a34b1b4b830b73a1d1609d1b815250858381518110611b2557611b25612b10565b60200260200101516040518060400160405280600981526020016801030b3b0b4b739ba160bd1b8152508a6122e0565b86848281518110611b6857611b68612b10565b602002602001015103611c6657611b9c6040518060400160405280600681526020016579656161617360d01b81525061215e565b60019150611be46040518060400160405280600981526020016803cb2b0b0b0b99019160bd1b815250848381518110611bd757611bd7612b10565b60200260200101516121a1565b611bed4261232f565b611c0186610140015163ffffffff1661232f565b610140860151611c179063ffffffff1642612af9565b838281518110611c2957611c29612b10565b602002602001015110611c3b57600080fd5b611c616040518060400160405280600581526020016437b597171760d91b81525061215e565b611cf1565b60096000898152602001908152602001600020600101848281518110611c8e57611c8e612b10565b60209081029190910181015182546001810184556000938452828420015589825260099052604090208351600290910190849083908110611cd157611cd1612b10565b602090810291909101810151825460018101845560009384529190922001555b611cfa81612b26565b9050611ae1565b5080611d0c57600080fd5b611d34604051806040016040528060078152602001661c195c999958dd60ca1b81525061215e565b505b611d5d604051806040016040528060068152602001653737bb97171760d11b81525061215e565b600354604051632253ce7f60e21b8152600481018790526000602482015287916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611daf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd39190612b3f565b14611ddd57600080fd5b611e07604051806040016040528060098152602001686f6b20616761696e7360b81b81525061215e565b60035460405163dadddaaf60e01b8152600481018790526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e759190612ac6565b9050611ea46040518060400160405280600c81526020016b37b59030b3b0b4b739903c1960a11b81525061215e565b60408051600180825281830190925260009160208083019080368337019050509050856080015181600081518110611ede57611ede612b10565b602090810291909101015260408501516000906001600160a01b031615611f06576000611f0c565b86608001515b9050611f3b6040518060400160405280600c81526020016b6f6b20616761696e7320783360a01b81525061215e565b600554604087810180518251600081526020810190935290516001600160a01b039384169363400f959f93869386938a939192918a911615611f7e576002611f81565b60035b6040518863ffffffff1660e01b8152600401611fa29695949392919061314e565b6000604051808303818588803b158015611fbb57600080fd5b505af1158015611fcf573d6000803e3d6000fd5b50505050506120016040518060400160405280600c81526020016b1bdac81859d85a5b9cc81e0d60a21b81525061215e565b60405188908a907f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a3505050505050505050565b6120416120af565b6001600160a01b0381166120a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016113bf565b6114408161210e565b336120b861070a565b6001600160a01b0316146107085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016113bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114408160405160240161217291906131ab565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052612370565b6121e682826040516024016121b79291906131be565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052612370565b5050565b6121e682826040516024016122009291906131e0565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052612370565b60005b81518110156121e657600a600083838151811061225157612251612b10565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600a600084848151811061229e5761229e612b10565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556122d981612b26565b9050612232565b612329848484846040516024016122fa949392919061320a565b60408051601f198184030181529190526020810180516001600160e01b031663a0c4b22560e01b179052612370565b50505050565b6114408160405160240161234591815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b508054600082559060005260206000209081019061144091906124ac565b604051806101800160405280606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200161242c6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b81526000602082018190526040820181905260609091015290565b82805482825590600052602060002090810192821561249c579160200282015b8281111561249c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612467565b506124a89291506124ac565b5090565b5b808211156124a857600081556001016124ad565b6000602082840312156124d357600080fd5b5035919050565b60005b838110156124f55781810151838201526020016124dd565b838111156123295750506000910152565b6000815180845261251e8160208601602086016124da565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561256b5781516001600160a01b031687529582019590820190600101612546565b509495945050505050565b600081518084526020808501945080840160005b8381101561256b5781518752958201959082019060010161258a565b600082825180855260208086019550808260051b84010181860160005b848110156125f157601f198684030189526125df838351612576565b988401989250908301906001016125c3565b5090979650505050505050565b6000815160c0845261261360c0850182612532565b90506020808401518583038287015261262c8382612532565b925050604084015185830360408701526126468382612532565b9250506060840151858303606087015261266083826125a6565b9250506080840151858303608087015261267a83826125a6565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156126c357845163ffffffff16825293830193600192909201919083019061269d565b509695505050505050565b60006101408083526126e28184018e612506565b90508b60208401528a60408401528960608401528860808401528760a084015282810360c084015261271481886125fe565b63ffffffff96871660e085015294909516610100830152509015156101209091015298975050505050505050565b6000806040838503121561275557600080fd5b50508035926020909101359150565b6001600160a01b038116811461144057600080fd5b803561278481612764565b919050565b60006020828403121561279b57600080fd5b81356127a681612764565b9392505050565b60208152600082516101808060208501526127cc6101a0850183612506565b91506020850151601f19808685030160408701526127ea8483612576565b935060408701519150808685030160608701526128078483612576565b935060608701516080870152608087015160a087015260a087015160c087015260c087015160e087015260e0870151915061010082818801528088015192505061012081878603018188015261285d85846125fe565b9450808801519250505061014061287b8187018363ffffffff169052565b86015190506101606128948682018363ffffffff169052565b90950151151593019290925250919050565b6020815260006127a66020830184612576565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b03811182821017156128f1576128f16128b9565b60405290565b604051601f8201601f191681016001600160401b038111828210171561291f5761291f6128b9565b604052919050565b600082601f83011261293857600080fd5b813560206001600160401b03821115612953576129536128b9565b8160051b6129628282016128f7565b928352848101820192828101908785111561297c57600080fd5b83870192505b848310156129a457823561299581612764565b82529183019190830190612982565b979650505050505050565b6000602082840312156129c157600080fd5b81356001600160401b03808211156129d857600080fd5b9083019060e082860312156129ec57600080fd5b6129f46128cf565b6129fd83612779565b8152612a0b60208401612779565b6020820152612a1c60408401612779565b6040820152612a2d60608401612779565b6060820152612a3e60808401612779565b6080820152612a4f60a08401612779565b60a082015260c083013582811115612a6657600080fd5b612a7287828601612927565b60c08301525095945050505050565b600181811c90821680612a9557607f821691505b602082108103612ab557634e487b7160e01b600052602260045260246000fd5b50919050565b805161278481612764565b600060208284031215612ad857600080fd5b81516127a681612764565b634e487b7160e01b600052601160045260246000fd5b600082821015612b0b57612b0b612ae3565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018201612b3857612b38612ae3565b5060010190565b600060208284031215612b5157600080fd5b5051919050565b600082601f830112612b6957600080fd5b81516001600160401b03811115612b8257612b826128b9565b612b95601f8201601f19166020016128f7565b818152846020838601011115612baa57600080fd5b612bbb8260208301602087016124da565b949350505050565b805163ffffffff8116811461278457600080fd5b600060208284031215612be957600080fd5b81516001600160401b0380821115612c0057600080fd5b9083019060e08286031215612c1457600080fd5b612c1c6128cf565b825182811115612c2b57600080fd5b612c3787828601612b58565b825250602083015182811115612c4c57600080fd5b612c5887828601612b58565b602083015250612c6a60408401612abb565b604082015260608301516060820152612c8560808401612bc3565b6080820152612c9660a08401612bc3565b60a0820152612ca760c08401612bc3565b60c082015295945050505050565b6000815480845260208085019450836000528060002060005b8381101561256b5781546001600160a01b031687529582019560019182019101612cce565b6000815480845260208085019450836000528060002060005b8381101561256b57815487529582019560019182019101612d0c565b600081548084526020808501808196508360051b81019150856000528260002060005b85811015612d74578284038952612d628483612cf3565b98850198935060019182019101612d4b565b5091979650505050505050565b60c082526000612d9460c0840183612cb5565b6001602085830381870152612dab83838701612cb5565b9250604086840381880152612dc38460028801612cb5565b9350606087850381890152612ddb8560038901612d28565b94506080888603818a0152612df38660048a01612d28565b95506005880160a08a8803818c0152878254612e13818b90815260200190565b6000948552602085209a5091505b80600785011015612e9157895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c90830152988801986008939093019261010090910190612e21565b98549880841015612eae5763ffffffff8a16825292880192908701905b80841015612eca5789881c63ffffffff16825292880192908701905b80841015612ee65789871c63ffffffff16825292880192908701905b80841015612f025789861c63ffffffff16825292880192908701905b80841015612f1e5789851c63ffffffff16825292880192908701905b80841015612f3a5789831c63ffffffff16825292880192908701905b80841015612f585760c08a901c63ffffffff16825292880192908701905b80841015612f6c5760e08a901c8252908701905b509b9a5050505050505050505050565b6020815260006127a66020830184612d81565b8054600090600181811c9080831680612fa957607f831692505b60208084108203612fca57634e487b7160e01b600052602260045260246000fd5b83885260208801828015612fe55760018114612ffb57613026565b60ff198716825285151560051b82019750613026565b60008981526020902060005b8781101561302057815484820152908601908401613007565b83019850505b5050505050505092915050565b6040815260006101808060408401526130506101c0840186612f8f565b603f198085830301606086015261306a8260018901612cf3565b9150808583030160808601526130838260028901612cf3565b9150600387015460a0860152600487015460c0860152600587015460e0860152600687015461010086015260078701546101208601528085830301610140860152506130d28160088801612d81565b600e87015463ffffffff808216610160880152602082901c1684870152604081901c60ff1615156101a087015290915050602093909301939093525092915050565b60008261313157634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561314957613149612ae3565b500190565b6001600160a01b03878116825286811660208301528516604082015260c06060820181905260009061318290830186612576565b82810360808401526131948186612576565b91505060ff831660a0830152979650505050505050565b6020815260006127a66020830184612506565b6040815260006131d16040830185612506565b90508260208301529392505050565b6040815260006131f36040830185612506565b905060018060a01b03831660208301529392505050565b60808152600061321d6080830187612506565b85602084015282810360408401526132358186612506565b9150508260608301529594505050505056fea26469706673582212206ed55865e0fcf566262495c4847725d0a5bdb68b8b9f0c80824caf86eae72baa64736f6c634300080f0033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
