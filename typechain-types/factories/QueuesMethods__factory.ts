/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162004360380380620043608339810160408190526200003891620003d9565b8062000044336200013d565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b929101906200024c565b50505061012081015162000135906200018d565b50506200053c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024857600d6000838381518110620001b357620001b3620004fe565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d6000848481518110620002035762000203620004fe565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002408162000514565b905062000190565b5050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b600060208284031215620003ec57600080fd5b81516001600160401b03808211156200040457600080fd5b9083019061014082860312156200041a57600080fd5b62000424620002e3565b6200042f836200030f565b81526200043f602084016200030f565b602082015262000452604084016200030f565b604082015262000465606084016200030f565b606082015262000478608084016200030f565b60808201526200048b60a084016200030f565b60a08201526200049e60c084016200030f565b60c0820152620004b160e084016200030f565b60e0820152610100620004c68185016200030f565b908201526101208381015183811115620004df57600080fd5b620004ed888287016200032c565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053557634e487b7160e01b600052601160045260246000fd5b5060010190565b613e14806200054c6000396000f3fe6080604052600436106100ae5760003560e01c80630f7921ed146100b757806321204948146100f3578063451383f214610120578063715018a6146101405780638da5cb5b14610155578063982d64d414610182578063af640d0f14610195578063d63a8e11146101b9578063d8de6587146101f9578063ddf0b009146102a4578063e1152343146102d1578063e200c857146102f1578063ec7bbea314610311578063f2fde38b1461033157005b366100b557005b005b3480156100c357600080fd5b506100d76100d2366004612286565b610351565b6040516100ea9796959493929190612576565b60405180910390f35b3480156100ff57600080fd5b5061011361010e366004612286565b61082c565b6040516100ea91906125c2565b34801561012c57600080fd5b506100b561013b36600461271a565b610891565b34801561014c57600080fd5b506100b5610989565b34801561016157600080fd5b5061016a61099d565b6040516001600160a01b0390911681526020016100ea565b6100b5610190366004612825565b6109ac565b3480156101a157600080fd5b506101ab60015481565b6040519081526020016100ea565b3480156101c557600080fd5b506101e96101d4366004612847565b600d6020526000908152604090205460ff1681565b60405190151581526020016100ea565b34801561020557600080fd5b50600254600354600454600554600654600754600854600954600a5461024a986001600160a01b03908116988116978116968116958116948116938116928116911689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e0830152909116610100820152610120016100ea565b3480156102b057600080fd5b506102c46102bf366004612286565b61138b565b6040516100ea91906128ab565b3480156102dd57600080fd5b506100b56102ec366004612286565b61191a565b3480156102fd57600080fd5b5061011361030c366004612286565b611a07565b34801561031d57600080fd5b506100b561032c366004612825565b611a6a565b34801561033d57600080fd5b506100b561034c366004612847565b611f36565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546103859061294c565b80601f01602080910402602001604051908101604052809291908181526020018280546103b19061294c565b80156103fe5780601f106103d3576101008083540402835291602001916103fe565b820191906000526020600020905b8154815290600101906020018083116103e157829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561047f57602002820191906000526020600020905b81548152602001906001019080831161046b575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104d757602002820191906000526020600020905b8154815260200190600101908083116104c3575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561056757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610549575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105c957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ab575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561062b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161060d575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106c5576000848152602090819020830180546040805182850281018501909152818152928301828280156106b157602002820191906000526020600020905b81548152602001906001019080831161069d575b505050505081526020019060010190610659565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561075e5760008481526020908190208301805460408051828502810185019091528181529283018282801561074a57602002820191906000526020600020905b815481526020019060010190808311610736575b5050505050815260200190600101906106f2565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156107e557602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107c3576107c36123c8565b8152602060019283018181049485019490930390920291018084116107a45790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff80831692600160201b9004169060ff1687565b6000818152600c602090815260409182902060040180548351818402810184019094528084526060939283018282801561088557602002820191906000526020600020905b815481526020019060010190808311610871575b50505050509050919050565b610899611fac565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a805490931694169390931790556101208301518051849361097492600b92910190612110565b5090505061098681610120015161200b565b50565b610991611fac565b61099b60006120c0565b565b6000546001600160a01b031690565b6000828152600c602052604090206011015463ffffffff16158015906109e457506000828152600c602052604090206013015460ff16155b8015610a5157506000828152600c60205260409020600f0154158015610a1957506000828152600c60205260409020600e0154155b80610a5157506000828152600c60205260409020600e01544210801590610a5157506000828152600c60205260409020600f01544211155b8015610acb575060075460405163ddc6a17160e01b8152336004820152602481018390526001600160a01b039091169063ddc6a17190604401602060405180830381865afa158015610aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acb9190612986565b8015610b0f57506000828152600c6020526040902060110154610afb90600160201b900463ffffffff16426129be565b6000838152600c6020526040902060100154105b610b1857600080fd5b600a546040516310bc7e0b60e31b8152600481018390526000916001600160a01b0316906385e3f05890602401600060405180830381865afa158015610b62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b8a9190810190612ad1565b90506000805b6000858152600c6020526040902060120154811015610c31578260c001516006811115610bbf57610bbf6123c8565b6000868152600c60205260409020601201805483908110610be257610be2612b8b565b90600052602060002090602091828204019190069054906101000a900460ff166006811115610c1357610c136123c8565b03610c215760019150610c31565b610c2a81612ba1565b9050610b90565b5080610c3c57600080fd5b60005b6000858152600c6020526040902060030154811015610ca3576000858152600c60205260409020600301805485919083908110610c7e57610c7e612b8b565b906000526020600020015403610c9357600080fd5b610c9c81612ba1565b9050610c3f565b506000848152600c6020908152604080832060038101805460018082018355918652848620018890556004918201805491820181558552929093204292019190915560075490516373d1aa2760e01b81529182018590526001600160a01b0316906373d1aa2790602401600060405180830381600087803b158015610d2757600080fd5b505af1158015610d3b573d6000803e3d6000fd5b5050600754604051632253ce7f60e21b815260048101879052602481018890526001600160a01b03909116925063894f39fc91506044016020604051808303816000875af1158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db59190612bba565b15610dbf57600080fd5b6006546000858152600c602052604080822060050154905163666d638d60e11b815291926001600160a01b03169163ccdac71a91610e039160040190815260200190565b602060405180830381865afa158015610e20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e449190612bd3565b6005546040516359d51cdb60e11b815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebb9190612c4a565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050836020015181600081518110610efe57610efe612b8b565b602090810291909101015260085484516001600160a01b039182169163c01f59c2911615610f2d576000610f33565b85602001515b60085487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610f6d576002610f70565b60035b6040518863ffffffff1660e01b8152600401610f9196959493929190612c90565b6000604051808303818588803b158015610faa57600080fd5b505af1158015610fbe573d6000803e3d6000fd5b5050505050826020015181600081518110610fdb57610fdb612b8b565b602090810291909101015260085483516001600160a01b039182169163c01f59c291161561100a576000611010565b84602001515b60085486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561104a57600261104d565b60035b6040518863ffffffff1660e01b815260040161106e96959493929190612c90565b6000604051808303818588803b15801561108757600080fd5b505af115801561109b573d6000803e3d6000fd5b50505050508160200151816000815181106110b8576110b8612b8b565b602090810291909101015260085482516001600160a01b039182169163c01f59c29116156110e75760006110ed565b83602001515b60085485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561112757600261112a565b60035b6040518863ffffffff1660e01b815260040161114b96959493929190612c90565b6000604051808303818588803b15801561116457600080fd5b505af1158015611178573d6000803e3d6000fd5b50505060008b8152600c60205260409020601181015460039091015463ffffffff9091169003915061135190505760065460008a8152600c6020526040908190206005015490516311a3439360e01b81526001600160a01b03909216916311a34393916111eb9160040190815260200190565b600060405180830381600087803b15801561120557600080fd5b505af1158015611219573d6000803e3d6000fd5b505060095460008c8152600c60205260409081902090516309ad2e2b60e41b81526001600160a01b039092169350639ad2e2b09250611260916008909101906004016134e6565b600060405180830381600087803b15801561127a57600080fd5b505af115801561128e573d6000803e3d6000fd5b505060095460008c8152600c602052604090819020905163d347c56f60e01b81526001600160a01b03909216935063d347c56f92506112d1918d90600401613d45565b600060405180830381600087803b1580156112eb57600080fd5b505af11580156112ff573d6000803e3d6000fd5b50505060008a8152600c6020526040812061131e925060030190612175565b6000898152600c6020526040812061133b91600490910190612175565b6000898152600c60205260409020426010909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a4505050505050505050565b611393612193565b6000828152600c60205260409081902081516102208101909252805482906101008201908390829082906113c69061294c565b80601f01602080910402602001604051908101604052809291908181526020018280546113f29061294c565b801561143f5780601f106114145761010080835404028352916020019161143f565b820191906000526020600020905b81548152906001019060200180831161142257829003601f168201915b505050918352505060018201546001600160a01b03908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156114c057602002820191906000526020600020905b8154815260200190600101908083116114ac575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561151857602002820191906000526020600020905b815481526020019060010190808311611504575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156115a857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161158a575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561160a57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115ec575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561166c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161164e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611706576000848152602090819020830180546040805182850281018501909152818152928301828280156116f257602002820191906000526020600020905b8154815260200190600101908083116116de575b50505050508152602001906001019061169a565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561179f5760008481526020908190208301805460408051828502810185019091528181529283018282801561178b57602002820191906000526020600020905b815481526020019060010190808311611777575b505050505081526020019060010190611733565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561182657602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611804576118046123c8565b8152602060019283018181049485019490930390920291018084116117e55790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff8082166080860152600160201b9091041660a084015260128401805482518185028101850190935280835260c09094019391929091908301828280156118fa57602002820191906000526020600020906000905b82829054906101000a900460ff1660068111156118d8576118d86123c8565b8152602060019283018181049485019490930390920291018084116118b95790505b50505091835250506013919091015460ff16151560209091015292915050565b611922611fac565b4781111561198f5760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b61199761099d565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506109865760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b6044820152606401611986565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561088557602002820191906000526020600020908154815260200190600101908083116108715750505050509050919050565b60075460405163dadddaaf60e01b8152600481018390526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad89190612bd3565b90506001600160a01b0381163314611aef57600080fd5b6000838152600c6020908152604080832060030180548251818502810185019093528083529192909190830182828015611b4857602002820191906000526020600020905b815481526020019060010190808311611b34575b5050506000878152600c6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611baa57602002820191906000526020600020905b815481526020019060010190808311611b96575b5050506000888152600c60205260408120939450611bce9360030192509050612175565b6000858152600c60205260408120611beb91600490910190612175565b815115611d1d576000805b8351811015611d105785848281518110611c1257611c12612b8b565b602002602001015103611c75576000878152600c602052604090206011015460019250611c4c90600160201b900463ffffffff16426129be565b838281518110611c5e57611c5e612b8b565b602002602001015110611c7057600080fd5b611d00565b6000878152600c602052604090208451600390910190859083908110611c9d57611c9d612b8b565b602090810291909101810151825460018101845560009384528284200155888252600c9052604090208351600490910190849083908110611ce057611ce0612b8b565b602090810291909101810151825460018101845560009384529190922001555b611d0981612ba1565b9050611bf6565b5080611d1b57600080fd5b505b600754604051632253ce7f60e21b8152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d939190612bba565b14611d9d57600080fd5b6005546040516359d51cdb60e11b8152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0b9190612c4a565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611e4c57611e4c612b8b565b602090810291909101015260085482516040805160018082528183019092526001600160a01b039093169263c01f59c29284928a9290816020016020820280368337505088518891506001600160a01b031615611eaa576002611ead565b60035b6040518763ffffffff1660e01b8152600401611ece96959493929190612c90565b600060405180830381600087803b158015611ee857600080fd5b505af1158015611efc573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a350505050505050565b611f3e611fac565b6001600160a01b038116611fa35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611986565b610986816120c0565b33611fb561099d565b6001600160a01b03161461099b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611986565b60005b81518110156120bc57600d600083838151811061202d5761202d612b8b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d600084848151811061207a5761207a612b8b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556120b581612ba1565b905061200e565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215612165579160200282015b8281111561216557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612130565b506121719291506121dd565b5090565b508054600082559060005260206000209081019061098691906121dd565b6040518061010001604052806121a76121f2565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c083015260e09091015290565b5b8082111561217157600081556001016121de565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016122816040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561229857600080fd5b5035919050565b60005b838110156122ba5781810151838201526020016122a2565b50506000910152565b600081518084526122db81602086016020860161229f565b601f01601f19169290920160200192915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b8381101561232c57815187529582019590820190600101612310565b509495945050505050565b600081518084526020808501945080840160005b8381101561232c5781516001600160a01b03168752958201959082019060010161234b565b600082825180855260208086019550808260051b84010181860160005b848110156123bb57601f198684030189526123a98383516122fc565b9884019892509083019060010161238d565b5090979650505050505050565b634e487b7160e01b600052602160045260246000fd5b600481106123ee576123ee6123c8565b9052565b6000815160c0845261240760c0850182612337565b9050602080840151858303828701526124208382612337565b9250506040840151858303604087015261243a8382612337565b925050606084015185830360608701526124548382612370565b9250506080840151858303608087015261246e8382612370565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156124b8576124a48286516123de565b938301936001929092019190830190612491565b509695505050505050565b600061012082518185526124d9828601826122c3565b91505060208301516124ee60208601826122ef565b50604083015161250160408601826122ef565b506060830151848203606086015261251982826122fc565b9150506080830151848203608086015261253382826122fc565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261256c83826123f2565b9695505050505050565b60e08152600061258960e083018a6124c3565b6020830198909852506040810195909552606085019390935263ffffffff91821660808501521660a0830152151560c090910152919050565b6020815260006125d560208301846122fc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715612615576126156125dc565b60405290565b60405160e081016001600160401b0381118282101715612615576126156125dc565b604051601f8201601f191681016001600160401b0381118282101715612665576126656125dc565b604052919050565b6001600160a01b038116811461098657600080fd5b803561268d8161266d565b919050565b600082601f8301126126a357600080fd5b813560206001600160401b038211156126be576126be6125dc565b8160051b6126cd82820161263d565b92835284810182019282810190878511156126e757600080fd5b83870192505b8483101561270f5782356127008161266d565b825291830191908301906126ed565b979650505050505050565b60006020828403121561272c57600080fd5b81356001600160401b038082111561274357600080fd5b90830190610140828603121561275857600080fd5b6127606125f2565b61276983612682565b815261277760208401612682565b602082015261278860408401612682565b604082015261279960608401612682565b60608201526127aa60808401612682565b60808201526127bb60a08401612682565b60a08201526127cc60c08401612682565b60c08201526127dd60e08401612682565b60e08201526101006127f0818501612682565b90820152610120838101358381111561280857600080fd5b61281488828701612692565b918301919091525095945050505050565b6000806040838503121561283857600080fd5b50508035926020909101359150565b60006020828403121561285957600080fd5b81356125d58161266d565b600781106123ee576123ee6123c8565b600081518084526020808501945080840160005b8381101561232c5761289b878351612864565b9582019590820190600101612888565b60208152600082516101008060208501526128ca6101208501836124c3565b915060208501516040850152604085015160608501526060850151608085015263ffffffff60808601511660a085015260a085015161291160c086018263ffffffff169052565b5060c0850151848303601f190160e086015261292d8382612874565b92505060e08501516129428286018215159052565b5090949350505050565b600181811c9082168061296057607f821691505b60208210810361298057634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561299857600080fd5b815180151581146125d557600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156129d1576129d16129a8565b92915050565b600082601f8301126129e857600080fd5b6040516106c08082016001600160401b0381118382101715612a0c57612a0c6125dc565b60405283018185821115612a1f57600080fd5b845b82811015612a4c57805163ffffffff81168114612a3e5760008081fd5b825260209182019101612a21565b509195945050505050565b600082601f830112612a6857600080fd5b81516001600160401b03811115612a8157612a816125dc565b612a94601f8201601f191660200161263d565b818152846020838601011115612aa957600080fd5b612aba82602083016020870161229f565b949350505050565b80516007811061268d57600080fd5b600060208284031215612ae357600080fd5b81516001600160401b0380821115612afa57600080fd5b908301906107808286031215612b0f57600080fd5b612b1761261b565b82518152602083015160208201526040830151604082015260608301516060820152612b4686608085016129d7565b608082015261074083015182811115612b5e57600080fd5b612b6a87828601612a57565b60a083015250612b7d6107608401612ac2565b60c082015295945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612bb357612bb36129a8565b5060010190565b600060208284031215612bcc57600080fd5b5051919050565b600060208284031215612be557600080fd5b81516125d58161266d565b600060408284031215612c0257600080fd5b604080519081016001600160401b0381118282101715612c2457612c246125dc565b80604052508091508251612c378161266d565b8152602092830151920191909152919050565b600080600060c08486031215612c5f57600080fd5b612c698585612bf0565b9250612c788560408601612bf0565b9150612c878560808601612bf0565b90509250925092565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090612cc4908301866122fc565b8281036080840152612cd681866122fc565b91505061270f60a08301846123de565b6001600160a01b031690565b6000815480845260208085019450836000528060002060005b8381101561232c5781546001600160a01b031687529582019560019182019101612d0b565b6000815480845260208085019450836000528060002060005b8381101561232c57815487529582019560019182019101612d49565b600082825480855260208086019550808260051b840101856000528160002060005b848110156123bb57858303601f19018952612da28383612d30565b98840198925060019182019101612d87565b60c082526000612dc760c0840183612cf2565b6001602085830381870152612dde83838701612cf2565b92508583036040870152612df58360028701612cf2565b9250606086840381880152612e0d8460038801612d65565b9350608087850381890152612e258560048901612d65565b94506005870160a0898703818b0152868254612e45818a90815260200190565b600094855260208520995091505b80601f850110156130c257885460ff612e6e848284166123de565b612e7f898501828460081c166123de565b612e9160408501828460101c166123de565b612ea2888501828460181c166123de565b612eb287850182848c1c166123de565b612ec3858501828460281c166123de565b612ed560c08501828460301c166123de565b60e0612ee8818601838560381c166123de565b612efb6101008601838560401c166123de565b612f0e6101208601838560481c166123de565b612f216101408601838560501c166123de565b612f346101608601838560581c166123de565b612f46610180860183858c1c166123de565b612f596101a08601838560681c166123de565b612f6c6101c08601838560701c166123de565b612f7f6101e08601838560781c166123de565b612f91610200860183858b1c166123de565b612fa46102208601838560881c166123de565b612fb76102408601838560901c166123de565b612fca6102608601838560981c166123de565b612fdc61028086018385891c166123de565b612fef6102a08601838560a81c166123de565b6130026102c08601838560b01c166123de565b6130156102e08601838560b81c166123de565b6130286103008601838560c01c166123de565b61303b6103208601838560c81c166123de565b61304e6103408601838560d01c166123de565b6130616103608601838560d81c166123de565b61307361038086018385841c166123de565b506130876103a08501828460e81c166123de565b61309a6103c08501828460f01c166123de565b506130ac6103e084018260f81c6123de565b5097870197928601926104009190910190612e53565b975497808410156130e3576130da8260ff8b166123de565b92870192908601905b80841015613104576130fb8260ff8b60081c166123de565b92870192908601905b808410156131255761311c8260ff8b60101c166123de565b92870192908601905b808410156131465761313d8260ff8b60181c166123de565b92870192908601905b808410156131665761315d8260ff8b8a1c166123de565b92870192908601905b808410156131875761317e8260ff8b60281c166123de565b92870192908601905b808410156131a85761319f8260ff8b60301c166123de565b92870192908601905b808410156131c9576131c08260ff8b60381c166123de565b92870192908601905b808410156131ea576131e18260ff8b60401c166123de565b92870192908601905b8084101561320b576132028260ff8b60481c166123de565b92870192908601905b8084101561322c576132238260ff8b60501c166123de565b92870192908601905b8084101561324d576132448260ff8b60581c166123de565b92870192908601905b8084101561326d576132648260ff8b891c166123de565b92870192908601905b8084101561328e576132858260ff8b60681c166123de565b92870192908601905b808410156132af576132a68260ff8b60701c166123de565b92870192908601905b808410156132d0576132c78260ff8b60781c166123de565b92870192908601905b808410156132f0576132e78260ff8b881c166123de565b92870192908601905b80841015613311576133088260ff8b60881c166123de565b92870192908601905b80841015613332576133298260ff8b60901c166123de565b92870192908601905b808410156133535761334a8260ff8b60981c166123de565b92870192908601905b808410156133735761336a8260ff8b861c166123de565b92870192908601905b808410156133945761338b8260ff8b60a81c166123de565b92870192908601905b808410156133b5576133ac8260ff8b60b01c166123de565b92870192908601905b808410156133d6576133cd8260ff8b60b81c166123de565b92870192908601905b808410156133f7576133ee8260ff8b60c01c166123de565b92870192908601905b808410156134185761340f8260ff8b60c81c166123de565b92870192908601905b80841015613439576134308260ff8b60d01c166123de565b92870192908601905b8084101561345a576134518260ff8b60d81c166123de565b92870192908601905b8084101561347b576134728260ff8b60e01c166123de565b92870192908601905b8084101561349c576134938260ff8b60e81c166123de565b92870192908601905b808410156134bd576134b48260ff8b60f01c166123de565b92870192908601905b808410156134d7576134d2828a60f81c6123de565b908601905b509a9950505050505050505050565b6020815260006125d56020830184612db4565b8054600090600181811c908083168061351357607f831692505b6020808410820361353457634e487b7160e01b600052602260045260246000fd5b8388526020880182801561354f576001811461356557613590565b60ff198716825285151560051b82019750613590565b60008981526020902060005b8781101561358a57815484820152908601908401613571565b83019850505b5050505050505092915050565b60006101208084526135b1818501846134f9565b90506135c06001840154612ce6565b6135cd60208601826122ef565b506135db6002840154612ce6565b6135e860408601826122ef565b5083810360608501526135fe8160038501612d30565b905083810360808501526136158160048501612d30565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152612aba8160088501612db4565b805480835260008281526020808220940193909190825b82601f820110156138e257815460ff61367d88828416612864565b6020613690818a01838560081c16612864565b60406136a3818b01848660101c16612864565b60606136b6818c01858760181c16612864565b60806136c8818d018688871c16612864565b60a093506136dd848d01868860281c16612864565b60c06136f0818e01878960301c16612864565b60e0613703818f01888a60381c16612864565b6137156101008f01888a881c16612864565b6137286101208f01888a60481c16612864565b61373b6101408f01888a60501c16612864565b61374e6101608f01888a60581c16612864565b6137606101808f01888a871c16612864565b6137736101a08f01888a60681c16612864565b6137866101c08f01888a60701c16612864565b6137996101e08f01888a60781c16612864565b6137ab6102008f01888a861c16612864565b6137be6102208f01888a60881c16612864565b6137d16102408f01888a60901c16612864565b6137e46102608f01888a60981c16612864565b6137f66102808f01888a891c16612864565b6138096102a08f01888a60a81c16612864565b61381c6102c08f01888a60b01c16612864565b61382f6102e08f01888a60b81c16612864565b6138416103008f01888a851c16612864565b6138546103208f01888a60c81c16612864565b6138676103408f01888a60d01c16612864565b61387a6103608f01888a60d81c16612864565b61388c6103808f01888a841c16612864565b5050505050506138a56103a08901828460e81c16612864565b6138b86103c08901828460f01c16612864565b506138ca6103e088018260f81c612864565b50610400959095019460019190910190602001613662565b90549082811015613905576138fa8660ff8416612864565b602095909501946001015b828110156139285761391d8660ff8460081c16612864565b602095909501946001015b8281101561394b576139408660ff8460101c16612864565b602095909501946001015b8281101561396e576139638660ff8460181c16612864565b602095909501946001015b82811015613991576139868660ff8460201c16612864565b602095909501946001015b828110156139b4576139a98660ff8460281c16612864565b602095909501946001015b828110156139d7576139cc8660ff8460301c16612864565b602095909501946001015b828110156139fa576139ef8660ff8460381c16612864565b602095909501946001015b82811015613a1d57613a128660ff8460401c16612864565b602095909501946001015b82811015613a4057613a358660ff8460481c16612864565b602095909501946001015b82811015613a6357613a588660ff8460501c16612864565b602095909501946001015b82811015613a8657613a7b8660ff8460581c16612864565b602095909501946001015b82811015613aa957613a9e8660ff8460601c16612864565b602095909501946001015b82811015613acc57613ac18660ff8460681c16612864565b602095909501946001015b82811015613aef57613ae48660ff8460701c16612864565b602095909501946001015b82811015613b1257613b078660ff8460781c16612864565b602095909501946001015b82811015613b3557613b2a8660ff8460801c16612864565b602095909501946001015b82811015613b5857613b4d8660ff8460881c16612864565b602095909501946001015b82811015613b7b57613b708660ff8460901c16612864565b602095909501946001015b82811015613b9e57613b938660ff8460981c16612864565b602095909501946001015b82811015613bc157613bb68660ff8460a01c16612864565b602095909501946001015b82811015613be457613bd98660ff8460a81c16612864565b602095909501946001015b82811015613c0757613bfc8660ff8460b01c16612864565b602095909501946001015b82811015613c2a57613c1f8660ff8460b81c16612864565b602095909501946001015b82811015613c4d57613c428660ff8460c01c16612864565b602095909501946001015b82811015613c7057613c658660ff8460c81c16612864565b602095909501946001015b82811015613c9357613c888660ff8460d01c16612864565b602095909501946001015b82811015613cb657613cab8660ff8460d81c16612864565b602095909501946001015b82811015613cd957613cce8660ff8460e01c16612864565b602095909501946001015b82811015613cfc57613cf18660ff8460e81c16612864565b602095909501946001015b82811015613d1f57613d148660ff8460f01c16612864565b602095909501946001015b82811015613d3b57613d34868360f81c612864565b6020860195505b5093949350505050565b604081526000610100806040840152613d6261014084018661359d565b600e8601546060850152600f8601546080850152601086015460a0850152601186015463ffffffff80821660c087015260209190911c1660e0850152838103603f190182850152613db6816012880161364b565b915050613dc7601386015460ff1690565b15156101208401526020909201929092529291505056fea2646970667358221220cf5e79f3d8a1d4e20898ca1e0cfa8d72c1f92dbcb612b3cce31db99ed478bf8b64736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
