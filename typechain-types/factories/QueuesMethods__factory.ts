/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b50604051620043fd380380620043fd83398101604081905262000039916200052d565b80516101208201516001600055829190620000543362000203565b80518251146200006357600080fd5b60005b8251811015620000fd5781818151811062000085576200008562000666565b602002602001015160026000858481518110620000a657620000a662000666565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f5906200067c565b905062000066565b5050815180518392506004916200011a9183916020019062000255565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051620001f79260098501920190620002bf565b509050505050620006a4565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215620002ad579160200282015b82811115620002ad57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000276565b50620002bb92915062000368565b5090565b82805482825590600052602060002090600701600890048101928215620002ad5791602002820160005b838211156200032c57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002e9565b80156200035e5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200032c565b5050620002bb9291505b5b80821115620002bb576000815560010162000369565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003bb57620003bb6200037f565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ec57620003ec6200037f565b604052919050565b60006001600160401b038211156200041057620004106200037f565b5060051b60200190565b80516001600160a01b03811681146200043257600080fd5b919050565b600082601f8301126200044957600080fd5b81516020620004626200045c83620003f4565b620003c1565b82815260059290921b840181019181810190868411156200048257600080fd5b8286015b84811015620004a8576200049a816200041a565b835291830191830162000486565b509695505050505050565b600082601f830112620004c557600080fd5b81516020620004d86200045c83620003f4565b82815260059290921b84018101918181019086841115620004f857600080fd5b8286015b84811015620004a85780516001600160e01b0319811681146200051f5760008081fd5b8352918301918301620004fc565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b9083019061014082860312156200056e57600080fd5b6200057862000395565b8251828111156200058857600080fd5b620005968782860162000437565b825250620005a7602084016200041a565b6020820152620005ba604084016200041a565b6040820152620005cd606084016200041a565b6060820152620005e0608084016200041a565b6080820152620005f360a084016200041a565b60a08201526200060660c084016200041a565b60c08201526200061960e084016200041a565b60e08201526101006200062e8185016200041a565b9082015261012083810151838111156200064757600080fd5b6200065588828701620004b3565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200069d57634e487b7160e01b600052601160045260246000fd5b5060010190565b613d4980620006b46000396000f3fe6080604052600436106100e85760003560e01c8063af640d0f1161008a578063e3c5fc0411610059578063e3c5fc041461036e578063ec7bbea3146103c5578063f2fde38b146103e5578063ffd9f5521461040557600080fd5b8063af640d0f14610260578063d8de658714610284578063ddf0b00914610321578063e200c8571461034e57600080fd5b8063715018a6116100c6578063715018a6146101795780638da5cb5b1461018e578063982d64d4146101b65780639cce37c6146101c957600080fd5b80630f7921ed146100ed578063212049481461012a578063357d514214610157575b600080fd5b3480156100f957600080fd5b5061010d61010836600461246c565b610425565b60405161012198979695949392919061279f565b60405180910390f35b34801561013657600080fd5b5061014a61014536600461246c565b61091a565b60405161012191906127f5565b34801561016357600080fd5b50610177610172366004612a3e565b61097f565b005b34801561018557600080fd5b50610177610a2a565b34801561019a57600080fd5b506001546040516001600160a01b039091168152602001610121565b6101776101c4366004612aa2565b610a3e565b3480156101d557600080fd5b506102276101e4366004612ac4565b6001600160a01b031660009081526002602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff00000000000000000000000000000000000000000000000000000000938416815292909116602083015201610121565b34801561026c57600080fd5b5061027660035481565b604051908152602001610121565b34801561029057600080fd5b50600554600654600754600854600954600a54600b54600c546102cf976001600160a01b03908116978116968116958116948116938116928116911688565b604080516001600160a01b03998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e082015261010001610121565b34801561032d57600080fd5b5061034161033c36600461246c565b611407565b6040516101219190612ae1565b34801561035a57600080fd5b5061014a61036936600461246c565b61197d565b34801561037a57600080fd5b506103b061038936600461246c565b6000908152600e602052604090206012015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610121565b3480156103d157600080fd5b506101776103e0366004612aa2565b6119e0565b3480156103f157600080fd5b50610177610400366004612ac4565b611f7c565b34801561041157600080fd5b50610177610420366004612b93565b612026565b600e602052806000526040600020600091509050806000016040518061012001604052908160008201805461045990612cb2565b80601f016020809104026020016040519081016040528092919081815260200182805461048590612cb2565b80156104d25780601f106104a7576101008083540402835291602001916104d2565b820191906000526020600020905b8154815290600101906020018083116104b557829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561055357602002820191906000526020600020905b81548152602001906001019080831161053f575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156105ab57602002820191906000526020600020905b815481526020019060010190808311610597575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561063b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161061d575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561069d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161067f575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156106ff57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106e1575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107995760008481526020908190208301805460408051828502810185019091528181529283018282801561078557602002820191906000526020600020905b815481526020019060010190808311610771575b50505050508152602001906001019061072d565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108325760008481526020908190208301805460408051828502810185019091528181529283018282801561081e57602002820191906000526020600020905b81548152602001906001019080831161080a575b5050505050815260200190600101906107c6565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156108b957602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610897576108976125a1565b8152602060019283018181049485019490930390920291018084116108785790505b50505091909252505050905250600f820154601083015460118401546012909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b6000818152600e602090815260409182902060040180548351818402810184019094528084526060939283018282801561097357602002820191906000526020600020905b81548152602001906001019080831161095f575b50505050509050919050565b610987612141565b805182511461099557600080fd5b60005b8251811015610a25578181815181106109b3576109b3612d05565b6020026020010151600260008584815181106109d1576109d1612d05565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080610a1e90612d63565b9050610998565b505050565b610a32612141565b610a3c60006121b5565b565b600260005403610aaf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000908155828152600e602052604090206012015463ffffffff1615801590610afc57506000828152600e60205260409020601201546c01000000000000000000000000900460ff16155b8015610b6957506000828152600e6020526040902060100154158015610b3157506000828152600e60205260409020600f0154155b80610b6957506000828152600e60205260409020600f01544210801590610b6957506000828152600e60205260409020601001544211155b8015610c015750600a546040517fdadddaaf0000000000000000000000000000000000000000000000000000000081526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190612da6565b6001600160a01b0316145b8015610c4657506000828152600e6020526040902060120154610c3290640100000000900463ffffffff1642612dc3565b6000838152600e6020526040902060110154105b610c4f57600080fd5b600a546040517f30ace5ff000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906330ace5ff90602401600060405180830381865afa158015610cb2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cda91908101906130a3565b6000848152600e602052604090206012015481516060015191925063ffffffff68010000000000000000909104811691161015610d1657600080fd5b6000805b6000858152600e602081905260409091200154811015610d8d57826040015160800151600e6000878152602001908152602001600020600e018281548110610d6457610d64612d05565b906000526020600020015403610d7d5760019150610d8d565b610d8681612d63565b9050610d1a565b5080610d9857600080fd5b60005b6000858152600e6020526040902060030154811015610dff576000858152600e60205260409020600301805485919083908110610dda57610dda612d05565b906000526020600020015403610def57600080fd5b610df881612d63565b9050610d9b565b506000848152600e60209081526040808320600381018054600180820183559186528486200188905560049182018054918201815585529290932042920191909155600a5490517f894f39fc000000000000000000000000000000000000000000000000000000008152918201859052602482018690526001600160a01b03169063894f39fc906044016020604051808303816000875af1158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc91906131c4565b15610ed657600080fd5b6009546000858152600e60205260408082206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815291926001600160a01b03169163ccdac71a91610f339160040190815260200190565b602060405180830381865afa158015610f50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f749190612da6565b6008546040517fb3aa39b600000000000000000000000000000000000000000000000000000000815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610fe0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110049190613238565b6040805160018082528183019092529396509194509250600091906020808301908036833701905050905083602001518160008151811061104757611047612d05565b6020908102919091010152600b5484516001600160a01b039182169163c01f59c291161561107657600061107c565b85602001515b600b5487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d16156110b65760026110b9565b60035b6040518863ffffffff1660e01b81526004016110da9695949392919061327e565b6000604051808303818588803b1580156110f357600080fd5b505af1158015611107573d6000803e3d6000fd5b505050505082602001518160008151811061112457611124612d05565b6020908102919091010152600b5483516001600160a01b039182169163c01f59c2911615611153576000611159565b84602001515b600b5486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615611193576002611196565b60035b6040518863ffffffff1660e01b81526004016111b79695949392919061327e565b6000604051808303818588803b1580156111d057600080fd5b505af11580156111e4573d6000803e3d6000fd5b505050505081602001518160008151811061120157611201612d05565b6020908102919091010152600b5482516001600160a01b039182169163c01f59c2911615611230576000611236565b83602001515b600b5485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615611270576002611273565b60035b6040518863ffffffff1660e01b81526004016112949695949392919061327e565b6000604051808303818588803b1580156112ad57600080fd5b505af11580156112c1573d6000803e3d6000fd5b50505060008b8152600e60205260409020601281015460039091015463ffffffff909116900391506113c8905057600c5460008a8152600e60205260409081902090517f65913d770000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916365913d7791611348918d9190600401613c55565b600060405180830381600087803b15801561136257600080fd5b505af1158015611376573d6000803e3d6000fd5b50505060008a8152600e6020526040812061139592506003019061221f565b6000898152600e602052604081206113b29160049091019061221f565b6000898152600e60205260409020426011909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a45050600160005550505050505050565b61140f61223d565b6000828152600e602052604090819020815161024081019092528054829061012082019083908290829061144290612cb2565b80601f016020809104026020016040519081016040528092919081815260200182805461146e90612cb2565b80156114bb5780601f10611490576101008083540402835291602001916114bb565b820191906000526020600020905b81548152906001019060200180831161149e57829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561153c57602002820191906000526020600020905b815481526020019060010190808311611528575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561159457602002820191906000526020600020905b815481526020019060010190808311611580575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561162457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611606575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561168657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611668575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156116e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116ca575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156117825760008481526020908190208301805460408051828502810185019091528181529283018282801561176e57602002820191906000526020600020905b81548152602001906001019080831161175a575b505050505081526020019060010190611716565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561181b5760008481526020908190208301805460408051828502810185019091528181529283018282801561180757602002820191906000526020600020905b8154815260200190600101908083116117f3575b5050505050815260200190600101906117af565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156118a257602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611880576118806125a1565b8152602060019283018181049485019490930390920291018084116118615790505b505050505081525050815250508152602001600e820180548060200260200160405190810160405280929190818152602001828054801561190257602002820191906000526020600020905b8154815260200190600101908083116118ee575b5050509183525050600f8201546020820152601082015460408201526011820154606082015260129091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600e6020908152604091829020600301805483518184028101840190945280845260609392830182828015610973576020028201919060005260206000209081548152602001906001019080831161095f5750505050509050919050565b600260005403611a4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610aa6565b60026000908155600a546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b039091169063dadddaaf90602401602060405180830381865afa158015611ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad99190612da6565b90506001600160a01b0381163314611af057600080fd5b6000838152600e6020908152604080832060030180548251818502810185019093528083529192909190830182828015611b4957602002820191906000526020600020905b815481526020019060010190808311611b35575b5050506000878152600e6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611bab57602002820191906000526020600020905b815481526020019060010190808311611b97575b5050506000888152600e60205260408120939450611bcf936003019250905061221f565b6000858152600e60205260408120611bec9160049091019061221f565b815115611d1f576000805b8351811015611d125785848281518110611c1357611c13612d05565b602002602001015103611c77576000878152600e602052604090206012015460019250611c4e90640100000000900463ffffffff1642612dc3565b838281518110611c6057611c60612d05565b602002602001015110611c7257600080fd5b611d02565b6000878152600e602052604090208451600390910190859083908110611c9f57611c9f612d05565b602090810291909101810151825460018101845560009384528284200155888252600e9052604090208351600490910190849083908110611ce257611ce2612d05565b602090810291909101810151825460018101845560009384529190922001555b611d0b81612d63565b9050611bf7565b5080611d1d57600080fd5b505b600a546040517f894f39fc000000000000000000000000000000000000000000000000000000008152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dae91906131c4565b14611db857600080fd5b6008546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3f9190613238565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611e8057611e80612d05565b6020908102919091010152600b5482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015611ed1578160200160208202803683370190505b50875187906001600160a01b031615611eeb576002611eee565b60035b6040518763ffffffff1660e01b8152600401611f0f9695949392919061327e565b600060405180830381600087803b158015611f2957600080fd5b505af1158015611f3d573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a3505060016000555050505050565b611f84612141565b6001600160a01b03811661201a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610aa6565b612023816121b5565b50565b61202e612141565b8051805182916004916120489183916020909101906122a3565b506020828101516001830180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805483169184169190911790556101008501516008850180549092169216919091179055610120830151805161213b9260098501920190612320565b50505050565b6001546001600160a01b03163314610a3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610aa6565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b508054600082559060005260206000209081019061202391906123c3565b6040518061012001604052806122516123d8565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b828054828255906000526020600020908101928215612310579160200282015b8281111561231057825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039091161782556020909201916001909101906122c3565b5061231c9291506123c3565b5090565b828054828255906000526020600020906007016008900481019282156123105791602002820160005b8382111561238a57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302612349565b80156123ba5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261238a565b505061231c9291505b5b8082111561231c57600081556001016123c4565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016124676040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561247e57600080fd5b5035919050565b60005b838110156124a0578181015183820152602001612488565b50506000910152565b600081518084526124c1816020860160208601612485565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015612505578151875295820195908201906001016124e9565b509495945050505050565b600081518084526020808501945080840160005b838110156125055781516001600160a01b031687529582019590820190600101612524565b600082825180855260208086019550808260051b84010181860160005b8481101561259457601f198684030189526125828383516124d5565b98840198925090830190600101612566565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612607577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261262060c0850182612510565b9050602080840151858303828701526126398382612510565b925050604084015185830360408701526126538382612510565b9250506060840151858303606087015261266d8382612549565b925050608084015185830360808701526126878382612549565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156126d1576126bd8286516125d0565b9383019360019290920191908301906126aa565b509695505050505050565b600061012082518185526126f2828601826124a9565b915050602083015161270f60208601826001600160a01b03169052565b50604083015161272a60408601826001600160a01b03169052565b506060830151848203606086015261274282826124d5565b9150506080830151848203608086015261275c82826124d5565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152612795838261260b565b9695505050505050565b60006101008083526127b38184018c6126dc565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b60208152600061280860208301846124d5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156128625761286261280f565b60405290565b60405160e0810167ffffffffffffffff811182821017156128625761286261280f565b6040516080810167ffffffffffffffff811182821017156128625761286261280f565b60405160c0810167ffffffffffffffff811182821017156128625761286261280f565b604051601f8201601f1916810167ffffffffffffffff811182821017156128fa576128fa61280f565b604052919050565b600067ffffffffffffffff82111561291c5761291c61280f565b5060051b60200190565b6001600160a01b038116811461202357600080fd5b803561294681612926565b919050565b600082601f83011261295c57600080fd5b8135602061297161296c83612902565b6128d1565b82815260059290921b8401810191818101908684111561299057600080fd5b8286015b848110156126d15780356129a781612926565b8352918301918301612994565b600082601f8301126129c557600080fd5b813560206129d561296c83612902565b82815260059290921b840181019181810190868411156129f457600080fd5b8286015b848110156126d15780357fffffffff0000000000000000000000000000000000000000000000000000000081168114612a315760008081fd5b83529183019183016129f8565b60008060408385031215612a5157600080fd5b823567ffffffffffffffff80821115612a6957600080fd5b612a758683870161294b565b93506020850135915080821115612a8b57600080fd5b50612a98858286016129b4565b9150509250929050565b60008060408385031215612ab557600080fd5b50508035926020909101359150565b600060208284031215612ad657600080fd5b813561280881612926565b6020815260008251610120806020850152612b006101408501836126dc565b91506020850151601f19858403016040860152612b1d83826124d5565b9250506040850151606085015260608501516080850152608085015160a085015260a0850151612b5560c086018263ffffffff169052565b5060c085015163ffffffff811660e08601525060e0850151610100612b818187018363ffffffff169052565b90950151151593019290925250919050565b600060208284031215612ba557600080fd5b813567ffffffffffffffff80821115612bbd57600080fd5b908301906101408286031215612bd257600080fd5b612bda61283e565b823582811115612be957600080fd5b612bf58782860161294b565b825250612c046020840161293b565b6020820152612c156040840161293b565b6040820152612c266060840161293b565b6060820152612c376080840161293b565b6080820152612c4860a0840161293b565b60a0820152612c5960c0840161293b565b60c0820152612c6a60e0840161293b565b60e0820152610100612c7d81850161293b565b908201526101208381013583811115612c9557600080fd5b612ca1888287016129b4565b918301919091525095945050505050565b600181811c90821680612cc657607f821691505b602082108103612cff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d9457612d94612d34565b5060010190565b805161294681612926565b600060208284031215612db857600080fd5b815161280881612926565b81810381811115612dd657612dd6612d34565b92915050565b805163ffffffff8116811461294657600080fd5b8051801515811461294657600080fd5b6000610100808385031215612e1457600080fd5b6040519081019067ffffffffffffffff82118183101715612e3757612e3761280f565b8160405280925083519150612e4b82612926565b818152612e5a60208501612d9b565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c0820152612e9d60e08501612df0565b60e0820152505092915050565b600082601f830112612ebb57600080fd5b60405161090080820182811067ffffffffffffffff82111715612ee057612ee061280f565b60405283018185821115612ef357600080fd5b845b82811015612f1457612f0681612ddc565b825260209182019101612ef5565b509195945050505050565b600082601f830112612f3057600080fd5b815167ffffffffffffffff811115612f4a57612f4a61280f565b612f5d6020601f19601f840116016128d1565b818152846020838601011115612f7257600080fd5b612f83826020830160208701612485565b949350505050565b60006109c08284031215612f9e57600080fd5b612fa6612868565b90508151815260208201516020820152604082015160408201526060820151606082015260808201516080820152612fe18360a08401612eaa565b60a08201526109a082015167ffffffffffffffff81111561300157600080fd5b61300d84828501612f1f565b60c08301525092915050565b60006080828403121561302b57600080fd5b61303361288b565b9050815167ffffffffffffffff8082111561304d57600080fd5b61305985838601612f1f565b8352602084015191508082111561306f57600080fd5b5061307c84828501612f1f565b6020830152506040820151604082015261309860608301612df0565b606082015292915050565b6000602082840312156130b557600080fd5b815167ffffffffffffffff808211156130cd57600080fd5b908301908185036102008112156130e357600080fd5b6130eb61288b565b60c08212156130f957600080fd5b6131016128ae565b9150835161310e81612926565b80835250602084015160208301526040840151604083015261313260608501612ddc565b606083015261314360808501612ddc565b608083015261315460a08501612ddc565b60a08301528181526131698760c08601612e00565b60208201526101c084015191508282111561318357600080fd5b61318f87838601612f8b565b60408201526101e08401519150828211156131a957600080fd5b6131b587838601613019565b60608201529695505050505050565b6000602082840312156131d657600080fd5b5051919050565b6000604082840312156131ef57600080fd5b6040516040810181811067ffffffffffffffff821117156132125761321261280f565b8060405250809150825161322581612926565b8152602092830151920191909152919050565b600080600060c0848603121561324d57600080fd5b61325785856131dd565b925061326685604086016131dd565b915061327585608086016131dd565b90509250925092565b60006001600160a01b038089168352808816602084015280871660408401525060c060608301526132b260c08301866124d5565b82810360808401526132c481866124d5565b9150506132d460a08301846125d0565b979650505050505050565b8054600090600181811c90808316806132f957607f831692505b60208084108203613333577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8388526020880182801561334e5760018114613382576133ad565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b820197506133ad565b60008981526020902060005b878110156133a75781548482015290860190840161338e565b83019850505b5050505050505092915050565b6000815480845260208085019450836000528060002060005b83811015612505578154875295820195600191820191016133d3565b6000815480845260208085019450836000528060002060005b838110156125055781546001600160a01b031687529582019560019182019101613408565b600082825480855260208086019550808260051b840101856000528160002060005b8481101561259457601f1986840301895261346a83836133ba565b9884019892506001918201910161344f565b60c08252600061348f60c08401836133ef565b60016020858303818701526134a6838387016133ef565b925085830360408701526134bd83600287016133ef565b92506060868403818801526134d5846003880161342d565b93506080878503818901526134ed856004890161342d565b94506005870160a0898703818b015286825461350d818a90815260200190565b600094855260208520995091505b80601f8501101561378a57885460ff613536848284166125d0565b613547898501828460081c166125d0565b61355960408501828460101c166125d0565b61356a888501828460181c166125d0565b61357a87850182848c1c166125d0565b61358b858501828460281c166125d0565b61359d60c08501828460301c166125d0565b60e06135b0818601838560381c166125d0565b6135c36101008601838560401c166125d0565b6135d66101208601838560481c166125d0565b6135e96101408601838560501c166125d0565b6135fc6101608601838560581c166125d0565b61360e610180860183858c1c166125d0565b6136216101a08601838560681c166125d0565b6136346101c08601838560701c166125d0565b6136476101e08601838560781c166125d0565b613659610200860183858b1c166125d0565b61366c6102208601838560881c166125d0565b61367f6102408601838560901c166125d0565b6136926102608601838560981c166125d0565b6136a461028086018385891c166125d0565b6136b76102a08601838560a81c166125d0565b6136ca6102c08601838560b01c166125d0565b6136dd6102e08601838560b81c166125d0565b6136f06103008601838560c01c166125d0565b6137036103208601838560c81c166125d0565b6137166103408601838560d01c166125d0565b6137296103608601838560d81c166125d0565b61373b61038086018385841c166125d0565b5061374f6103a08501828460e81c166125d0565b6137626103c08501828460f01c166125d0565b506137746103e084018260f81c6125d0565b509787019792860192610400919091019061351b565b975497808410156137ab576137a28260ff8b166125d0565b92870192908601905b808410156137cc576137c38260ff8b60081c166125d0565b92870192908601905b808410156137ed576137e48260ff8b60101c166125d0565b92870192908601905b8084101561380e576138058260ff8b60181c166125d0565b92870192908601905b8084101561382e576138258260ff8b8a1c166125d0565b92870192908601905b8084101561384f576138468260ff8b60281c166125d0565b92870192908601905b80841015613870576138678260ff8b60301c166125d0565b92870192908601905b80841015613891576138888260ff8b60381c166125d0565b92870192908601905b808410156138b2576138a98260ff8b60401c166125d0565b92870192908601905b808410156138d3576138ca8260ff8b60481c166125d0565b92870192908601905b808410156138f4576138eb8260ff8b60501c166125d0565b92870192908601905b808410156139155761390c8260ff8b60581c166125d0565b92870192908601905b808410156139355761392c8260ff8b891c166125d0565b92870192908601905b808410156139565761394d8260ff8b60681c166125d0565b92870192908601905b808410156139775761396e8260ff8b60701c166125d0565b92870192908601905b808410156139985761398f8260ff8b60781c166125d0565b92870192908601905b808410156139b8576139af8260ff8b881c166125d0565b92870192908601905b808410156139d9576139d08260ff8b60881c166125d0565b92870192908601905b808410156139fa576139f18260ff8b60901c166125d0565b92870192908601905b80841015613a1b57613a128260ff8b60981c166125d0565b92870192908601905b80841015613a3b57613a328260ff8b861c166125d0565b92870192908601905b80841015613a5c57613a538260ff8b60a81c166125d0565b92870192908601905b80841015613a7d57613a748260ff8b60b01c166125d0565b92870192908601905b80841015613a9e57613a958260ff8b60b81c166125d0565b92870192908601905b80841015613abf57613ab68260ff8b60c01c166125d0565b92870192908601905b80841015613ae057613ad78260ff8b60c81c166125d0565b92870192908601905b80841015613b0157613af88260ff8b60d01c166125d0565b92870192908601905b80841015613b2257613b198260ff8b60d81c166125d0565b92870192908601905b80841015613b4357613b3a8260ff8b60e01c166125d0565b92870192908601905b80841015613b6457613b5b8260ff8b60e81c166125d0565b92870192908601905b80841015613b8557613b7c8260ff8b60f01c166125d0565b92870192908601905b80841015613b9f57613b9a828a60f81c6125d0565b908601905b509a9950505050505050505050565b6000610120808452613bc2818501846132df565b9050613bd860018401546001600160a01b031690565b6001600160a01b03908116602086015260028401541660408501528381036060850152613c0881600385016133ba565b90508381036080850152613c1f81600485016133ba565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152612f83816008850161347c565b828152604060208201526000610120806040840152613c78610160840185613bae565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848203016060850152613caf81600e87016133ba565b600f8601546080860152601086015460a0860152601186015460c0860152601286015463ffffffff80821660e0880152602082901c8116610100880152604082901c1684870152606081901c60ff161515610140870152909150509594505050505056fea2646970667358221220146eb016f80c69155a8ba00ed3fd4ee7485c8e6f238328fee2cd00fde007ef1b64736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
