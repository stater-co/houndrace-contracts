/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620032ed380380620032ed833981016040819052620000389162000399565b806200004433620000fe565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c083015180518493620000e3926008929101906200020d565b50505060c0810151620000f6906200014e565b5050620004bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200020957600a60008383815181106200017457620001746200047f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600a6000848481518110620001c457620001c46200047f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002018162000495565b905062000151565b5050565b82805482825590600052602060002090810192821562000265579160200282015b828111156200026557825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200022e565b506200027392915062000277565b5090565b5b8082111562000273576000815560010162000278565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620002c957620002c96200028e565b60405290565b80516001600160a01b0381168114620002e757600080fd5b919050565b600082601f830112620002fe57600080fd5b815160206001600160401b03808311156200031d576200031d6200028e565b8260051b604051601f19603f830116810181811084821117156200034557620003456200028e565b6040529384528581018301938381019250878511156200036457600080fd5b83870191505b848210156200038e576200037e82620002cf565b835291830191908301906200036a565b979650505050505050565b600060208284031215620003ac57600080fd5b81516001600160401b0380821115620003c457600080fd5b9083019060e08286031215620003d957600080fd5b620003e3620002a4565b620003ee83620002cf565b8152620003fe60208401620002cf565b60208201526200041160408401620002cf565b60408201526200042460608401620002cf565b60608201526200043760808401620002cf565b60808201526200044a60a08401620002cf565b60a082015260c0830151828111156200046257600080fd5b6200047087828601620002ec565b60c08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004b657634e487b7160e01b600052601160045260246000fd5b5060010190565b612e2080620004cd6000396000f3fe6080604052600436106100ae5760003560e01c80630f7921ed146100b7578063715018a6146100f65780638da5cb5b1461010b578063982d64d414610138578063af640d0f1461014b578063b3aa39b61461016f578063d63a8e111461018f578063d8de6587146101cf578063ddf0b00914610250578063e11523431461027d578063e200c8571461029d578063e8ee0e3b146102ca578063ec7bbea3146102ea578063f2fde38b1461030a57005b366100b557005b005b3480156100c357600080fd5b506100d76100d23660046120fc565b61032a565b6040516100ed9a9998979695949392919061230d565b60405180910390f35b34801561010257600080fd5b506100b56106f6565b34801561011757600080fd5b5061012061070a565b6040516001600160a01b0390911681526020016100ed565b6100b5610146366004612381565b610719565b34801561015757600080fd5b5061016160015481565b6040519081526020016100ed565b34801561017b57600080fd5b5061016161018a3660046120fc565b610dbd565b34801561019b57600080fd5b506101bf6101aa3660046123c8565b600a6020526000908152604090205460ff1681565b60405190151581526020016100ed565b3480156101db57600080fd5b5060025460035460045460055460065460075461020e956001600160a01b03908116958116948116938116928116911686565b604080516001600160a01b03978816815295871660208701529386169385019390935290841660608401528316608083015290911660a082015260c0016100ed565b34801561025c57600080fd5b5061027061026b3660046120fc565b610e7c565b6040516100ed91906123ec565b34801561028957600080fd5b506100b56102983660046120fc565b611339565b3480156102a957600080fd5b506102bd6102b83660046120fc565b611429565b6040516100ed91906124e5565b3480156102d657600080fd5b506100b56102e53660046125ee565b61148e565b3480156102f657600080fd5b506100b5610305366004612381565b611544565b34801561031657600080fd5b506100b56103253660046123c8565b611df2565b600960205260009081526040902080548190610345906126c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610371906126c0565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b505050505090806003015490806004015490806005015490806006015490806007015490806008016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561044a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161042c575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156104ac57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161048e575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561050e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104f0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156105a85760008481526020908190208301805460408051828502810185019091528181529283018282801561059457602002820191906000526020600020905b815481526020019060010190808311610580575b50505050508152602001906001019061053c565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156106415760008481526020908190208301805460408051828502810185019091528181529283018282801561062d57602002820191906000526020600020905b815481526020019060010190808311610619575b5050505050815260200190600101906105d5565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106875790505b50505091909252505050600e9091015463ffffffff80821691600160201b81049091169060ff600160401b909104168a565b6106fe611e68565b6107086000611ec7565b565b6000546001600160a01b031690565b6000828152600960205260409020600e015463ffffffff161580159061075857506000828152600960205260409020600e0154600160401b900460ff16155b80156107c5575060008281526009602052604090206006015415801561078d5750600082815260096020526040902060050154155b806107c5575060008281526009602052604090206005015442108015906107c557506000828152600960205260409020600601544211155b80156107e257506000828152600960205260409020600401543410155b8015610861575060035460405163dadddaaf60e01b81526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190612705565b6001600160a01b0316145b80156108a557506000828152600960205260409020600e015461089190600160201b900463ffffffff1642612738565b600083815260096020526040902060070154105b6108ae57600080fd5b60005b6000838152600960205260409020600101548110156109155760008381526009602052604090206001018054839190839081106108f0576108f061274f565b90600052602060002001540361090557600080fd5b61090e81612765565b90506108b1565b506000828152600960209081526040808320600180820180548083018255908652848620018690556002909101805491820181558452919092204291015560035490516373d1aa2760e01b8152600481018390526001600160a01b03909116906373d1aa2790602401600060405180830381600087803b15801561099857600080fd5b505af11580156109ac573d6000803e3d6000fd5b5050600354604051632253ce7f60e21b815260048101859052602481018690526001600160a01b03909116925063894f39fc91506044016020604051808303816000875af1158015610a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a26919061277e565b15610a3057600080fd5b60025460008381526009602052604080822060030154905163666d638d60e11b815291926001600160a01b03169163ccdac71a91610a749160040190815260200190565b602060405180830381865afa158015610a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab59190612705565b6040805160018082528183019092529192506000919060208083019080368337505050600085815260096020526040812060040154825192935091839190610aff57610aff61274f565b60209081029190910101526005546001600160a01b039081169063400f959f90841615610b2d576000610b49565b82600081518110610b4057610b4061274f565b60200260200101515b60055460408051600081526020810190915233916001600160a01b039081169188918890831615610b7b576002610b7e565b60035b6040518863ffffffff1660e01b8152600401610b9f96959493929190612797565b6000604051808303818588803b158015610bb857600080fd5b505af1158015610bcc573d6000803e3d6000fd5b5050506000868152600960205260409020600e81015460019091015463ffffffff90911690039150610d88905057600254600085815260096020526040908190206003015490516311a3439360e01b81526001600160a01b03909216916311a3439391610c3f9160040190815260200190565b600060405180830381600087803b158015610c5957600080fd5b505af1158015610c6d573d6000803e3d6000fd5b50506007546000878152600960205260409081902090516307e2dc6b60e31b81526001600160a01b039092169350633f16e3589250610cb491600890910190600401612abb565b600060405180830381600087803b158015610cce57600080fd5b505af1158015610ce2573d6000803e3d6000fd5b5050600754600087815260096020526040908190209051636348e0e360e11b81526001600160a01b03909216935063c691c1c69250610d25918890600401612b72565b600060405180830381600087803b158015610d3f57600080fd5b505af1158015610d53573d6000803e3d6000fd5b5050506000858152600960205260408120610d72925060010190611fcc565b6000848152600960205260409020426007909101555b6040513390849086907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450505050565b600081815260096020526040808220600480820154600e8301546002546003909401549451635ba52fdf60e11b8152928301949094529263ffffffff16916001600160a01b03169063b74a5fbe90602401600060405180830381865afa158015610e2b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e539190810190612cd2565b60600151610e619190612db0565b610e6b9190612dd2565b610e76906001612dd2565b92915050565b610e84611fea565b6000828152600960205260409081902081516101808101909252805482908290610ead906126c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed9906126c0565b8015610f265780601f10610efb57610100808354040283529160200191610f26565b820191906000526020600020905b815481529060010190602001808311610f0957829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f7e57602002820191906000526020600020905b815481526020019060010190808311610f6a575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610fd657602002820191906000526020600020905b815481526020019060010190808311610fc2575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561107a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161105c575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156110dc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110be575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561113e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611120575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111d8576000848152602090819020830180546040805182850281018501909152818152928301828280156111c457602002820191906000526020600020905b8154815260200190600101908083116111b0575b50505050508152602001906001019061116c565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112715760008481526020908190208301805460408051828502810185019091528181529283018282801561125d57602002820191906000526020600020905b815481526020019060010190808311611249575b505050505081526020019060010190611205565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156112f457602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116112b75790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b8204166040830152600160401b900460ff16151560609091015292915050565b611341611e68565b478111156113ae5760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6113b661070a565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506114265760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b60448201526064016113a5565b50565b60008181526009602090815260409182902060010180548351818402810184019094528084526060939283018282801561148257602002820191906000526020600020905b81548152602001906001019080831161146e575b50505050509050919050565b611496611e68565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054909316941693909317905560c08301518051849361153392600892910190612082565b509050506114268160c00151611f17565b6000828152600960205260408082208151610180810190925280548290829061156c906126c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611598906126c0565b80156115e55780601f106115ba576101008083540402835291602001916115e5565b820191906000526020600020905b8154815290600101906020018083116115c857829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561163d57602002820191906000526020600020905b815481526020019060010190808311611629575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561169557602002820191906000526020600020905b815481526020019060010190808311611681575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561173957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161171b575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561179b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161177d575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156117fd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117df575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156118975760008481526020908190208301805460408051828502810185019091528181529283018282801561188357602002820191906000526020600020905b81548152602001906001019080831161186f575b50505050508152602001906001019061182b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156119305760008481526020908190208301805460408051828502810185019091528181529283018282801561191c57602002820191906000526020600020905b815481526020019060010190808311611908575b5050505050815260200190600101906118c4565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156119b357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116119765790505b505050919092525050508152600e919091015463ffffffff8082166020840152600160201b820416604080840191909152600160401b90910460ff16151560609283015260025491830151905163666d638d60e11b815260048101919091529192506000916001600160a01b039091169063ccdac71a90602401602060405180830381865afa158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e9190612705565b6020808401516040808601516000898152600990945290832093945090929091611a9b9160010190611fcc565b6000868152600960205260408120611ab891600290910190611fcc565b815115611bd7576000805b8351811015611bca5786848281518110611adf57611adf61274f565b602002602001015103611b2f5761014086015160019250611b069063ffffffff1642612738565b838281518110611b1857611b1861274f565b602002602001015110611b2a57600080fd5b611bba565b60096000898152602001908152602001600020600101848281518110611b5757611b5761274f565b60209081029190910181015182546001810184556000938452828420015589825260099052604090208351600290910190849083908110611b9a57611b9a61274f565b602090810291909101810151825460018101845560009384529190922001555b611bc381612765565b9050611ac3565b5080611bd557600080fd5b505b600354604051632253ce7f60e21b8152600481018790526000602482015287916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4d919061277e565b14611c5757600080fd5b60035460405163dadddaaf60e01b8152600481018790526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc59190612705565b6040805160018082528183019092529192506000919060208083019080368337019050509050856080015181600081518110611d0357611d0361274f565b60209081029190910101526005546001600160a01b031663400f959f8184886000604051908082528060200260200182016040528015611d4d578160200160208202803683370190505b50866001600160a01b038c1615611d65576002611d68565b60035b6040518763ffffffff1660e01b8152600401611d8996959493929190612797565b600060405180830381600087803b158015611da357600080fd5b505af1158015611db7573d6000803e3d6000fd5b50506040518992508a91507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a35050505050505050565b611dfa611e68565b6001600160a01b038116611e5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016113a5565b61142681611ec7565b33611e7161070a565b6001600160a01b0316146107085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016113a5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8151811015611fc857600a6000838381518110611f3957611f3961274f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600a6000848481518110611f8657611f8661274f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055611fc181612765565b9050611f1a565b5050565b508054600082559060005260206000209081019061142691906120e7565b60405180610180016040528060608152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016120676040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b81526000602082018190526040820181905260609091015290565b8280548282559060005260206000209081019282156120d7579160200282015b828111156120d757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906120a2565b506120e39291506120e7565b5090565b5b808211156120e357600081556001016120e8565b60006020828403121561210e57600080fd5b5035919050565b60005b83811015612130578181015183820152602001612118565b8381111561213f576000848401525b50505050565b6000815180845261215d816020860160208601612115565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156121aa5781516001600160a01b031687529582019590820190600101612185565b509495945050505050565b600081518084526020808501945080840160005b838110156121aa578151875295820195908201906001016121c9565b600082825180855260208086019550808260051b84010181860160005b8481101561223057601f1986840301895261221e8383516121b5565b98840198925090830190600101612202565b5090979650505050505050565b6000815160c0845261225260c0850182612171565b90506020808401518583038287015261226b8382612171565b925050604084015185830360408701526122858382612171565b9250506060840151858303606087015261229f83826121e5565b925050608084015185830360808701526122b983826121e5565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561230257845163ffffffff1682529383019360019290920191908301906122dc565b509695505050505050565b60006101408083526123218184018e612145565b90508b60208401528a60408401528960608401528860808401528760a084015282810360c0840152612353818861223d565b63ffffffff96871660e085015294909516610100830152509015156101209091015298975050505050505050565b6000806040838503121561239457600080fd5b50508035926020909101359150565b6001600160a01b038116811461142657600080fd5b80356123c3816123a3565b919050565b6000602082840312156123da57600080fd5b81356123e5816123a3565b9392505050565b602081526000825161018080602085015261240b6101a0850183612145565b91506020850151601f198086850301604087015261242984836121b5565b9350604087015191508086850301606087015261244684836121b5565b935060608701516080870152608087015160a087015260a087015160c087015260c087015160e087015260e0870151915061010082818801528088015192505061012081878603018188015261249c858461223d565b945080880151925050506101406124ba8187018363ffffffff169052565b86015190506101606124d38682018363ffffffff169052565b90950151151593019290925250919050565b6020815260006123e560208301846121b5565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715612530576125306124f8565b60405290565b604051601f8201601f191681016001600160401b038111828210171561255e5761255e6124f8565b604052919050565b600082601f83011261257757600080fd5b813560206001600160401b03821115612592576125926124f8565b8160051b6125a1828201612536565b92835284810182019282810190878511156125bb57600080fd5b83870192505b848310156125e35782356125d4816123a3565b825291830191908301906125c1565b979650505050505050565b60006020828403121561260057600080fd5b81356001600160401b038082111561261757600080fd5b9083019060e0828603121561262b57600080fd5b61263361250e565b61263c836123b8565b815261264a602084016123b8565b602082015261265b604084016123b8565b604082015261266c606084016123b8565b606082015261267d608084016123b8565b608082015261268e60a084016123b8565b60a082015260c0830135828111156126a557600080fd5b6126b187828601612566565b60c08301525095945050505050565b600181811c908216806126d457607f821691505b6020821081036126f457634e487b7160e01b600052602260045260246000fd5b50919050565b80516123c3816123a3565b60006020828403121561271757600080fd5b81516123e5816123a3565b634e487b7160e01b600052601160045260246000fd5b60008282101561274a5761274a612722565b500390565b634e487b7160e01b600052603260045260246000fd5b60006001820161277757612777612722565b5060010190565b60006020828403121561279057600080fd5b5051919050565b6001600160a01b03878116825286811660208301528516604082015260c0606082018190526000906127cb908301866121b5565b82810360808401526127dd81866121b5565b91505060ff831660a0830152979650505050505050565b6000815480845260208085019450836000528060002060005b838110156121aa5781546001600160a01b03168752958201956001918201910161280d565b6000815480845260208085019450836000528060002060005b838110156121aa5781548752958201956001918201910161284b565b600081548084526020808501808196508360051b81019150856000528260002060005b858110156128b35782840389526128a18483612832565b9885019893506001918201910161288a565b5091979650505050505050565b60c0825260006128d360c08401836127f4565b60016020858303818701526128ea838387016127f4565b925060408684038188015261290284600288016127f4565b935060608785038189015261291a8560038901612867565b94506080888603818a01526129328660048a01612867565b95506005880160a08a8803818c0152878254612952818b90815260200190565b6000948552602085209a5091505b806007850110156129d057895463ffffffff8082168452818a1c81168a85015281891c81168985015281881c81168885015281871c81168785015281851c81168585015260c082811c8216908501525060e090811c90830152988801986008939093019261010090910190612960565b985498808410156129ed5763ffffffff8a16825292880192908701905b80841015612a095789881c63ffffffff16825292880192908701905b80841015612a255789871c63ffffffff16825292880192908701905b80841015612a415789861c63ffffffff16825292880192908701905b80841015612a5d5789851c63ffffffff16825292880192908701905b80841015612a795789831c63ffffffff16825292880192908701905b80841015612a975760c08a901c63ffffffff16825292880192908701905b80841015612aab5760e08a901c8252908701905b509b9a5050505050505050505050565b6020815260006123e560208301846128c0565b8054600090600181811c9080831680612ae857607f831692505b60208084108203612b0957634e487b7160e01b600052602260045260246000fd5b83885260208801828015612b245760018114612b3a57612b65565b60ff198716825285151560051b82019750612b65565b60008981526020902060005b87811015612b5f57815484820152908601908401612b46565b83019850505b5050505050505092915050565b604081526000610180806040840152612b8f6101c0840186612ace565b603f1980858303016060860152612ba98260018901612832565b915080858303016080860152612bc28260028901612832565b9150600387015460a0860152600487015460c0860152600587015460e086015260068701546101008601526007870154610120860152808583030161014086015250612c1181600888016128c0565b600e87015463ffffffff808216610160880152602082901c1684870152604081901c60ff1615156101a087015290915050602093909301939093525092915050565b600082601f830112612c6457600080fd5b81516001600160401b03811115612c7d57612c7d6124f8565b612c90601f8201601f1916602001612536565b818152846020838601011115612ca557600080fd5b612cb6826020830160208701612115565b949350505050565b805163ffffffff811681146123c357600080fd5b600060208284031215612ce457600080fd5b81516001600160401b0380821115612cfb57600080fd5b9083019060e08286031215612d0f57600080fd5b612d1761250e565b825182811115612d2657600080fd5b612d3287828601612c53565b825250602083015182811115612d4757600080fd5b612d5387828601612c53565b602083015250612d65604084016126fa565b604082015260608301516060820152612d8060808401612cbe565b6080820152612d9160a08401612cbe565b60a0820152612da260c08401612cbe565b60c082015295945050505050565b600082612dcd57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612de557612de5612722565b50019056fea26469706673582212209c7ebbde8279a9225705f6a9dba849a7053c4dbece3084ad6cd259090a5279fe64736f6c634300080f0033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
