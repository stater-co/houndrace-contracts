/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b50604051620047e9380380620047e98339810160408190526200003991620006ec565b80516101208201516001600055829190620000543362000282565b80518251146200006357600080fd5b60005b82518110156200017c5760005b82828151811062000088576200008862000825565b602002602001015151811015620001685760026000858481518110620000b257620000b262000825565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ef57620000ef62000825565b602002602001015182815181106200010b576200010b62000825565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c9190910291909117905562000160816200083b565b905062000073565b5062000174816200083b565b905062000066565b5050815180518392506004916200019991839160200190620002d4565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e08501516007850180548316918416919091179055610100850151600885018054909216921691909117905561012083015180516200027692600985019201906200033e565b50905050505062000863565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280548282559060005260206000209081019282156200032c579160200282015b828111156200032c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002f5565b506200033a9291506200039e565b5090565b82805482825590600052602060002090810192821562000390579160200282015b828111156200039057825180516200037f918491602090910190620003b5565b50916020019190600101906200035f565b506200033a92915062000463565b5b808211156200033a57600081556001016200039f565b828054828255906000526020600020906007016008900481019282156200032c5791602002820160005b838211156200042257835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003df565b8015620004545782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000422565b50506200033a9291506200039e565b808211156200033a5760006200047a828262000484565b5060010162000463565b508054600082556007016008900490600052602060002090810190620004ab91906200039e565b50565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620004ea57620004ea620004ae565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200051b576200051b620004ae565b604052919050565b60006001600160401b038211156200053f576200053f620004ae565b5060051b60200190565b80516001600160a01b03811681146200056157600080fd5b919050565b600082601f8301126200057857600080fd5b81516020620005916200058b8362000523565b620004f0565b82815260059290921b84018101918181019086841115620005b157600080fd5b8286015b84811015620005d757620005c98162000549565b8352918301918301620005b5565b509695505050505050565b600082601f830112620005f457600080fd5b81516020620006076200058b8362000523565b828152600592831b85018201928282019190878511156200062757600080fd5b8387015b85811015620006df5780516001600160401b038111156200064c5760008081fd5b8801603f81018a136200065f5760008081fd5b858101516040620006746200058b8362000523565b82815291851b8301810191888101908d841115620006925760008081fd5b938201935b83851015620006cd57845192506001600160e01b031983168314620006bc5760008081fd5b828252938901939089019062000697565b8852505050938501935084016200062b565b5090979650505050505050565b600060208284031215620006ff57600080fd5b81516001600160401b03808211156200071757600080fd5b9083019061014082860312156200072d57600080fd5b62000737620004c4565b8251828111156200074757600080fd5b620007558782860162000566565b825250620007666020840162000549565b6020820152620007796040840162000549565b60408201526200078c6060840162000549565b60608201526200079f6080840162000549565b6080820152620007b260a0840162000549565b60a0820152620007c560c0840162000549565b60c0820152620007d860e0840162000549565b60e0820152610100620007ed81850162000549565b9082015261012083810151838111156200080657600080fd5b6200081488828701620005e2565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200085c57634e487b7160e01b600052601160045260246000fd5b5060010190565b613f7680620008736000396000f3fe6080604052600436106100dd5760003560e01c8063af640d0f1161007f578063e200c85711610059578063e200c857146102fd578063e3c5fc041461031d578063ec7bbea314610374578063f2fde38b1461039457600080fd5b8063af640d0f1461020f578063d8de658714610233578063ddf0b009146102d057600080fd5b80635b19e294116100bb5780635b19e2941461016e578063715018a6146101bf5780638da5cb5b146101d4578063982d64d4146101fc57600080fd5b80630f7921ed146100e2578063212049481461011f57806324e7c2c61461014c575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461265b565b6103b4565b60405161011698979695949392919061298e565b60405180910390f35b34801561012b57600080fd5b5061013f61013a36600461265b565b6108a9565b60405161011691906129e4565b34801561015857600080fd5b5061016c610167366004612ca9565b61090e565b005b34801561017a57600080fd5b5061018e610189366004612dc8565b610a3a565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610116565b3480156101cb57600080fd5b5061016c610a80565b3480156101e057600080fd5b506001546040516001600160a01b039091168152602001610116565b61016c61020a366004612df4565b610a94565b34801561021b57600080fd5b5061022560035481565b604051908152602001610116565b34801561023f57600080fd5b50600554600654600754600854600954600a54600b54600c5461027e976001600160a01b03908116978116968116958116948116938116928116911688565b604080516001600160a01b03998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e082015261010001610116565b3480156102dc57600080fd5b506102f06102eb36600461265b565b61145d565b6040516101169190612e16565b34801561030957600080fd5b5061013f61031836600461265b565b6119d3565b34801561032957600080fd5b5061035f61033836600461265b565b6000908152600e602052604090206012015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610116565b34801561038057600080fd5b5061016c61038f366004612df4565b611a36565b3480156103a057600080fd5b5061016c6103af366004612ec8565b611fd2565b600e60205280600052604060002060009150905080600001604051806101200160405290816000820180546103e890612ee5565b80601f016020809104026020016040519081016040528092919081815260200182805461041490612ee5565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b505050918352505060018201546001600160a01b03908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156104e257602002820191906000526020600020905b8154815260200190600101908083116104ce575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561053a57602002820191906000526020600020905b815481526020019060010190808311610526575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156105ca57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ac575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561062c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161060e575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561068e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610670575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107285760008481526020908190208301805460408051828502810185019091528181529283018282801561071457602002820191906000526020600020905b815481526020019060010190808311610700575b5050505050815260200190600101906106bc565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107c1576000848152602090819020830180546040805182850281018501909152818152928301828280156107ad57602002820191906000526020600020905b815481526020019060010190808311610799575b505050505081526020019060010190610755565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561084857602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561082657610826612790565b8152602060019283018181049485019490930390920291018084116108075790505b50505091909252505050905250600f820154601083015460118401546012909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b6000818152600e602090815260409182902060040180548351818402810184019094528084526060939283018282801561090257602002820191906000526020600020905b8154815260200190600101908083116108ee575b50505050509050919050565b610916612079565b80518051829160049161093091839160209091019061236f565b506020828101516001830180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051610a2392600985019201906123ec565b50508151610120830151610a3792506120ed565b50565b60026020528160005260406000208181548110610a5657600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b610a88612079565b610a926000612305565b565b600260005403610b05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000908155828152600e602052604090206012015463ffffffff1615801590610b5257506000828152600e60205260409020601201546c01000000000000000000000000900460ff16155b8015610bbf57506000828152600e6020526040902060100154158015610b8757506000828152600e60205260409020600f0154155b80610bbf57506000828152600e60205260409020600f01544210801590610bbf57506000828152600e60205260409020601001544211155b8015610c575750600a546040517fdadddaaf0000000000000000000000000000000000000000000000000000000081526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4c9190612f43565b6001600160a01b0316145b8015610c9c57506000828152600e6020526040902060120154610c8890640100000000900463ffffffff1642612f8f565b6000838152600e6020526040902060110154105b610ca557600080fd5b600a546040517f30ace5ff000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906330ace5ff90602401600060405180830381865afa158015610d08573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d30919081019061326f565b6000848152600e602052604090206012015481516060015191925063ffffffff68010000000000000000909104811691161015610d6c57600080fd5b6000805b6000858152600e602081905260409091200154811015610de357826040015160800151600e6000878152602001908152602001600020600e018281548110610dba57610dba613390565b906000526020600020015403610dd35760019150610de3565b610ddc816133bf565b9050610d70565b5080610dee57600080fd5b60005b6000858152600e6020526040902060030154811015610e55576000858152600e60205260409020600301805485919083908110610e3057610e30613390565b906000526020600020015403610e4557600080fd5b610e4e816133bf565b9050610df1565b506000848152600e60209081526040808320600381018054600180820183559186528486200188905560049182018054918201815585529290932042920191909155600a5490517f894f39fc000000000000000000000000000000000000000000000000000000008152918201859052602482018690526001600160a01b03169063894f39fc906044016020604051808303816000875af1158015610efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2291906133f7565b15610f2c57600080fd5b6009546000858152600e60205260408082206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815291926001600160a01b03169163ccdac71a91610f899160040190815260200190565b602060405180830381865afa158015610fa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fca9190612f43565b6008546040517fb3aa39b600000000000000000000000000000000000000000000000000000000815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a919061346b565b6040805160018082528183019092529396509194509250600091906020808301908036833701905050905083602001518160008151811061109d5761109d613390565b6020908102919091010152600b5484516001600160a01b039182169163c01f59c29116156110cc5760006110d2565b85602001515b600b5487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561110c57600261110f565b60035b6040518863ffffffff1660e01b8152600401611130969594939291906134b1565b6000604051808303818588803b15801561114957600080fd5b505af115801561115d573d6000803e3d6000fd5b505050505082602001518160008151811061117a5761117a613390565b6020908102919091010152600b5483516001600160a01b039182169163c01f59c29116156111a95760006111af565b84602001515b600b5486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d16156111e95760026111ec565b60035b6040518863ffffffff1660e01b815260040161120d969594939291906134b1565b6000604051808303818588803b15801561122657600080fd5b505af115801561123a573d6000803e3d6000fd5b505050505081602001518160008151811061125757611257613390565b6020908102919091010152600b5482516001600160a01b039182169163c01f59c291161561128657600061128c565b83602001515b600b5485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d16156112c65760026112c9565b60035b6040518863ffffffff1660e01b81526004016112ea969594939291906134b1565b6000604051808303818588803b15801561130357600080fd5b505af1158015611317573d6000803e3d6000fd5b50505060008b8152600e60205260409020601281015460039091015463ffffffff9091169003915061141e905057600c5460008a8152600e60205260409081902090517f65913d770000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916365913d779161139e918d9190600401613e82565b600060405180830381600087803b1580156113b857600080fd5b505af11580156113cc573d6000803e3d6000fd5b50505060008a8152600e602052604081206113eb925060030190612445565b6000898152600e6020526040812061140891600490910190612445565b6000898152600e60205260409020426011909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a45050600160005550505050505050565b611465612463565b6000828152600e602052604090819020815161024081019092528054829061012082019083908290829061149890612ee5565b80601f01602080910402602001604051908101604052809291908181526020018280546114c490612ee5565b80156115115780601f106114e657610100808354040283529160200191611511565b820191906000526020600020905b8154815290600101906020018083116114f457829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561159257602002820191906000526020600020905b81548152602001906001019080831161157e575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156115ea57602002820191906000526020600020905b8154815260200190600101908083116115d6575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561167a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161165c575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156116dc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116be575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561173e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611720575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156117d8576000848152602090819020830180546040805182850281018501909152818152928301828280156117c457602002820191906000526020600020905b8154815260200190600101908083116117b0575b50505050508152602001906001019061176c565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156118715760008481526020908190208301805460408051828502810185019091528181529283018282801561185d57602002820191906000526020600020905b815481526020019060010190808311611849575b505050505081526020019060010190611805565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156118f857602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156118d6576118d6612790565b8152602060019283018181049485019490930390920291018084116118b75790505b505050505081525050815250508152602001600e820180548060200260200160405190810160405280929190818152602001828054801561195857602002820191906000526020600020905b815481526020019060010190808311611944575b5050509183525050600f8201546020820152601082015460408201526011820154606082015260129091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600e602090815260409182902060030180548351818402810184019094528084526060939283018282801561090257602002820191906000526020600020908154815260200190600101908083116108ee5750505050509050919050565b600260005403611aa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610afc565b60026000908155600a546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b039091169063dadddaaf90602401602060405180830381865afa158015611b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2f9190612f43565b90506001600160a01b0381163314611b4657600080fd5b6000838152600e6020908152604080832060030180548251818502810185019093528083529192909190830182828015611b9f57602002820191906000526020600020905b815481526020019060010190808311611b8b575b5050506000878152600e6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611c0157602002820191906000526020600020905b815481526020019060010190808311611bed575b5050506000888152600e60205260408120939450611c259360030192509050612445565b6000858152600e60205260408120611c4291600490910190612445565b815115611d75576000805b8351811015611d685785848281518110611c6957611c69613390565b602002602001015103611ccd576000878152600e602052604090206012015460019250611ca490640100000000900463ffffffff1642612f8f565b838281518110611cb657611cb6613390565b602002602001015110611cc857600080fd5b611d58565b6000878152600e602052604090208451600390910190859083908110611cf557611cf5613390565b602090810291909101810151825460018101845560009384528284200155888252600e9052604090208351600490910190849083908110611d3857611d38613390565b602090810291909101810151825460018101845560009384529190922001555b611d61816133bf565b9050611c4d565b5080611d7357600080fd5b505b600a546040517f894f39fc000000000000000000000000000000000000000000000000000000008152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0491906133f7565b14611e0e57600080fd5b6008546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e95919061346b565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611ed657611ed6613390565b6020908102919091010152600b5482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015611f27578160200160208202803683370190505b50875187906001600160a01b031615611f41576002611f44565b60035b6040518763ffffffff1660e01b8152600401611f65969594939291906134b1565b600060405180830381600087803b158015611f7f57600080fd5b505af1158015611f93573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a3505060016000555050505050565b611fda612079565b6001600160a01b038116612070576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610afc565b610a3781612305565b6001546001600160a01b03163314610a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610afc565b80518251146120fb57600080fd5b60005b82518110156123005760005b82828151811061211c5761211c613390565b6020026020010151518110156122ef576002600085848151811061214257612142613390565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002080549050811061222c576002600085848151811061218a5761218a613390565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208383815181106121c4576121c4613390565b602002602001015182815181106121dd576121dd613390565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556122df565b82828151811061223e5761223e613390565b6020026020010151818151811061225757612257613390565b60200260200101516002600086858151811061227557612275613390565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002082815481106122ae576122ae613390565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b6122e8816133bf565b905061210a565b506122f9816133bf565b90506120fe565b505050565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280548282559060005260206000209081019282156123dc579160200282015b828111156123dc57825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0390911617825560209092019160019091019061238f565b506123e89291506124c9565b5090565b828054828255906000526020600020908101928215612439579160200282015b8281111561243957825180516124299184916020909101906124de565b509160200191906001019061240c565b506123e8929150612585565b5080546000825590600052602060002090810190610a3791906124c9565b6040518061012001604052806124776125a2565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b5b808211156123e857600081556001016124ca565b828054828255906000526020600020906007016008900481019282156123dc5791602002820160005b8382111561254857835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302612507565b80156125785782816101000a81549063ffffffff0219169055600401602081600301049283019260010302612548565b50506123e89291506124c9565b808211156123e85760006125998282612636565b50600101612585565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016126316040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b508054600082556007016008900490600052602060002090810190610a3791906124c9565b60006020828403121561266d57600080fd5b5035919050565b60005b8381101561268f578181015183820152602001612677565b50506000910152565b600081518084526126b0816020860160208601612674565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156126f4578151875295820195908201906001016126d8565b509495945050505050565b600081518084526020808501945080840160005b838110156126f45781516001600160a01b031687529582019590820190600101612713565b600082825180855260208086019550808260051b84010181860160005b8481101561278357601f198684030189526127718383516126c4565b98840198925090830190600101612755565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106127f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261280f60c08501826126ff565b90506020808401518583038287015261282883826126ff565b9250506040840151858303604087015261284283826126ff565b9250506060840151858303606087015261285c8382612738565b925050608084015185830360808701526128768382612738565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156128c0576128ac8286516127bf565b938301936001929092019190830190612899565b509695505050505050565b600061012082518185526128e182860182612698565b91505060208301516128fe60208601826001600160a01b03169052565b50604083015161291960408601826001600160a01b03169052565b506060830151848203606086015261293182826126c4565b9150506080830151848203608086015261294b82826126c4565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261298483826127fa565b9695505050505050565b60006101008083526129a28184018c6128cb565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020815260006129f760208301846126c4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612a5157612a516129fe565b60405290565b60405160e0810167ffffffffffffffff81118282101715612a5157612a516129fe565b6040516080810167ffffffffffffffff81118282101715612a5157612a516129fe565b60405160c0810167ffffffffffffffff81118282101715612a5157612a516129fe565b604051601f8201601f1916810167ffffffffffffffff81118282101715612ae957612ae96129fe565b604052919050565b600067ffffffffffffffff821115612b0b57612b0b6129fe565b5060051b60200190565b6001600160a01b0381168114610a3757600080fd5b8035612b3581612b15565b919050565b600082601f830112612b4b57600080fd5b81356020612b60612b5b83612af1565b612ac0565b82815260059290921b84018101918181019086841115612b7f57600080fd5b8286015b848110156128c0578035612b9681612b15565b8352918301918301612b83565b600082601f830112612bb457600080fd5b81356020612bc4612b5b83612af1565b828152600592831b8501820192828201919087851115612be357600080fd5b8387015b8581101561278357803567ffffffffffffffff811115612c075760008081fd5b8801603f81018a13612c195760008081fd5b858101356040612c2b612b5b83612af1565b82815291851b8301810191888101908d841115612c485760008081fd5b938201935b83851015612c9857843592507fffffffff0000000000000000000000000000000000000000000000000000000083168314612c885760008081fd5b8282529389019390890190612c4d565b885250505093850193508401612be7565b600060208284031215612cbb57600080fd5b813567ffffffffffffffff80821115612cd357600080fd5b908301906101408286031215612ce857600080fd5b612cf0612a2d565b823582811115612cff57600080fd5b612d0b87828601612b3a565b825250612d1a60208401612b2a565b6020820152612d2b60408401612b2a565b6040820152612d3c60608401612b2a565b6060820152612d4d60808401612b2a565b6080820152612d5e60a08401612b2a565b60a0820152612d6f60c08401612b2a565b60c0820152612d8060e08401612b2a565b60e0820152610100612d93818501612b2a565b908201526101208381013583811115612dab57600080fd5b612db788828701612ba3565b918301919091525095945050505050565b60008060408385031215612ddb57600080fd5b8235612de681612b15565b946020939093013593505050565b60008060408385031215612e0757600080fd5b50508035926020909101359150565b6020815260008251610120806020850152612e356101408501836128cb565b91506020850151601f19858403016040860152612e5283826126c4565b9250506040850151606085015260608501516080850152608085015160a085015260a0850151612e8a60c086018263ffffffff169052565b5060c085015163ffffffff811660e08601525060e0850151610100612eb68187018363ffffffff169052565b90950151151593019290925250919050565b600060208284031215612eda57600080fd5b81356129f781612b15565b600181811c90821680612ef957607f821691505b602082108103612f32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8051612b3581612b15565b600060208284031215612f5557600080fd5b81516129f781612b15565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612fa257612fa2612f60565b92915050565b805163ffffffff81168114612b3557600080fd5b80518015158114612b3557600080fd5b6000610100808385031215612fe057600080fd5b6040519081019067ffffffffffffffff82118183101715613003576130036129fe565b816040528092508351915061301782612b15565b81815261302660208501612f38565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015261306960e08501612fbc565b60e0820152505092915050565b600082601f83011261308757600080fd5b60405161090080820182811067ffffffffffffffff821117156130ac576130ac6129fe565b604052830181858211156130bf57600080fd5b845b828110156130e0576130d281612fa8565b8252602091820191016130c1565b509195945050505050565b600082601f8301126130fc57600080fd5b815167ffffffffffffffff811115613116576131166129fe565b6131296020601f19601f84011601612ac0565b81815284602083860101111561313e57600080fd5b61314f826020830160208701612674565b949350505050565b60006109c0828403121561316a57600080fd5b613172612a57565b905081518152602082015160208201526040820151604082015260608201516060820152608082015160808201526131ad8360a08401613076565b60a08201526109a082015167ffffffffffffffff8111156131cd57600080fd5b6131d9848285016130eb565b60c08301525092915050565b6000608082840312156131f757600080fd5b6131ff612a7a565b9050815167ffffffffffffffff8082111561321957600080fd5b613225858386016130eb565b8352602084015191508082111561323b57600080fd5b50613248848285016130eb565b6020830152506040820151604082015261326460608301612fbc565b606082015292915050565b60006020828403121561328157600080fd5b815167ffffffffffffffff8082111561329957600080fd5b908301908185036102008112156132af57600080fd5b6132b7612a7a565b60c08212156132c557600080fd5b6132cd612a9d565b915083516132da81612b15565b8083525060208401516020830152604084015160408301526132fe60608501612fa8565b606083015261330f60808501612fa8565b608083015261332060a08501612fa8565b60a08301528181526133358760c08601612fcc565b60208201526101c084015191508282111561334f57600080fd5b61335b87838601613157565b60408201526101e084015191508282111561337557600080fd5b613381878386016131e5565b60608201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036133f0576133f0612f60565b5060010190565b60006020828403121561340957600080fd5b5051919050565b60006040828403121561342257600080fd5b6040516040810181811067ffffffffffffffff82111715613445576134456129fe565b8060405250809150825161345881612b15565b8152602092830151920191909152919050565b600080600060c0848603121561348057600080fd5b61348a8585613410565b92506134998560408601613410565b91506134a88560808601613410565b90509250925092565b60006001600160a01b038089168352808816602084015280871660408401525060c060608301526134e560c08301866126c4565b82810360808401526134f781866126c4565b91505061350760a08301846127bf565b979650505050505050565b8054600090600181811c908083168061352c57607f831692505b60208084108203613566577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8388526020880182801561358157600181146135b5576135e0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b820197506135e0565b60008981526020902060005b878110156135da578154848201529086019084016135c1565b83019850505b5050505050505092915050565b6000815480845260208085019450836000528060002060005b838110156126f457815487529582019560019182019101613606565b6000815480845260208085019450836000528060002060005b838110156126f45781546001600160a01b03168752958201956001918201910161363b565b6000815480845260208085019450848260051b8601856000528260002060005b8581101561278357838303895261369783836135ed565b98850198925060019182019101613680565b60c0825260006136bc60c0840183613622565b60016020858303818701526136d383838701613622565b925085830360408701526136ea8360028701613622565b92506060868403818801526137028460038801613660565b935060808785038189015261371a8560048901613660565b94506005870160a0898703818b015286825461373a818a90815260200190565b600094855260208520995091505b80601f850110156139b757885460ff613763848284166127bf565b613774898501828460081c166127bf565b61378660408501828460101c166127bf565b613797888501828460181c166127bf565b6137a787850182848c1c166127bf565b6137b8858501828460281c166127bf565b6137ca60c08501828460301c166127bf565b60e06137dd818601838560381c166127bf565b6137f06101008601838560401c166127bf565b6138036101208601838560481c166127bf565b6138166101408601838560501c166127bf565b6138296101608601838560581c166127bf565b61383b610180860183858c1c166127bf565b61384e6101a08601838560681c166127bf565b6138616101c08601838560701c166127bf565b6138746101e08601838560781c166127bf565b613886610200860183858b1c166127bf565b6138996102208601838560881c166127bf565b6138ac6102408601838560901c166127bf565b6138bf6102608601838560981c166127bf565b6138d161028086018385891c166127bf565b6138e46102a08601838560a81c166127bf565b6138f76102c08601838560b01c166127bf565b61390a6102e08601838560b81c166127bf565b61391d6103008601838560c01c166127bf565b6139306103208601838560c81c166127bf565b6139436103408601838560d01c166127bf565b6139566103608601838560d81c166127bf565b61396861038086018385841c166127bf565b5061397c6103a08501828460e81c166127bf565b61398f6103c08501828460f01c166127bf565b506139a16103e084018260f81c6127bf565b5097870197928601926104009190910190613748565b975497808410156139d8576139cf8260ff8b166127bf565b92870192908601905b808410156139f9576139f08260ff8b60081c166127bf565b92870192908601905b80841015613a1a57613a118260ff8b60101c166127bf565b92870192908601905b80841015613a3b57613a328260ff8b60181c166127bf565b92870192908601905b80841015613a5b57613a528260ff8b8a1c166127bf565b92870192908601905b80841015613a7c57613a738260ff8b60281c166127bf565b92870192908601905b80841015613a9d57613a948260ff8b60301c166127bf565b92870192908601905b80841015613abe57613ab58260ff8b60381c166127bf565b92870192908601905b80841015613adf57613ad68260ff8b60401c166127bf565b92870192908601905b80841015613b0057613af78260ff8b60481c166127bf565b92870192908601905b80841015613b2157613b188260ff8b60501c166127bf565b92870192908601905b80841015613b4257613b398260ff8b60581c166127bf565b92870192908601905b80841015613b6257613b598260ff8b891c166127bf565b92870192908601905b80841015613b8357613b7a8260ff8b60681c166127bf565b92870192908601905b80841015613ba457613b9b8260ff8b60701c166127bf565b92870192908601905b80841015613bc557613bbc8260ff8b60781c166127bf565b92870192908601905b80841015613be557613bdc8260ff8b881c166127bf565b92870192908601905b80841015613c0657613bfd8260ff8b60881c166127bf565b92870192908601905b80841015613c2757613c1e8260ff8b60901c166127bf565b92870192908601905b80841015613c4857613c3f8260ff8b60981c166127bf565b92870192908601905b80841015613c6857613c5f8260ff8b861c166127bf565b92870192908601905b80841015613c8957613c808260ff8b60a81c166127bf565b92870192908601905b80841015613caa57613ca18260ff8b60b01c166127bf565b92870192908601905b80841015613ccb57613cc28260ff8b60b81c166127bf565b92870192908601905b80841015613cec57613ce38260ff8b60c01c166127bf565b92870192908601905b80841015613d0d57613d048260ff8b60c81c166127bf565b92870192908601905b80841015613d2e57613d258260ff8b60d01c166127bf565b92870192908601905b80841015613d4f57613d468260ff8b60d81c166127bf565b92870192908601905b80841015613d7057613d678260ff8b60e01c166127bf565b92870192908601905b80841015613d9157613d888260ff8b60e81c166127bf565b92870192908601905b80841015613db257613da98260ff8b60f01c166127bf565b92870192908601905b80841015613dcc57613dc7828a60f81c6127bf565b908601905b509a9950505050505050505050565b6000610120808452613def81850184613512565b9050613e0560018401546001600160a01b031690565b6001600160a01b03908116602086015260028401541660408501528381036060850152613e3581600385016135ed565b90508381036080850152613e4c81600485016135ed565b9050600583015460a0850152600683015460c0850152600783015460e085015283810361010085015261314f81600885016136a9565b828152604060208201526000610120806040840152613ea5610160840185613ddb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848203016060850152613edc81600e87016135ed565b600f8601546080860152601086015460a0860152601186015460c0860152601286015463ffffffff80821660e0880152602082901c8116610100880152604082901c1684870152606081901c60ff161515610140870152909150509594505050505056fea26469706673582212200000ea768c8beb311f02c5f0c68c4d480133041373ab2537683eb1b53e81ead964736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
