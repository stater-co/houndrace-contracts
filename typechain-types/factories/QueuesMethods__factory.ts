/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "address",
        name: "incubator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address",
            name: "incubator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b506040516200468d3803806200468d8339810160408190526200003991620003de565b80620000453362000142565b600180558051600380546001600160a01b03199081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b80549093169416939093179055610120830151805184936200012692600c9291019062000251565b5050506101208101516200013a9062000192565b505062000541565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81518110156200024d57600e6000838381518110620001b857620001b862000503565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e600084848151811062000208576200020862000503565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002458162000519565b905062000195565b5050565b828054828255906000526020600020908101928215620002a9579160200282015b82811115620002a957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000272565b50620002b7929150620002bb565b5090565b5b80821115620002b75760008155600101620002bc565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156200030e576200030e620002d2565b60405290565b80516001600160a01b03811681146200032c57600080fd5b919050565b600082601f8301126200034357600080fd5b815160206001600160401b0380831115620003625762000362620002d2565b8260051b604051601f19603f830116810181811084821117156200038a576200038a620002d2565b604052938452858101830193838101925087851115620003a957600080fd5b83870191505b84821015620003d357620003c38262000314565b83529183019190830190620003af565b979650505050505050565b600060208284031215620003f157600080fd5b81516001600160401b03808211156200040957600080fd5b9083019061014082860312156200041f57600080fd5b62000429620002e8565b620004348362000314565b8152620004446020840162000314565b6020820152620004576040840162000314565b60408201526200046a6060840162000314565b60608201526200047d6080840162000314565b60808201526200049060a0840162000314565b60a0820152620004a360c0840162000314565b60c0820152620004b660e0840162000314565b60e0820152610100620004cb81850162000314565b908201526101208381015183811115620004e457600080fd5b620004f28882870162000331565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200053a57634e487b7160e01b600052601160045260246000fd5b5060010190565b61413c80620005516000396000f3fe6080604052600436106100e85760003560e01c8063d63a8e111161008a578063e200c85711610059578063e200c85714610325578063e3c5fc0414610345578063ec7bbea31461039c578063f2fde38b146103bc57600080fd5b8063d63a8e11146101ed578063d8de65871461022d578063ddf0b009146102d8578063e11523431461030557600080fd5b8063715018a6116100c6578063715018a6146101795780638da5cb5b1461018e578063982d64d4146101b6578063af640d0f146101c957600080fd5b80630f7921ed146100ed578063212049481461012a578063451383f214610157575b600080fd5b3480156100f957600080fd5b5061010d6101083660046124ac565b6103dc565b6040516101219897969594939291906127b8565b60405180910390f35b34801561013657600080fd5b5061014a6101453660046124ac565b6108ca565b604051610121919061280e565b34801561016357600080fd5b50610177610172366004612983565b61092f565b005b34801561018557600080fd5b50610177610a3f565b34801561019a57600080fd5b506000546040516001600160a01b039091168152602001610121565b6101776101c4366004612a8f565b610a53565b3480156101d557600080fd5b506101df60025481565b604051908152602001610121565b3480156101f957600080fd5b5061021d610208366004612ab1565b600e6020526000908152604090205460ff1681565b6040519015158152602001610121565b34801561023957600080fd5b50600354600454600554600654600754600854600954600a54600b5461027e986001600160a01b03908116988116978116968116958116948116938116928116911689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c0840152831660e083015290911661010082015261012001610121565b3480156102e457600080fd5b506102f86102f33660046124ac565b6113fa565b6040516101219190612b15565b34801561031157600080fd5b506101776103203660046124ac565b61199d565b34801561033157600080fd5b5061014a6103403660046124ac565b611ac3565b34801561035157600080fd5b506103876103603660046124ac565b6000908152600d602052604090206011015468010000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610121565b3480156103a857600080fd5b506101776103b7366004612a8f565b611b26565b3480156103c857600080fd5b506101776103d7366004612ab1565b6120c0565b600d602052806000526040600020600091509050806000016040518061012001604052908160008201805461041090612bbf565b80601f016020809104026020016040519081016040528092919081815260200182805461043c90612bbf565b80156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561050a57602002820191906000526020600020905b8154815260200190600101908083116104f6575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561056257602002820191906000526020600020905b81548152602001906001019080831161054e575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156105f257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105d4575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561065457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610636575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156106b657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610698575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107505760008481526020908190208301805460408051828502810185019091528181529283018282801561073c57602002820191906000526020600020905b815481526020019060010190808311610728575b5050505050815260200190600101906106e4565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107e9576000848152602090819020830180546040805182850281018501909152818152928301828280156107d557602002820191906000526020600020905b8154815260200190600101908083116107c1575b50505050508152602001906001019061077d565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561087057602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561084e5761084e6125e1565b81526020600192830181810494850194909303909202910180841161082f5790505b50505091909252505050905250600e820154600f83015460108401546011850154601390950154939492939192909163ffffffff808316926401000000008104821692680100000000000000009091049091169060ff1688565b6000818152600d602090815260409182902060040180548351818402810184019094528084526060939283018282801561092357602002820191906000526020600020905b81548152602001906001019080831161090f575b50505050509050919050565b610937612167565b8051600380547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b0393841617825560208085015160048054841691861691909117905560408501516005805484169186169190911790556060850151600680548416918616919091179055608085015160078054841691861691909117905560a085015160088054841691861691909117905560c085015160098054841691861691909117905560e0850151600a80548416918616919091179055610100850151600b8054909316941693909317905561012083015180518493610a2a92600c92910190612316565b50905050610a3c8161012001516121db565b50565b610a47612167565b610a5160006122ae565b565b600260015403610ac4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556000828152600d602052604090206011015463ffffffff1615801590610b0157506000828152600d602052604090206013015460ff16155b8015610b6e57506000828152600d60205260409020600f0154158015610b3657506000828152600d60205260409020600e0154155b80610b6e57506000828152600d60205260409020600e01544210801590610b6e57506000828152600d60205260409020600f01544211155b8015610c0157506008546040517fddc6a171000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063ddc6a17190604401602060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c019190612c12565b8015610c4657506000828152600d6020526040902060110154610c3290640100000000900463ffffffff1642612c63565b6000838152600d6020526040902060100154105b610c4f57600080fd5b600b546040517f85e3f058000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906385e3f05890602401600060405180830381865afa158015610cb2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cda9190810190612d78565b90506000805b6000858152600d6020526040902060120154811015610d81578260c001516006811115610d0f57610d0f6125e1565b6000868152600d60205260409020601201805483908110610d3257610d32612e33565b90600052602060002090602091828204019190069054906101000a900460ff166006811115610d6357610d636125e1565b03610d715760019150610d81565b610d7a81612e62565b9050610ce0565b5080610d8c57600080fd5b60005b6000858152600d6020526040902060030154811015610df3576000858152600d60205260409020600301805485919083908110610dce57610dce612e33565b906000526020600020015403610de357600080fd5b610dec81612e62565b9050610d8f565b506000848152600d6020908152604080832060038101805460018082018355918652848620018890556004918201805491820181558552929093204292019190915560085490517f894f39fc000000000000000000000000000000000000000000000000000000008152918201859052602482018690526001600160a01b03169063894f39fc906044016020604051808303816000875af1158015610e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec09190612e9a565b15610eca57600080fd5b6007546000858152600d60205260408082206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815291926001600160a01b03169163ccdac71a91610f279160040190815260200190565b602060405180830381865afa158015610f44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f689190612eb3565b6006546040517fb3aa39b600000000000000000000000000000000000000000000000000000000815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff89190612f2b565b6040805160018082528183019092529396509194509250600091906020808301908036833701905050905083602001518160008151811061103b5761103b612e33565b602090810291909101015260095484516001600160a01b039182169163c01f59c291161561106a576000611070565b85602001515b60095487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d16156110aa5760026110ad565b60035b6040518863ffffffff1660e01b81526004016110ce96959493929190612f71565b6000604051808303818588803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b505050505082602001518160008151811061111857611118612e33565b602090810291909101015260095483516001600160a01b039182169163c01f59c291161561114757600061114d565b84602001515b60095486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561118757600261118a565b60035b6040518863ffffffff1660e01b81526004016111ab96959493929190612f71565b6000604051808303818588803b1580156111c457600080fd5b505af11580156111d8573d6000803e3d6000fd5b50505050508160200151816000815181106111f5576111f5612e33565b602090810291909101015260095482516001600160a01b039182169163c01f59c291161561122457600061122a565b83602001515b60095485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615611264576002611267565b60035b6040518863ffffffff1660e01b815260040161128896959493929190612f71565b6000604051808303818588803b1580156112a157600080fd5b505af11580156112b5573d6000803e3d6000fd5b50505060008b8152600d60205260409020601181015460039091015463ffffffff909116900391506113bc905057600a5460008a8152600d60205260409081902090517ffcf696350000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163fcf696359161133c918d9190600401614041565b600060405180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b50505060008a8152600d60205260408120611389925060030190612393565b6000898152600d602052604081206113a691600490910190612393565b6000898152600d60205260409020426010909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a450506001805550505050505050565b6114026123b1565b6000828152600d602052604090819020815161024081019092528054829061012082019083908290829061143590612bbf565b80601f016020809104026020016040519081016040528092919081815260200182805461146190612bbf565b80156114ae5780601f10611483576101008083540402835291602001916114ae565b820191906000526020600020905b81548152906001019060200180831161149157829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561152f57602002820191906000526020600020905b81548152602001906001019080831161151b575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561158757602002820191906000526020600020905b815481526020019060010190808311611573575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561161757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115f9575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561167957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161165b575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156116db57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116bd575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156117755760008481526020908190208301805460408051828502810185019091528181529283018282801561176157602002820191906000526020600020905b81548152602001906001019080831161174d575b505050505081526020019060010190611709565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561180e576000848152602090819020830180546040805182850281018501909152818152928301828280156117fa57602002820191906000526020600020905b8154815260200190600101908083116117e6575b5050505050815260200190600101906117a2565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561189557602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611873576118736125e1565b8152602060019283018181049485019490930390920291018084116118545790505b505050919092525050509052508152600e820154602080830191909152600f83015460408084019190915260108401546060840152601184015463ffffffff80821660808601526401000000008204811660a0860152680100000000000000009091041660c084015260128401805482518185028101850190935280835260e090940193919290919083018282801561197d57602002820191906000526020600020906000905b82829054906101000a900460ff16600681111561195b5761195b6125e1565b81526020600192830181810494850194909303909202910180841161193c5790505b50505091835250506013919091015460ff16151560209091015292915050565b6119a5612167565b47811115611a35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f2062696700000000000000000000000000000000006064820152608401610abb565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050610a3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f2077697468647261770000000000006044820152606401610abb565b6000818152600d6020908152604091829020600301805483518184028101840190945280845260609392830182828015610923576020028201919060005260206000209081548152602001906001019080831161090f5750505050509050919050565b600260015403611b92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610abb565b60026001556008546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015611bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1e9190612eb3565b90506001600160a01b0381163314611c3557600080fd5b6000838152600d6020908152604080832060030180548251818502810185019093528083529192909190830182828015611c8e57602002820191906000526020600020905b815481526020019060010190808311611c7a575b5050506000878152600d6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611cf057602002820191906000526020600020905b815481526020019060010190808311611cdc575b5050506000888152600d60205260408120939450611d149360030192509050612393565b6000858152600d60205260408120611d3191600490910190612393565b815115611e64576000805b8351811015611e575785848281518110611d5857611d58612e33565b602002602001015103611dbc576000878152600d602052604090206011015460019250611d9390640100000000900463ffffffff1642612c63565b838281518110611da557611da5612e33565b602002602001015110611db757600080fd5b611e47565b6000878152600d602052604090208451600390910190859083908110611de457611de4612e33565b602090810291909101810151825460018101845560009384528284200155888252600d9052604090208351600490910190849083908110611e2757611e27612e33565b602090810291909101810151825460018101845560009384529190922001555b611e5081612e62565b9050611d3c565b5080611e6257600080fd5b505b6008546040517f894f39fc000000000000000000000000000000000000000000000000000000008152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef39190612e9a565b14611efd57600080fd5b6006546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f849190612f2b565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611fc557611fc5612e33565b602090810291909101015260095482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015612016578160200160208202803683370190505b50875187906001600160a01b031615612030576002612033565b60035b6040518763ffffffff1660e01b815260040161205496959493929190612f71565b600060405180830381600087803b15801561206e57600080fd5b505af1158015612082573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a35050600180555050505050565b6120c8612167565b6001600160a01b03811661215e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610abb565b610a3c816122ae565b6000546001600160a01b03163314610a51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abb565b60005b81518110156122aa57600e60008383815181106121fd576121fd612e33565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e600084848151811061224a5761224a612e33565b6020908102919091018101516001600160a01b0316825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556122a381612e62565b90506121de565b5050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215612383579160200282015b8281111561238357825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178255602090920191600190910190612336565b5061238f929150612403565b5090565b5080546000825590600052602060002090810190610a3c9190612403565b6040518061012001604052806123c5612418565b81526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830182905260e08301526101009091015290565b5b8082111561238f5760008155600101612404565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016124a76040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156124be57600080fd5b5035919050565b60005b838110156124e05781810151838201526020016124c8565b50506000910152565b600081518084526125018160208601602086016124c5565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561254557815187529582019590820190600101612529565b509495945050505050565b600081518084526020808501945080840160005b838110156125455781516001600160a01b031687529582019590820190600101612564565b600082825180855260208086019550808260051b84010181860160005b848110156125d457601f198684030189526125c2838351612515565b988401989250908301906001016125a6565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612620576126206125e1565b9052565b6000815160c0845261263960c0850182612550565b9050602080840151858303828701526126528382612550565b9250506040840151858303604087015261266c8382612550565b925050606084015185830360608701526126868382612589565b925050608084015185830360808701526126a08382612589565b60a086810151888303918901919091528051808352908401945060009250908301905b808310156126ea576126d6828651612610565b9383019360019290920191908301906126c3565b509695505050505050565b6000610120825181855261270b828601826124e9565b915050602083015161272860208601826001600160a01b03169052565b50604083015161274360408601826001600160a01b03169052565b506060830151848203606086015261275b8282612515565b915050608083015184820360808601526127758282612515565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526127ae8382612624565b9695505050505050565b60006101008083526127cc8184018c6126f5565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b6020815260006128216020830184612515565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561287b5761287b612828565b60405290565b60405160e0810167ffffffffffffffff8111828210171561287b5761287b612828565b604051601f8201601f1916810167ffffffffffffffff811182821017156128cd576128cd612828565b604052919050565b6001600160a01b0381168114610a3c57600080fd5b80356128f5816128d5565b919050565b600082601f83011261290b57600080fd5b8135602067ffffffffffffffff82111561292757612927612828565b8160051b6129368282016128a4565b928352848101820192828101908785111561295057600080fd5b83870192505b84831015612978578235612969816128d5565b82529183019190830190612956565b979650505050505050565b60006020828403121561299557600080fd5b813567ffffffffffffffff808211156129ad57600080fd5b9083019061014082860312156129c257600080fd5b6129ca612857565b6129d3836128ea565b81526129e1602084016128ea565b60208201526129f2604084016128ea565b6040820152612a03606084016128ea565b6060820152612a14608084016128ea565b6080820152612a2560a084016128ea565b60a0820152612a3660c084016128ea565b60c0820152612a4760e084016128ea565b60e0820152610100612a5a8185016128ea565b908201526101208381013583811115612a7257600080fd5b612a7e888287016128fa565b918301919091525095945050505050565b60008060408385031215612aa257600080fd5b50508035926020909101359150565b600060208284031215612ac357600080fd5b8135612821816128d5565b60078110612620576126206125e1565b600081518084526020808501945080840160005b8381101561254557612b05878351612ace565b9582019590820190600101612af2565b6020815260008251610120806020850152612b346101408501836126f5565b91506020850151604085015260408501516060850152606085015160808501526080850151612b6b60a086018263ffffffff169052565b5060a085015163ffffffff811660c08601525060c085015163ffffffff811660e08601525060e0850151610100601f198685030181870152612bad8483612ade565b96015115159190940152509192915050565b600181811c90821680612bd357607f821691505b602082108103612c0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612c2457600080fd5b8151801515811461282157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612c7657612c76612c34565b92915050565b600082601f830112612c8d57600080fd5b6040516106c080820182811067ffffffffffffffff82111715612cb257612cb2612828565b60405283018185821115612cc557600080fd5b845b82811015612cf257805163ffffffff81168114612ce45760008081fd5b825260209182019101612cc7565b509195945050505050565b600082601f830112612d0e57600080fd5b815167ffffffffffffffff811115612d2857612d28612828565b612d3b6020601f19601f840116016128a4565b818152846020838601011115612d5057600080fd5b612d618260208301602087016124c5565b949350505050565b8051600781106128f557600080fd5b600060208284031215612d8a57600080fd5b815167ffffffffffffffff80821115612da257600080fd5b908301906107808286031215612db757600080fd5b612dbf612881565b82518152602083015160208201526040830151604082015260608301516060820152612dee8660808501612c7c565b608082015261074083015182811115612e0657600080fd5b612e1287828601612cfd565b60a083015250612e256107608401612d69565b60c082015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e9357612e93612c34565b5060010190565b600060208284031215612eac57600080fd5b5051919050565b600060208284031215612ec557600080fd5b8151612821816128d5565b600060408284031215612ee257600080fd5b6040516040810181811067ffffffffffffffff82111715612f0557612f05612828565b80604052508091508251612f18816128d5565b8152602092830151920191909152919050565b600080600060c08486031215612f4057600080fd5b612f4a8585612ed0565b9250612f598560408601612ed0565b9150612f688560808601612ed0565b90509250925092565b60006001600160a01b038089168352808816602084015280871660408401525060c06060830152612fa560c0830186612515565b8281036080840152612fb78186612515565b91505061297860a0830184612610565b8054600090600181811c9080831680612fe157607f831692505b6020808410820361301b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b83885260208801828015613036576001811461306a57613095565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b82019750613095565b60008981526020902060005b8781101561308f57815484820152908601908401613076565b83019850505b5050505050505092915050565b6000815480845260208085019450836000528060002060005b83811015612545578154875295820195600191820191016130bb565b6000815480845260208085019450836000528060002060005b838110156125455781546001600160a01b0316875295820195600191820191016130f0565b600081548084526020808501808196508360051b81019150856000528260002060005b8581101561316157828403895261314f84836130a2565b98850198935060019182019101613138565b5091979650505050505050565b60c08252600061318160c08401836130d7565b6001602085830381870152613198838387016130d7565b925085830360408701526131af83600287016130d7565b92506060868403818801526131c78460038801613115565b93506080878503818901526131df8560048901613115565b94506005870160a0898703818b01528682546131ff818a90815260200190565b600094855260208520995091505b80601f8501101561347c57885460ff61322884828416612610565b613239898501828460081c16612610565b61324b60408501828460101c16612610565b61325c888501828460181c16612610565b61326c87850182848c1c16612610565b61327d858501828460281c16612610565b61328f60c08501828460301c16612610565b60e06132a2818601838560381c16612610565b6132b56101008601838560401c16612610565b6132c86101208601838560481c16612610565b6132db6101408601838560501c16612610565b6132ee6101608601838560581c16612610565b613300610180860183858c1c16612610565b6133136101a08601838560681c16612610565b6133266101c08601838560701c16612610565b6133396101e08601838560781c16612610565b61334b610200860183858b1c16612610565b61335e6102208601838560881c16612610565b6133716102408601838560901c16612610565b6133846102608601838560981c16612610565b61339661028086018385891c16612610565b6133a96102a08601838560a81c16612610565b6133bc6102c08601838560b01c16612610565b6133cf6102e08601838560b81c16612610565b6133e26103008601838560c01c16612610565b6133f56103208601838560c81c16612610565b6134086103408601838560d01c16612610565b61341b6103608601838560d81c16612610565b61342d61038086018385841c16612610565b506134416103a08501828460e81c16612610565b6134546103c08501828460f01c16612610565b506134666103e084018260f81c612610565b509787019792860192610400919091019061320d565b9754978084101561349d576134948260ff8b16612610565b92870192908601905b808410156134be576134b58260ff8b60081c16612610565b92870192908601905b808410156134df576134d68260ff8b60101c16612610565b92870192908601905b80841015613500576134f78260ff8b60181c16612610565b92870192908601905b80841015613520576135178260ff8b8a1c16612610565b92870192908601905b80841015613541576135388260ff8b60281c16612610565b92870192908601905b80841015613562576135598260ff8b60301c16612610565b92870192908601905b808410156135835761357a8260ff8b60381c16612610565b92870192908601905b808410156135a45761359b8260ff8b60401c16612610565b92870192908601905b808410156135c5576135bc8260ff8b60481c16612610565b92870192908601905b808410156135e6576135dd8260ff8b60501c16612610565b92870192908601905b80841015613607576135fe8260ff8b60581c16612610565b92870192908601905b808410156136275761361e8260ff8b891c16612610565b92870192908601905b808410156136485761363f8260ff8b60681c16612610565b92870192908601905b80841015613669576136608260ff8b60701c16612610565b92870192908601905b8084101561368a576136818260ff8b60781c16612610565b92870192908601905b808410156136aa576136a18260ff8b881c16612610565b92870192908601905b808410156136cb576136c28260ff8b60881c16612610565b92870192908601905b808410156136ec576136e38260ff8b60901c16612610565b92870192908601905b8084101561370d576137048260ff8b60981c16612610565b92870192908601905b8084101561372d576137248260ff8b861c16612610565b92870192908601905b8084101561374e576137458260ff8b60a81c16612610565b92870192908601905b8084101561376f576137668260ff8b60b01c16612610565b92870192908601905b80841015613790576137878260ff8b60b81c16612610565b92870192908601905b808410156137b1576137a88260ff8b60c01c16612610565b92870192908601905b808410156137d2576137c98260ff8b60c81c16612610565b92870192908601905b808410156137f3576137ea8260ff8b60d01c16612610565b92870192908601905b808410156138145761380b8260ff8b60d81c16612610565b92870192908601905b808410156138355761382c8260ff8b60e01c16612610565b92870192908601905b808410156138565761384d8260ff8b60e81c16612610565b92870192908601905b808410156138775761386e8260ff8b60f01c16612610565b92870192908601905b808410156138915761388c828a60f81c612610565b908601905b509a9950505050505050505050565b60006101208084526138b481850184612fc7565b90506138ca60018401546001600160a01b031690565b6001600160a01b039081166020860152600284015416604085015283810360608501526138fa81600385016130a2565b9050838103608085015261391181600485016130a2565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152612d61816008850161316e565b805480835260008281526020808220940193909190825b82601f82011015613bde57815460ff61397988828416612ace565b602061398c818a01838560081c16612ace565b604061399f818b01848660101c16612ace565b60606139b2818c01858760181c16612ace565b60806139c4818d018688871c16612ace565b60a093506139d9848d01868860281c16612ace565b60c06139ec818e01878960301c16612ace565b60e06139ff818f01888a60381c16612ace565b613a116101008f01888a881c16612ace565b613a246101208f01888a60481c16612ace565b613a376101408f01888a60501c16612ace565b613a4a6101608f01888a60581c16612ace565b613a5c6101808f01888a871c16612ace565b613a6f6101a08f01888a60681c16612ace565b613a826101c08f01888a60701c16612ace565b613a956101e08f01888a60781c16612ace565b613aa76102008f01888a861c16612ace565b613aba6102208f01888a60881c16612ace565b613acd6102408f01888a60901c16612ace565b613ae06102608f01888a60981c16612ace565b613af26102808f01888a891c16612ace565b613b056102a08f01888a60a81c16612ace565b613b186102c08f01888a60b01c16612ace565b613b2b6102e08f01888a60b81c16612ace565b613b3d6103008f01888a851c16612ace565b613b506103208f01888a60c81c16612ace565b613b636103408f01888a60d01c16612ace565b613b766103608f01888a60d81c16612ace565b613b886103808f01888a841c16612ace565b505050505050613ba16103a08901828460e81c16612ace565b613bb46103c08901828460f01c16612ace565b50613bc66103e088018260f81c612ace565b5061040095909501946001919091019060200161395e565b90549082811015613c0157613bf68660ff8416612ace565b602095909501946001015b82811015613c2457613c198660ff8460081c16612ace565b602095909501946001015b82811015613c4757613c3c8660ff8460101c16612ace565b602095909501946001015b82811015613c6a57613c5f8660ff8460181c16612ace565b602095909501946001015b82811015613c8d57613c828660ff8460201c16612ace565b602095909501946001015b82811015613cb057613ca58660ff8460281c16612ace565b602095909501946001015b82811015613cd357613cc88660ff8460301c16612ace565b602095909501946001015b82811015613cf657613ceb8660ff8460381c16612ace565b602095909501946001015b82811015613d1957613d0e8660ff8460401c16612ace565b602095909501946001015b82811015613d3c57613d318660ff8460481c16612ace565b602095909501946001015b82811015613d5f57613d548660ff8460501c16612ace565b602095909501946001015b82811015613d8257613d778660ff8460581c16612ace565b602095909501946001015b82811015613da557613d9a8660ff8460601c16612ace565b602095909501946001015b82811015613dc857613dbd8660ff8460681c16612ace565b602095909501946001015b82811015613deb57613de08660ff8460701c16612ace565b602095909501946001015b82811015613e0e57613e038660ff8460781c16612ace565b602095909501946001015b82811015613e3157613e268660ff8460801c16612ace565b602095909501946001015b82811015613e5457613e498660ff8460881c16612ace565b602095909501946001015b82811015613e7757613e6c8660ff8460901c16612ace565b602095909501946001015b82811015613e9a57613e8f8660ff8460981c16612ace565b602095909501946001015b82811015613ebd57613eb28660ff8460a01c16612ace565b602095909501946001015b82811015613ee057613ed58660ff8460a81c16612ace565b602095909501946001015b82811015613f0357613ef88660ff8460b01c16612ace565b602095909501946001015b82811015613f2657613f1b8660ff8460b81c16612ace565b602095909501946001015b82811015613f4957613f3e8660ff8460c01c16612ace565b602095909501946001015b82811015613f6c57613f618660ff8460c81c16612ace565b602095909501946001015b82811015613f8f57613f848660ff8460d01c16612ace565b602095909501946001015b82811015613fb257613fa78660ff8460d81c16612ace565b602095909501946001015b82811015613fd557613fca8660ff8460e01c16612ace565b602095909501946001015b82811015613ff857613fed8660ff8460e81c16612ace565b602095909501946001015b8281101561401b576140108660ff8460f01c16612ace565b602095909501946001015b8281101561403757614030868360f81c612ace565b6020860195505b5093949350505050565b8281526040602082015260006101208060408401526140646101608401856138a0565b600e8501546060850152600f8501546080850152601085015460a0850152601185015463ffffffff80821660c0870152602082901c811660e087015260409190911c166101008501528381037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001828501526140e38160128701613947565b9150506140f4601385015460ff1690565b8015156101408501525094935050505056fea2646970667358221220711a3c630f8ea83ddd2d7d0ddfa8aba6e3bc3ec4c684e6d928e1d65c091bbf9a64736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
