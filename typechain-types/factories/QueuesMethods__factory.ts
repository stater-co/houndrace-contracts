/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QueuesMethods,
  QueuesMethodsInterface,
  QueuesConstructor,
} from "../QueuesMethods";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DeleteQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "EditQueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerEnqueue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "QueueClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idStop",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct Queue.Struct[]",
        name: "newQueues",
        type: "tuple[]",
      },
    ],
    name: "QueuesCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "Unenqueue",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "zerocost",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "enqueueDatesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "queue",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastCompletion",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "totalParticipants",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cooldown",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "staminaCost",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "zerocost",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct QueuesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "staminaCostOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hound",
        type: "uint256",
      },
    ],
    name: "unenqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b50604051620042dc380380620042dc83398101604081905262000039916200052d565b80516101208201516001600055829190620000543362000203565b80518251146200006357600080fd5b60005b8251811015620000fd5781818151811062000085576200008562000666565b602002602001015160026000858481518110620000a657620000a662000666565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f5906200067c565b905062000066565b5050815180518392506004916200011a9183916020019062000255565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051620001f79260098501920190620002bf565b509050505050620006a4565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215620002ad579160200282015b82811115620002ad57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000276565b50620002bb92915062000368565b5090565b82805482825590600052602060002090600701600890048101928215620002ad5791602002820160005b838211156200032c57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002e9565b80156200035e5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200032c565b5050620002bb9291505b5b80821115620002bb576000815560010162000369565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003bb57620003bb6200037f565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ec57620003ec6200037f565b604052919050565b60006001600160401b038211156200041057620004106200037f565b5060051b60200190565b80516001600160a01b03811681146200043257600080fd5b919050565b600082601f8301126200044957600080fd5b81516020620004626200045c83620003f4565b620003c1565b82815260059290921b840181019181810190868411156200048257600080fd5b8286015b84811015620004a8576200049a816200041a565b835291830191830162000486565b509695505050505050565b600082601f830112620004c557600080fd5b81516020620004d86200045c83620003f4565b82815260059290921b84018101918181019086841115620004f857600080fd5b8286015b84811015620004a85780516001600160e01b0319811681146200051f5760008081fd5b8352918301918301620004fc565b6000602082840312156200054057600080fd5b81516001600160401b03808211156200055857600080fd5b9083019061014082860312156200056e57600080fd5b6200057862000395565b8251828111156200058857600080fd5b620005968782860162000437565b825250620005a7602084016200041a565b6020820152620005ba604084016200041a565b6040820152620005cd606084016200041a565b6060820152620005e0608084016200041a565b6080820152620005f360a084016200041a565b60a08201526200060660c084016200041a565b60c08201526200061960e084016200041a565b60e08201526101006200062e8185016200041a565b9082015261012083810151838111156200064757600080fd5b6200065588828701620004b3565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200069d57634e487b7160e01b600052601160045260246000fd5b5060010190565b613c2880620006b46000396000f3fe6080604052600436106100d25760003560e01c8063d8de65871161007f578063e3c5fc0411610059578063e3c5fc04146102a1578063ec7bbea3146102f8578063f2fde38b14610318578063ffd9f5521461033857600080fd5b8063d8de6587146101b7578063ddf0b00914610254578063e200c8571461028157600080fd5b80638da5cb5b116100b05780638da5cb5b14610158578063982d64d414610180578063af640d0f1461019357600080fd5b80630f7921ed146100d75780632120494814610114578063715018a614610141575b600080fd5b3480156100e357600080fd5b506100f76100f23660046123a5565b610358565b60405161010b9897969594939291906126d8565b60405180910390f35b34801561012057600080fd5b5061013461012f3660046123a5565b61084d565b60405161010b919061272e565b34801561014d57600080fd5b506101566108b2565b005b34801561016457600080fd5b506001546040516001600160a01b03909116815260200161010b565b61015661018e366004612748565b6108c6565b34801561019f57600080fd5b506101a960035481565b60405190815260200161010b565b3480156101c357600080fd5b50600554600654600754600854600954600a54600b54600c54610202976001600160a01b03908116978116968116958116948116938116928116911688565b604080516001600160a01b03998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e08201526101000161010b565b34801561026057600080fd5b5061027461026f3660046123a5565b61128f565b60405161010b919061276a565b34801561028d57600080fd5b5061013461029c3660046123a5565b611805565b3480156102ad57600080fd5b506102e36102bc3660046123a5565b6000908152600e602052604090206012015468010000000000000000900463ffffffff1690565b60405163ffffffff909116815260200161010b565b34801561030457600080fd5b50610156610313366004612748565b611868565b34801561032457600080fd5b50610156610333366004612841565b611e04565b34801561034457600080fd5b50610156610353366004612a68565b611eae565b600e602052806000526040600020600091509050806000016040518061012001604052908160008201805461038c90612b87565b80601f01602080910402602001604051908101604052809291908181526020018280546103b890612b87565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561048657602002820191906000526020600020905b815481526020019060010190808311610472575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156104de57602002820191906000526020600020905b8154815260200190600101908083116104ca575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561056e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610550575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105d057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105b2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561063257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610614575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106cc576000848152602090819020830180546040805182850281018501909152818152928301828280156106b857602002820191906000526020600020905b8154815260200190600101908083116106a4575b505050505081526020019060010190610660565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107655760008481526020908190208301805460408051828502810185019091528181529283018282801561075157602002820191906000526020600020905b81548152602001906001019080831161073d575b5050505050815260200190600101906106f9565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156107ec57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107ca576107ca6124da565b8152602060019283018181049485019490930390920291018084116107ab5790505b50505091909252505050905250600f820154601083015460118401546012909401549293919290919063ffffffff80821691640100000000810482169168010000000000000000820416906c01000000000000000000000000900460ff1688565b6000818152600e60209081526040918290206004018054835181840281018401909452808452606093928301828280156108a657602002820191906000526020600020905b815481526020019060010190808311610892575b50505050509050919050565b6108ba611fd7565b6108c4600061204b565b565b600260005403610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000908155828152600e602052604090206012015463ffffffff161580159061098457506000828152600e60205260409020601201546c01000000000000000000000000900460ff16155b80156109f157506000828152600e60205260409020601001541580156109b957506000828152600e60205260409020600f0154155b806109f157506000828152600e60205260409020600f015442108015906109f157506000828152600e60205260409020601001544211155b8015610a895750600a546040517fdadddaaf0000000000000000000000000000000000000000000000000000000081526004810183905233916001600160a01b03169063dadddaaf90602401602060405180830381865afa158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190612be5565b6001600160a01b0316145b8015610ace57506000828152600e6020526040902060120154610aba90640100000000900463ffffffff1642612c31565b6000838152600e6020526040902060110154105b610ad757600080fd5b600a546040517f30ace5ff000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906330ace5ff90602401600060405180830381865afa158015610b3a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b629190810190612f11565b6000848152600e602052604090206012015481516060015191925063ffffffff68010000000000000000909104811691161015610b9e57600080fd5b6000805b6000858152600e602081905260409091200154811015610c1557826040015160800151600e6000878152602001908152602001600020600e018281548110610bec57610bec613032565b906000526020600020015403610c055760019150610c15565b610c0e81613061565b9050610ba2565b5080610c2057600080fd5b60005b6000858152600e6020526040902060030154811015610c87576000858152600e60205260409020600301805485919083908110610c6257610c62613032565b906000526020600020015403610c7757600080fd5b610c8081613061565b9050610c23565b506000848152600e60209081526040808320600381018054600180820183559186528486200188905560049182018054918201815585529290932042920191909155600a5490517f894f39fc000000000000000000000000000000000000000000000000000000008152918201859052602482018690526001600160a01b03169063894f39fc906044016020604051808303816000875af1158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d549190613099565b15610d5e57600080fd5b6009546000858152600e60205260408082206005015490517fccdac71a00000000000000000000000000000000000000000000000000000000815291926001600160a01b03169163ccdac71a91610dbb9160040190815260200190565b602060405180830381865afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190612be5565b6008546040517fb3aa39b600000000000000000000000000000000000000000000000000000000815260048101889052919250600091829182916001600160a01b039091169063b3aa39b69060240160c060405180830381865afa158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c919061310d565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050836020015181600081518110610ecf57610ecf613032565b6020908102919091010152600b5484516001600160a01b039182169163c01f59c2911615610efe576000610f04565b85602001515b600b5487516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d1615610f3e576002610f41565b60035b6040518863ffffffff1660e01b8152600401610f6296959493929190613153565b6000604051808303818588803b158015610f7b57600080fd5b505af1158015610f8f573d6000803e3d6000fd5b5050505050826020015181600081518110610fac57610fac613032565b6020908102919091010152600b5483516001600160a01b039182169163c01f59c2911615610fdb576000610fe1565b84602001515b600b5486516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d161561101b57600261101e565b60035b6040518863ffffffff1660e01b815260040161103f96959493929190613153565b6000604051808303818588803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b505050505081602001518160008151811061108957611089613032565b6020908102919091010152600b5482516001600160a01b039182169163c01f59c29116156110b85760006110be565b83602001515b600b5485516040805160008082526020820190925233936001600160a01b0316929150876001600160a01b038d16156110f85760026110fb565b60035b6040518863ffffffff1660e01b815260040161111c96959493929190613153565b6000604051808303818588803b15801561113557600080fd5b505af1158015611149573d6000803e3d6000fd5b50505060008b8152600e60205260409020601281015460039091015463ffffffff90911690039150611250905057600c5460008a8152600e60205260409081902090517f65913d770000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916365913d77916111d0918d9190600401613b34565b600060405180830381600087803b1580156111ea57600080fd5b505af11580156111fe573d6000803e3d6000fd5b50505060008a8152600e6020526040812061121d925060030190612158565b6000898152600e6020526040812061123a91600490910190612158565b6000898152600e60205260409020426011909101555b604051339089908b907fa66623e3a0388b8d2d9352bb067ea82f8f53329a6349738bcd3f899d77eb659790600090a45050600160005550505050505050565b611297612176565b6000828152600e60205260409081902081516102408101909252805482906101208201908390829082906112ca90612b87565b80601f01602080910402602001604051908101604052809291908181526020018280546112f690612b87565b80156113435780601f1061131857610100808354040283529160200191611343565b820191906000526020600020905b81548152906001019060200180831161132657829003601f168201915b505050918352505060018201546001600160a01b03908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156113c457602002820191906000526020600020905b8154815260200190600101908083116113b0575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561141c57602002820191906000526020600020905b815481526020019060010190808311611408575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156114ac57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161148e575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561150e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114f0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561157057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611552575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561160a576000848152602090819020830180546040805182850281018501909152818152928301828280156115f657602002820191906000526020600020905b8154815260200190600101908083116115e2575b50505050508152602001906001019061159e565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156116a35760008481526020908190208301805460408051828502810185019091528181529283018282801561168f57602002820191906000526020600020905b81548152602001906001019080831161167b575b505050505081526020019060010190611637565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561172a57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115611708576117086124da565b8152602060019283018181049485019490930390920291018084116116e95790505b505050505081525050815250508152602001600e820180548060200260200160405190810160405280929190818152602001828054801561178a57602002820191906000526020600020905b815481526020019060010190808311611776575b5050509183525050600f8201546020820152601082015460408201526011820154606082015260129091015463ffffffff80821660808401526401000000008204811660a08401526801000000000000000082041660c08301526c01000000000000000000000000900460ff16151560e09091015292915050565b6000818152600e60209081526040918290206003018054835181840281018401909452808452606093928301828280156108a657602002820191906000526020600020908154815260200190600101908083116108925750505050509050919050565b6002600054036118d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161092e565b60026000908155600a546040517fdadddaaf000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b039091169063dadddaaf90602401602060405180830381865afa15801561193d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119619190612be5565b90506001600160a01b038116331461197857600080fd5b6000838152600e60209081526040808320600301805482518185028101850190935280835291929091908301828280156119d157602002820191906000526020600020905b8154815260200190600101908083116119bd575b5050506000878152600e6020908152604080832060040180548251818502810185019093528083529697509295909450919250830182828015611a3357602002820191906000526020600020905b815481526020019060010190808311611a1f575b5050506000888152600e60205260408120939450611a579360030192509050612158565b6000858152600e60205260408120611a7491600490910190612158565b815115611ba7576000805b8351811015611b9a5785848281518110611a9b57611a9b613032565b602002602001015103611aff576000878152600e602052604090206012015460019250611ad690640100000000900463ffffffff1642612c31565b838281518110611ae857611ae8613032565b602002602001015110611afa57600080fd5b611b8a565b6000878152600e602052604090208451600390910190859083908110611b2757611b27613032565b602090810291909101810151825460018101845560009384528284200155888252600e9052604090208351600490910190849083908110611b6a57611b6a613032565b602090810291909101810151825460018101845560009384529190922001555b611b9381613061565b9050611a7f565b5080611ba557600080fd5b505b600a546040517f894f39fc000000000000000000000000000000000000000000000000000000008152600481018690526000602482015286916001600160a01b03169063894f39fc906044016020604051808303816000875af1158015611c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c369190613099565b14611c4057600080fd5b6008546040517fb3aa39b6000000000000000000000000000000000000000000000000000000008152600481018790526000916001600160a01b03169063b3aa39b69060240160c060405180830381865afa158015611ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc7919061310d565b6040805160018082528183019092529194506000935090915060208083019080368337019050509050816020015181600081518110611d0857611d08613032565b6020908102919091010152600b5482516001600160a01b039091169063c01f59c290829088906000604051908082528060200260200182016040528015611d59578160200160208202803683370190505b50875187906001600160a01b031615611d73576002611d76565b60035b6040518763ffffffff1660e01b8152600401611d9796959493929190613153565b600060405180830381600087803b158015611db157600080fd5b505af1158015611dc5573d6000803e3d6000fd5b50506040518892508991507f2e49eed337bcf5d019851897d1e267ba240702fb47f5096f0c6afb217767691f90600090a3505060016000555050505050565b611e0c611fd7565b6001600160a01b038116611ea2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161092e565b611eab8161204b565b50565b611eb6611fd7565b805180518291600491611ed09183916020909101906121dc565b506020828101516001830180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054831691841691909117905561010085015160088501805490921692169190911790556101208301518051611fc39260098501920190612259565b50508151610120830151611eab92506120b5565b6001546001600160a01b031633146108c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161092e565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80518251146120c357600080fd5b60005b8251811015612153578181815181106120e1576120e1613032565b6020026020010151600260008584815181106120ff576120ff613032565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c02179055508061214c90613061565b90506120c6565b505050565b5080546000825590600052602060002090810190611eab91906122fc565b60405180610120016040528061218a612311565b815260200160608152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016000151581525090565b828054828255906000526020600020908101928215612249579160200282015b8281111561224957825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039091161782556020909201916001909101906121fc565b506122559291506122fc565b5090565b828054828255906000526020600020906007016008900481019282156122495791602002820160005b838211156122c357835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302612282565b80156122f35782816101000a81549063ffffffff02191690556004016020816003010492830192600103026122c3565b50506122559291505b5b8082111561225557600081556001016122fd565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016123a06040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b6000602082840312156123b757600080fd5b5035919050565b60005b838110156123d95781810151838201526020016123c1565b50506000910152565b600081518084526123fa8160208601602086016123be565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561243e57815187529582019590820190600101612422565b509495945050505050565b600081518084526020808501945080840160005b8381101561243e5781516001600160a01b03168752958201959082019060010161245d565b600082825180855260208086019550808260051b84010181860160005b848110156124cd57601f198684030189526124bb83835161240e565b9884019892509083019060010161249f565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612540577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160c0845261255960c0850182612449565b9050602080840151858303828701526125728382612449565b9250506040840151858303604087015261258c8382612449565b925050606084015185830360608701526125a68382612482565b925050608084015185830360808701526125c08382612482565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561260a576125f6828651612509565b9383019360019290920191908301906125e3565b509695505050505050565b6000610120825181855261262b828601826123e2565b915050602083015161264860208601826001600160a01b03169052565b50604083015161266360408601826001600160a01b03169052565b506060830151848203606086015261267b828261240e565b91505060808301518482036080860152612695828261240e565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526126ce8382612544565b9695505050505050565b60006101008083526126ec8184018c612615565b602084019a909a5250506040810196909652606086019490945263ffffffff928316608086015290821660a08501521660c0830152151560e090910152919050565b602081526000612741602083018461240e565b9392505050565b6000806040838503121561275b57600080fd5b50508035926020909101359150565b6020815260008251610120806020850152612789610140850183612615565b91506020850151601f198584030160408601526127a6838261240e565b9250506040850151606085015260608501516080850152608085015160a085015260a08501516127de60c086018263ffffffff169052565b5060c085015163ffffffff811660e08601525060e085015161010061280a8187018363ffffffff169052565b90950151151593019290925250919050565b6001600160a01b0381168114611eab57600080fd5b803561283c8161281c565b919050565b60006020828403121561285357600080fd5b81356127418161281c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156128b1576128b161285e565b60405290565b60405160e0810167ffffffffffffffff811182821017156128b1576128b161285e565b6040516080810167ffffffffffffffff811182821017156128b1576128b161285e565b60405160c0810167ffffffffffffffff811182821017156128b1576128b161285e565b604051601f8201601f1916810167ffffffffffffffff811182821017156129495761294961285e565b604052919050565b600067ffffffffffffffff82111561296b5761296b61285e565b5060051b60200190565b600082601f83011261298657600080fd5b8135602061299b61299683612951565b612920565b82815260059290921b840181019181810190868411156129ba57600080fd5b8286015b8481101561260a5780356129d18161281c565b83529183019183016129be565b600082601f8301126129ef57600080fd5b813560206129ff61299683612951565b82815260059290921b84018101918181019086841115612a1e57600080fd5b8286015b8481101561260a5780357fffffffff0000000000000000000000000000000000000000000000000000000081168114612a5b5760008081fd5b8352918301918301612a22565b600060208284031215612a7a57600080fd5b813567ffffffffffffffff80821115612a9257600080fd5b908301906101408286031215612aa757600080fd5b612aaf61288d565b823582811115612abe57600080fd5b612aca87828601612975565b825250612ad960208401612831565b6020820152612aea60408401612831565b6040820152612afb60608401612831565b6060820152612b0c60808401612831565b6080820152612b1d60a08401612831565b60a0820152612b2e60c08401612831565b60c0820152612b3f60e08401612831565b60e0820152610100612b52818501612831565b908201526101208381013583811115612b6a57600080fd5b612b76888287016129de565b918301919091525095945050505050565b600181811c90821680612b9b57607f821691505b602082108103612bd4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b805161283c8161281c565b600060208284031215612bf757600080fd5b81516127418161281c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115612c4457612c44612c02565b92915050565b805163ffffffff8116811461283c57600080fd5b8051801515811461283c57600080fd5b6000610100808385031215612c8257600080fd5b6040519081019067ffffffffffffffff82118183101715612ca557612ca561285e565b8160405280925083519150612cb98261281c565b818152612cc860208501612bda565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c0820152612d0b60e08501612c5e565b60e0820152505092915050565b600082601f830112612d2957600080fd5b60405161090080820182811067ffffffffffffffff82111715612d4e57612d4e61285e565b60405283018185821115612d6157600080fd5b845b82811015612d8257612d7481612c4a565b825260209182019101612d63565b509195945050505050565b600082601f830112612d9e57600080fd5b815167ffffffffffffffff811115612db857612db861285e565b612dcb6020601f19601f84011601612920565b818152846020838601011115612de057600080fd5b612df18260208301602087016123be565b949350505050565b60006109c08284031215612e0c57600080fd5b612e146128b7565b90508151815260208201516020820152604082015160408201526060820151606082015260808201516080820152612e4f8360a08401612d18565b60a08201526109a082015167ffffffffffffffff811115612e6f57600080fd5b612e7b84828501612d8d565b60c08301525092915050565b600060808284031215612e9957600080fd5b612ea16128da565b9050815167ffffffffffffffff80821115612ebb57600080fd5b612ec785838601612d8d565b83526020840151915080821115612edd57600080fd5b50612eea84828501612d8d565b60208301525060408201516040820152612f0660608301612c5e565b606082015292915050565b600060208284031215612f2357600080fd5b815167ffffffffffffffff80821115612f3b57600080fd5b90830190818503610200811215612f5157600080fd5b612f596128da565b60c0821215612f6757600080fd5b612f6f6128fd565b91508351612f7c8161281c565b808352506020840151602083015260408401516040830152612fa060608501612c4a565b6060830152612fb160808501612c4a565b6080830152612fc260a08501612c4a565b60a0830152818152612fd78760c08601612c6e565b60208201526101c0840151915082821115612ff157600080fd5b612ffd87838601612df9565b60408201526101e084015191508282111561301757600080fd5b61302387838601612e87565b60608201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361309257613092612c02565b5060010190565b6000602082840312156130ab57600080fd5b5051919050565b6000604082840312156130c457600080fd5b6040516040810181811067ffffffffffffffff821117156130e7576130e761285e565b806040525080915082516130fa8161281c565b8152602092830151920191909152919050565b600080600060c0848603121561312257600080fd5b61312c85856130b2565b925061313b85604086016130b2565b915061314a85608086016130b2565b90509250925092565b60006001600160a01b038089168352808816602084015280871660408401525060c0606083015261318760c083018661240e565b8281036080840152613199818661240e565b9150506131a960a0830184612509565b979650505050505050565b8054600090600181811c90808316806131ce57607f831692505b60208084108203613208577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b83885260208801828015613223576001811461325757613282565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b82019750613282565b60008981526020902060005b8781101561327c57815484820152908601908401613263565b83019850505b5050505050505092915050565b6000815480845260208085019450836000528060002060005b8381101561243e578154875295820195600191820191016132a8565b6000815480845260208085019450836000528060002060005b8381101561243e5781546001600160a01b0316875295820195600191820191016132dd565b600081548084526020808501808196508360051b81019150856000528260002060005b8581101561334e57828403895261333c848361328f565b98850198935060019182019101613325565b5091979650505050505050565b60c08252600061336e60c08401836132c4565b6001602085830381870152613385838387016132c4565b9250858303604087015261339c83600287016132c4565b92506060868403818801526133b48460038801613302565b93506080878503818901526133cc8560048901613302565b94506005870160a0898703818b01528682546133ec818a90815260200190565b600094855260208520995091505b80601f8501101561366957885460ff61341584828416612509565b613426898501828460081c16612509565b61343860408501828460101c16612509565b613449888501828460181c16612509565b61345987850182848c1c16612509565b61346a858501828460281c16612509565b61347c60c08501828460301c16612509565b60e061348f818601838560381c16612509565b6134a26101008601838560401c16612509565b6134b56101208601838560481c16612509565b6134c86101408601838560501c16612509565b6134db6101608601838560581c16612509565b6134ed610180860183858c1c16612509565b6135006101a08601838560681c16612509565b6135136101c08601838560701c16612509565b6135266101e08601838560781c16612509565b613538610200860183858b1c16612509565b61354b6102208601838560881c16612509565b61355e6102408601838560901c16612509565b6135716102608601838560981c16612509565b61358361028086018385891c16612509565b6135966102a08601838560a81c16612509565b6135a96102c08601838560b01c16612509565b6135bc6102e08601838560b81c16612509565b6135cf6103008601838560c01c16612509565b6135e26103208601838560c81c16612509565b6135f56103408601838560d01c16612509565b6136086103608601838560d81c16612509565b61361a61038086018385841c16612509565b5061362e6103a08501828460e81c16612509565b6136416103c08501828460f01c16612509565b506136536103e084018260f81c612509565b50978701979286019261040091909101906133fa565b9754978084101561368a576136818260ff8b16612509565b92870192908601905b808410156136ab576136a28260ff8b60081c16612509565b92870192908601905b808410156136cc576136c38260ff8b60101c16612509565b92870192908601905b808410156136ed576136e48260ff8b60181c16612509565b92870192908601905b8084101561370d576137048260ff8b8a1c16612509565b92870192908601905b8084101561372e576137258260ff8b60281c16612509565b92870192908601905b8084101561374f576137468260ff8b60301c16612509565b92870192908601905b80841015613770576137678260ff8b60381c16612509565b92870192908601905b80841015613791576137888260ff8b60401c16612509565b92870192908601905b808410156137b2576137a98260ff8b60481c16612509565b92870192908601905b808410156137d3576137ca8260ff8b60501c16612509565b92870192908601905b808410156137f4576137eb8260ff8b60581c16612509565b92870192908601905b808410156138145761380b8260ff8b891c16612509565b92870192908601905b808410156138355761382c8260ff8b60681c16612509565b92870192908601905b808410156138565761384d8260ff8b60701c16612509565b92870192908601905b808410156138775761386e8260ff8b60781c16612509565b92870192908601905b808410156138975761388e8260ff8b881c16612509565b92870192908601905b808410156138b8576138af8260ff8b60881c16612509565b92870192908601905b808410156138d9576138d08260ff8b60901c16612509565b92870192908601905b808410156138fa576138f18260ff8b60981c16612509565b92870192908601905b8084101561391a576139118260ff8b861c16612509565b92870192908601905b8084101561393b576139328260ff8b60a81c16612509565b92870192908601905b8084101561395c576139538260ff8b60b01c16612509565b92870192908601905b8084101561397d576139748260ff8b60b81c16612509565b92870192908601905b8084101561399e576139958260ff8b60c01c16612509565b92870192908601905b808410156139bf576139b68260ff8b60c81c16612509565b92870192908601905b808410156139e0576139d78260ff8b60d01c16612509565b92870192908601905b80841015613a01576139f88260ff8b60d81c16612509565b92870192908601905b80841015613a2257613a198260ff8b60e01c16612509565b92870192908601905b80841015613a4357613a3a8260ff8b60e81c16612509565b92870192908601905b80841015613a6457613a5b8260ff8b60f01c16612509565b92870192908601905b80841015613a7e57613a79828a60f81c612509565b908601905b509a9950505050505050505050565b6000610120808452613aa1818501846131b4565b9050613ab760018401546001600160a01b031690565b6001600160a01b03908116602086015260028401541660408501528381036060850152613ae7816003850161328f565b90508381036080850152613afe816004850161328f565b9050600583015460a0850152600683015460c0850152600783015460e0850152838103610100850152612df1816008850161335b565b828152604060208201526000610120806040840152613b57610160840185613a8d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848203016060850152613b8e81600e870161328f565b600f8601546080860152601086015460a0860152601186015460c0860152601286015463ffffffff80821660e0880152602082901c8116610100880152604082901c1684870152606081901c60ff161515610140870152909150509594505050505056fea2646970667358221220088c352c8bf01f8beb68e99f2c23396f96462e0126c3b92536f5c157c9b83e7f64736f6c63430008110033";

type QueuesMethodsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QueuesMethodsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QueuesMethods__factory extends ContractFactory {
  constructor(...args: QueuesMethodsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "QueuesMethods";
  }

  deploy(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueuesMethods> {
    return super.deploy(input, overrides || {}) as Promise<QueuesMethods>;
  }
  getDeployTransaction(
    input: QueuesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): QueuesMethods {
    return super.attach(address) as QueuesMethods;
  }
  connect(signer: Signer): QueuesMethods__factory {
    return super.connect(signer) as QueuesMethods__factory;
  }
  static readonly contractName: "QueuesMethods";
  public readonly contractName: "QueuesMethods";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueuesMethodsInterface {
    return new utils.Interface(_abi) as QueuesMethodsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueuesMethods {
    return new Contract(address, _abi, signerOrProvider) as QueuesMethods;
  }
}
