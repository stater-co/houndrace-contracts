/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002fe538038062002fe58339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6127a480620008416000396000f3fe6080604052600436106100d25760003560e01c806393de70e81161007f578063b7dda85e11610059578063b7dda85e14610267578063d8de658714610294578063e200c8571461033c578063f2fde38b1461036957600080fd5b806393de70e8146102105780639ad2e2b014610230578063af640d0f1461024357600080fd5b8063797a6764116100b0578063797a6764146101645780637bbc469e146101aa5780638da5cb5b146101db57600080fd5b80635b19e294146100d75780635bd4fd051461012d578063715018a61461014f575b600080fd5b3480156100e357600080fd5b506100f76100f2366004611855565b610389565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561013957600080fd5b5061014d610148366004611ba7565b6103cf565b005b34801561015b57600080fd5b5061014d61044f565b34801561017057600080fd5b506100f761017f366004611ef8565b5050506000357fffffffff000000000000000000000000000000000000000000000000000000001690565b3480156101b657600080fd5b506101ca6101c5366004611fd6565b610463565b604051610124959493929190612314565b3480156101e757600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b34801561021c57600080fd5b5061014d61022b36600461246b565b6109d3565b61014d61023e366004612578565b610af5565b34801561024f57600080fd5b5061025960025481565b604051908152602001610124565b34801561027357600080fd5b50610287610282366004611fd6565b610b74565b60405161012491906125b5565b3480156102a057600080fd5b50600454600554600654600754600854600954600a546102e69673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610124565b34801561034857600080fd5b5061035c610357366004611fd6565b6110ff565b6040516101249190612648565b34801561037557600080fd5b5061014d610384366004612662565b611164565b600160205281600052604060002081815481106103a557600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906103fc908390369061267d565b600060405180830381855af49150503d8060008114610437576040519150601f19603f3d011682016040523d82523d6000602084013e61043c565b606091505b505090508061044a57600080fd5b505050565b61045761121d565b610461600061129e565b565b600c60205280600052604060002060009150905080600001604051806101000160405290816000820180546104979061268d565b80601f01602080910402602001604051908101604052809291908181526020018280546104c39061268d565b80156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561059e57602002820191906000526020600020905b81548152602001906001019080831161058a575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156105f657602002820191906000526020600020905b8154815260200190600101908083116105e2575b5050505050815260200160058201548152602001600682015481526020016007820154815250509080600801549080600901549080600a0180546106399061268d565b80601f01602080910402602001604051908101604052809291908181526020018280546106659061268d565b80156106b25780601f10610687576101008083540402835291602001916106b2565b820191906000526020600020905b81548152906001019060200180831161069557829003601f168201915b50505050509080600b016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561072d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610702575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561079c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610771575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561080b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107e0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108a55760008481526020908190208301805460408051828502810185019091528181529283018282801561089157602002820191906000526020600020905b81548152602001906001019080831161087d575b505050505081526020019060010190610839565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561093e5760008481526020908190208301805460408051828502810185019091528181529283018282801561092a57602002820191906000526020600020905b815481526020019060010190808311610916575b5050505050815260200190600101906108d2565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156109c557602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156109a3576109a36121e6565b8152602060019283018181049485019490930390920291018084116109845790505b505050505081525050905085565b6109db61121d565b8051805182916003916109f5918391602090910190611574565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610ade92600885019201906115fe565b50508151610100830151610af29250611313565b50565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b22908390369061267d565b600060405180830381855af49150503d8060008114610b5d576040519150601f19603f3d011682016040523d82523d6000602084013e610b62565b606091505b5050905080610b7057600080fd5b5050565b610b7c611657565b6000828152600c60205260409081902081516101a081019092528054829060a0820190839082908290610bae9061268d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bda9061268d565b8015610c275780601f10610bfc57610100808354040283529160200191610c27565b820191906000526020600020905b815481529060010190602001808311610c0a57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610cb557602002820191906000526020600020905b815481526020019060010190808311610ca1575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610d0d57602002820191906000526020600020905b815481526020019060010190808311610cf9575b50505050508152602001600582015481526020016006820154815260200160078201548152505081526020016008820154815260200160098201548152602001600a82018054610d5c9061268d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d889061268d565b8015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b50505050508152602001600b82016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610e5457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e29575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610ec357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e98575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610f3257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f07575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610fcc57600084815260209081902083018054604080518285028101850190915281815292830182828015610fb857602002820191906000526020600020905b815481526020019060010190808311610fa4575b505050505081526020019060010190610f60565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110655760008481526020908190208301805460408051828502810185019091528181529283018282801561105157602002820191906000526020600020905b81548152602001906001019080831161103d575b505050505081526020019060010190610ff9565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156110ec57602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156110ca576110ca6121e6565b8152602060019283018181049485019490930390920291018084116110ab5790505b5050509190925250505090525092915050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561115857602002820191906000526020600020905b815481526020019060010190808311611144575b50505050509050919050565b61116c61121d565b73ffffffffffffffffffffffffffffffffffffffff8116611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610af28161129e565b60005473ffffffffffffffffffffffffffffffffffffffff163314610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161120b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461132157600080fd5b60005b825181101561044a5760005b828281518110611342576113426126e0565b6020026020010151518110156115635760016000858481518110611368576113686126e0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061148657600160008584815181106113ca576113ca6126e0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061141e5761141e6126e0565b60200260200101518281518110611437576114376126e0565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055611553565b828281518110611498576114986126e0565b602002602001015181815181106114b1576114b16126e0565b6020026020010151600160008685815181106114cf576114cf6126e0565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611522576115226126e0565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b61155c8161270f565b9050611330565b5061156d8161270f565b9050611324565b8280548282559060005260206000209081019282156115ee579160200282015b828111156115ee57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611594565b506115fa92915061172e565b5090565b82805482825590600052602060002090810192821561164b579160200282015b8281111561164b578251805161163b918491602090910190611743565b509160200191906001019061161e565b506115fa9291506117ea565b6040518060a001604052806116d660405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001606081526020016117296040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156115fa576000815560010161172f565b828054828255906000526020600020906007016008900481019282156115ee5791602002820160005b838211156117ad57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261176c565b80156117dd5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026117ad565b50506115fa92915061172e565b808211156115fa5760006117fe8282611807565b506001016117ea565b508054600082556007016008900490600052602060002090810190610af2919061172e565b803573ffffffffffffffffffffffffffffffffffffffff8116811461185057600080fd5b919050565b6000806040838503121561186857600080fd5b6118718361182c565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156118d2576118d261187f565b60405290565b604051610120810167ffffffffffffffff811182821017156118d2576118d261187f565b60405160c0810167ffffffffffffffff811182821017156118d2576118d261187f565b60405160a0810167ffffffffffffffff811182821017156118d2576118d261187f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156119895761198961187f565b604052919050565b600082601f8301126119a257600080fd5b813567ffffffffffffffff8111156119bc576119bc61187f565b6119ed60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611942565b818152846020838601011115611a0257600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611a3957611a3961187f565b5060051b60200190565b600082601f830112611a5457600080fd5b81356020611a69611a6483611a1f565b611942565b82815260059290921b84018101918181019086841115611a8857600080fd5b8286015b84811015611aa35780358352918301918301611a8c565b509695505050505050565b60006101008284031215611ac157600080fd5b611ac96118ae565b9050813567ffffffffffffffff80821115611ae357600080fd5b611aef85838601611991565b8352611afd6020850161182c565b6020840152611b0e6040850161182c565b60408401526060840135915080821115611b2757600080fd5b611b3385838601611a43565b60608401526080840135915080821115611b4c57600080fd5b50611b5984828501611a43565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b803563ffffffff8116811461185057600080fd5b8035801515811461185057600080fd5b60008060408385031215611bba57600080fd5b82359150602083013567ffffffffffffffff80821115611bd957600080fd5b908401906101208287031215611bee57600080fd5b611bf66118d8565b823582811115611c0557600080fd5b611c1188828601611aae565b825250602083013582811115611c2657600080fd5b611c3288828601611a43565b602083015250604083013560408201526060830135606082015260808301356080820152611c6260a08401611b83565b60a0820152611c7360c08401611b83565b60c0820152611c8460e08401611b83565b60e08201526101009150611c99828401611b97565b828201528093505050509250929050565b600082601f830112611cbb57600080fd5b81356020611ccb611a6483611a1f565b82815260059290921b84018101918181019086841115611cea57600080fd5b8286015b84811015611aa357611cff8161182c565b8352918301918301611cee565b600082601f830112611d1d57600080fd5b81356020611d2d611a6483611a1f565b82815260059290921b84018101918181019086841115611d4c57600080fd5b8286015b84811015611aa357803567ffffffffffffffff811115611d705760008081fd5b611d7e8986838b0101611a43565b845250918301918301611d50565b600082601f830112611d9d57600080fd5b81356020611dad611a6483611a1f565b82815260059290921b84018101918181019086841115611dcc57600080fd5b8286015b84811015611aa357803560048110611de85760008081fd5b8352918301918301611dd0565b600060c08284031215611e0757600080fd5b611e0f6118fc565b9050813567ffffffffffffffff80821115611e2957600080fd5b611e3585838601611caa565b83526020840135915080821115611e4b57600080fd5b611e5785838601611caa565b60208401526040840135915080821115611e7057600080fd5b611e7c85838601611caa565b60408401526060840135915080821115611e9557600080fd5b611ea185838601611d0c565b60608401526080840135915080821115611eba57600080fd5b611ec685838601611d0c565b608084015260a0840135915080821115611edf57600080fd5b50611eec84828501611d8c565b60a08301525092915050565b600080600060608486031215611f0d57600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611f3357600080fd5b9085019060a08288031215611f4757600080fd5b611f4f61191f565b823582811115611f5e57600080fd5b611f6a89828601611aae565b8252506020830135602082015260408301356040820152606083013582811115611f9357600080fd5b611f9f89828601611991565b606083015250608083013582811115611fb757600080fd5b611fc389828601611df5565b6080830152508093505050509250925092565b600060208284031215611fe857600080fd5b5035919050565b6000815180845260005b8181101561201557602081850181015186830182015201611ff9565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561208357815187529582019590820190600101612067565b509495945050505050565b600061010082518185526120a482860182611fef565b91505073ffffffffffffffffffffffffffffffffffffffff602084015116602085015260408301516120ee604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526121068282612053565b915050608083015184820360808601526121208282612053565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b600081518084526020808501945080840160005b8381101561208357815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161215f565b600081518084526020808501808196508360051b8101915082860160005b858110156121d95782840389526121c7848351612053565b988501989350908401906001016121af565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261222a60c085018261214b565b905060208084015185830382870152612243838261214b565b9250506040840151858303604087015261225d838261214b565b925050606084015185830360608701526122778382612191565b925050608084015185830360808701526122918382612191565b60a08681015188830391890191909152805180835290840194506000925090830190825b8181101561230757855160048082106122f4577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b50835294840194918401916001016122b5565b5090979650505050505050565b60a08152600061232760a083018861208e565b86602084015285604084015282810360608401526123458186611fef565b905082810360808401526123598185612215565b98975050505050505050565b600082601f83011261237657600080fd5b81356020612386611a6483611a1f565b828152600592831b85018201928282019190878511156123a557600080fd5b8387015b8581101561230757803567ffffffffffffffff8111156123c95760008081fd5b8801603f81018a136123db5760008081fd5b8581013560406123ed611a6483611a1f565b82815291851b8301810191888101908d84111561240a5760008081fd5b938201935b8385101561245a57843592507fffffffff000000000000000000000000000000000000000000000000000000008316831461244a5760008081fd5b828252938901939089019061240f565b8852505050938501935084016123a9565b60006020828403121561247d57600080fd5b813567ffffffffffffffff8082111561249557600080fd5b9083019061012082860312156124aa57600080fd5b6124b26118d8565b8235828111156124c157600080fd5b6124cd87828601611caa565b8252506124dc6020840161182c565b60208201526124ed6040840161182c565b60408201526124fe6060840161182c565b606082015261250f6080840161182c565b608082015261252060a0840161182c565b60a082015261253160c0840161182c565b60c082015261254260e0840161182c565b60e0820152610100808401358381111561255b57600080fd5b61256788828701612365565b918301919091525095945050505050565b60006020828403121561258a57600080fd5b813567ffffffffffffffff8111156125a157600080fd5b6125ad84828501611df5565b949350505050565b602081526000825160a060208401526125d160c084018261208e565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160808601526126218383611fef565b925060808601519150808584030160a08601525061263f8282612215565b95945050505050565b60208152600061265b6020830184612053565b9392505050565b60006020828403121561267457600080fd5b61265b8261182c565b8183823760009101908152919050565b600181811c908216806126a157607f821691505b6020821081036126da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612767577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220d0a72f6232a4825f6395bdba63d3df96c9ebfe0f6be5dd138ca8120c1f93b2ca64736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
