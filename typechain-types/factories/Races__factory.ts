/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002aec38038062002aec83398101604081905262000039916200050f565b80516101008201518291906200004f33620001e7565b80518251146200005e57600080fd5b60005b8251811015620000f85781818151811062000080576200008062000634565b602002602001015160016000858481518110620000a157620000a162000634565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f0906200064a565b905062000061565b505081518051839250600391620001159183916020019062000237565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051620001db9260088501920190620002a1565b50905050505062000672565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d9291506200034a565b5090565b828054828255906000526020600020906007016008900481019282156200028f5791602002820160005b838211156200030e57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002cb565b8015620003405782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200030e565b50506200029d9291505b5b808211156200029d57600081556001016200034b565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200039d576200039d62000361565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ce57620003ce62000361565b604052919050565b60006001600160401b03821115620003f257620003f262000361565b5060051b60200190565b80516001600160a01b03811681146200041457600080fd5b919050565b600082601f8301126200042b57600080fd5b81516020620004446200043e83620003d6565b620003a3565b82815260059290921b840181019181810190868411156200046457600080fd5b8286015b848110156200048a576200047c81620003fc565b835291830191830162000468565b509695505050505050565b600082601f830112620004a757600080fd5b81516020620004ba6200043e83620003d6565b82815260059290921b84018101918181019086841115620004da57600080fd5b8286015b848110156200048a5780516001600160e01b031981168114620005015760008081fd5b8352918301918301620004de565b6000602082840312156200052257600080fd5b81516001600160401b03808211156200053a57600080fd5b9083019061012082860312156200055057600080fd5b6200055a62000377565b8251828111156200056a57600080fd5b620005788782860162000419565b8252506200058960208401620003fc565b60208201526200059c60408401620003fc565b6040820152620005af60608401620003fc565b6060820152620005c260808401620003fc565b6080820152620005d560a08401620003fc565b60a0820152620005e860c08401620003fc565b60c0820152620005fb60e08401620003fc565b60e082015261010080840151838111156200061557600080fd5b620006238882870162000495565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200066b57634e487b7160e01b600052601160045260246000fd5b5060010190565b61246a80620006826000396000f3fe6080604052600436106100c75760003560e01c8063aa4daabd11610074578063d8de65871161004e578063d8de658714610215578063e200c857146102bd578063f2fde38b146102ea57600080fd5b8063aa4daabd146101a4578063af640d0f146101c4578063b7dda85e146101e857600080fd5b80637bbc469e116100a55780637bbc469e146101235780638da5cb5b1461015c5780639ad2e2b01461019157600080fd5b806330e54438146100cc57806365913d77146100ee578063715018a61461010e575b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611b3b565b61030a565b005b3480156100fa57600080fd5b506100ec610109366004611c30565b61038b565b34801561011a57600080fd5b506100ec61040b565b34801561012f57600080fd5b5061014361013e366004611d33565b61041f565b6040516101539493929190612091565b60405180910390f35b34801561016857600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610153565b6100ec61019f3660046120cd565b610993565b3480156101b057600080fd5b506100ec6101bf366004612194565b610a12565b3480156101d057600080fd5b506101da60025481565b604051908152602001610153565b3480156101f457600080fd5b50610208610203366004611d33565b610b34565b60405161015391906122a1565b34801561022157600080fd5b50600454600554600654600754600854600954600a546102679673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610153565b3480156102c957600080fd5b506102dd6102d8366004611d33565b6110c0565b6040516101539190612315565b3480156102f657600080fd5b506100ec610305366004612328565b611125565b60085460405160009173ffffffffffffffffffffffffffffffffffffffff16906103379083903690612343565b600060405180830381855af49150503d8060008114610372576040519150601f19603f3d011682016040523d82523d6000602084013e610377565b606091505b505090508061038557600080fd5b50505050565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906103b89083903690612343565b600060405180830381855af49150503d80600081146103f3576040519150601f19603f3d011682016040523d82523d6000602084013e6103f8565b606091505b505090508061040657600080fd5b505050565b6104136111de565b61041d600061125f565b565b600c602052806000526040600020600091509050806000016040518061012001604052908160008201805461045390612353565b80601f016020809104026020016040519081016040528092919081815260200182805461047f90612353565b80156104cc5780601f106104a1576101008083540402835291602001916104cc565b820191906000526020600020905b8154815290600101906020018083116104af57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561055a57602002820191906000526020600020905b815481526020019060010190808311610546575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156105b257602002820191906000526020600020905b81548152602001906001019080831161059e575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561064f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610624575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156106be57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610693575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561072d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610702575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107c7576000848152602090819020830180546040805182850281018501909152818152928301828280156107b357602002820191906000526020600020905b81548152602001906001019080831161079f575b50505050508152602001906001019061075b565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108605760008481526020908190208301805460408051828502810185019091528181529283018282801561084c57602002820191906000526020600020905b815481526020019060010190808311610838575b5050505050815260200190600101906107f4565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156108e757602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156108c5576108c5611e86565b8152602060019283018181049485019490930390920291018084116108a65790505b505050505081525050815250509080600e01549080600f01549080601001805461091090612353565b80601f016020809104026020016040519081016040528092919081815260200182805461093c90612353565b80156109895780601f1061095e57610100808354040283529160200191610989565b820191906000526020600020905b81548152906001019060200180831161096c57829003601f168201915b5050505050905084565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906109c09083903690612343565b600060405180830381855af49150503d80600081146109fb576040519150601f19603f3d011682016040523d82523d6000602084013e610a00565b606091505b5050905080610a0e57600080fd5b5050565b610a1a6111de565b805180518291600391610a3491839160209091019061138c565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610b1d9260088501920190611416565b50508151610100830151610b3192506112d4565b50565b610b3c6114bd565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610b6e90612353565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9a90612353565b8015610be75780601f10610bbc57610100808354040283529160200191610be7565b820191906000526020600020905b815481529060010190602001808311610bca57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610c7557602002820191906000526020600020905b815481526020019060010190808311610c61575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ccd57602002820191906000526020600020905b815481526020019060010190808311610cb9575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610d6a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610d3f575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610dd957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610dae575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610e4857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e1d575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610ee257600084815260209081902083018054604080518285028101850190915281815292830182828015610ece57602002820191906000526020600020905b815481526020019060010190808311610eba575b505050505081526020019060010190610e76565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610f7b57600084815260209081902083018054604080518285028101850190915281815292830182828015610f6757602002820191906000526020600020905b815481526020019060010190808311610f53575b505050505081526020019060010190610f0f565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561100257602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610fe057610fe0611e86565b815260206001928301818104948501949093039092029101808411610fc15790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461103790612353565b80601f016020809104026020016040519081016040528092919081815260200182805461106390612353565b80156110b05780601f10611085576101008083540402835291602001916110b0565b820191906000526020600020905b81548152906001019060200180831161109357829003601f168201915b5050505050815250509050919050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561111957602002820191906000526020600020905b815481526020019060010190808311611105575b50505050509050919050565b61112d6111de565b73ffffffffffffffffffffffffffffffffffffffff81166111d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610b318161125f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016111cc565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146112e257600080fd5b60005b825181101561040657818181518110611300576113006123a6565b60200260200101516001600085848151811061131e5761131e6123a6565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080611385906123d5565b90506112e5565b828054828255906000526020600020908101928215611406579160200282015b8281111561140657825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906113ac565b506114129291506114eb565b5090565b828054828255906000526020600020906007016008900481019282156114065791602002820160005b8382111561148057835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261143f565b80156114b05782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611480565b50506114129291506114eb565b60405180608001604052806114d0611500565b81526020016000815260200160008152602001606081525090565b5b8082111561141257600081556001016114ec565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016115a96040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611600576116006115ae565b60405290565b604051610120810167ffffffffffffffff81118282101715611600576116006115ae565b6040516080810167ffffffffffffffff81118282101715611600576116006115ae565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611694576116946115ae565b604052919050565b600067ffffffffffffffff8311156116b6576116b66115ae565b6116e760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161164d565b90508281528383830111156116fb57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261172357600080fd5b6117328383356020850161169c565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461175d57600080fd5b919050565b600067ffffffffffffffff82111561177c5761177c6115ae565b5060051b60200190565b600082601f83011261179757600080fd5b813560206117ac6117a783611762565b61164d565b82815260059290921b840181019181810190868411156117cb57600080fd5b8286015b848110156117e657803583529183019183016117cf565b509695505050505050565b600082601f83011261180257600080fd5b813560206118126117a783611762565b82815260059290921b8401810191818101908684111561183157600080fd5b8286015b848110156117e65761184681611739565b8352918301918301611835565b600082601f83011261186457600080fd5b813560206118746117a783611762565b82815260059290921b8401810191818101908684111561189357600080fd5b8286015b848110156117e657803567ffffffffffffffff8111156118b75760008081fd5b6118c58986838b0101611786565b845250918301918301611897565b600082601f8301126118e457600080fd5b813560206118f46117a783611762565b82815260059290921b8401810191818101908684111561191357600080fd5b8286015b848110156117e65780356004811061192f5760008081fd5b8352918301918301611917565b600060c0828403121561194e57600080fd5b6119566115dd565b9050813567ffffffffffffffff8082111561197057600080fd5b61197c858386016117f1565b8352602084013591508082111561199257600080fd5b61199e858386016117f1565b602084015260408401359150808211156119b757600080fd5b6119c3858386016117f1565b604084015260608401359150808211156119dc57600080fd5b6119e885838601611853565b60608401526080840135915080821115611a0157600080fd5b611a0d85838601611853565b608084015260a0840135915080821115611a2657600080fd5b50611a33848285016118d3565b60a08301525092915050565b60006101208284031215611a5257600080fd5b611a5a611606565b9050813567ffffffffffffffff80821115611a7457600080fd5b611a8085838601611712565b8352611a8e60208501611739565b6020840152611a9f60408501611739565b60408401526060840135915080821115611ab857600080fd5b611ac485838601611786565b60608401526080840135915080821115611add57600080fd5b611ae985838601611786565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611b2257600080fd5b611b2e8682870161193c565b8385015250505092915050565b600080600060608486031215611b5057600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611b7657600080fd5b9085019060808288031215611b8a57600080fd5b611b9261162a565b823582811115611ba157600080fd5b611bad89828601611a3f565b8252506020830135602082015260408301356040820152606083013582811115611bd657600080fd5b80840193505087601f840112611beb57600080fd5b611bfa8884356020860161169c565b60608201528093505050509250925092565b803563ffffffff8116811461175d57600080fd5b8035801515811461175d57600080fd5b60008060408385031215611c4357600080fd5b82359150602083013567ffffffffffffffff80821115611c6257600080fd5b908401906101208287031215611c7757600080fd5b611c7f611606565b823582811115611c8e57600080fd5b611c9a88828601611a3f565b825250602083013582811115611caf57600080fd5b611cbb88828601611786565b602083015250604083013560408201526060830135606082015260808301356080820152611ceb60a08401611c0c565b60a0820152611cfc60c08401611c0c565b60c0820152611d0d60e08401611c0c565b60e08201526101009150611d22828401611c20565b828201528093505050509250929050565b600060208284031215611d4557600080fd5b5035919050565b6000815180845260005b81811015611d7257602081850181015186830182015201611d56565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611de057815187529582019590820190600101611dc4565b509495945050505050565b600081518084526020808501945080840160005b83811015611de057815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611dff565b600081518084526020808501808196508360051b8101915082860160005b85811015611e79578284038952611e67848351611db0565b98850198935090840190600101611e4f565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c08452611eca60c0850182611deb565b905060208084015185830382870152611ee38382611deb565b92505060408401518583036040870152611efd8382611deb565b92505060608401518583036060870152611f178382611e31565b92505060808401518583036080870152611f318382611e31565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015611fa75785516004808210611f94577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101611f55565b5090979650505050505050565b60006101208251818552611fca82860182611d4c565b9150506020830151611ff4602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161201c604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526120348282611db0565b9150506080830151848203608086015261204e8282611db0565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526120878382611eb5565b9695505050505050565b6080815260006120a46080830187611fb4565b85602084015284604084015282810360608401526120c28185611d4c565b979650505050505050565b6000602082840312156120df57600080fd5b813567ffffffffffffffff8111156120f657600080fd5b6121028482850161193c565b949350505050565b600082601f83011261211b57600080fd5b8135602061212b6117a783611762565b82815260059290921b8401810191818101908684111561214a57600080fd5b8286015b848110156117e65780357fffffffff00000000000000000000000000000000000000000000000000000000811681146121875760008081fd5b835291830191830161214e565b6000602082840312156121a657600080fd5b813567ffffffffffffffff808211156121be57600080fd5b9083019061012082860312156121d357600080fd5b6121db611606565b8235828111156121ea57600080fd5b6121f6878286016117f1565b82525061220560208401611739565b602082015261221660408401611739565b604082015261222760608401611739565b606082015261223860808401611739565b608082015261224960a08401611739565b60a082015261225a60c08401611739565b60c082015261226b60e08401611739565b60e0820152610100808401358381111561228457600080fd5b6122908882870161210a565b918301919091525095945050505050565b6020815260008251608060208401526122bd60a0840182611fb4565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301608085015261230c8282611d4c565b95945050505050565b6020815260006117326020830184611db0565b60006020828403121561233a57600080fd5b61173282611739565b8183823760009101908152919050565b600181811c9082168061236757607f821691505b6020821081036123a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361242d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212207eda24bb47b3b48d357d0df00a2ebf1a55b2cd5e04fd185d87a0559e3bf3298264736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
