/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620028a9380380620028a98339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b6123b980620004f06000396000f3fe6080604052600436106100d25760003560e01c8063b7dda85e1161007f578063d8de658711610059578063d8de65871461023f578063e200c857146102e7578063f2fde38b14610314578063fcf696351461033457600080fd5b8063b7dda85e146101b2578063b8f18359146101df578063d63a8e11146101ff57600080fd5b80638da5cb5b116100b05780638da5cb5b146101465780639ad2e2b01461017b578063af640d0f1461018e57600080fd5b806326bed1cc146100d7578063715018a6146100f95780637bbc469e1461010e575b600080fd5b3480156100e357600080fd5b506100f76100f2366004611af8565b610354565b005b34801561010557600080fd5b506100f76103d5565b34801561011a57600080fd5b5061012e610129366004611bbf565b6103e9565b60405161013d93929190611f1d565b60405180910390f35b34801561015257600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013d565b6100f7610189366004611f48565b610957565b34801561019a57600080fd5b506101a460015481565b60405190815260200161013d565b3480156101be57600080fd5b506101d26101cd366004611bbf565b6109d6565b60405161013d9190611f85565b3480156101eb57600080fd5b506100f76101fa366004611fef565b610f58565b34801561020b57600080fd5b5061022f61021a3660046120d4565b600b6020526000908152604090205460ff1681565b604051901515815260200161013d565b34801561024b57600080fd5b506002546003546004546005546006546007546008546102919673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e00161013d565b3480156102f357600080fd5b50610307610302366004611bbf565b61113c565b60405161013d91906120ef565b34801561032057600080fd5b506100f761032f3660046120d4565b6111a1565b34801561034057600080fd5b506100f761034f36600461218f565b61125d565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906103819083903690612292565b600060405180830381855af49150503d80600081146103bc576040519150601f19603f3d011682016040523d82523d6000602084013e6103c1565b606091505b50509050806103cf57600080fd5b50505050565b6103dd6112dd565b6103e7600061135e565b565b600a602052806000526040600020600091509050806000016040518061012001604052908160008201805461041d906122a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610449906122a2565b80156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561052457602002820191906000526020600020905b815481526020019060010190808311610510575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561057c57602002820191906000526020600020905b815481526020019060010190808311610568575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561061957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105ee575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561068857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161065d575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156106f757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106cc575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156107915760008481526020908190208301805460408051828502810185019091528181529283018282801561077d57602002820191906000526020600020905b815481526020019060010190808311610769575b505050505081526020019060010190610725565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561082a5760008481526020908190208301805460408051828502810185019091528181529283018282801561081657602002820191906000526020600020905b815481526020019060010190808311610802575b5050505050815260200190600101906107be565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156108b157602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561088f5761088f611d12565b8152602060019283018181049485019490930390920291018084116108705790505b505050505081525050815250509080600e01549080600f0180546108d4906122a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610900906122a2565b801561094d5780601f106109225761010080835404028352916020019161094d565b820191906000526020600020905b81548152906001019060200180831161093057829003601f168201915b5050505050905083565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff16906109849083903690612292565b600060405180830381855af49150503d80600081146109bf576040519150601f19603f3d011682016040523d82523d6000602084013e6109c4565b606091505b50509050806109d257600080fd5b5050565b6109de6113d3565b6000828152600a60205260409081902081516101808101909252805482906060820190839082908290610a10906122a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3c906122a2565b8015610a895780601f10610a5e57610100808354040283529160200191610a89565b820191906000526020600020905b815481529060010190602001808311610a6c57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610b1757602002820191906000526020600020905b815481526020019060010190808311610b03575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610b6f57602002820191906000526020600020905b815481526020019060010190808311610b5b575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610c0c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610be1575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610c7b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c50575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610cea57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610cbf575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d8457600084815260209081902083018054604080518285028101850190915281815292830182828015610d7057602002820191906000526020600020905b815481526020019060010190808311610d5c575b505050505081526020019060010190610d18565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e1d57600084815260209081902083018054604080518285028101850190915281815292830182828015610e0957602002820191906000526020600020905b815481526020019060010190808311610df5575b505050505081526020019060010190610db1565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610ea457602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610e8257610e82611d12565b815260206001928301818104948501949093039092029101808411610e635790505b505050505081525050815250508152602001600e8201548152602001600f82018054610ecf906122a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610efb906122a2565b8015610f485780601f10610f1d57610100808354040283529160200191610f48565b820191906000526020600020905b815481529060010190602001808311610f2b57829003601f168201915b5050505050815250509050919050565b610f606112dd565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493611036926009929101906113fa565b5090505060005b8160e00151518110156109d257600b60008360e001518381518110611064576110646122f5565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106110cf576110cf6122f5565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561113581612324565b905061103d565b6000818152600a602090815260409182902060030180548351818402810184019094528084526060939283018282801561119557602002820191906000526020600020905b815481526020019060010190808311611181575b50505050509050919050565b6111a96112dd565b73ffffffffffffffffffffffffffffffffffffffff8116611251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61125a8161135e565b50565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff169061128a9083903690612292565b600060405180830381855af49150503d80600081146112c5576040519150601f19603f3d011682016040523d82523d6000602084013e6112ca565b606091505b50509050806112d857600080fd5b505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611248565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180606001604052806113e6611484565b815260200160008152602001606081525090565b828054828255906000526020600020908101928215611474579160200282015b8281111561147457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061141a565b50611480929150611532565b5090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200161152d6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b808211156114805760008155600101611533565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561159957611599611547565b60405290565b604051610120810167ffffffffffffffff8111828210171561159957611599611547565b6040516060810167ffffffffffffffff8111828210171561159957611599611547565b604051610100810167ffffffffffffffff8111828210171561159957611599611547565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561165157611651611547565b604052919050565b600067ffffffffffffffff83111561167357611673611547565b6116a460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161160a565b90508281528383830111156116b857600080fd5b828260208301376000602084830101529392505050565b600082601f8301126116e057600080fd5b6116ef83833560208501611659565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461171a57600080fd5b919050565b600067ffffffffffffffff82111561173957611739611547565b5060051b60200190565b600082601f83011261175457600080fd5b813560206117696117648361171f565b61160a565b82815260059290921b8401810191818101908684111561178857600080fd5b8286015b848110156117a3578035835291830191830161178c565b509695505050505050565b600082601f8301126117bf57600080fd5b813560206117cf6117648361171f565b82815260059290921b840181019181810190868411156117ee57600080fd5b8286015b848110156117a357611803816116f6565b83529183019183016117f2565b600082601f83011261182157600080fd5b813560206118316117648361171f565b82815260059290921b8401810191818101908684111561185057600080fd5b8286015b848110156117a357803567ffffffffffffffff8111156118745760008081fd5b6118828986838b0101611743565b845250918301918301611854565b600082601f8301126118a157600080fd5b813560206118b16117648361171f565b82815260059290921b840181019181810190868411156118d057600080fd5b8286015b848110156117a3578035600481106118ec5760008081fd5b83529183019183016118d4565b600060c0828403121561190b57600080fd5b611913611576565b9050813567ffffffffffffffff8082111561192d57600080fd5b611939858386016117ae565b8352602084013591508082111561194f57600080fd5b61195b858386016117ae565b6020840152604084013591508082111561197457600080fd5b611980858386016117ae565b6040840152606084013591508082111561199957600080fd5b6119a585838601611810565b606084015260808401359150808211156119be57600080fd5b6119ca85838601611810565b608084015260a08401359150808211156119e357600080fd5b506119f084828501611890565b60a08301525092915050565b60006101208284031215611a0f57600080fd5b611a1761159f565b9050813567ffffffffffffffff80821115611a3157600080fd5b611a3d858386016116cf565b8352611a4b602085016116f6565b6020840152611a5c604085016116f6565b60408401526060840135915080821115611a7557600080fd5b611a8185838601611743565b60608401526080840135915080821115611a9a57600080fd5b611aa685838601611743565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611adf57600080fd5b611aeb868287016118f9565b8385015250505092915050565b600080600060608486031215611b0d57600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611b3357600080fd5b9085019060608288031215611b4757600080fd5b611b4f6115c3565b823582811115611b5e57600080fd5b611b6a898286016119fc565b82525060208301356020820152604083013582811115611b8957600080fd5b80840193505087601f840112611b9e57600080fd5b611bad88843560208601611659565b60408201528093505050509250925092565b600060208284031215611bd157600080fd5b5035919050565b6000815180845260005b81811015611bfe57602081850181015186830182015201611be2565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611c6c57815187529582019590820190600101611c50565b509495945050505050565b600081518084526020808501945080840160005b83811015611c6c57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611c8b565b600081518084526020808501808196508360051b8101915082860160005b85811015611d05578284038952611cf3848351611c3c565b98850198935090840190600101611cdb565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c08452611d5660c0850182611c77565b905060208084015185830382870152611d6f8382611c77565b92505060408401518583036040870152611d898382611c77565b92505060608401518583036060870152611da38382611cbd565b92505060808401518583036080870152611dbd8382611cbd565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015611e335785516004808210611e20577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101611de1565b5090979650505050505050565b60006101208251818552611e5682860182611bd8565b9150506020830151611e80602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611ea8604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301518482036060860152611ec08282611c3c565b91505060808301518482036080860152611eda8282611c3c565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015185830382870152611f138382611d41565b9695505050505050565b606081526000611f306060830186611e40565b8460208401528281036040840152611f138185611bd8565b600060208284031215611f5a57600080fd5b813567ffffffffffffffff811115611f7157600080fd5b611f7d848285016118f9565b949350505050565b602081526000825160606020840152611fa16080840182611e40565b90506020840151604084015260408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611fe68282611bd8565b95945050505050565b60006020828403121561200157600080fd5b813567ffffffffffffffff8082111561201957600080fd5b90830190610100828603121561202e57600080fd5b6120366115e6565b61203f836116f6565b815261204d602084016116f6565b602082015261205e604084016116f6565b604082015261206f606084016116f6565b6060820152612080608084016116f6565b608082015261209160a084016116f6565b60a08201526120a260c084016116f6565b60c082015260e0830135828111156120b957600080fd5b6120c5878286016117ae565b60e08301525095945050505050565b6000602082840312156120e657600080fd5b6116ef826116f6565b6020815260006116ef6020830184611c3c565b803563ffffffff8116811461171a57600080fd5b600082601f83011261212757600080fd5b813560206121376117648361171f565b82815260059290921b8401810191818101908684111561215657600080fd5b8286015b848110156117a3578035600881106121725760008081fd5b835291830191830161215a565b8035801515811461171a57600080fd5b600080604083850312156121a257600080fd5b82359150602083013567ffffffffffffffff808211156121c157600080fd5b9084019061012082870312156121d657600080fd5b6121de61159f565b8235828111156121ed57600080fd5b6121f9888286016119fc565b82525060208301356020820152604083013560408201526060830135606082015261222660808401612102565b608082015261223760a08401612102565b60a082015261224860c08401612102565b60c082015260e08301358281111561225f57600080fd5b61226b88828601612116565b60e083015250610100915061228182840161217f565b828201528093505050509250929050565b8183823760009101908152919050565b600181811c908216806122b657607f821691505b6020821081036122ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361237c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212209c869c7c95df8bd19e7be1ef1f3de0e66421cc3504c7b959ee799ba3a794408f64736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
