/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002a7638038062002a768339810160408190526200003891620003a8565b806200004433620001cb565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493620000f7926009929101906200021b565b5090505060005b8160e0015151811015620001c257600b60008360e001518381518110620001295762000129620004a2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600b60008460e0015184815181106200017d576200017d620004a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001ba81620004b8565b9050620000fe565b505050620004e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000273579160200282015b828111156200027357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023c565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715620002d857620002d86200029c565b60405290565b80516001600160a01b0381168114620002f657600080fd5b919050565b600082601f8301126200030d57600080fd5b815160206001600160401b03808311156200032c576200032c6200029c565b8260051b604051601f19603f830116810181811084821117156200035457620003546200029c565b6040529384528581018301938381019250878511156200037357600080fd5b83870191505b848210156200039d576200038d82620002de565b8352918301919083019062000379565b979650505050505050565b600060208284031215620003bb57600080fd5b81516001600160401b0380821115620003d357600080fd5b908301906101008286031215620003e957600080fd5b620003f3620002b2565b620003fe83620002de565b81526200040e60208401620002de565b60208201526200042160408401620002de565b60408201526200043460608401620002de565b60608201526200044760808401620002de565b60808201526200045a60a08401620002de565b60a08201526200046d60c08401620002de565b60c082015260e0830151828111156200048557600080fd5b6200049387828601620002fb565b60e08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004d957634e487b7160e01b600052601160045260246000fd5b5060010190565b61258680620004f06000396000f3fe6080604052600436106100e85760003560e01c8063af640d0f1161008a578063d8de658711610059578063d8de65871461040c578063e200c857146104b4578063f2fde38b146104e1578063fcf696351461050157600080fd5b8063af640d0f1461035b578063b7dda85e1461037f578063b8f18359146103ac578063d63a8e11146103cc57600080fd5b8063715018a6116100c6578063715018a6146102cf5780637bbc469e146102e45780638da5cb5b146103135780639ad2e2b01461034857600080fd5b806326bed1cc146100ed5780632a546a381461010f578063680adc371461021e575b600080fd5b3480156100f957600080fd5b5061010d610108366004611cc5565b610521565b005b34801561011b57600080fd5b506101d161012a366004611d8c565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600c60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516102159190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b34801561022a57600080fd5b5061029b610239366004611d8c565b600c6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff95861681529385166020850152918416918301919091529091166060820152608001610215565b3480156102db57600080fd5b5061010d6105a2565b3480156102f057600080fd5b506103046102ff366004611d8c565b6105b6565b604051610215939291906120ea565b34801561031f57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610215565b61010d610356366004612115565b610b24565b34801561036757600080fd5b5061037160015481565b604051908152602001610215565b34801561038b57600080fd5b5061039f61039a366004611d8c565b610ba3565b6040516102159190612152565b3480156103b857600080fd5b5061010d6103c73660046121bc565b611125565b3480156103d857600080fd5b506103fc6103e73660046122a1565b600b6020526000908152604090205460ff1681565b6040519015158152602001610215565b34801561041857600080fd5b5060025460035460045460055460065460075460085461045e9673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610215565b3480156104c057600080fd5b506104d46104cf366004611d8c565b611309565b60405161021591906122bc565b3480156104ed57600080fd5b5061010d6104fc3660046122a1565b61136e565b34801561050d57600080fd5b5061010d61051c36600461235c565b61142a565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff169061054e908390369061245f565b600060405180830381855af49150503d8060008114610589576040519150601f19603f3d011682016040523d82523d6000602084013e61058e565b606091505b505090508061059c57600080fd5b50505050565b6105aa6114aa565b6105b4600061152b565b565b600a60205280600052604060002060009150905080600001604051806101200160405290816000820180546105ea9061246f565b80601f01602080910402602001604051908101604052809291908181526020018280546106169061246f565b80156106635780601f1061063857610100808354040283529160200191610663565b820191906000526020600020905b81548152906001019060200180831161064657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156106f157602002820191906000526020600020905b8154815260200190600101908083116106dd575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561074957602002820191906000526020600020905b815481526020019060010190808311610735575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156107e657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107bb575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561085557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161082a575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156108c457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610899575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561095e5760008481526020908190208301805460408051828502810185019091528181529283018282801561094a57602002820191906000526020600020905b815481526020019060010190808311610936575b5050505050815260200190600101906108f2565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109f7576000848152602090819020830180546040805182850281018501909152818152928301828280156109e357602002820191906000526020600020905b8154815260200190600101908083116109cf575b50505050508152602001906001019061098b565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a7e57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610a5c57610a5c611edf565b815260206001928301818104948501949093039092029101808411610a3d5790505b505050505081525050815250509080600e01549080600f018054610aa19061246f565b80601f0160208091040260200160405190810160405280929190818152602001828054610acd9061246f565b8015610b1a5780601f10610aef57610100808354040283529160200191610b1a565b820191906000526020600020905b815481529060010190602001808311610afd57829003601f168201915b5050505050905083565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b51908390369061245f565b600060405180830381855af49150503d8060008114610b8c576040519150601f19603f3d011682016040523d82523d6000602084013e610b91565b606091505b5050905080610b9f57600080fd5b5050565b610bab6115a0565b6000828152600a60205260409081902081516101808101909252805482906060820190839082908290610bdd9061246f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c099061246f565b8015610c565780601f10610c2b57610100808354040283529160200191610c56565b820191906000526020600020905b815481529060010190602001808311610c3957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610ce457602002820191906000526020600020905b815481526020019060010190808311610cd0575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610d3c57602002820191906000526020600020905b815481526020019060010190808311610d28575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610dd957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610dae575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e4857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e1d575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610eb757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e8c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f5157600084815260209081902083018054604080518285028101850190915281815292830182828015610f3d57602002820191906000526020600020905b815481526020019060010190808311610f29575b505050505081526020019060010190610ee5565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610fea57600084815260209081902083018054604080518285028101850190915281815292830182828015610fd657602002820191906000526020600020905b815481526020019060010190808311610fc2575b505050505081526020019060010190610f7e565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561107157602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561104f5761104f611edf565b8152602060019283018181049485019490930390920291018084116110305790505b505050505081525050815250508152602001600e8201548152602001600f8201805461109c9061246f565b80601f01602080910402602001604051908101604052809291908181526020018280546110c89061246f565b80156111155780601f106110ea57610100808354040283529160200191611115565b820191906000526020600020905b8154815290600101906020018083116110f857829003601f168201915b5050505050815250509050919050565b61112d6114aa565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054909316941693909317905560e083015180518493611203926009929101906115c7565b5090505060005b8160e0015151811015610b9f57600b60008360e001518381518110611231576112316124c2565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600b60008460e00151848151811061129c5761129c6124c2565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055611302816124f1565b905061120a565b6000818152600a602090815260409182902060030180548351818402810184019094528084526060939283018282801561136257602002820191906000526020600020905b81548152602001906001019080831161134e575b50505050509050919050565b6113766114aa565b73ffffffffffffffffffffffffffffffffffffffff811661141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6114278161152b565b50565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff1690611457908390369061245f565b600060405180830381855af49150503d8060008114611492576040519150601f19603f3d011682016040523d82523d6000602084013e611497565b606091505b50509050806114a557600080fd5b505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611415565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180606001604052806115b3611651565b815260200160008152602001606081525090565b828054828255906000526020600020908101928215611641579160200282015b8281111561164157825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906115e7565b5061164d9291506116ff565b5090565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016116fa6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b8082111561164d5760008155600101611700565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561176657611766611714565b60405290565b604051610120810167ffffffffffffffff8111828210171561176657611766611714565b6040516060810167ffffffffffffffff8111828210171561176657611766611714565b604051610100810167ffffffffffffffff8111828210171561176657611766611714565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561181e5761181e611714565b604052919050565b600067ffffffffffffffff83111561184057611840611714565b61187160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016117d7565b905082815283838301111561188557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126118ad57600080fd5b6118bc83833560208501611826565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146118e757600080fd5b919050565b600067ffffffffffffffff82111561190657611906611714565b5060051b60200190565b600082601f83011261192157600080fd5b81356020611936611931836118ec565b6117d7565b82815260059290921b8401810191818101908684111561195557600080fd5b8286015b848110156119705780358352918301918301611959565b509695505050505050565b600082601f83011261198c57600080fd5b8135602061199c611931836118ec565b82815260059290921b840181019181810190868411156119bb57600080fd5b8286015b84811015611970576119d0816118c3565b83529183019183016119bf565b600082601f8301126119ee57600080fd5b813560206119fe611931836118ec565b82815260059290921b84018101918181019086841115611a1d57600080fd5b8286015b8481101561197057803567ffffffffffffffff811115611a415760008081fd5b611a4f8986838b0101611910565b845250918301918301611a21565b600082601f830112611a6e57600080fd5b81356020611a7e611931836118ec565b82815260059290921b84018101918181019086841115611a9d57600080fd5b8286015b8481101561197057803560048110611ab95760008081fd5b8352918301918301611aa1565b600060c08284031215611ad857600080fd5b611ae0611743565b9050813567ffffffffffffffff80821115611afa57600080fd5b611b068583860161197b565b83526020840135915080821115611b1c57600080fd5b611b288583860161197b565b60208401526040840135915080821115611b4157600080fd5b611b4d8583860161197b565b60408401526060840135915080821115611b6657600080fd5b611b72858386016119dd565b60608401526080840135915080821115611b8b57600080fd5b611b97858386016119dd565b608084015260a0840135915080821115611bb057600080fd5b50611bbd84828501611a5d565b60a08301525092915050565b60006101208284031215611bdc57600080fd5b611be461176c565b9050813567ffffffffffffffff80821115611bfe57600080fd5b611c0a8583860161189c565b8352611c18602085016118c3565b6020840152611c29604085016118c3565b60408401526060840135915080821115611c4257600080fd5b611c4e85838601611910565b60608401526080840135915080821115611c6757600080fd5b611c7385838601611910565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611cac57600080fd5b611cb886828701611ac6565b8385015250505092915050565b600080600060608486031215611cda57600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611d0057600080fd5b9085019060608288031215611d1457600080fd5b611d1c611790565b823582811115611d2b57600080fd5b611d3789828601611bc9565b82525060208301356020820152604083013582811115611d5657600080fd5b80840193505087601f840112611d6b57600080fd5b611d7a88843560208601611826565b60408201528093505050509250925092565b600060208284031215611d9e57600080fd5b5035919050565b6000815180845260005b81811015611dcb57602081850181015186830182015201611daf565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611e3957815187529582019590820190600101611e1d565b509495945050505050565b600081518084526020808501945080840160005b83811015611e3957815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611e58565b600081518084526020808501808196508360051b8101915082860160005b85811015611ed2578284038952611ec0848351611e09565b98850198935090840190600101611ea8565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c08452611f2360c0850182611e44565b905060208084015185830382870152611f3c8382611e44565b92505060408401518583036040870152611f568382611e44565b92505060608401518583036060870152611f708382611e8a565b92505060808401518583036080870152611f8a8382611e8a565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156120005785516004808210611fed577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101611fae565b5090979650505050505050565b6000610120825181855261202382860182611da5565b915050602083015161204d602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612075604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261208d8282611e09565b915050608083015184820360808601526120a78282611e09565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526120e08382611f0e565b9695505050505050565b6060815260006120fd606083018661200d565b84602084015282810360408401526120e08185611da5565b60006020828403121561212757600080fd5b813567ffffffffffffffff81111561213e57600080fd5b61214a84828501611ac6565b949350505050565b60208152600082516060602084015261216e608084018261200d565b90506020840151604084015260408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526121b38282611da5565b95945050505050565b6000602082840312156121ce57600080fd5b813567ffffffffffffffff808211156121e657600080fd5b9083019061010082860312156121fb57600080fd5b6122036117b3565b61220c836118c3565b815261221a602084016118c3565b602082015261222b604084016118c3565b604082015261223c606084016118c3565b606082015261224d608084016118c3565b608082015261225e60a084016118c3565b60a082015261226f60c084016118c3565b60c082015260e08301358281111561228657600080fd5b6122928782860161197b565b60e08301525095945050505050565b6000602082840312156122b357600080fd5b6118bc826118c3565b6020815260006118bc6020830184611e09565b803563ffffffff811681146118e757600080fd5b600082601f8301126122f457600080fd5b81356020612304611931836118ec565b82815260059290921b8401810191818101908684111561232357600080fd5b8286015b848110156119705780356008811061233f5760008081fd5b8352918301918301612327565b803580151581146118e757600080fd5b6000806040838503121561236f57600080fd5b82359150602083013567ffffffffffffffff8082111561238e57600080fd5b9084019061012082870312156123a357600080fd5b6123ab61176c565b8235828111156123ba57600080fd5b6123c688828601611bc9565b8252506020830135602082015260408301356040820152606083013560608201526123f3608084016122cf565b608082015261240460a084016122cf565b60a082015261241560c084016122cf565b60c082015260e08301358281111561242c57600080fd5b612438888286016122e3565b60e083015250610100915061244e82840161234c565b828201528093505050509250929050565b8183823760009101908152919050565b600181811c9082168061248357607f821691505b6020821081036124bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612549577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122095a0fe406df9ea6452326f697b9b677473dfa187982de30dc22745cf93ba856e64736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
