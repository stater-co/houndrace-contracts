/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002b0e38038062002b0e8339810160408190526200003891620003c0565b806200004433620001e3565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000233565b5090505060005b81610100015151811015620001da57600c60008361010001518381518110620001405762000140620004d1565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600c60008461010001518481518110620001955762000195620004d1565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001d281620004e7565b905062000113565b5050506200050f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028b579160200282015b828111156200028b57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000254565b50620002999291506200029d565b5090565b5b808211156200029957600081556001016200029e565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620002f057620002f0620002b4565b60405290565b80516001600160a01b03811681146200030e57600080fd5b919050565b600082601f8301126200032557600080fd5b815160206001600160401b0380831115620003445762000344620002b4565b8260051b604051601f19603f830116810181811084821117156200036c576200036c620002b4565b6040529384528581018301938381019250878511156200038b57600080fd5b83870191505b84821015620003b557620003a582620002f6565b8352918301919083019062000391565b979650505050505050565b600060208284031215620003d357600080fd5b81516001600160401b0380821115620003eb57600080fd5b9083019061012082860312156200040157600080fd5b6200040b620002ca565b6200041683620002f6565b81526200042660208401620002f6565b60208201526200043960408401620002f6565b60408201526200044c60608401620002f6565b60608201526200045f60808401620002f6565b60808201526200047260a08401620002f6565b60a08201526200048560c08401620002f6565b60c08201526200049860e08401620002f6565b60e08201526101008084015183811115620004b257600080fd5b620004c08882870162000313565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200050857634e487b7160e01b600052601160045260246000fd5b5060010190565b6125ef806200051f6000396000f3fe6080604052600436106100e85760003560e01c8063acb9671a1161008a578063d8de658711610059578063d8de65871461040d578063e200c857146104c4578063f2fde38b146104f1578063fcf696351461051157600080fd5b8063acb9671a1461035c578063af640d0f1461037c578063b7dda85e146103a0578063d63a8e11146103cd57600080fd5b8063715018a6116100c6578063715018a6146102cf5780637bbc469e146102e45780638da5cb5b146103145780639ad2e2b01461034957600080fd5b80632a546a38146100ed57806330e54438146101fc578063680adc371461021e575b600080fd5b3480156100f957600080fd5b506101af610108366004611753565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600d60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516101f39190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b34801561020857600080fd5b5061021c610217366004611cf9565b610531565b005b34801561022a57600080fd5b5061029b610239366004611753565b600d6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff958616815293851660208501529184169183019190915290911660608201526080016101f3565b3480156102db57600080fd5b5061021c6105b2565b3480156102f057600080fd5b506103046102ff366004611753565b6105c6565b6040516101f39493929190612123565b34801561032057600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101f3565b61021c61035736600461215f565b610b3a565b34801561036857600080fd5b5061021c61037736600461219c565b610bb9565b34801561038857600080fd5b5061039260015481565b6040519081526020016101f3565b3480156103ac57600080fd5b506103c06103bb366004611753565b610db5565b6040516101f39190612296565b3480156103d957600080fd5b506103fd6103e836600461230a565b600c6020526000908152604090205460ff1681565b60405190151581526020016101f3565b34801561041957600080fd5b506002546003546004546005546006546007546008546009546104659773ffffffffffffffffffffffffffffffffffffffff908116978116968116958116948116938116928116911688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a16815297891660208901529588169587019590955292861660608601529085166080850152841660a0840152831660c083015290911660e0820152610100016101f3565b3480156104d057600080fd5b506104e46104df366004611753565b611341565b6040516101f39190612325565b3480156104fd57600080fd5b5061021c61050c36600461230a565b6113a6565b34801561051d57600080fd5b5061021c61052c3660046123c5565b611462565b60075460405160009173ffffffffffffffffffffffffffffffffffffffff169061055e90839036906124c8565b600060405180830381855af49150503d8060008114610599576040519150601f19603f3d011682016040523d82523d6000602084013e61059e565b606091505b50509050806105ac57600080fd5b50505050565b6105ba6114e2565b6105c46000611563565b565b600b60205280600052604060002060009150905080600001604051806101200160405290816000820180546105fa906124d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610626906124d8565b80156106735780601f1061064857610100808354040283529160200191610673565b820191906000526020600020905b81548152906001019060200180831161065657829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561070157602002820191906000526020600020905b8154815260200190600101908083116106ed575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561075957602002820191906000526020600020905b815481526020019060010190808311610745575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156107f657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107cb575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561086557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161083a575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156108d457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116108a9575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561096e5760008481526020908190208301805460408051828502810185019091528181529283018282801561095a57602002820191906000526020600020905b815481526020019060010190808311610946575b505050505081526020019060010190610902565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610a07576000848152602090819020830180546040805182850281018501909152818152928301828280156109f357602002820191906000526020600020905b8154815260200190600101908083116109df575b50505050508152602001906001019061099b565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a8e57602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610a6c57610a6c611f25565b815260206001928301818104948501949093039092029101808411610a4d5790505b505050505081525050815250509080600e01549080600f015490806010018054610ab7906124d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae3906124d8565b8015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b5050505050905084565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b6790839036906124c8565b600060405180830381855af49150503d8060008114610ba2576040519150601f19603f3d011682016040523d82523d6000602084013e610ba7565b606091505b5050905080610bb557600080fd5b5050565b610bc16114e2565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e085015160098054909316941693909317905561010083015180518493610cac92600a929101906115d8565b5090505060005b81610100015151811015610bb557600c60008361010001518381518110610cdc57610cdc61252b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600c60008461010001518481518110610d4857610d4861252b565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610dae8161255a565b9050610cb3565b610dbd611662565b6000828152600b60205260409081902081516101a08101909252805482906080820190839082908290610def906124d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1b906124d8565b8015610e685780601f10610e3d57610100808354040283529160200191610e68565b820191906000526020600020905b815481529060010190602001808311610e4b57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610ef657602002820191906000526020600020905b815481526020019060010190808311610ee2575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610f4e57602002820191906000526020600020905b815481526020019060010190808311610f3a575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610feb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fc0575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561105a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161102f575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156110c957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161109e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111635760008481526020908190208301805460408051828502810185019091528181529283018282801561114f57602002820191906000526020600020905b81548152602001906001019080831161113b575b5050505050815260200190600101906110f7565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156111fc576000848152602090819020830180546040805182850281018501909152818152928301828280156111e857602002820191906000526020600020905b8154815260200190600101908083116111d4575b505050505081526020019060010190611190565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561128357602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561126157611261611f25565b8152602060019283018181049485019490930390920291018084116112425790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546112b8906124d8565b80601f01602080910402602001604051908101604052809291908181526020018280546112e4906124d8565b80156113315780601f1061130657610100808354040283529160200191611331565b820191906000526020600020905b81548152906001019060200180831161131457829003601f168201915b5050505050815250509050919050565b6000818152600b602090815260409182902060030180548351818402810184019094528084526060939283018282801561139a57602002820191906000526020600020905b815481526020019060010190808311611386575b50505050509050919050565b6113ae6114e2565b73ffffffffffffffffffffffffffffffffffffffff8116611456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61145f81611563565b50565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff169061148f90839036906124c8565b600060405180830381855af49150503d80600081146114ca576040519150601f19603f3d011682016040523d82523d6000602084013e6114cf565b606091505b50509050806114dd57600080fd5b505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161144d565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611652579160200282015b8281111561165257825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906115f8565b5061165e929150611690565b5090565b60405180608001604052806116756116a5565b81526020016000815260200160008152602001606081525090565b5b8082111561165e5760008155600101611691565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200161174e6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b60006020828403121561176557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156117be576117be61176c565b60405290565b604051610120810167ffffffffffffffff811182821017156117be576117be61176c565b6040516080810167ffffffffffffffff811182821017156117be576117be61176c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118525761185261176c565b604052919050565b600067ffffffffffffffff8311156118745761187461176c565b6118a560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161180b565b90508281528383830111156118b957600080fd5b828260208301376000602084830101529392505050565b600082601f8301126118e157600080fd5b6118f08383356020850161185a565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461191b57600080fd5b919050565b600067ffffffffffffffff82111561193a5761193a61176c565b5060051b60200190565b600082601f83011261195557600080fd5b8135602061196a61196583611920565b61180b565b82815260059290921b8401810191818101908684111561198957600080fd5b8286015b848110156119a4578035835291830191830161198d565b509695505050505050565b600082601f8301126119c057600080fd5b813560206119d061196583611920565b82815260059290921b840181019181810190868411156119ef57600080fd5b8286015b848110156119a457611a04816118f7565b83529183019183016119f3565b600082601f830112611a2257600080fd5b81356020611a3261196583611920565b82815260059290921b84018101918181019086841115611a5157600080fd5b8286015b848110156119a457803567ffffffffffffffff811115611a755760008081fd5b611a838986838b0101611944565b845250918301918301611a55565b600082601f830112611aa257600080fd5b81356020611ab261196583611920565b82815260059290921b84018101918181019086841115611ad157600080fd5b8286015b848110156119a457803560048110611aed5760008081fd5b8352918301918301611ad5565b600060c08284031215611b0c57600080fd5b611b1461179b565b9050813567ffffffffffffffff80821115611b2e57600080fd5b611b3a858386016119af565b83526020840135915080821115611b5057600080fd5b611b5c858386016119af565b60208401526040840135915080821115611b7557600080fd5b611b81858386016119af565b60408401526060840135915080821115611b9a57600080fd5b611ba685838601611a11565b60608401526080840135915080821115611bbf57600080fd5b611bcb85838601611a11565b608084015260a0840135915080821115611be457600080fd5b50611bf184828501611a91565b60a08301525092915050565b60006101208284031215611c1057600080fd5b611c186117c4565b9050813567ffffffffffffffff80821115611c3257600080fd5b611c3e858386016118d0565b8352611c4c602085016118f7565b6020840152611c5d604085016118f7565b60408401526060840135915080821115611c7657600080fd5b611c8285838601611944565b60608401526080840135915080821115611c9b57600080fd5b611ca785838601611944565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611ce057600080fd5b611cec86828701611afa565b8385015250505092915050565b600080600060608486031215611d0e57600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611d3457600080fd5b9085019060808288031215611d4857600080fd5b611d506117e8565b823582811115611d5f57600080fd5b611d6b89828601611bfd565b8252506020830135602082015260408301356040820152606083013582811115611d9457600080fd5b80840193505087601f840112611da957600080fd5b611db88884356020860161185a565b60608201528093505050509250925092565b6000815180845260005b81811015611df057602081850181015186830182015201611dd4565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611e5e57815187529582019590820190600101611e42565b509495945050505050565b600081518084526020808501945080840160005b83811015611e5e57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611e7d565b600082825180855260208086019550808260051b84010181860160005b84811015611f18577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018952611f06838351611e2e565b98840198925090830190600101611ecc565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c08452611f6960c0850182611e69565b905060208084015185830382870152611f828382611e69565b92505060408401518583036040870152611f9c8382611e69565b92505060608401518583036060870152611fb68382611eaf565b92505060808401518583036080870152611fd08382611eaf565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015611f185785516004808210612033577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101611ff4565b6000610120825181855261205c82860182611dca565b9150506020830151612086602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516120ae604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526120c68282611e2e565b915050608083015184820360808601526120e08282611e2e565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526121198382611f54565b9695505050505050565b6080815260006121366080830187612046565b85602084015284604084015282810360608401526121548185611dca565b979650505050505050565b60006020828403121561217157600080fd5b813567ffffffffffffffff81111561218857600080fd5b61219484828501611afa565b949350505050565b6000602082840312156121ae57600080fd5b813567ffffffffffffffff808211156121c657600080fd5b9083019061012082860312156121db57600080fd5b6121e36117c4565b6121ec836118f7565b81526121fa602084016118f7565b602082015261220b604084016118f7565b604082015261221c606084016118f7565b606082015261222d608084016118f7565b608082015261223e60a084016118f7565b60a082015261224f60c084016118f7565b60c082015261226060e084016118f7565b60e0820152610100808401358381111561227957600080fd5b612285888287016119af565b918301919091525095945050505050565b6020815260008251608060208401526122b260a0840182612046565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526123018282611dca565b95945050505050565b60006020828403121561231c57600080fd5b6118f0826118f7565b6020815260006118f06020830184611e2e565b803563ffffffff8116811461191b57600080fd5b600082601f83011261235d57600080fd5b8135602061236d61196583611920565b82815260059290921b8401810191818101908684111561238c57600080fd5b8286015b848110156119a4578035600781106123a85760008081fd5b8352918301918301612390565b8035801515811461191b57600080fd5b600080604083850312156123d857600080fd5b82359150602083013567ffffffffffffffff808211156123f757600080fd5b90840190610120828703121561240c57600080fd5b6124146117c4565b82358281111561242357600080fd5b61242f88828601611bfd565b82525060208301356020820152604083013560408201526060830135606082015261245c60808401612338565b608082015261246d60a08401612338565b60a082015261247e60c08401612338565b60c082015260e08301358281111561249557600080fd5b6124a18882860161234c565b60e08301525061010091506124b78284016123b5565b828201528093505050509250929050565b8183823760009101908152919050565b600181811c908216806124ec57607f821691505b602082108103612525577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212204ed286430c27aad47f3d1a2bb753269b15d0d8073791323b8ba609c258f3253464736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
