/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002d6438038062002d648339810160408190526200003891620003ff565b80620000443362000211565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b9291019062000261565b506101409190910151600a909101805460ff191691151591909117905560005b816101200151518110156200020857600e600083610120015183815181106200016e576200016e6200053a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110620001c357620001c36200053a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002008162000550565b905062000141565b50505062000578565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000282565b50620002c7929150620002cb565b5090565b5b80821115620002c75760008155600101620002cc565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156200031e576200031e620002e2565b60405290565b80516001600160a01b03811681146200033c57600080fd5b919050565b600082601f8301126200035357600080fd5b815160206001600160401b0380831115620003725762000372620002e2565b8260051b604051601f19603f830116810181811084821117156200039a576200039a620002e2565b604052938452858101830193838101925087851115620003b957600080fd5b83870191505b84821015620003e357620003d38262000324565b83529183019190830190620003bf565b979650505050505050565b805180151581146200033c57600080fd5b6000602082840312156200041257600080fd5b81516001600160401b03808211156200042a57600080fd5b9083019061016082860312156200044057600080fd5b6200044a620002f8565b620004558362000324565b8152620004656020840162000324565b6020820152620004786040840162000324565b60408201526200048b6060840162000324565b60608201526200049e6080840162000324565b6080820152620004b160a0840162000324565b60a0820152620004c460c0840162000324565b60c0820152620004d760e0840162000324565b60e0820152610100620004ec81850162000324565b9082015261012083810151838111156200050557600080fd5b620005138882870162000341565b82840152505061014091506200052b828401620003ee565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200057157634e487b7160e01b600052601160045260246000fd5b5060010190565b6127dc80620005886000396000f3fe6080604052600436106100f35760003560e01c80639ad2e2b01161008a578063d8de658711610059578063d8de658714610438578063e11523431461050e578063e200c8571461052e578063f2fde38b1461055b57600080fd5b80639ad2e2b014610394578063af640d0f146103a7578063b7dda85e146103cb578063d63a8e11146103f857600080fd5b8063680adc37116100c6578063680adc3714610269578063715018a61461031a5780637bbc469e1461032f5780638da5cb5b1461035f57600080fd5b806328c697b6146100f85780632a546a381461011a57806330e54438146102295780636574105b14610249575b600080fd5b34801561010457600080fd5b50610118610113366004611f5a565b61057b565b005b34801561012657600080fd5b506101dc61013536600461205b565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600f60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516102209190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b34801561023557600080fd5b50610118610244366004612074565b6105fb565b34801561025557600080fd5b50610118610264366004612145565b61067c565b34801561027557600080fd5b506102e661028436600461205b565b600f6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff95861681529385166020850152918416918301919091529091166060820152608001610220565b34801561032657600080fd5b506101186108c8565b34801561033b57600080fd5b5061034f61034a36600461205b565b6108dc565b604051610220949392919061259a565b34801561036b57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610220565b6101186103a23660046125d6565b610e50565b3480156103b357600080fd5b506103bd60015481565b604051908152602001610220565b3480156103d757600080fd5b506103eb6103e636600461205b565b610ecb565b6040516102209190612613565b34801561040457600080fd5b50610428610413366004612687565b600e6020526000908152604090205460ff1681565b6040519015158152602001610220565b34801561044457600080fd5b50600254600354600454600554600654600754600854600954600a54600c5461049d9973ffffffffffffffffffffffffffffffffffffffff90811699811698811697811696811695811694811693811692169060ff168a565b6040805173ffffffffffffffffffffffffffffffffffffffff9b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c0850152841660e084015290921661010082015290151561012082015261014001610220565b34801561051a57600080fd5b5061011861052936600461205b565b611457565b34801561053a57600080fd5b5061054e61054936600461205b565b611592565b60405161022091906126a2565b34801561056757600080fd5b50610118610576366004612687565b6115f7565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16906105a890839036906126b5565b600060405180830381855af49150503d80600081146105e3576040519150601f19603f3d011682016040523d82523d6000602084013e6105e8565b606091505b50509050806105f657600080fd5b505050565b60085460405160009173ffffffffffffffffffffffffffffffffffffffff169061062890839036906126b5565b600060405180830381855af49150503d8060008114610663576040519150601f19603f3d011682016040523d82523d6000602084013e610668565b606091505b505090508061067657600080fd5b50505050565b6106846116ab565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a805490931694169390931790556101208301518051849361078492600b929101906117a1565b506101409190910151600a90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560005b816101200151518110156108c457600e600083610120015183815181106107eb576107eb6126c5565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110610857576108576126c5565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556108bd816126f4565b90506107c2565b5050565b6108d06116ab565b6108da600061172c565b565b600d602052806000526040600020600091509050806000016040518061012001604052908160008201805461091090612753565b80601f016020809104026020016040519081016040528092919081815260200182805461093c90612753565b80156109895780601f1061095e57610100808354040283529160200191610989565b820191906000526020600020905b81548152906001019060200180831161096c57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610a1757602002820191906000526020600020905b815481526020019060010190808311610a03575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610a6f57602002820191906000526020600020905b815481526020019060010190808311610a5b575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610b0c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ae1575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610b7b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b50575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610bea57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610bbf575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610c8457600084815260209081902083018054604080518285028101850190915281815292830182828015610c7057602002820191906000526020600020905b815481526020019060010190808311610c5c575b505050505081526020019060010190610c18565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610d1d57600084815260209081902083018054604080518285028101850190915281815292830182828015610d0957602002820191906000526020600020905b815481526020019060010190808311610cf5575b505050505081526020019060010190610cb1565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610da457602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610d8257610d8261239c565b815260206001928301818104948501949093039092029101808411610d635790505b505050505081525050815250509080600e01549080600f015490806010018054610dcd90612753565b80601f0160208091040260200160405190810160405280929190818152602001828054610df990612753565b8015610e465780601f10610e1b57610100808354040283529160200191610e46565b820191906000526020600020905b815481529060010190602001808311610e2957829003601f168201915b5050505050905084565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff1690610e7d90839036906126b5565b600060405180830381855af49150503d8060008114610eb8576040519150601f19603f3d011682016040523d82523d6000602084013e610ebd565b606091505b50509050806108c457600080fd5b610ed361182b565b6000828152600d60205260409081902081516101a08101909252805482906080820190839082908290610f0590612753565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3190612753565b8015610f7e5780601f10610f5357610100808354040283529160200191610f7e565b820191906000526020600020905b815481529060010190602001808311610f6157829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561100c57602002820191906000526020600020905b815481526020019060010190808311610ff8575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561106457602002820191906000526020600020905b815481526020019060010190808311611050575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561110157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110d6575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561117057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611145575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156111df57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116111b4575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112795760008481526020908190208301805460408051828502810185019091528181529283018282801561126557602002820191906000526020600020905b815481526020019060010190808311611251575b50505050508152602001906001019061120d565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611312576000848152602090819020830180546040805182850281018501909152818152928301828280156112fe57602002820191906000526020600020905b8154815260200190600101908083116112ea575b5050505050815260200190600101906112a6565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561139957602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156113775761137761239c565b8152602060019283018181049485019490930390920291018084116113585790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546113ce90612753565b80601f01602080910402602001604051908101604052809291908181526020018280546113fa90612753565b80156114475780601f1061141c57610100808354040283529160200191611447565b820191906000526020600020905b81548152906001019060200180831161142a57829003601f168201915b5050505050815250509050919050565b61145f6116ab565b478111156114f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f1935050505061158f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f20776974686472617700000000000060448201526064016114eb565b50565b6000818152600d60209081526040918290206003018054835181840281018401909452808452606093928301828280156115eb57602002820191906000526020600020905b8154815260200190600101908083116115d7575b50505050509050919050565b6115ff6116ab565b73ffffffffffffffffffffffffffffffffffffffff81166116a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016114eb565b61158f8161172c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114eb565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561181b579160200282015b8281111561181b57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906117c1565b50611827929150611859565b5090565b604051806080016040528061183e61186e565b81526020016000815260200160008152602001606081525090565b5b80821115611827576000815560010161185a565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016119176040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561196e5761196e61191c565b60405290565b604051610120810167ffffffffffffffff8111828210171561196e5761196e61191c565b6040516080810167ffffffffffffffff8111828210171561196e5761196e61191c565b604051610160810167ffffffffffffffff8111828210171561196e5761196e61191c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611a2657611a2661191c565b604052919050565b600067ffffffffffffffff831115611a4857611a4861191c565b611a7960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016119df565b9050828152838383011115611a8d57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611ab557600080fd5b611ac483833560208501611a2e565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611aef57600080fd5b919050565b600067ffffffffffffffff821115611b0e57611b0e61191c565b5060051b60200190565b600082601f830112611b2957600080fd5b81356020611b3e611b3983611af4565b6119df565b82815260059290921b84018101918181019086841115611b5d57600080fd5b8286015b84811015611b785780358352918301918301611b61565b509695505050505050565b600082601f830112611b9457600080fd5b81356020611ba4611b3983611af4565b82815260059290921b84018101918181019086841115611bc357600080fd5b8286015b84811015611b7857611bd881611acb565b8352918301918301611bc7565b600082601f830112611bf657600080fd5b81356020611c06611b3983611af4565b82815260059290921b84018101918181019086841115611c2557600080fd5b8286015b84811015611b7857803567ffffffffffffffff811115611c495760008081fd5b611c578986838b0101611b18565b845250918301918301611c29565b600082601f830112611c7657600080fd5b81356020611c86611b3983611af4565b82815260059290921b84018101918181019086841115611ca557600080fd5b8286015b84811015611b7857803560048110611cc15760008081fd5b8352918301918301611ca9565b600060c08284031215611ce057600080fd5b611ce861194b565b9050813567ffffffffffffffff80821115611d0257600080fd5b611d0e85838601611b83565b83526020840135915080821115611d2457600080fd5b611d3085838601611b83565b60208401526040840135915080821115611d4957600080fd5b611d5585838601611b83565b60408401526060840135915080821115611d6e57600080fd5b611d7a85838601611be5565b60608401526080840135915080821115611d9357600080fd5b611d9f85838601611be5565b608084015260a0840135915080821115611db857600080fd5b50611dc584828501611c65565b60a08301525092915050565b60006101208284031215611de457600080fd5b611dec611974565b9050813567ffffffffffffffff80821115611e0657600080fd5b611e1285838601611aa4565b8352611e2060208501611acb565b6020840152611e3160408501611acb565b60408401526060840135915080821115611e4a57600080fd5b611e5685838601611b18565b60608401526080840135915080821115611e6f57600080fd5b611e7b85838601611b18565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611eb457600080fd5b611ec086828701611cce565b8385015250505092915050565b803563ffffffff81168114611aef57600080fd5b600082601f830112611ef257600080fd5b81356020611f02611b3983611af4565b82815260059290921b84018101918181019086841115611f2157600080fd5b8286015b84811015611b7857803560078110611f3d5760008081fd5b8352918301918301611f25565b80358015158114611aef57600080fd5b60008060408385031215611f6d57600080fd5b823567ffffffffffffffff80821115611f8557600080fd5b908401906101208287031215611f9a57600080fd5b611fa2611974565b823582811115611fb157600080fd5b611fbd88828601611dd1565b825250602083013560208201526040830135604082015260608301356060820152611fea60808401611ecd565b6080820152611ffb60a08401611ecd565b60a082015261200c60c08401611ecd565b60c082015260e08301358281111561202357600080fd5b61202f88828601611ee1565b60e0830152506101009150612045828401611f4a565b9181019190915295602094909401359450505050565b60006020828403121561206d57600080fd5b5035919050565b60008060006060848603121561208957600080fd5b8335925060208401359150604084013567ffffffffffffffff808211156120af57600080fd5b90850190608082880312156120c357600080fd5b6120cb611998565b8235828111156120da57600080fd5b6120e689828601611dd1565b825250602083013560208201526040830135604082015260608301358281111561210f57600080fd5b80840193505087601f84011261212457600080fd5b61213388843560208601611a2e565b60608201528093505050509250925092565b60006020828403121561215757600080fd5b813567ffffffffffffffff8082111561216f57600080fd5b90830190610160828603121561218457600080fd5b61218c6119bb565b61219583611acb565b81526121a360208401611acb565b60208201526121b460408401611acb565b60408201526121c560608401611acb565b60608201526121d660808401611acb565b60808201526121e760a08401611acb565b60a08201526121f860c08401611acb565b60c082015261220960e08401611acb565b60e082015261010061221c818501611acb565b90820152610120838101358381111561223457600080fd5b61224088828701611b83565b8284015250506101409150612256828401611f4a565b91810191909152949350505050565b6000815180845260005b8181101561228b5760208185018101518683018201520161226f565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156122f9578151875295820195908201906001016122dd565b509495945050505050565b600081518084526020808501945080840160005b838110156122f957815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612318565b6000815180845260208085019450848260051b860182860160005b8581101561238f57838303895261237d8383516122c9565b98850198925090840190600101612365565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526123e060c0850182612304565b9050602080840151858303828701526123f98382612304565b925050604084015185830360408701526124138382612304565b9250506060840151858303606087015261242d838261234a565b92505060808401518583036080870152612447838261234a565b60a08681015188830391890191909152805180835290840194506000925090830190825b8181101561238f57855160048082106124aa577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b508352948401949184019160010161246b565b600061012082518185526124d382860182612265565b91505060208301516124fd602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612525604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261253d82826122c9565b9150506080830151848203608086015261255782826122c9565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261259083826123cb565b9695505050505050565b6080815260006125ad60808301876124bd565b85602084015284604084015282810360608401526125cb8185612265565b979650505050505050565b6000602082840312156125e857600080fd5b813567ffffffffffffffff8111156125ff57600080fd5b61260b84828501611cce565b949350505050565b60208152600082516080602084015261262f60a08401826124bd565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301608085015261267e8282612265565b95945050505050565b60006020828403121561269957600080fd5b611ac482611acb565b602081526000611ac460208301846122c9565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361274c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061276757607f821691505b6020821081036127a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212208f223f0d06e77ffefc9867988584a918cdc967c08f42064153470e2bd83ba3ed64736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
