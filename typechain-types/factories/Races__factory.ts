/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620027f9380380620027f98339810160408190526200003891620003ea565b806200004433620001fc565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a929101906200024c565b5061012091909101516009909101805460ff191691151591909117905560005b81610100015151811015620001f357600d6000836101000151838151811062000159576200015962000511565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110620001ae57620001ae62000511565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001eb8162000527565b90506200012c565b5050506200054f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002a4579160200282015b82811115620002a457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200026d565b50620002b2929150620002b6565b5090565b5b80821115620002b25760008155600101620002b7565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003095762000309620002cd565b60405290565b80516001600160a01b03811681146200032757600080fd5b919050565b600082601f8301126200033e57600080fd5b815160206001600160401b03808311156200035d576200035d620002cd565b8260051b604051601f19603f83011681018181108482111715620003855762000385620002cd565b604052938452858101830193838101925087851115620003a457600080fd5b83870191505b84821015620003ce57620003be826200030f565b83529183019190830190620003aa565b979650505050505050565b805180151581146200032757600080fd5b600060208284031215620003fd57600080fd5b81516001600160401b03808211156200041557600080fd5b9083019061014082860312156200042b57600080fd5b62000435620002e3565b62000440836200030f565b815262000450602084016200030f565b602082015262000463604084016200030f565b604082015262000476606084016200030f565b606082015262000489608084016200030f565b60808201526200049c60a084016200030f565b60a0820152620004af60c084016200030f565b60c0820152620004c260e084016200030f565b60e08201526101008084015183811115620004dc57600080fd5b620004ea888287016200032c565b828401525050610120915062000502828401620003d9565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200054857634e487b7160e01b600052601160045260246000fd5b5060010190565b61229a806200055f6000396000f3fe6080604052600436106100c35760003560e01c806326e42cf4146100c85780632a546a38146100ea5780635469bf73146101d0578063680adc37146101f0578063715018a6146102785780637bbc469e1461028d5780638da5cb5b146102bd5780639ad2e2b0146102ea578063a6201872146102fd578063af640d0f1461031d578063b7dda85e14610341578063d63a8e111461036e578063d8de6587146103ae578063e11523431461045b578063e200c8571461047b578063f2fde38b146104a8575b600080fd5b3480156100d457600080fd5b506100e86100e33660046117a2565b6104c8565b005b3480156100f657600080fd5b506101846101053660046118af565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600e6020908152604091829020825160808101845290546001600160401b038082168352600160401b8204811693830193909352600160801b8104831693820193909352600160c01b90920416606082015290565b6040516101c7919081516001600160401b039081168252602080840151821690830152604083810151821690830152606092830151169181019190915260800190565b60405180910390f35b3480156101dc57600080fd5b506100e86101eb366004611c9a565b610677565b3480156101fc57600080fd5b5061024561020b3660046118af565b600e602052600090815260409020546001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b03958616815293851660208501529184169183019190915290911660608201526080016101c7565b34801561028457600080fd5b506100e86106ea565b34801561029957600080fd5b506102ad6102a83660046118af565b6106fe565b6040516101c7949392919061201a565b3480156102c957600080fd5b506102d2610c3e565b6040516001600160a01b0390911681526020016101c7565b6100e86102f8366004612056565b610c4d565b34801561030957600080fd5b506100e8610318366004612092565b610cbb565b34801561032957600080fd5b5061033360015481565b6040519081526020016101c7565b34801561034d57600080fd5b5061036161035c3660046118af565b610cdb565b6040516101c79190612159565b34801561037a57600080fd5b5061039e6103893660046121af565b600d6020526000908152604090205460ff1681565b60405190151581526020016101c7565b3480156103ba57600080fd5b50600254600354600454600554600654600754600854600954600b54610400986001600160a01b0390811698811697811696811695811694811693811692169060ff1689565b604080516001600160a01b039a8b168152988a1660208a01529689169688019690965293871660608701529186166080860152851660a0850152841660c084015290921660e0820152901515610100820152610120016101c7565b34801561046757600080fd5b506100e86104763660046118af565b611233565b34801561048757600080fd5b5061049b6104963660046118af565b611323565b6040516101c791906121ca565b3480156104b457600080fd5b506100e86104c33660046121af565b611388565b6104d06113fe565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e08501516009805490931694169390931790556101008301518051849361059692600a929101906114ad565b5061012091909101516009909101805460ff191691151591909117905560005b8161010001515181101561067357600d600083610100015183815181106105df576105df6121dd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600d60008461010001518481518110610631576106316121dd565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561066c816121f3565b90506105b6565b5050565b6005546040516000916001600160a01b031690610697908390369061221a565b600060405180830381855af49150503d80600081146106d2576040519150601f19603f3d011682016040523d82523d6000602084013e6106d7565b606091505b50509050806106e557600080fd5b505050565b6106f26113fe565b6106fc600061145d565b565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546107329061222a565b80601f016020809104026020016040519081016040528092919081815260200182805461075e9061222a565b80156107ab5780601f10610780576101008083540402835291602001916107ab565b820191906000526020600020905b81548152906001019060200180831161078e57829003601f168201915b505050918352505060018201546001600160a01b039081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561082c57602002820191906000526020600020905b815481526020019060010190808311610818575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561088457602002820191906000526020600020905b815481526020019060010190808311610870575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561091457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108f6575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561097657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610958575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156109d857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109ba575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a7257600084815260209081902083018054604080518285028101850190915281815292830182828015610a5e57602002820191906000526020600020905b815481526020019060010190808311610a4a575b505050505081526020019060010190610a06565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b0b57600084815260209081902083018054604080518285028101850190915281815292830182828015610af757602002820191906000526020600020905b815481526020019060010190808311610ae3575b505050505081526020019060010190610a9f565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610b9257602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610b7057610b70611e78565b815260206001928301818104948501949093039092029101808411610b515790505b505050505081525050815250509080600e01549080600f015490806010018054610bbb9061222a565b80601f0160208091040260200160405190810160405280929190818152602001828054610be79061222a565b8015610c345780601f10610c0957610100808354040283529160200191610c34565b820191906000526020600020905b815481529060010190602001808311610c1757829003601f168201915b5050505050905084565b6000546001600160a01b031690565b6005546040516000916001600160a01b031690610c6d908390369061221a565b600060405180830381855af49150503d8060008114610ca8576040519150601f19603f3d011682016040523d82523d6000602084013e610cad565b606091505b505090508061067357600080fd5b6008546040516000916001600160a01b031690610697908390369061221a565b610ce3611512565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610d159061222a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d419061222a565b8015610d8e5780601f10610d6357610100808354040283529160200191610d8e565b820191906000526020600020905b815481529060010190602001808311610d7157829003601f168201915b505050918352505060018201546001600160a01b0390811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610e0f57602002820191906000526020600020905b815481526020019060010190808311610dfb575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610e6757602002820191906000526020600020905b815481526020019060010190808311610e53575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610ef757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ed9575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f5957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f3b575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610fbb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f9d575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110555760008481526020908190208301805460408051828502810185019091528181529283018282801561104157602002820191906000526020600020905b81548152602001906001019080831161102d575b505050505081526020019060010190610fe9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110ee576000848152602090819020830180546040805182850281018501909152818152928301828280156110da57602002820191906000526020600020905b8154815260200190600101908083116110c6575b505050505081526020019060010190611082565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561117557602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561115357611153611e78565b8152602060019283018181049485019490930390920291018084116111345790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546111aa9061222a565b80601f01602080910402602001604051908101604052809291908181526020018280546111d69061222a565b80156112235780601f106111f857610100808354040283529160200191611223565b820191906000526020600020905b81548152906001019060200180831161120657829003601f168201915b5050505050815250509050919050565b61123b6113fe565b478111156112a85760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b6112b0610c3e565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506113205760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b604482015260640161129f565b50565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561137c57602002820191906000526020600020905b815481526020019060010190808311611368575b50505050509050919050565b6113906113fe565b6001600160a01b0381166113f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161129f565b6113208161145d565b33611407610c3e565b6001600160a01b0316146106fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161129f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611502579160200282015b8281111561150257825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906114cd565b5061150e929150611540565b5090565b6040518060800160405280611525611555565b81526020016000815260200160008152602001606081525090565b5b8082111561150e5760008155600101611541565b6040518061012001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016115e46040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715611622576116226115e9565b60405290565b60405160c081016001600160401b0381118282101715611622576116226115e9565b60405161012081016001600160401b0381118282101715611622576116226115e9565b60405160e081016001600160401b0381118282101715611622576116226115e9565b604051608081016001600160401b0381118282101715611622576116226115e9565b604051601f8201601f191681016001600160401b03811182821017156116d9576116d96115e9565b604052919050565b80356001600160a01b03811681146116f857600080fd5b919050565b60006001600160401b03821115611716576117166115e9565b5060051b60200190565b600082601f83011261173157600080fd5b81356020611746611741836116fd565b6116b1565b82815260059290921b8401810191818101908684111561176557600080fd5b8286015b848110156117875761177a816116e1565b8352918301918301611769565b509695505050505050565b803580151581146116f857600080fd5b6000602082840312156117b457600080fd5b81356001600160401b03808211156117cb57600080fd5b9083019061014082860312156117e057600080fd5b6117e86115ff565b6117f1836116e1565b81526117ff602084016116e1565b6020820152611810604084016116e1565b6040820152611821606084016116e1565b6060820152611832608084016116e1565b608082015261184360a084016116e1565b60a082015261185460c084016116e1565b60c082015261186560e084016116e1565b60e0820152610100808401358381111561187e57600080fd5b61188a88828701611720565b82840152505061012091506118a0828401611792565b91810191909152949350505050565b6000602082840312156118c157600080fd5b5035919050565b60006001600160401b038311156118e1576118e16115e9565b6118f4601f8401601f19166020016116b1565b905082815283838301111561190857600080fd5b828260208301376000602084830101529392505050565b600082601f83011261193057600080fd5b61193f838335602085016118c8565b9392505050565b600082601f83011261195757600080fd5b81356020611967611741836116fd565b82815260059290921b8401810191818101908684111561198657600080fd5b8286015b84811015611787578035835291830191830161198a565b600082601f8301126119b257600080fd5b813560206119c2611741836116fd565b82815260059290921b840181019181810190868411156119e157600080fd5b8286015b848110156117875780356001600160401b03811115611a045760008081fd5b611a128986838b0101611946565b8452509183019183016119e5565b600082601f830112611a3157600080fd5b81356020611a41611741836116fd565b82815260059290921b84018101918181019086841115611a6057600080fd5b8286015b8481101561178757803560048110611a7c5760008081fd5b8352918301918301611a64565b600060c08284031215611a9b57600080fd5b611aa3611628565b905081356001600160401b0380821115611abc57600080fd5b611ac885838601611720565b83526020840135915080821115611ade57600080fd5b611aea85838601611720565b60208401526040840135915080821115611b0357600080fd5b611b0f85838601611720565b60408401526060840135915080821115611b2857600080fd5b611b34858386016119a1565b60608401526080840135915080821115611b4d57600080fd5b611b59858386016119a1565b608084015260a0840135915080821115611b7257600080fd5b50611b7f84828501611a20565b60a08301525092915050565b60006101208284031215611b9e57600080fd5b611ba661164a565b905081356001600160401b0380821115611bbf57600080fd5b611bcb8583860161191f565b8352611bd9602085016116e1565b6020840152611bea604085016116e1565b60408401526060840135915080821115611c0357600080fd5b611c0f85838601611946565b60608401526080840135915080821115611c2857600080fd5b611c3485838601611946565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611c6d57600080fd5b611c7986828701611a89565b8385015250505092915050565b803563ffffffff811681146116f857600080fd5b60008060408385031215611cad57600080fd5b82356001600160401b0380821115611cc457600080fd5b9084019060e08287031215611cd857600080fd5b611ce061166d565b823582811115611cef57600080fd5b611cfb88828601611b8b565b825250602083013560208201526040830135604082015260608301356060820152611d2860808401611c86565b6080820152611d3960a08401611c86565b60a0820152611d4a60c08401611792565b60c08201529660209590950135955050505050565b6000815180845260005b81811015611d8557602081850181015186830182015201611d69565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03169052565b600081518084526020808501945080840160005b83811015611de257815187529582019590820190600101611dc6565b509495945050505050565b600081518084526020808501945080840160005b83811015611de25781516001600160a01b031687529582019590820190600101611e01565b6000815180845260208085019450848260051b860182860160005b85811015611e6b578383038952611e59838351611db2565b98850198925090840190600101611e41565b5090979650505050505050565b634e487b7160e01b600052602160045260246000fd5b6000815160c08452611ea360c0850182611ded565b905060208084015185830382870152611ebc8382611ded565b92505060408401518583036040870152611ed68382611ded565b92505060608401518583036060870152611ef08382611e26565b92505060808401518583036080870152611f0a8382611e26565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015611e6b5785516004808210611f5457634e487b7160e01b865260218152602486fd5b5083529484019491840191600101611f2e565b60006101208251818552611f7d82860182611d5f565b9150506020830151611f926020860182611da5565b506040830151611fa56040860182611da5565b5060608301518482036060860152611fbd8282611db2565b91505060808301518482036080860152611fd78282611db2565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526120108382611e8e565b9695505050505050565b60808152600061202d6080830187611f67565b856020840152846040840152828103606084015261204b8185611d5f565b979650505050505050565b60006020828403121561206857600080fd5b81356001600160401b0381111561207e57600080fd5b61208a84828501611a89565b949350505050565b600080604083850312156120a557600080fd5b8235915060208301356001600160401b03808211156120c357600080fd5b90840190608082870312156120d757600080fd5b6120df61168f565b8235828111156120ee57600080fd5b6120fa88828601611b8b565b825250602083013560208201526040830135604082015260608301358281111561212357600080fd5b80840193505086601f84011261213857600080fd5b612147878435602086016118c8565b60608201528093505050509250929050565b60208152600082516080602084015261217560a0840182611f67565b905060208401516040840152604084015160608401526060840151601f198483030160808501526121a68282611d5f565b95945050505050565b6000602082840312156121c157600080fd5b61193f826116e1565b60208152600061193f6020830184611db2565b634e487b7160e01b600052603260045260246000fd5b60006001820161221357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b600181811c9082168061223e57607f821691505b60208210810361225e57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220dfcbdf3bec1fdfd6d452c9b06a037b967d332888e61977a76c46cd8635580aad64736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
