/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162003033380380620030338339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6127f280620008416000396000f3fe6080604052600436106100d25760003560e01c806393de70e81161007f578063b7dda85e11610059578063b7dda85e14610240578063d8de65871461026d578063e200c85714610315578063f2fde38b1461034257600080fd5b806393de70e8146101e95780639ad2e2b014610209578063af640d0f1461021c57600080fd5b8063715018a6116100b0578063715018a61461016f5780637bbc469e146101845780638da5cb5b146101b457600080fd5b806330e54438146100d75780635b19e294146100f957806365913d771461014f575b600080fd5b3480156100e357600080fd5b506100f76100f2366004611e1d565b610362565b005b34801561010557600080fd5b50610119610114366004611eee565b6103e3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561015b57600080fd5b506100f761016a366004611f3c565b610429565b34801561017b57600080fd5b506100f76104a9565b34801561019057600080fd5b506101a461019f36600461203f565b6104bd565b604051610146949392919061239d565b3480156101c057600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610146565b3480156101f557600080fd5b506100f76102043660046124df565b610a31565b6100f76102173660046125ec565b610b53565b34801561022857600080fd5b5061023260025481565b604051908152602001610146565b34801561024c57600080fd5b5061026061025b36600461203f565b610bd2565b6040516101469190612629565b34801561027957600080fd5b50600454600554600654600754600854600954600a546102bf9673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610146565b34801561032157600080fd5b5061033561033036600461203f565b61115e565b604051610146919061269d565b34801561034e57600080fd5b506100f761035d3660046126b0565b6111c3565b60085460405160009173ffffffffffffffffffffffffffffffffffffffff169061038f90839036906126cb565b600060405180830381855af49150503d80600081146103ca576040519150601f19603f3d011682016040523d82523d6000602084013e6103cf565b606091505b50509050806103dd57600080fd5b50505050565b600160205281600052604060002081815481106103ff57600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff169061045690839036906126cb565b600060405180830381855af49150503d8060008114610491576040519150601f19603f3d011682016040523d82523d6000602084013e610496565b606091505b50509050806104a457600080fd5b505050565b6104b161127c565b6104bb60006112fd565b565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546104f1906126db565b80601f016020809104026020016040519081016040528092919081815260200182805461051d906126db565b801561056a5780601f1061053f5761010080835404028352916020019161056a565b820191906000526020600020905b81548152906001019060200180831161054d57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156105f857602002820191906000526020600020905b8154815260200190600101908083116105e4575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561065057602002820191906000526020600020905b81548152602001906001019080831161063c575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156106ed57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106c2575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561075c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610731575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156107cb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107a0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108655760008481526020908190208301805460408051828502810185019091528181529283018282801561085157602002820191906000526020600020905b81548152602001906001019080831161083d575b5050505050815260200190600101906107f9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108fe576000848152602090819020830180546040805182850281018501909152818152928301828280156108ea57602002820191906000526020600020905b8154815260200190600101908083116108d6575b505050505081526020019060010190610892565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561098557602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561096357610963612192565b8152602060019283018181049485019490930390920291018084116109445790505b505050505081525050815250509080600e01549080600f0154908060100180546109ae906126db565b80601f01602080910402602001604051908101604052809291908181526020018280546109da906126db565b8015610a275780601f106109fc57610100808354040283529160200191610a27565b820191906000526020600020905b815481529060010190602001808311610a0a57829003601f168201915b5050505050905084565b610a3961127c565b805180518291600391610a539183916020909101906115d3565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610b3c926008850192019061165d565b50508151610100830151610b509250611372565b50565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b8090839036906126cb565b600060405180830381855af49150503d8060008114610bbb576040519150601f19603f3d011682016040523d82523d6000602084013e610bc0565b606091505b5050905080610bce57600080fd5b5050565b610bda6116b6565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610c0c906126db565b80601f0160208091040260200160405190810160405280929190818152602001828054610c38906126db565b8015610c855780601f10610c5a57610100808354040283529160200191610c85565b820191906000526020600020905b815481529060010190602001808311610c6857829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610d1357602002820191906000526020600020905b815481526020019060010190808311610cff575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610d6b57602002820191906000526020600020905b815481526020019060010190808311610d57575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610e0857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ddd575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e7757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e4c575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ee657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ebb575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f8057600084815260209081902083018054604080518285028101850190915281815292830182828015610f6c57602002820191906000526020600020905b815481526020019060010190808311610f58575b505050505081526020019060010190610f14565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110195760008481526020908190208301805460408051828502810185019091528181529283018282801561100557602002820191906000526020600020905b815481526020019060010190808311610ff1575b505050505081526020019060010190610fad565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156110a057602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561107e5761107e612192565b81526020600192830181810494850194909303909202910180841161105f5790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546110d5906126db565b80601f0160208091040260200160405190810160405280929190818152602001828054611101906126db565b801561114e5780601f106111235761010080835404028352916020019161114e565b820191906000526020600020905b81548152906001019060200180831161113157829003601f168201915b5050505050815250509050919050565b6000818152600c60209081526040918290206003018054835181840281018401909452808452606093928301828280156111b757602002820191906000526020600020905b8154815260200190600101908083116111a3575b50505050509050919050565b6111cb61127c565b73ffffffffffffffffffffffffffffffffffffffff8116611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610b50816112fd565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161126a565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461138057600080fd5b60005b82518110156104a45760005b8282815181106113a1576113a161272e565b6020026020010151518110156115c257600160008584815181106113c7576113c761272e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106114e557600160008584815181106114295761142961272e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061147d5761147d61272e565b602002602001015182815181106114965761149661272e565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556115b2565b8282815181106114f7576114f761272e565b602002602001015181815181106115105761151061272e565b60200260200101516001600086858151811061152e5761152e61272e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106115815761158161272e565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b6115bb8161275d565b905061138f565b506115cc8161275d565b9050611383565b82805482825590600052602060002090810192821561164d579160200282015b8281111561164d57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906115f3565b506116599291506116e4565b5090565b8280548282559060005260206000209081019282156116aa579160200282015b828111156116aa578251805161169a9184916020909101906116f9565b509160200191906001019061167d565b506116599291506117a0565b60405180608001604052806116c96117bd565b81526020016000815260200160008152602001606081525090565b5b8082111561165957600081556001016116e5565b8280548282559060005260206000209060070160089004810192821561164d5791602002820160005b8382111561176357835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302611722565b80156117935782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611763565b50506116599291506116e4565b808211156116595760006117b4828261186b565b506001016117a0565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016118666040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b508054600082556007016008900490600052602060002090810190610b5091906116e4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156118e2576118e2611890565b60405290565b604051610120810167ffffffffffffffff811182821017156118e2576118e2611890565b6040516080810167ffffffffffffffff811182821017156118e2576118e2611890565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561197657611976611890565b604052919050565b600067ffffffffffffffff83111561199857611998611890565b6119c960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161192f565b90508281528383830111156119dd57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611a0557600080fd5b611a148383356020850161197e565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611a3f57600080fd5b919050565b600067ffffffffffffffff821115611a5e57611a5e611890565b5060051b60200190565b600082601f830112611a7957600080fd5b81356020611a8e611a8983611a44565b61192f565b82815260059290921b84018101918181019086841115611aad57600080fd5b8286015b84811015611ac85780358352918301918301611ab1565b509695505050505050565b600082601f830112611ae457600080fd5b81356020611af4611a8983611a44565b82815260059290921b84018101918181019086841115611b1357600080fd5b8286015b84811015611ac857611b2881611a1b565b8352918301918301611b17565b600082601f830112611b4657600080fd5b81356020611b56611a8983611a44565b82815260059290921b84018101918181019086841115611b7557600080fd5b8286015b84811015611ac857803567ffffffffffffffff811115611b995760008081fd5b611ba78986838b0101611a68565b845250918301918301611b79565b600082601f830112611bc657600080fd5b81356020611bd6611a8983611a44565b82815260059290921b84018101918181019086841115611bf557600080fd5b8286015b84811015611ac857803560048110611c115760008081fd5b8352918301918301611bf9565b600060c08284031215611c3057600080fd5b611c386118bf565b9050813567ffffffffffffffff80821115611c5257600080fd5b611c5e85838601611ad3565b83526020840135915080821115611c7457600080fd5b611c8085838601611ad3565b60208401526040840135915080821115611c9957600080fd5b611ca585838601611ad3565b60408401526060840135915080821115611cbe57600080fd5b611cca85838601611b35565b60608401526080840135915080821115611ce357600080fd5b611cef85838601611b35565b608084015260a0840135915080821115611d0857600080fd5b50611d1584828501611bb5565b60a08301525092915050565b60006101208284031215611d3457600080fd5b611d3c6118e8565b9050813567ffffffffffffffff80821115611d5657600080fd5b611d62858386016119f4565b8352611d7060208501611a1b565b6020840152611d8160408501611a1b565b60408401526060840135915080821115611d9a57600080fd5b611da685838601611a68565b60608401526080840135915080821115611dbf57600080fd5b611dcb85838601611a68565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611e0457600080fd5b611e1086828701611c1e565b8385015250505092915050565b600080600060608486031215611e3257600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611e5857600080fd5b9085019060808288031215611e6c57600080fd5b611e7461190c565b823582811115611e8357600080fd5b611e8f89828601611d21565b8252506020830135602082015260408301356040820152606083013582811115611eb857600080fd5b80840193505087601f840112611ecd57600080fd5b611edc8884356020860161197e565b60608201528093505050509250925092565b60008060408385031215611f0157600080fd5b611f0a83611a1b565b946020939093013593505050565b803563ffffffff81168114611a3f57600080fd5b80358015158114611a3f57600080fd5b60008060408385031215611f4f57600080fd5b82359150602083013567ffffffffffffffff80821115611f6e57600080fd5b908401906101208287031215611f8357600080fd5b611f8b6118e8565b823582811115611f9a57600080fd5b611fa688828601611d21565b825250602083013582811115611fbb57600080fd5b611fc788828601611a68565b602083015250604083013560408201526060830135606082015260808301356080820152611ff760a08401611f18565b60a082015261200860c08401611f18565b60c082015261201960e08401611f18565b60e0820152610100915061202e828401611f2c565b828201528093505050509250929050565b60006020828403121561205157600080fd5b5035919050565b6000815180845260005b8181101561207e57602081850181015186830182015201612062565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156120ec578151875295820195908201906001016120d0565b509495945050505050565b600081518084526020808501945080840160005b838110156120ec57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161210b565b600081518084526020808501808196508360051b8101915082860160005b858110156121855782840389526121738483516120bc565b9885019893509084019060010161215b565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526121d660c08501826120f7565b9050602080840151858303828701526121ef83826120f7565b9250506040840151858303604087015261220983826120f7565b92505060608401518583036060870152612223838261213d565b9250506080840151858303608087015261223d838261213d565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156122b357855160048082106122a0577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101612261565b5090979650505050505050565b600061012082518185526122d682860182612058565b9150506020830151612300602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612328604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261234082826120bc565b9150506080830151848203608086015261235a82826120bc565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261239383826121c1565b9695505050505050565b6080815260006123b060808301876122c0565b85602084015284604084015282810360608401526123ce8185612058565b979650505050505050565b600082601f8301126123ea57600080fd5b813560206123fa611a8983611a44565b828152600592831b850182019282820191908785111561241957600080fd5b8387015b858110156122b357803567ffffffffffffffff81111561243d5760008081fd5b8801603f81018a1361244f5760008081fd5b858101356040612461611a8983611a44565b82815291851b8301810191888101908d84111561247e5760008081fd5b938201935b838510156124ce57843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146124be5760008081fd5b8282529389019390890190612483565b88525050509385019350840161241d565b6000602082840312156124f157600080fd5b813567ffffffffffffffff8082111561250957600080fd5b90830190610120828603121561251e57600080fd5b6125266118e8565b82358281111561253557600080fd5b61254187828601611ad3565b82525061255060208401611a1b565b602082015261256160408401611a1b565b604082015261257260608401611a1b565b606082015261258360808401611a1b565b608082015261259460a08401611a1b565b60a08201526125a560c08401611a1b565b60c08201526125b660e08401611a1b565b60e082015261010080840135838111156125cf57600080fd5b6125db888287016123d9565b918301919091525095945050505050565b6000602082840312156125fe57600080fd5b813567ffffffffffffffff81111561261557600080fd5b61262184828501611c1e565b949350505050565b60208152600082516080602084015261264560a08401826122c0565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526126948282612058565b95945050505050565b602081526000611a1460208301846120bc565b6000602082840312156126c257600080fd5b611a1482611a1b565b8183823760009101908152919050565b600181811c908216806126ef57607f821691505b602082108103612728577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212208217486accd57f1abb4e0ce82fdaa34969187c6b0a53d774477373509b14b4d164736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
