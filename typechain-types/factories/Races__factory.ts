/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "enum Specie.Enum[]",
            name: "speciesAllowed",
            type: "uint8[]",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b5060405162002d1738038062002d178339810160408190526200003891620003ff565b80620000443362000211565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a80549093169416939093179055610120830151805184936200012192600b9291019062000261565b506101409190910151600a909101805460ff191691151591909117905560005b816101200151518110156200020857600e600083610120015183815181106200016e576200016e6200053a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461012001518481518110620001c357620001c36200053a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002008162000550565b905062000141565b50505062000578565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000282565b50620002c7929150620002cb565b5090565b5b80821115620002c75760008155600101620002cc565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156200031e576200031e620002e2565b60405290565b80516001600160a01b03811681146200033c57600080fd5b919050565b600082601f8301126200035357600080fd5b815160206001600160401b0380831115620003725762000372620002e2565b8260051b604051601f19603f830116810181811084821117156200039a576200039a620002e2565b604052938452858101830193838101925087851115620003b957600080fd5b83870191505b84821015620003e357620003d38262000324565b83529183019190830190620003bf565b979650505050505050565b805180151581146200033c57600080fd5b6000602082840312156200041257600080fd5b81516001600160401b03808211156200042a57600080fd5b9083019061016082860312156200044057600080fd5b6200044a620002f8565b620004558362000324565b8152620004656020840162000324565b6020820152620004786040840162000324565b60408201526200048b6060840162000324565b60608201526200049e6080840162000324565b6080820152620004b160a0840162000324565b60a0820152620004c460c0840162000324565b60c0820152620004d760e0840162000324565b60e0820152610100620004ec81850162000324565b9082015261012083810151838111156200050557600080fd5b620005138882870162000341565b82840152505061014091506200052b828401620003ee565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200057157634e487b7160e01b600052601160045260246000fd5b5060010190565b61278f80620005886000396000f3fe6080604052600436106100f35760003560e01c8063a62018721161008a578063d8de658711610059578063d8de658714610438578063e11523431461050e578063e200c8571461052e578063f2fde38b1461055b57600080fd5b8063a620187214610387578063af640d0f146103a7578063b7dda85e146103cb578063d63a8e11146103f857600080fd5b8063715018a6116100c6578063715018a6146102fa5780637bbc469e1461030f5780638da5cb5b1461033f5780639ad2e2b01461037457600080fd5b806328c697b6146100f85780632a546a381461011a5780636574105b14610229578063680adc3714610249575b600080fd5b34801561010457600080fd5b50610118610113366004611f06565b61057b565b005b34801561012657600080fd5b506101dc610135366004612007565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600f60209081526040918290208251608081018452905467ffffffffffffffff80821683526801000000000000000082048116938301939093527001000000000000000000000000000000008104831693820193909352780100000000000000000000000000000000000000000000000090920416606082015290565b6040516102209190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b34801561023557600080fd5b50610118610244366004612020565b6105fb565b34801561025557600080fd5b506102c6610264366004612007565b600f6020526000908152604090205467ffffffffffffffff808216916801000000000000000081048216917001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041684565b6040805167ffffffffffffffff95861681529385166020850152918416918301919091529091166060820152608001610220565b34801561030657600080fd5b50610118610847565b34801561031b57600080fd5b5061032f61032a366004612007565b61085b565b6040516102209493929190612485565b34801561034b57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610220565b6101186103823660046124c1565b610dcf565b34801561039357600080fd5b506101186103a23660046124fe565b610e4a565b3480156103b357600080fd5b506103bd60015481565b604051908152602001610220565b3480156103d757600080fd5b506103eb6103e6366004612007565b610e77565b60405161022091906125c6565b34801561040457600080fd5b5061042861041336600461263a565b600e6020526000908152604090205460ff1681565b6040519015158152602001610220565b34801561044457600080fd5b50600254600354600454600554600654600754600854600954600a54600c5461049d9973ffffffffffffffffffffffffffffffffffffffff90811699811698811697811696811695811694811693811692169060ff168a565b6040805173ffffffffffffffffffffffffffffffffffffffff9b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c0850152841660e084015290921661010082015290151561012082015261014001610220565b34801561051a57600080fd5b50610118610529366004612007565b611403565b34801561053a57600080fd5b5061054e610549366004612007565b61153e565b6040516102209190612655565b34801561056757600080fd5b5061011861057636600461263a565b6115a3565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16906105a89083903690612668565b600060405180830381855af49150503d80600081146105e3576040519150601f19603f3d011682016040523d82523d6000602084013e6105e8565b606091505b50509050806105f657600080fd5b505050565b610603611657565b8051600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980548416918616919091179055610100850151600a805490931694169390931790556101208301518051849361070392600b9291019061174d565b506101409190910151600a90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560005b8161012001515181101561084357600e6000836101200151838151811061076a5761076a612678565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600e600084610120015184815181106107d6576107d6612678565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905561083c816126a7565b9050610741565b5050565b61084f611657565b61085960006116d8565b565b600d602052806000526040600020600091509050806000016040518061012001604052908160008201805461088f90612706565b80601f01602080910402602001604051908101604052809291908181526020018280546108bb90612706565b80156109085780601f106108dd57610100808354040283529160200191610908565b820191906000526020600020905b8154815290600101906020018083116108eb57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff9081166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919083018282801561099657602002820191906000526020600020905b815481526020019060010190808311610982575b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156109ee57602002820191906000526020600020905b8154815260200190600101908083116109da575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610a8b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a60575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610afa57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610acf575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610b6957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610b3e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610c0357600084815260209081902083018054604080518285028101850190915281815292830182828015610bef57602002820191906000526020600020905b815481526020019060010190808311610bdb575b505050505081526020019060010190610b97565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610c9c57600084815260209081902083018054604080518285028101850190915281815292830182828015610c8857602002820191906000526020600020905b815481526020019060010190808311610c74575b505050505081526020019060010190610c30565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610d2357602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610d0157610d0161227a565b815260206001928301818104948501949093039092029101808411610ce25790505b505050505081525050815250509080600e01549080600f015490806010018054610d4c90612706565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7890612706565b8015610dc55780601f10610d9a57610100808354040283529160200191610dc5565b820191906000526020600020905b815481529060010190602001808311610da857829003601f168201915b5050505050905084565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff1690610dfc9083903690612668565b600060405180830381855af49150503d8060008114610e37576040519150601f19603f3d011682016040523d82523d6000602084013e610e3c565b606091505b505090508061084357600080fd5b60085460405160009173ffffffffffffffffffffffffffffffffffffffff16906105a89083903690612668565b610e7f6117d7565b6000828152600d60205260409081902081516101a08101909252805482906080820190839082908290610eb190612706565b80601f0160208091040260200160405190810160405280929190818152602001828054610edd90612706565b8015610f2a5780601f10610eff57610100808354040283529160200191610f2a565b820191906000526020600020905b815481529060010190602001808311610f0d57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610fb857602002820191906000526020600020905b815481526020019060010190808311610fa4575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561101057602002820191906000526020600020905b815481526020019060010190808311610ffc575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156110ad57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611082575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561111c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110f1575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561118b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611160575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112255760008481526020908190208301805460408051828502810185019091528181529283018282801561121157602002820191906000526020600020905b8154815260200190600101908083116111fd575b5050505050815260200190600101906111b9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156112be576000848152602090819020830180546040805182850281018501909152818152928301828280156112aa57602002820191906000526020600020905b815481526020019060010190808311611296575b505050505081526020019060010190611252565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561134557602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156113235761132361227a565b8152602060019283018181049485019490930390920291018084116113045790505b505050505081525050815250508152602001600e8201548152602001600f820154815260200160108201805461137a90612706565b80601f01602080910402602001604051908101604052809291908181526020018280546113a690612706565b80156113f35780601f106113c8576101008083540402835291602001916113f3565b820191906000526020600020905b8154815290600101906020018083116113d657829003601f168201915b5050505050815250509050919050565b61140b611657565b478111156114a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201527f6472617720697320746f6f20626967000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f1935050505061153b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5061796f75743a204661696c656420746f2077697468647261770000000000006044820152606401611497565b50565b6000818152600d602090815260409182902060030180548351818402810184019094528084526060939283018282801561159757602002820191906000526020600020905b815481526020019060010190808311611583575b50505050509050919050565b6115ab611657565b73ffffffffffffffffffffffffffffffffffffffff811661164e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611497565b61153b816116d8565b60005473ffffffffffffffffffffffffffffffffffffffff163314610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611497565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156117c7579160200282015b828111156117c757825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061176d565b506117d3929150611805565b5090565b60405180608001604052806117ea61181a565b81526020016000815260200160008152602001606081525090565b5b808211156117d35760008155600101611806565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016118c36040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561191a5761191a6118c8565b60405290565b604051610120810167ffffffffffffffff8111828210171561191a5761191a6118c8565b604051610160810167ffffffffffffffff8111828210171561191a5761191a6118c8565b6040516080810167ffffffffffffffff8111828210171561191a5761191a6118c8565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156119d2576119d26118c8565b604052919050565b600067ffffffffffffffff8311156119f4576119f46118c8565b611a2560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161198b565b9050828152838383011115611a3957600080fd5b828260208301376000602084830101529392505050565b600082601f830112611a6157600080fd5b611a70838335602085016119da565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611a9b57600080fd5b919050565b600067ffffffffffffffff821115611aba57611aba6118c8565b5060051b60200190565b600082601f830112611ad557600080fd5b81356020611aea611ae583611aa0565b61198b565b82815260059290921b84018101918181019086841115611b0957600080fd5b8286015b84811015611b245780358352918301918301611b0d565b509695505050505050565b600082601f830112611b4057600080fd5b81356020611b50611ae583611aa0565b82815260059290921b84018101918181019086841115611b6f57600080fd5b8286015b84811015611b2457611b8481611a77565b8352918301918301611b73565b600082601f830112611ba257600080fd5b81356020611bb2611ae583611aa0565b82815260059290921b84018101918181019086841115611bd157600080fd5b8286015b84811015611b2457803567ffffffffffffffff811115611bf55760008081fd5b611c038986838b0101611ac4565b845250918301918301611bd5565b600082601f830112611c2257600080fd5b81356020611c32611ae583611aa0565b82815260059290921b84018101918181019086841115611c5157600080fd5b8286015b84811015611b2457803560048110611c6d5760008081fd5b8352918301918301611c55565b600060c08284031215611c8c57600080fd5b611c946118f7565b9050813567ffffffffffffffff80821115611cae57600080fd5b611cba85838601611b2f565b83526020840135915080821115611cd057600080fd5b611cdc85838601611b2f565b60208401526040840135915080821115611cf557600080fd5b611d0185838601611b2f565b60408401526060840135915080821115611d1a57600080fd5b611d2685838601611b91565b60608401526080840135915080821115611d3f57600080fd5b611d4b85838601611b91565b608084015260a0840135915080821115611d6457600080fd5b50611d7184828501611c11565b60a08301525092915050565b60006101208284031215611d9057600080fd5b611d98611920565b9050813567ffffffffffffffff80821115611db257600080fd5b611dbe85838601611a50565b8352611dcc60208501611a77565b6020840152611ddd60408501611a77565b60408401526060840135915080821115611df657600080fd5b611e0285838601611ac4565b60608401526080840135915080821115611e1b57600080fd5b611e2785838601611ac4565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611e6057600080fd5b611e6c86828701611c7a565b8385015250505092915050565b803563ffffffff81168114611a9b57600080fd5b600082601f830112611e9e57600080fd5b81356020611eae611ae583611aa0565b82815260059290921b84018101918181019086841115611ecd57600080fd5b8286015b84811015611b2457803560078110611ee95760008081fd5b8352918301918301611ed1565b80358015158114611a9b57600080fd5b60008060408385031215611f1957600080fd5b823567ffffffffffffffff80821115611f3157600080fd5b908401906101208287031215611f4657600080fd5b611f4e611920565b823582811115611f5d57600080fd5b611f6988828601611d7d565b825250602083013560208201526040830135604082015260608301356060820152611f9660808401611e79565b6080820152611fa760a08401611e79565b60a0820152611fb860c08401611e79565b60c082015260e083013582811115611fcf57600080fd5b611fdb88828601611e8d565b60e0830152506101009150611ff1828401611ef6565b9181019190915295602094909401359450505050565b60006020828403121561201957600080fd5b5035919050565b60006020828403121561203257600080fd5b813567ffffffffffffffff8082111561204a57600080fd5b90830190610160828603121561205f57600080fd5b612067611944565b61207083611a77565b815261207e60208401611a77565b602082015261208f60408401611a77565b60408201526120a060608401611a77565b60608201526120b160808401611a77565b60808201526120c260a08401611a77565b60a08201526120d360c08401611a77565b60c08201526120e460e08401611a77565b60e08201526101006120f7818501611a77565b90820152610120838101358381111561210f57600080fd5b61211b88828701611b2f565b8284015250506101409150612131828401611ef6565b91810191909152949350505050565b6000815180845260005b818110156121665760208185018101518683018201520161214a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156121d4578151875295820195908201906001016121b8565b509495945050505050565b600081518084526020808501945080840160005b838110156121d457815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016121f3565b600081518084526020808501808196508360051b8101915082860160005b8581101561226d57828403895261225b8483516121a4565b98850198935090840190600101612243565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c084526122be60c08501826121df565b9050602080840151858303828701526122d783826121df565b925050604084015185830360408701526122f183826121df565b9250506060840151858303606087015261230b8382612225565b925050608084015185830360808701526123258382612225565b60a08681015188830391890191909152805180835290840194506000925090830190825b8181101561239b5785516004808210612388577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101612349565b5090979650505050505050565b600061012082518185526123be82860182612140565b91505060208301516123e8602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151612410604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261242882826121a4565b9150506080830151848203608086015261244282826121a4565b91505060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518583038287015261247b83826122a9565b9695505050505050565b60808152600061249860808301876123a8565b85602084015284604084015282810360608401526124b68185612140565b979650505050505050565b6000602082840312156124d357600080fd5b813567ffffffffffffffff8111156124ea57600080fd5b6124f684828501611c7a565b949350505050565b6000806040838503121561251157600080fd5b82359150602083013567ffffffffffffffff8082111561253057600080fd5b908401906080828703121561254457600080fd5b61254c611968565b82358281111561255b57600080fd5b61256788828601611d7d565b825250602083013560208201526040830135604082015260608301358281111561259057600080fd5b80840193505086601f8401126125a557600080fd5b6125b4878435602086016119da565b60608201528093505050509250929050565b6020815260008251608060208401526125e260a08401826123a8565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526126318282612140565b95945050505050565b60006020828403121561264c57600080fd5b611a7082611a77565b602081526000611a7060208301846121a4565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061271a57607f821691505b602082108103612753577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212209ff91de4c9b4c0f84ea5ece96d074d7c7dbc6d952f6d83dce69c9713b955b65864736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
