/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "raceEntryTicketCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raceEntryTicket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "raceEntryTicketCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "raceEntryTicket",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162003040380380620030408339810160408190526200003991620006ce565b80516101008201518291906200004f3362000266565b80518251146200005e57600080fd5b60005b8251811015620001775760005b828281518110620000835762000083620007f3565b602002602001015151811015620001635760016000858481518110620000ad57620000ad620007f3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110620000ea57620000ea620007f3565b60200260200101518281518110620001065762000106620007f3565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556200015b8162000809565b90506200006e565b506200016f8162000809565b905062000061565b5050815180518392506003916200019491839160200190620002b6565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e0850151600785018054909216921691909117905561010083015180516200025a926008850192019062000320565b50905050505062000831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200030e579160200282015b828111156200030e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002d7565b506200031c92915062000380565b5090565b82805482825590600052602060002090810192821562000372579160200282015b828111156200037257825180516200036191849160209091019062000397565b509160200191906001019062000341565b506200031c92915062000445565b5b808211156200031c576000815560010162000381565b828054828255906000526020600020906007016008900481019282156200030e5791602002820160005b838211156200040457835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620003c1565b8015620004365782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000404565b50506200031c92915062000380565b808211156200031c5760006200045c828262000466565b5060010162000445565b5080546000825560070160089004906000526020600020908101906200048d919062000380565b50565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620004cc57620004cc62000490565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fd57620004fd62000490565b604052919050565b60006001600160401b0382111562000521576200052162000490565b5060051b60200190565b80516001600160a01b03811681146200054357600080fd5b919050565b600082601f8301126200055a57600080fd5b81516020620005736200056d8362000505565b620004d2565b82815260059290921b840181019181810190868411156200059357600080fd5b8286015b84811015620005b957620005ab816200052b565b835291830191830162000597565b509695505050505050565b600082601f830112620005d657600080fd5b81516020620005e96200056d8362000505565b828152600592831b85018201928282019190878511156200060957600080fd5b8387015b85811015620006c15780516001600160401b038111156200062e5760008081fd5b8801603f81018a13620006415760008081fd5b858101516040620006566200056d8362000505565b82815291851b8301810191888101908d841115620006745760008081fd5b938201935b83851015620006af57845192506001600160e01b0319831683146200069e5760008081fd5b828252938901939089019062000679565b8852505050938501935084016200060d565b5090979650505050505050565b600060208284031215620006e157600080fd5b81516001600160401b0380821115620006f957600080fd5b9083019061012082860312156200070f57600080fd5b62000719620004a6565b8251828111156200072957600080fd5b620007378782860162000548565b82525062000748602084016200052b565b60208201526200075b604084016200052b565b60408201526200076e606084016200052b565b606082015262000781608084016200052b565b60808201526200079460a084016200052b565b60a0820152620007a760c084016200052b565b60c0820152620007ba60e084016200052b565b60e08201526101008084015183811115620007d457600080fd5b620007e288828701620005c4565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6127ff80620008416000396000f3fe6080604052600436106100d25760003560e01c806393de70e81161007f578063b7dda85e11610059578063b7dda85e14610241578063d8de65871461026e578063e200c85714610316578063f2fde38b1461034357600080fd5b806393de70e8146101ea5780639ad2e2b01461020a578063af640d0f1461021d57600080fd5b8063797a6764116100b0578063797a6764146101645780637bbc469e146101845780638da5cb5b146101b557600080fd5b80635b19e294146100d75780635bd4fd051461012d578063715018a61461014f575b600080fd5b3480156100e357600080fd5b506100f76100f23660046118b0565b610363565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561013957600080fd5b5061014d610148366004611c02565b6103a9565b005b34801561015b57600080fd5b5061014d610429565b34801561017057600080fd5b5061014d61017f366004611f53565b61043d565b34801561019057600080fd5b506101a461019f366004612031565b6104be565b60405161012495949392919061236f565b3480156101c157600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b3480156101f657600080fd5b5061014d6102053660046124c6565b610a2e565b61014d6102183660046125d3565b610b50565b34801561022957600080fd5b5061023360025481565b604051908152602001610124565b34801561024d57600080fd5b5061026161025c366004612031565b610bcf565b6040516101249190612610565b34801561027a57600080fd5b50600454600554600654600754600854600954600a546102c09673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610124565b34801561032257600080fd5b50610336610331366004612031565b61115a565b60405161012491906126a3565b34801561034f57600080fd5b5061014d61035e3660046126bd565b6111bf565b6001602052816000526040600020818154811061037f57600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906103d690839036906126d8565b600060405180830381855af49150503d8060008114610411576040519150601f19603f3d011682016040523d82523d6000602084013e610416565b606091505b505090508061042457600080fd5b505050565b610431611278565b61043b60006112f9565b565b60085460405160009173ffffffffffffffffffffffffffffffffffffffff169061046a90839036906126d8565b600060405180830381855af49150503d80600081146104a5576040519150601f19603f3d011682016040523d82523d6000602084013e6104aa565b606091505b50509050806104b857600080fd5b50505050565b600c60205280600052604060002060009150905080600001604051806101000160405290816000820180546104f2906126e8565b80601f016020809104026020016040519081016040528092919081815260200182805461051e906126e8565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156105f957602002820191906000526020600020905b8154815260200190600101908083116105e5575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561065157602002820191906000526020600020905b81548152602001906001019080831161063d575b5050505050815260200160058201548152602001600682015481526020016007820154815250509080600801549080600901549080600a018054610694906126e8565b80601f01602080910402602001604051908101604052809291908181526020018280546106c0906126e8565b801561070d5780601f106106e25761010080835404028352916020019161070d565b820191906000526020600020905b8154815290600101906020018083116106f057829003601f168201915b50505050509080600b016040518060c00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561078857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161075d575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156107f757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107cc575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561086657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161083b575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610900576000848152602090819020830180546040805182850281018501909152818152928301828280156108ec57602002820191906000526020600020905b8154815260200190600101908083116108d8575b505050505081526020019060010190610894565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109995760008481526020908190208301805460408051828502810185019091528181529283018282801561098557602002820191906000526020600020905b815481526020019060010190808311610971575b50505050508152602001906001019061092d565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a2057602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156109fe576109fe612241565b8152602060019283018181049485019490930390920291018084116109df5790505b505050505081525050905085565b610a36611278565b805180518291600391610a509183916020909101906115cf565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051610b399260088501920190611659565b50508151610100830151610b4d925061136e565b50565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b7d90839036906126d8565b600060405180830381855af49150503d8060008114610bb8576040519150601f19603f3d011682016040523d82523d6000602084013e610bbd565b606091505b5050905080610bcb57600080fd5b5050565b610bd76116b2565b6000828152600c60205260409081902081516101a081019092528054829060a0820190839082908290610c09906126e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610c35906126e8565b8015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610d1057602002820191906000526020600020905b815481526020019060010190808311610cfc575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610d6857602002820191906000526020600020905b815481526020019060010190808311610d54575b50505050508152602001600582015481526020016006820154815260200160078201548152505081526020016008820154815260200160098201548152602001600a82018054610db7906126e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610de3906126e8565b8015610e305780601f10610e0557610100808354040283529160200191610e30565b820191906000526020600020905b815481529060010190602001808311610e1357829003601f168201915b50505050508152602001600b82016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610eaf57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e84575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f1e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ef3575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610f8d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f62575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110275760008481526020908190208301805460408051828502810185019091528181529283018282801561101357602002820191906000526020600020905b815481526020019060010190808311610fff575b505050505081526020019060010190610fbb565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110c0576000848152602090819020830180546040805182850281018501909152818152928301828280156110ac57602002820191906000526020600020905b815481526020019060010190808311611098575b505050505081526020019060010190611054565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561114757602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561112557611125612241565b8152602060019283018181049485019490930390920291018084116111065790505b5050509190925250505090525092915050565b6000818152600c60209081526040918290206003018054835181840281018401909452808452606093928301828280156111b357602002820191906000526020600020905b81548152602001906001019080831161119f575b50505050509050919050565b6111c7611278565b73ffffffffffffffffffffffffffffffffffffffff811661126f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610b4d816112f9565b60005473ffffffffffffffffffffffffffffffffffffffff16331461043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611266565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805182511461137c57600080fd5b60005b82518110156104245760005b82828151811061139d5761139d61273b565b6020026020010151518110156115be57600160008584815181106113c3576113c361273b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106114e157600160008584815181106114255761142561273b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208383815181106114795761147961273b565b602002602001015182815181106114925761149261273b565b60209081029190910181015182546001810184556000938452919092206008820401805463ffffffff60079093166004026101000a928302191660e09390931c919091029190911790556115ae565b8282815181106114f3576114f361273b565b6020026020010151818151811061150c5761150c61273b565b60200260200101516001600086858151811061152a5761152a61273b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061157d5761157d61273b565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b6115b78161276a565b905061138b565b506115c88161276a565b905061137f565b828054828255906000526020600020908101928215611649579160200282015b8281111561164957825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906115ef565b50611655929150611789565b5090565b8280548282559060005260206000209081019282156116a6579160200282015b828111156116a6578251805161169691849160209091019061179e565b5091602001919060010190611679565b50611655929150611845565b6040518060a0016040528061173160405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001606081526020016117846040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b5b80821115611655576000815560010161178a565b828054828255906000526020600020906007016008900481019282156116495791602002820160005b8382111561180857835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026117c7565b80156118385782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611808565b5050611655929150611789565b808211156116555760006118598282611862565b50600101611845565b508054600082556007016008900490600052602060002090810190610b4d9190611789565b803573ffffffffffffffffffffffffffffffffffffffff811681146118ab57600080fd5b919050565b600080604083850312156118c357600080fd5b6118cc83611887565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561192d5761192d6118da565b60405290565b604051610120810167ffffffffffffffff8111828210171561192d5761192d6118da565b60405160c0810167ffffffffffffffff8111828210171561192d5761192d6118da565b60405160a0810167ffffffffffffffff8111828210171561192d5761192d6118da565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156119e4576119e46118da565b604052919050565b600082601f8301126119fd57600080fd5b813567ffffffffffffffff811115611a1757611a176118da565b611a4860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161199d565b818152846020838601011115611a5d57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611a9457611a946118da565b5060051b60200190565b600082601f830112611aaf57600080fd5b81356020611ac4611abf83611a7a565b61199d565b82815260059290921b84018101918181019086841115611ae357600080fd5b8286015b84811015611afe5780358352918301918301611ae7565b509695505050505050565b60006101008284031215611b1c57600080fd5b611b24611909565b9050813567ffffffffffffffff80821115611b3e57600080fd5b611b4a858386016119ec565b8352611b5860208501611887565b6020840152611b6960408501611887565b60408401526060840135915080821115611b8257600080fd5b611b8e85838601611a9e565b60608401526080840135915080821115611ba757600080fd5b50611bb484828501611a9e565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b803563ffffffff811681146118ab57600080fd5b803580151581146118ab57600080fd5b60008060408385031215611c1557600080fd5b82359150602083013567ffffffffffffffff80821115611c3457600080fd5b908401906101208287031215611c4957600080fd5b611c51611933565b823582811115611c6057600080fd5b611c6c88828601611b09565b825250602083013582811115611c8157600080fd5b611c8d88828601611a9e565b602083015250604083013560408201526060830135606082015260808301356080820152611cbd60a08401611bde565b60a0820152611cce60c08401611bde565b60c0820152611cdf60e08401611bde565b60e08201526101009150611cf4828401611bf2565b828201528093505050509250929050565b600082601f830112611d1657600080fd5b81356020611d26611abf83611a7a565b82815260059290921b84018101918181019086841115611d4557600080fd5b8286015b84811015611afe57611d5a81611887565b8352918301918301611d49565b600082601f830112611d7857600080fd5b81356020611d88611abf83611a7a565b82815260059290921b84018101918181019086841115611da757600080fd5b8286015b84811015611afe57803567ffffffffffffffff811115611dcb5760008081fd5b611dd98986838b0101611a9e565b845250918301918301611dab565b600082601f830112611df857600080fd5b81356020611e08611abf83611a7a565b82815260059290921b84018101918181019086841115611e2757600080fd5b8286015b84811015611afe57803560048110611e435760008081fd5b8352918301918301611e2b565b600060c08284031215611e6257600080fd5b611e6a611957565b9050813567ffffffffffffffff80821115611e8457600080fd5b611e9085838601611d05565b83526020840135915080821115611ea657600080fd5b611eb285838601611d05565b60208401526040840135915080821115611ecb57600080fd5b611ed785838601611d05565b60408401526060840135915080821115611ef057600080fd5b611efc85838601611d67565b60608401526080840135915080821115611f1557600080fd5b611f2185838601611d67565b608084015260a0840135915080821115611f3a57600080fd5b50611f4784828501611de7565b60a08301525092915050565b600080600060608486031215611f6857600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611f8e57600080fd5b9085019060a08288031215611fa257600080fd5b611faa61197a565b823582811115611fb957600080fd5b611fc589828601611b09565b8252506020830135602082015260408301356040820152606083013582811115611fee57600080fd5b611ffa898286016119ec565b60608301525060808301358281111561201257600080fd5b61201e89828601611e50565b6080830152508093505050509250925092565b60006020828403121561204357600080fd5b5035919050565b6000815180845260005b8181101561207057602081850181015186830182015201612054565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156120de578151875295820195908201906001016120c2565b509495945050505050565b600061010082518185526120ff8286018261204a565b91505073ffffffffffffffffffffffffffffffffffffffff60208401511660208501526040830151612149604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151848203606086015261216182826120ae565b9150506080830151848203608086015261217b82826120ae565b91505060a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b600081518084526020808501945080840160005b838110156120de57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016121ba565b600081518084526020808501808196508360051b8101915082860160005b858110156122345782840389526122228483516120ae565b9885019893509084019060010161220a565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261228560c08501826121a6565b90506020808401518583038287015261229e83826121a6565b925050604084015185830360408701526122b883826121a6565b925050606084015185830360608701526122d283826121ec565b925050608084015185830360808701526122ec83826121ec565b60a08681015188830391890191909152805180835290840194506000925090830190825b81811015612362578551600480821061234f577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101612310565b5090979650505050505050565b60a08152600061238260a08301886120e9565b86602084015285604084015282810360608401526123a0818661204a565b905082810360808401526123b48185612270565b98975050505050505050565b600082601f8301126123d157600080fd5b813560206123e1611abf83611a7a565b828152600592831b850182019282820191908785111561240057600080fd5b8387015b8581101561236257803567ffffffffffffffff8111156124245760008081fd5b8801603f81018a136124365760008081fd5b858101356040612448611abf83611a7a565b82815291851b8301810191888101908d8411156124655760008081fd5b938201935b838510156124b557843592507fffffffff00000000000000000000000000000000000000000000000000000000831683146124a55760008081fd5b828252938901939089019061246a565b885250505093850193508401612404565b6000602082840312156124d857600080fd5b813567ffffffffffffffff808211156124f057600080fd5b90830190610120828603121561250557600080fd5b61250d611933565b82358281111561251c57600080fd5b61252887828601611d05565b82525061253760208401611887565b602082015261254860408401611887565b604082015261255960608401611887565b606082015261256a60808401611887565b608082015261257b60a08401611887565b60a082015261258c60c08401611887565b60c082015261259d60e08401611887565b60e082015261010080840135838111156125b657600080fd5b6125c2888287016123c0565b918301919091525095945050505050565b6000602082840312156125e557600080fd5b813567ffffffffffffffff8111156125fc57600080fd5b61260884828501611e50565b949350505050565b602081526000825160a0602084015261262c60c08401826120e9565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08085840301608086015261267c838361204a565b925060808601519150808584030160a08601525061269a8282612270565b95945050505050565b6020815260006126b660208301846120ae565b9392505050565b6000602082840312156126cf57600080fd5b6126b682611887565b8183823760009101908152919050565b600181811c908216806126fc57607f821691505b602082108103612735577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212202bf3baf3d14afa9c303ef687a5b05f0942b6cb843b3953f892462a9bb20f1a6c64736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
