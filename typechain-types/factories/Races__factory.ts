/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raceFee",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b506040516200246d3803806200246d8339810160408190526200003891620003f4565b80620000443362000206565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000256565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b81610100015151811015620001fd57600e6000836101000151838151811062000163576200016362000528565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110620001b857620001b862000528565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001f5816200053e565b905062000136565b50505062000566565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002ae579160200282015b82811115620002ae57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000277565b50620002bc929150620002c0565b5090565b5b80821115620002bc5760008155600101620002c1565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620003135762000313620002d7565b60405290565b80516001600160a01b03811681146200033157600080fd5b919050565b600082601f8301126200034857600080fd5b815160206001600160401b0380831115620003675762000367620002d7565b8260051b604051601f19603f830116810181811084821117156200038f576200038f620002d7565b604052938452858101830193838101925087851115620003ae57600080fd5b83870191505b84821015620003d857620003c88262000319565b83529183019190830190620003b4565b979650505050505050565b805180151581146200033157600080fd5b6000602082840312156200040757600080fd5b81516001600160401b03808211156200041f57600080fd5b9083019061016082860312156200043557600080fd5b6200043f620002ed565b6200044a8362000319565b81526200045a6020840162000319565b60208201526200046d6040840162000319565b6040820152620004806060840162000319565b6060820152620004936080840162000319565b6080820152620004a660a0840162000319565b60a0820152620004b960c0840162000319565b60c0820152620004cc60e0840162000319565b60e08201526101008084015183811115620004e657600080fd5b620004f48882870162000336565b82840152505061012091508183015182820152610140915062000519828401620003e3565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200055f57634e487b7160e01b600052601160045260246000fd5b5060010190565b611ef780620005766000396000f3fe6080604052600436106100ae5760003560e01c80631419f7b3146100b75780633f16e358146100ca578063715018a6146100dd5780637bbc469e146100f25780638da5cb5b1461012f578063af640d0f1461015c578063b7dda85e14610180578063c4bdc7e7146101ad578063c691c1c6146101cd578063d63a8e11146101ed578063d8de65871461022d578063e1152343146102e8578063e200c85714610308578063f2fde38b1461033557005b366100b557005b005b6100b56100c5366004611703565b610355565b6100b56100d8366004611823565b6103c8565b3480156100e957600080fd5b506100b561043a565b3480156100fe57600080fd5b5061011261010d36600461185f565b61044e565b604051610126989796959493929190611a4c565b60405180910390f35b34801561013b57600080fd5b5061014461088a565b6040516001600160a01b039091168152602001610126565b34801561016857600080fd5b5061017260015481565b604051908152602001610126565b34801561018c57600080fd5b506101a061019b36600461185f565b610899565b6040516101269190611ac1565b3480156101b957600080fd5b506100b56101c8366004611b98565b610d65565b3480156101d957600080fd5b506100b56101e8366004611cb2565b610f1a565b3480156101f957600080fd5b5061021d610208366004611e05565b600e6020526000908152604090205460ff1681565b6040519015158152602001610126565b34801561023957600080fd5b50600254600354600454600554600654600754600854600954600b54600c54610283996001600160a01b039081169981169881169781169681169581169481169316919060ff168a565b604080516001600160a01b039b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c085015290931660e083015261010082019290925290151561012082015261014001610126565b3480156102f457600080fd5b506100b561030336600461185f565b610f3a565b34801561031457600080fd5b5061032861032336600461185f565b61102a565b6040516101269190611e27565b34801561034157600080fd5b506100b5610350366004611e05565b61108f565b6008546040516000916001600160a01b0316906103759083903690611e3a565b600060405180830381855af49150503d80600081146103b0576040519150601f19603f3d011682016040523d82523d6000602084013e6103b5565b606091505b50509050806103c357600080fd5b505050565b6005546040516000916001600160a01b0316906103e89083903690611e3a565b600060405180830381855af49150503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b505090508061043657600080fd5b5050565b610442611105565b61044c6000611164565b565b600d6020526000908152604090208054819061046990611e4a565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611e4a565b80156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b50505060018401546003850154600486015460058701546040805160068a01805460e0602082028401810190945260c083018181529a9b6001600160a01b039098169a9699509497509295949093849284919084018282801561056e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610550575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156105d057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105b2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561063257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610614575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106cc576000848152602090819020830180546040805182850281018501909152818152928301828280156106b857602002820191906000526020600020905b8154815260200190600101908083116106a4575b505050505081526020019060010190610660565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107655760008481526020908190208301805460408051828502810185019091528181529283018282801561075157602002820191906000526020600020905b81548152602001906001019080831161073d575b5050505050815260200190600101906106f9565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156107e857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116107ab5790505b5050505050815250509080600c01549080600d01805461080790611e4a565b80601f016020809104026020016040519081016040528092919081815260200182805461083390611e4a565b80156108805780601f1061085557610100808354040283529160200191610880565b820191906000526020600020905b81548152906001019060200180831161086357829003601f168201915b5050505050905088565b6000546001600160a01b031690565b6108a16111b4565b6000828152600d602052604090819020815161012081019092528054829082906108ca90611e4a565b80601f01602080910402602001604051908101604052809291908181526020018280546108f690611e4a565b80156109435780601f1061091857610100808354040283529160200191610943565b820191906000526020600020905b81548152906001019060200180831161092657829003601f168201915b505050918352505060018201546001600160a01b031660208083019190915260028301805460408051828502810185018252828152940193928301828280156109ab57602002820191906000526020600020905b815481526020019060010190808311610997575b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610a3b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a1d575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a9d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a7f575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610aff57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ae1575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b9957600084815260209081902083018054604080518285028101850190915281815292830182828015610b8557602002820191906000526020600020905b815481526020019060010190808311610b71575b505050505081526020019060010190610b2d565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610c3257600084815260209081902083018054604080518285028101850190915281815292830182828015610c1e57602002820191906000526020600020905b815481526020019060010190808311610c0a575b505050505081526020019060010190610bc6565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610cb557602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610c785790505b5050505050815250508152602001600c8201548152602001600d82018054610cdc90611e4a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0890611e4a565b8015610d555780601f10610d2a57610100808354040283529160200191610d55565b820191906000526020600020905b815481529060010190602001808311610d3857829003601f168201915b5050505050815250509050919050565b610d6d611105565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e085015160098054909316941693909317905561010083015180518493610e3392600a92910190611240565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b8161010001515181101561043657600e60008361010001518381518110610e8657610e86611e84565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110610ed857610ed8611e84565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055610f1381611e9a565b9050610e5d565b6005546040516000916001600160a01b0316906103759083903690611e3a565b610f42611105565b47811115610faf5760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b610fb761088a565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506110275760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b6044820152606401610fa6565b50565b6000818152600d602090815260409182902060020180548351818402810184019094528084526060939283018282801561108357602002820191906000526020600020905b81548152602001906001019080831161106f575b50505050509050919050565b611097611105565b6001600160a01b0381166110fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610fa6565b61102781611164565b3361110e61088a565b6001600160a01b03161461044c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610fa6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061012001604052806060815260200160006001600160a01b031681526020016060815260200160008152602001600081526020016000815260200161122c6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b828054828255906000526020600020908101928215611295579160200282015b8281111561129557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611260565b506112a19291506112a5565b5090565b5b808211156112a157600081556001016112a6565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156112f2576112f26112ba565b60405290565b60405161012081016001600160401b03811182821017156112f2576112f26112ba565b60405161016081016001600160401b03811182821017156112f2576112f26112ba565b60405161018081016001600160401b03811182821017156112f2576112f26112ba565b604051601f8201601f191681016001600160401b0381118282101715611389576113896112ba565b604052919050565b600082601f8301126113a257600080fd5b81356001600160401b038111156113bb576113bb6112ba565b6113ce601f8201601f1916602001611361565b8181528460208386010111156113e357600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b038116811461141757600080fd5b919050565b60006001600160401b03821115611435576114356112ba565b5060051b60200190565b600082601f83011261145057600080fd5b813560206114656114608361141c565b611361565b82815260059290921b8401810191818101908684111561148457600080fd5b8286015b8481101561149f5780358352918301918301611488565b509695505050505050565b600082601f8301126114bb57600080fd5b813560206114cb6114608361141c565b82815260059290921b840181019181810190868411156114ea57600080fd5b8286015b8481101561149f576114ff81611400565b83529183019183016114ee565b600082601f83011261151d57600080fd5b8135602061152d6114608361141c565b82815260059290921b8401810191818101908684111561154c57600080fd5b8286015b8481101561149f5780356001600160401b0381111561156f5760008081fd5b61157d8986838b010161143f565b845250918301918301611550565b803563ffffffff8116811461141757600080fd5b600082601f8301126115b057600080fd5b813560206115c06114608361141c565b82815260059290921b840181019181810190868411156115df57600080fd5b8286015b8481101561149f576115f48161158b565b83529183019183016115e3565b600060c0828403121561161357600080fd5b61161b6112d0565b905081356001600160401b038082111561163457600080fd5b611640858386016114aa565b8352602084013591508082111561165657600080fd5b611662858386016114aa565b6020840152604084013591508082111561167b57600080fd5b611687858386016114aa565b604084015260608401359150808211156116a057600080fd5b6116ac8583860161150c565b606084015260808401359150808211156116c557600080fd5b6116d18583860161150c565b608084015260a08401359150808211156116ea57600080fd5b506116f78482850161159f565b60a08301525092915050565b6000806040838503121561171657600080fd5b8235915060208301356001600160401b038082111561173457600080fd5b90840190610120828703121561174957600080fd5b6117516112f8565b82358281111561176057600080fd5b61176c88828601611391565b82525061177b60208401611400565b602082015260408301358281111561179257600080fd5b61179e8882860161143f565b604083015250606083013560608201526080830135608082015260a083013560a082015260c0830135828111156117d457600080fd5b6117e088828601611601565b60c08301525060e083013560e0820152610100808401358381111561180457600080fd5b61181089828701611391565b8284015250508093505050509250929050565b60006020828403121561183557600080fd5b81356001600160401b0381111561184b57600080fd5b61185784828501611601565b949350505050565b60006020828403121561187157600080fd5b5035919050565b6000815180845260005b8181101561189e57602081850181015186830182015201611882565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156118f75781516001600160a01b0316875295820195908201906001016118d2565b509495945050505050565b600081518084526020808501945080840160005b838110156118f757815187529582019590820190600101611916565b600081518084526020808501808196508360051b8101915082860160005b8581101561197a578284038952611968848351611902565b98850198935090840190600101611950565b5091979650505050505050565b6000815160c0845261199c60c08501826118be565b9050602080840151858303828701526119b583826118be565b925050604084015185830360408701526119cf83826118be565b925050606084015185830360608701526119e98382611932565b92505060808401518583036080870152611a038382611932565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561149f57845163ffffffff168252938301936001929092019190830190611a26565b6000610100808352611a608184018c611878565b6001600160a01b038b166020850152604084018a9052606084018990526080840188905283810360a08501529050611a988187611987565b90508460c084015282810360e0840152611ab28185611878565b9b9a5050505050505050505050565b6020815260008251610120806020850152611ae0610140850183611878565b91506020850151611afc60408601826001600160a01b03169052565b506040850151601f1980868503016060870152611b198483611902565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e0870152611b548483611987565b60e0880151610100888101919091528801518782039092018488015293509050611b7e8382611878565b9695505050505050565b8035801515811461141757600080fd5b600060208284031215611baa57600080fd5b81356001600160401b0380821115611bc157600080fd5b908301906101608286031215611bd657600080fd5b611bde61131b565b611be783611400565b8152611bf560208401611400565b6020820152611c0660408401611400565b6040820152611c1760608401611400565b6060820152611c2860808401611400565b6080820152611c3960a08401611400565b60a0820152611c4a60c08401611400565b60c0820152611c5b60e08401611400565b60e08201526101008084013583811115611c7457600080fd5b611c80888287016114aa565b828401525050610120915081830135828201526101409150611ca3828401611b88565b91810191909152949350505050565b60008060408385031215611cc557600080fd5b82356001600160401b0380821115611cdc57600080fd5b908401906101808287031215611cf157600080fd5b611cf961133e565b823582811115611d0857600080fd5b611d1488828601611391565b825250602083013582811115611d2957600080fd5b611d358882860161143f565b602083015250604083013582811115611d4d57600080fd5b611d598882860161143f565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013583811115611da557600080fd5b611db189828701611601565b8284015250506101209150611dc782840161158b565b828201526101409150611ddb82840161158b565b828201526101609150611def828401611b88565b9181019190915295602094909401359450505050565b600060208284031215611e1757600080fd5b611e2082611400565b9392505050565b602081526000611e206020830184611902565b8183823760009101908152919050565b600181811c90821680611e5e57607f821691505b602082108103611e7e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060018201611eba57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212201025e06c8edb8027f2cd49bea9decc7f3c16865c70b42ab9a93adf8d65a0845364736f6c63430008100033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
