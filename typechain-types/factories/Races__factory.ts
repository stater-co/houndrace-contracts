/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "generator",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raceFee",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "callable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "getStatistics",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "totalRuns",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondPlace",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "thirdPlace",
            type: "uint64",
          },
        ],
        internalType: "struct HoundStatistics.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "houndsStatistic",
    outputs: [
      {
        internalType: "uint64",
        name: "totalRuns",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "firstPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "secondPlace",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "thirdPlace",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arena",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "uint32[]",
            name: "paymentType",
            type: "uint32[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payments",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "randomness",
            type: "address",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "generator",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "raceFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "callable",
            type: "bool",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "uint32[]",
                name: "paymentType",
                type: "uint32[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180553480156200001557600080fd5b50604051620025e2380380620025e28339810160408190526200003891620003f4565b80620000443362000206565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e0850151600980549093169416939093179055610100830151805184936200010c92600a9291019062000256565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b81610100015151811015620001fd57600e6000836101000151838151811062000163576200016362000528565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e60008461010001518481518110620001b857620001b862000528565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620001f5816200053e565b905062000136565b50505062000566565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620002ae579160200282015b82811115620002ae57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000277565b50620002bc929150620002c0565b5090565b5b80821115620002bc5760008155600101620002c1565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715620003135762000313620002d7565b60405290565b80516001600160a01b03811681146200033157600080fd5b919050565b600082601f8301126200034857600080fd5b815160206001600160401b0380831115620003675762000367620002d7565b8260051b604051601f19603f830116810181811084821117156200038f576200038f620002d7565b604052938452858101830193838101925087851115620003ae57600080fd5b83870191505b84821015620003d857620003c88262000319565b83529183019190830190620003b4565b979650505050505050565b805180151581146200033157600080fd5b6000602082840312156200040757600080fd5b81516001600160401b03808211156200041f57600080fd5b9083019061016082860312156200043557600080fd5b6200043f620002ed565b6200044a8362000319565b81526200045a6020840162000319565b60208201526200046d6040840162000319565b6040820152620004806060840162000319565b6060820152620004936080840162000319565b6080820152620004a660a0840162000319565b60a0820152620004b960c0840162000319565b60c0820152620004cc60e0840162000319565b60e08201526101008084015183811115620004e657600080fd5b620004f48882870162000336565b82840152505061012091508183015182820152610140915062000519828401620003e3565b91810191909152949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200055f57634e487b7160e01b600052601160045260246000fd5b5060010190565b61206c80620005766000396000f3fe6080604052600436106100c35760003560e01c80631419f7b3146100c85780632a546a38146100dd5780633f16e358146101c3578063680adc37146101d6578063715018a61461025e5780637bbc469e146102735780638da5cb5b146102a7578063af640d0f146102d4578063b7dda85e146102f8578063c4bdc7e714610325578063c691c1c614610345578063d63a8e1114610365578063d8de6587146103a5578063e115234314610460578063e200c85714610480578063f2fde38b146104ad575b600080fd5b6100db6100d636600461187b565b6104cd565b005b3480156100e957600080fd5b506101776100f836600461199b565b604080516080810182526000808252602082018190529181018290526060810191909152506000908152600f6020908152604091829020825160808101845290546001600160401b038082168352600160401b8204811693830193909352600160801b8104831693820193909352600160c01b90920416606082015290565b6040516101ba919081516001600160401b039081168252602080840151821690830152604083810151821690830152606092830151169181019190915260800190565b60405180910390f35b6100db6101d13660046119b4565b610540565b3480156101e257600080fd5b5061022b6101f136600461199b565b600f602052600090815260409020546001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b03958616815293851660208501529184169183019190915290911660608201526080016101ba565b34801561026a57600080fd5b506100db6105b2565b34801561027f57600080fd5b5061029361028e36600461199b565b6105c6565b6040516101ba989796959493929190611bc1565b3480156102b357600080fd5b506102bc610a02565b6040516001600160a01b0390911681526020016101ba565b3480156102e057600080fd5b506102ea60015481565b6040519081526020016101ba565b34801561030457600080fd5b5061031861031336600461199b565b610a11565b6040516101ba9190611c36565b34801561033157600080fd5b506100db610340366004611d0d565b610edd565b34801561035157600080fd5b506100db610360366004611e27565b611092565b34801561037157600080fd5b50610395610380366004611f7a565b600e6020526000908152604090205460ff1681565b60405190151581526020016101ba565b3480156103b157600080fd5b50600254600354600454600554600654600754600854600954600b54600c546103fb996001600160a01b039081169981169881169781169681169581169481169316919060ff168a565b604080516001600160a01b039b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c085015290931660e0830152610100820192909252901515610120820152610140016101ba565b34801561046c57600080fd5b506100db61047b36600461199b565b6110b2565b34801561048c57600080fd5b506104a061049b36600461199b565b6111a2565b6040516101ba9190611f9c565b3480156104b957600080fd5b506100db6104c8366004611f7a565b611207565b6008546040516000916001600160a01b0316906104ed9083903690611faf565b600060405180830381855af49150503d8060008114610528576040519150601f19603f3d011682016040523d82523d6000602084013e61052d565b606091505b505090508061053b57600080fd5b505050565b6005546040516000916001600160a01b0316906105609083903690611faf565b600060405180830381855af49150503d806000811461059b576040519150601f19603f3d011682016040523d82523d6000602084013e6105a0565b606091505b50509050806105ae57600080fd5b5050565b6105ba61127d565b6105c460006112dc565b565b600d602052600090815260409020805481906105e190611fbf565b80601f016020809104026020016040519081016040528092919081815260200182805461060d90611fbf565b801561065a5780601f1061062f5761010080835404028352916020019161065a565b820191906000526020600020905b81548152906001019060200180831161063d57829003601f168201915b50505060018401546003850154600486015460058701546040805160068a01805460e0602082028401810190945260c083018181529a9b6001600160a01b039098169a969950949750929594909384928491908401828280156106e657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106c8575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561074857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161072a575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156107aa57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161078c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108445760008481526020908190208301805460408051828502810185019091528181529283018282801561083057602002820191906000526020600020905b81548152602001906001019080831161081c575b5050505050815260200190600101906107d8565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108dd576000848152602090819020830180546040805182850281018501909152818152928301828280156108c957602002820191906000526020600020905b8154815260200190600101908083116108b5575b505050505081526020019060010190610871565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561096057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116109235790505b5050505050815250509080600c01549080600d01805461097f90611fbf565b80601f01602080910402602001604051908101604052809291908181526020018280546109ab90611fbf565b80156109f85780601f106109cd576101008083540402835291602001916109f8565b820191906000526020600020905b8154815290600101906020018083116109db57829003601f168201915b5050505050905088565b6000546001600160a01b031690565b610a1961132c565b6000828152600d60205260409081902081516101208101909252805482908290610a4290611fbf565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6e90611fbf565b8015610abb5780601f10610a9057610100808354040283529160200191610abb565b820191906000526020600020905b815481529060010190602001808311610a9e57829003601f168201915b505050918352505060018201546001600160a01b03166020808301919091526002830180546040805182850281018501825282815294019392830182828015610b2357602002820191906000526020600020905b815481526020019060010190808311610b0f575b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610bb357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b95575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610c1557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610bf7575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c7757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c59575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d1157600084815260209081902083018054604080518285028101850190915281815292830182828015610cfd57602002820191906000526020600020905b815481526020019060010190808311610ce9575b505050505081526020019060010190610ca5565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610daa57600084815260209081902083018054604080518285028101850190915281815292830182828015610d9657602002820191906000526020600020905b815481526020019060010190808311610d82575b505050505081526020019060010190610d3e565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e2d57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610df05790505b5050505050815250508152602001600c8201548152602001600d82018054610e5490611fbf565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8090611fbf565b8015610ecd5780601f10610ea257610100808354040283529160200191610ecd565b820191906000526020600020905b815481529060010190602001808311610eb057829003601f168201915b5050505050815250509050919050565b610ee561127d565b8051600280546001600160a01b03199081166001600160a01b0393841617825560208085015160038054841691861691909117905560408501516004805484169186169190911790556060850151600580548416918616919091179055608085015160068054841691861691909117905560a085015160078054841691861691909117905560c085015160088054841691861691909117905560e085015160098054909316941693909317905561010083015180518493610fab92600a929101906113b8565b50610120820151600982015561014090910151600a909101805460ff191691151591909117905560005b816101000151518110156105ae57600e60008361010001518381518110610ffe57610ffe611ff9565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1615600e6000846101000151848151811061105057611050611ff9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561108b8161200f565b9050610fd5565b6005546040516000916001600160a01b0316906104ed9083903690611faf565b6110ba61127d565b478111156111275760405162461bcd60e51b815260206004820152602f60248201527f5061796f75743a2052657175657374656420616d6f756e7420746f207769746860448201526e6472617720697320746f6f2062696760881b60648201526084015b60405180910390fd5b61112f610a02565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061119f5760405162461bcd60e51b815260206004820152601a6024820152795061796f75743a204661696c656420746f20776974686472617760301b604482015260640161111e565b50565b6000818152600d60209081526040918290206002018054835181840281018401909452808452606093928301828280156111fb57602002820191906000526020600020905b8154815260200190600101908083116111e7575b50505050509050919050565b61120f61127d565b6001600160a01b0381166112745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161111e565b61119f816112dc565b33611286610a02565b6001600160a01b0316146105c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161111e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061012001604052806060815260200160006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016113a46040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b815260200160008152602001606081525090565b82805482825590600052602060002090810192821561140d579160200282015b8281111561140d57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906113d8565b5061141992915061141d565b5090565b5b80821115611419576000815560010161141e565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561146a5761146a611432565b60405290565b60405161012081016001600160401b038111828210171561146a5761146a611432565b60405161016081016001600160401b038111828210171561146a5761146a611432565b60405161018081016001600160401b038111828210171561146a5761146a611432565b604051601f8201601f191681016001600160401b038111828210171561150157611501611432565b604052919050565b600082601f83011261151a57600080fd5b81356001600160401b0381111561153357611533611432565b611546601f8201601f19166020016114d9565b81815284602083860101111561155b57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b038116811461158f57600080fd5b919050565b60006001600160401b038211156115ad576115ad611432565b5060051b60200190565b600082601f8301126115c857600080fd5b813560206115dd6115d883611594565b6114d9565b82815260059290921b840181019181810190868411156115fc57600080fd5b8286015b848110156116175780358352918301918301611600565b509695505050505050565b600082601f83011261163357600080fd5b813560206116436115d883611594565b82815260059290921b8401810191818101908684111561166257600080fd5b8286015b848110156116175761167781611578565b8352918301918301611666565b600082601f83011261169557600080fd5b813560206116a56115d883611594565b82815260059290921b840181019181810190868411156116c457600080fd5b8286015b848110156116175780356001600160401b038111156116e75760008081fd5b6116f58986838b01016115b7565b8452509183019183016116c8565b803563ffffffff8116811461158f57600080fd5b600082601f83011261172857600080fd5b813560206117386115d883611594565b82815260059290921b8401810191818101908684111561175757600080fd5b8286015b848110156116175761176c81611703565b835291830191830161175b565b600060c0828403121561178b57600080fd5b611793611448565b905081356001600160401b03808211156117ac57600080fd5b6117b885838601611622565b835260208401359150808211156117ce57600080fd5b6117da85838601611622565b602084015260408401359150808211156117f357600080fd5b6117ff85838601611622565b6040840152606084013591508082111561181857600080fd5b61182485838601611684565b6060840152608084013591508082111561183d57600080fd5b61184985838601611684565b608084015260a084013591508082111561186257600080fd5b5061186f84828501611717565b60a08301525092915050565b6000806040838503121561188e57600080fd5b8235915060208301356001600160401b03808211156118ac57600080fd5b9084019061012082870312156118c157600080fd5b6118c9611470565b8235828111156118d857600080fd5b6118e488828601611509565b8252506118f360208401611578565b602082015260408301358281111561190a57600080fd5b611916888286016115b7565b604083015250606083013560608201526080830135608082015260a083013560a082015260c08301358281111561194c57600080fd5b61195888828601611779565b60c08301525060e083013560e0820152610100808401358381111561197c57600080fd5b61198889828701611509565b8284015250508093505050509250929050565b6000602082840312156119ad57600080fd5b5035919050565b6000602082840312156119c657600080fd5b81356001600160401b038111156119dc57600080fd5b6119e884828501611779565b949350505050565b6000815180845260005b81811015611a16576020818501810151868301820152016119fa565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611a6f5781516001600160a01b031687529582019590820190600101611a4a565b509495945050505050565b600081518084526020808501945080840160005b83811015611a6f57815187529582019590820190600101611a8e565b6000815180845260208085019450848260051b860182860160005b85811015611aef578383038952611add838351611a7a565b98850198925090840190600101611ac5565b5090979650505050505050565b6000815160c08452611b1160c0850182611a36565b905060208084015185830382870152611b2a8382611a36565b92505060408401518583036040870152611b448382611a36565b92505060608401518583036060870152611b5e8382611aaa565b92505060808401518583036080870152611b788382611aaa565b60a086810151888303918901919091528051808352908401945060009250908301905b8083101561161757845163ffffffff168252938301936001929092019190830190611b9b565b6000610100808352611bd58184018c6119f0565b6001600160a01b038b166020850152604084018a9052606084018990526080840188905283810360a08501529050611c0d8187611afc565b90508460c084015282810360e0840152611c2781856119f0565b9b9a5050505050505050505050565b6020815260008251610120806020850152611c556101408501836119f0565b91506020850151611c7160408601826001600160a01b03169052565b506040850151601f1980868503016060870152611c8e8483611a7a565b935060608701516080870152608087015160a087015260a087015160c087015260c08701519150808685030160e0870152611cc98483611afc565b60e0880151610100888101919091528801518782039092018488015293509050611cf383826119f0565b9695505050505050565b8035801515811461158f57600080fd5b600060208284031215611d1f57600080fd5b81356001600160401b0380821115611d3657600080fd5b908301906101608286031215611d4b57600080fd5b611d53611493565b611d5c83611578565b8152611d6a60208401611578565b6020820152611d7b60408401611578565b6040820152611d8c60608401611578565b6060820152611d9d60808401611578565b6080820152611dae60a08401611578565b60a0820152611dbf60c08401611578565b60c0820152611dd060e08401611578565b60e08201526101008084013583811115611de957600080fd5b611df588828701611622565b828401525050610120915081830135828201526101409150611e18828401611cfd565b91810191909152949350505050565b60008060408385031215611e3a57600080fd5b82356001600160401b0380821115611e5157600080fd5b908401906101808287031215611e6657600080fd5b611e6e6114b6565b823582811115611e7d57600080fd5b611e8988828601611509565b825250602083013582811115611e9e57600080fd5b611eaa888286016115b7565b602083015250604083013582811115611ec257600080fd5b611ece888286016115b7565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013583811115611f1a57600080fd5b611f2689828701611779565b8284015250506101209150611f3c828401611703565b828201526101409150611f50828401611703565b828201526101609150611f64828401611cfd565b9181019190915295602094909401359450505050565b600060208284031215611f8c57600080fd5b611f9582611578565b9392505050565b602081526000611f956020830184611a7a565b8183823760009101908152919050565b600181811c90821680611fd357607f821691505b602082108103611ff357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161202f57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212201110e0c8beaa2371f9efe90930857d29f5dee8fe8424077b5a0d98e3f4ac039164736f6c63430008100033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
