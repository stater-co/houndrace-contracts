/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Races, RacesInterface, RacesConstructor } from "../Races";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewFinishedRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "NewRace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "UploadRace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "arenas",
        type: "address",
      },
      {
        internalType: "address",
        name: "hounds",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
      {
        internalType: "address",
        name: "payments",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "queues",
        type: "address",
      },
      {
        internalType: "address",
        name: "races",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "from",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "to",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "currency",
            type: "address[]",
          },
          {
            internalType: "uint256[][]",
            name: "ids",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "amounts",
            type: "uint256[][]",
          },
          {
            internalType: "enum Payment.PaymentTypes[]",
            name: "paymentType",
            type: "uint8[]",
          },
        ],
        internalType: "struct Payment.Struct",
        name: "payment",
        type: "tuple",
      },
    ],
    name: "handleRaceLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "participantsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
    ],
    name: "race",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "speciesAllowed",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCompletion",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "totalParticipants",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cooldown",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "staminaCost",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct Queue.Struct",
        name: "queue",
        type: "tuple",
      },
    ],
    name: "raceStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "races",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "feeCurrency",
            type: "address",
          },
          {
            internalType: "address",
            name: "entryFeeCurrency",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "participants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "enqueueDates",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "arena",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "from",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "to",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "currency",
                type: "address[]",
              },
              {
                internalType: "uint256[][]",
                name: "ids",
                type: "uint256[][]",
              },
              {
                internalType: "uint256[][]",
                name: "amounts",
                type: "uint256[][]",
              },
              {
                internalType: "enum Payment.PaymentTypes[]",
                name: "paymentType",
                type: "uint8[]",
              },
            ],
            internalType: "struct Payment.Struct",
            name: "payments",
            type: "tuple",
          },
        ],
        internalType: "struct Core.Struct",
        name: "core",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "seed",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "arenas",
            type: "address",
          },
          {
            internalType: "address",
            name: "hounds",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "address",
            name: "payments",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "queues",
            type: "address",
          },
          {
            internalType: "address",
            name: "races",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct RacesConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "theId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "feeCurrency",
                type: "address",
              },
              {
                internalType: "address",
                name: "entryFeeCurrency",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "participants",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "enqueueDates",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "arena",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "from",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "to",
                    type: "address[]",
                  },
                  {
                    internalType: "address[]",
                    name: "currency",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "ids",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "uint256[][]",
                    name: "amounts",
                    type: "uint256[][]",
                  },
                  {
                    internalType: "enum Payment.PaymentTypes[]",
                    name: "paymentType",
                    type: "uint8[]",
                  },
                ],
                internalType: "struct Payment.Struct",
                name: "payments",
                type: "tuple",
              },
            ],
            internalType: "struct Core.Struct",
            name: "core",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "queueId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "randomness",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "seed",
            type: "bytes",
          },
        ],
        internalType: "struct Race.Struct",
        name: "race",
        type: "tuple",
      },
    ],
    name: "uploadRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162002c1e38038062002c1e83398101604081905262000039916200050f565b80516101008201518291906200004f33620001e7565b80518251146200005e57600080fd5b60005b8251811015620000f85781818151811062000080576200008062000634565b602002602001015160016000858481518110620000a157620000a162000634565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000f0906200064a565b905062000061565b505081518051839250600391620001159183916020019062000237565b506020828101516001830180546001600160a01b03199081166001600160a01b039384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078501805490921692169190911790556101008301518051620001db9260088501920190620002a1565b50905050505062000672565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200028f579160200282015b828111156200028f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000258565b506200029d9291506200034a565b5090565b828054828255906000526020600020906007016008900481019282156200028f5791602002820160005b838211156200030e57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302620002cb565b8015620003405782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200030e565b50506200029d9291505b5b808211156200029d57600081556001016200034b565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156200039d576200039d62000361565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003ce57620003ce62000361565b604052919050565b60006001600160401b03821115620003f257620003f262000361565b5060051b60200190565b80516001600160a01b03811681146200041457600080fd5b919050565b600082601f8301126200042b57600080fd5b81516020620004446200043e83620003d6565b620003a3565b82815260059290921b840181019181810190868411156200046457600080fd5b8286015b848110156200048a576200047c81620003fc565b835291830191830162000468565b509695505050505050565b600082601f830112620004a757600080fd5b81516020620004ba6200043e83620003d6565b82815260059290921b84018101918181019086841115620004da57600080fd5b8286015b848110156200048a5780516001600160e01b031981168114620005015760008081fd5b8352918301918301620004de565b6000602082840312156200052257600080fd5b81516001600160401b03808211156200053a57600080fd5b9083019061012082860312156200055057600080fd5b6200055a62000377565b8251828111156200056a57600080fd5b620005788782860162000419565b8252506200058960208401620003fc565b60208201526200059c60408401620003fc565b6040820152620005af60608401620003fc565b6060820152620005c260808401620003fc565b6080820152620005d560a08401620003fc565b60a0820152620005e860c08401620003fc565b60c0820152620005fb60e08401620003fc565b60e082015261010080840151838111156200061557600080fd5b620006238882870162000495565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200066b57634e487b7160e01b600052601160045260246000fd5b5060010190565b61259c80620006826000396000f3fe6080604052600436106100dd5760003560e01c80639cce37c61161007f578063b7dda85e11610059578063b7dda85e146102c2578063d8de6587146102ef578063e200c85714610397578063f2fde38b146103c457600080fd5b80639cce37c6146101da578063aa4daabd1461027e578063af640d0f1461029e57600080fd5b8063715018a6116100bb578063715018a6146101445780637bbc469e146101595780638da5cb5b146101925780639ad2e2b0146101c757600080fd5b806330e54438146100e2578063357d51421461010457806365913d7714610124575b600080fd5b3480156100ee57600080fd5b506101026100fd366004611c09565b6103e4565b005b34801561011057600080fd5b5061010261011f366004611d64565b610465565b34801561013057600080fd5b5061010261013f366004611dec565b61052a565b34801561015057600080fd5b506101026105a5565b34801561016557600080fd5b50610179610174366004611eef565b6105b9565b604051610189949392919061224d565b60405180910390f35b34801561019e57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610189565b6101026101d5366004612289565b610b2d565b3480156101e657600080fd5b506102456101f53660046122c6565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff00000000000000000000000000000000000000000000000000000000938416815292909116602083015201610189565b34801561028a57600080fd5b506101026102993660046122e1565b610bac565b3480156102aa57600080fd5b506102b460025481565b604051908152602001610189565b3480156102ce57600080fd5b506102e26102dd366004611eef565b610cb7565b60405161018991906123ee565b3480156102fb57600080fd5b50600454600554600654600754600854600954600a546103419673ffffffffffffffffffffffffffffffffffffffff908116968116958116948116938116928116911687565b6040805173ffffffffffffffffffffffffffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015260e001610189565b3480156103a357600080fd5b506103b76103b2366004611eef565b611243565b6040516101899190612462565b3480156103d057600080fd5b506101026103df3660046122c6565b6112a8565b60085460405160009173ffffffffffffffffffffffffffffffffffffffff16906104119083903690612475565b600060405180830381855af49150503d806000811461044c576040519150601f19603f3d011682016040523d82523d6000602084013e610451565b606091505b505090508061045f57600080fd5b50505050565b61046d611364565b805182511461047b57600080fd5b60005b82518110156105255781818151811061049957610499612485565b6020026020010151600160008584815181106104b7576104b7612485565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c02179055508061051e906124b4565b905061047e565b505050565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff16906105579083903690612475565b600060405180830381855af49150503d8060008114610592576040519150601f19603f3d011682016040523d82523d6000602084013e610597565b606091505b505090508061052557600080fd5b6105ad611364565b6105b760006113e5565b565b600c60205280600052604060002060009150905080600001604051806101200160405290816000820180546105ed90612513565b80601f016020809104026020016040519081016040528092919081815260200182805461061990612513565b80156106665780601f1061063b57610100808354040283529160200191610666565b820191906000526020600020905b81548152906001019060200180831161064957829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff908116602080840191909152600284015490911660408084019190915260038401805482518185028101850190935280835260609094019391929091908301828280156106f457602002820191906000526020600020905b8154815260200190600101908083116106e0575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561074c57602002820191906000526020600020905b815481526020019060010190808311610738575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156107e957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107be575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561085857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161082d575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156108c757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161089c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156109615760008481526020908190208301805460408051828502810185019091528181529283018282801561094d57602002820191906000526020600020905b815481526020019060010190808311610939575b5050505050815260200190600101906108f5565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109fa576000848152602090819020830180546040805182850281018501909152818152928301828280156109e657602002820191906000526020600020905b8154815260200190600101908083116109d2575b50505050508152602001906001019061098e565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a8157602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610a5f57610a5f612042565b815260206001928301818104948501949093039092029101808411610a405790505b505050505081525050815250509080600e01549080600f015490806010018054610aaa90612513565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad690612513565b8015610b235780601f10610af857610100808354040283529160200191610b23565b820191906000526020600020905b815481529060010190602001808311610b0657829003601f168201915b5050505050905084565b60065460405160009173ffffffffffffffffffffffffffffffffffffffff1690610b5a9083903690612475565b600060405180830381855af49150503d8060008114610b95576040519150601f19603f3d011682016040523d82523d6000602084013e610b9a565b606091505b5050905080610ba857600080fd5b5050565b610bb4611364565b805180518291600391610bce91839160209091019061145a565b506020828101516001830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501516002850180548316918416919091179055606085015160038501805483169184169190911790556080850151600485018054831691841691909117905560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e08501516007850180549092169216919091179055610100830151805161045f92600885019201906114e4565b610cbf61158b565b6000828152600c60205260409081902081516101a08101909252805482906080820190839082908290610cf190612513565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1d90612513565b8015610d6a5780601f10610d3f57610100808354040283529160200191610d6a565b820191906000526020600020905b815481529060010190602001808311610d4d57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff90811660208084019190915260028401549091166040808401919091526003840180548251818502810185019093528083526060909401939192909190830182828015610df857602002820191906000526020600020905b815481526020019060010190808311610de4575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610e5057602002820191906000526020600020905b815481526020019060010190808311610e3c575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882016040518060c001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610eed57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ec2575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f5c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f31575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610fcb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fa0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110655760008481526020908190208301805460408051828502810185019091528181529283018282801561105157602002820191906000526020600020905b81548152602001906001019080831161103d575b505050505081526020019060010190610ff9565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110fe576000848152602090819020830180546040805182850281018501909152818152928301828280156110ea57602002820191906000526020600020905b8154815260200190600101908083116110d6575b505050505081526020019060010190611092565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561118557602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561116357611163612042565b8152602060019283018181049485019490930390920291018084116111445790505b505050505081525050815250508152602001600e8201548152602001600f82015481526020016010820180546111ba90612513565b80601f01602080910402602001604051908101604052809291908181526020018280546111e690612513565b80156112335780601f1061120857610100808354040283529160200191611233565b820191906000526020600020905b81548152906001019060200180831161121657829003601f168201915b5050505050815250509050919050565b6000818152600c602090815260409182902060030180548351818402810184019094528084526060939283018282801561129c57602002820191906000526020600020905b815481526020019060010190808311611288575b50505050509050919050565b6112b0611364565b73ffffffffffffffffffffffffffffffffffffffff8116611358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b611361816113e5565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161134f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156114d4579160200282015b828111156114d457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061147a565b506114e09291506115b9565b5090565b828054828255906000526020600020906007016008900481019282156114d45791602002820160005b8382111561154e57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261150d565b801561157e5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261154e565b50506114e09291506115b9565b604051806080016040528061159e6115ce565b81526020016000815260200160008152602001606081525090565b5b808211156114e057600081556001016115ba565b60405180610120016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016116776040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156116ce576116ce61167c565b60405290565b604051610120810167ffffffffffffffff811182821017156116ce576116ce61167c565b6040516080810167ffffffffffffffff811182821017156116ce576116ce61167c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117625761176261167c565b604052919050565b600067ffffffffffffffff8311156117845761178461167c565b6117b560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161171b565b90508281528383830111156117c957600080fd5b828260208301376000602084830101529392505050565b600082601f8301126117f157600080fd5b6118008383356020850161176a565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461182b57600080fd5b919050565b600067ffffffffffffffff82111561184a5761184a61167c565b5060051b60200190565b600082601f83011261186557600080fd5b8135602061187a61187583611830565b61171b565b82815260059290921b8401810191818101908684111561189957600080fd5b8286015b848110156118b4578035835291830191830161189d565b509695505050505050565b600082601f8301126118d057600080fd5b813560206118e061187583611830565b82815260059290921b840181019181810190868411156118ff57600080fd5b8286015b848110156118b45761191481611807565b8352918301918301611903565b600082601f83011261193257600080fd5b8135602061194261187583611830565b82815260059290921b8401810191818101908684111561196157600080fd5b8286015b848110156118b457803567ffffffffffffffff8111156119855760008081fd5b6119938986838b0101611854565b845250918301918301611965565b600082601f8301126119b257600080fd5b813560206119c261187583611830565b82815260059290921b840181019181810190868411156119e157600080fd5b8286015b848110156118b4578035600481106119fd5760008081fd5b83529183019183016119e5565b600060c08284031215611a1c57600080fd5b611a246116ab565b9050813567ffffffffffffffff80821115611a3e57600080fd5b611a4a858386016118bf565b83526020840135915080821115611a6057600080fd5b611a6c858386016118bf565b60208401526040840135915080821115611a8557600080fd5b611a91858386016118bf565b60408401526060840135915080821115611aaa57600080fd5b611ab685838601611921565b60608401526080840135915080821115611acf57600080fd5b611adb85838601611921565b608084015260a0840135915080821115611af457600080fd5b50611b01848285016119a1565b60a08301525092915050565b60006101208284031215611b2057600080fd5b611b286116d4565b9050813567ffffffffffffffff80821115611b4257600080fd5b611b4e858386016117e0565b8352611b5c60208501611807565b6020840152611b6d60408501611807565b60408401526060840135915080821115611b8657600080fd5b611b9285838601611854565b60608401526080840135915080821115611bab57600080fd5b611bb785838601611854565b608084015260a084013560a084015260c084013560c084015260e084013560e084015261010091508184013581811115611bf057600080fd5b611bfc86828701611a0a565b8385015250505092915050565b600080600060608486031215611c1e57600080fd5b8335925060208401359150604084013567ffffffffffffffff80821115611c4457600080fd5b9085019060808288031215611c5857600080fd5b611c606116f8565b823582811115611c6f57600080fd5b611c7b89828601611b0d565b8252506020830135602082015260408301356040820152606083013582811115611ca457600080fd5b80840193505087601f840112611cb957600080fd5b611cc88884356020860161176a565b60608201528093505050509250925092565b600082601f830112611ceb57600080fd5b81356020611cfb61187583611830565b82815260059290921b84018101918181019086841115611d1a57600080fd5b8286015b848110156118b45780357fffffffff0000000000000000000000000000000000000000000000000000000081168114611d575760008081fd5b8352918301918301611d1e565b60008060408385031215611d7757600080fd5b823567ffffffffffffffff80821115611d8f57600080fd5b611d9b868387016118bf565b93506020850135915080821115611db157600080fd5b50611dbe85828601611cda565b9150509250929050565b803563ffffffff8116811461182b57600080fd5b8035801515811461182b57600080fd5b60008060408385031215611dff57600080fd5b82359150602083013567ffffffffffffffff80821115611e1e57600080fd5b908401906101208287031215611e3357600080fd5b611e3b6116d4565b823582811115611e4a57600080fd5b611e5688828601611b0d565b825250602083013582811115611e6b57600080fd5b611e7788828601611854565b602083015250604083013560408201526060830135606082015260808301356080820152611ea760a08401611dc8565b60a0820152611eb860c08401611dc8565b60c0820152611ec960e08401611dc8565b60e08201526101009150611ede828401611ddc565b828201528093505050509250929050565b600060208284031215611f0157600080fd5b5035919050565b6000815180845260005b81811015611f2e57602081850181015186830182015201611f12565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015611f9c57815187529582019590820190600101611f80565b509495945050505050565b600081518084526020808501945080840160005b83811015611f9c57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611fbb565b600081518084526020808501808196508360051b8101915082860160005b85811015612035578284038952612023848351611f6c565b9885019893509084019060010161200b565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000815160c0845261208660c0850182611fa7565b90506020808401518583038287015261209f8382611fa7565b925050604084015185830360408701526120b98382611fa7565b925050606084015185830360608701526120d38382611fed565b925050608084015185830360808701526120ed8382611fed565b60a08681015188830391890191909152805180835290840194506000925090830190825b818110156121635785516004808210612150577f4e487b7100000000000000000000000000000000000000000000000000000000865260218152602486fd5b5083529484019491840191600101612111565b5090979650505050505050565b6000610120825181855261218682860182611f08565b91505060208301516121b0602086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516121d8604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015184820360608601526121f08282611f6c565b9150506080830151848203608086015261220a8282611f6c565b91505060a083015160a085015260c083015160c085015260e083015160e085015261010080840151858303828701526122438382612071565b9695505050505050565b6080815260006122606080830187612170565b856020840152846040840152828103606084015261227e8185611f08565b979650505050505050565b60006020828403121561229b57600080fd5b813567ffffffffffffffff8111156122b257600080fd5b6122be84828501611a0a565b949350505050565b6000602082840312156122d857600080fd5b61180082611807565b6000602082840312156122f357600080fd5b813567ffffffffffffffff8082111561230b57600080fd5b90830190610120828603121561232057600080fd5b6123286116d4565b82358281111561233757600080fd5b612343878286016118bf565b82525061235260208401611807565b602082015261236360408401611807565b604082015261237460608401611807565b606082015261238560808401611807565b608082015261239660a08401611807565b60a08201526123a760c08401611807565b60c08201526123b860e08401611807565b60e082015261010080840135838111156123d157600080fd5b6123dd88828701611cda565b918301919091525095945050505050565b60208152600082516080602084015261240a60a0840182612170565b9050602084015160408401526040840151606084015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160808501526124598282611f08565b95945050505050565b6020815260006118006020830184611f6c565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361250c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061252757607f821691505b602082108103612560577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220e4e4f63480d2378af9235c5aaf8006ec95b02fa69c21d64a6e87c5be4eaf1a1e64736f6c63430008110033";

type RacesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RacesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Races__factory extends ContractFactory {
  constructor(...args: RacesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Races";
  }

  deploy(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Races> {
    return super.deploy(input, overrides || {}) as Promise<Races>;
  }
  getDeployTransaction(
    input: RacesConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Races {
    return super.attach(address) as Races;
  }
  connect(signer: Signer): Races__factory {
    return super.connect(signer) as Races__factory;
  }
  static readonly contractName: "Races";
  public readonly contractName: "Races";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RacesInterface {
    return new utils.Interface(_abi) as RacesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Races {
    return new Contract(address, _abi, signerOrProvider) as Races;
  }
}
