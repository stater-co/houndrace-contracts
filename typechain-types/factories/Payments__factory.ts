/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Payments,
  PaymentsInterface,
  PaymentsConstructor,
} from "../Payments";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "NewPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkWhiteList",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "targets",
            type: "bytes4[]",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "targets",
        type: "bytes4[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011693803806200116983398101604081905262000034916200041f565b8051604082015160016000558291906200004e3362000161565b80518251146200005d57600080fd5b60005b8251811015620000f7578181815181106200007f576200007f6200052f565b602002602001015160026000858481518110620000a057620000a06200052f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548163ffffffff021916908360e01c021790555080620000ef9062000545565b905062000060565b5050815180518392506003916200011491839160200190620001b3565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516200015592600285019201906200021d565b5090505050506200056d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280548282559060005260206000209081019282156200020b579160200282015b828111156200020b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001d4565b5062000219929150620002c6565b5090565b828054828255906000526020600020906007016008900481019282156200020b5791602002820160005b838211156200028a57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000247565b8015620002bc5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200028a565b5050620002199291505b5b80821115620002195760008155600101620002c7565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715620003185762000318620002dd565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003495762000349620002dd565b604052919050565b60006001600160401b038211156200036d576200036d620002dd565b5060051b60200190565b80516001600160a01b03811681146200038f57600080fd5b919050565b600082601f830112620003a657600080fd5b81516020620003bf620003b98362000351565b6200031e565b82815260059290921b84018101918181019086841115620003df57600080fd5b8286015b84811015620004145780516001600160e01b031981168114620004065760008081fd5b8352918301918301620003e3565b509695505050505050565b600060208083850312156200043357600080fd5b82516001600160401b03808211156200044b57600080fd5b90840190606082870312156200046057600080fd5b6200046a620002f3565b8251828111156200047a57600080fd5b8301601f810188136200048c57600080fd5b80516200049d620003b98262000351565b81815260059190911b8201860190868101908a831115620004bd57600080fd5b928701925b82841015620004e657620004d68462000377565b82529287019290870190620004c2565b845250620004f991505083850162000377565b8482015260408301519350818411156200051257600080fd5b620005208785850162000394565b60408201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200056657634e487b7160e01b600052601160045260246000fd5b5060010190565b610bec806200057d6000396000f3fe6080604052600436106100795760003560e01c8063c01f59c21161004b578063c01f59c2146101ac578063d8de6587146101bf578063e5728dc8146101ec578063f2fde38b1461020c57005b8063357d514214610082578063715018a6146100a25780638da5cb5b146100b75780639cce37c61461010857005b3661008057005b005b34801561008e57600080fd5b5061008061009d3660046108d2565b61022c565b3480156100ae57600080fd5b506100806102f1565b3480156100c357600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561011457600080fd5b50610173610123366004610936565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604081205460e01b9190357fffffffff000000000000000000000000000000000000000000000000000000001690565b604080517fffffffff000000000000000000000000000000000000000000000000000000009384168152929091166020830152016100ff565b6100806101ba3660046109b3565b610305565b3480156101cb57600080fd5b506004546100de9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f857600080fd5b50610080610207366004610a60565b610389565b34801561021857600080fd5b50610080610227366004610936565b610415565b6102346104d1565b805182511461024257600080fd5b60005b82518110156102ec5781818151811061026057610260610b18565b60200260200101516002600085848151811061027e5761027e610b18565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908360e01c0217905550806102e590610b47565b9050610245565b505050565b6102f96104d1565b6103036000610552565b565b60045460405160009173ffffffffffffffffffffffffffffffffffffffff16906103329083903690610ba6565b600060405180830381855af49150503d806000811461036d576040519150601f19603f3d011682016040523d82523d6000602084013e610372565b606091505b505090508061038057600080fd5b50505050505050565b6103916104d1565b8051805182916003916103ab9183916020909101906105c9565b506020828101516001830180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790556040830151805161040f9260028501920190610653565b50505050565b61041d6104d1565b73ffffffffffffffffffffffffffffffffffffffff81166104c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104ce81610552565b50565b60015473ffffffffffffffffffffffffffffffffffffffff163314610303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bc565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215610643579160200282015b8281111561064357825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906105e9565b5061064f9291506106f6565b5090565b828054828255906000526020600020906007016008900481019282156106435791602002820160005b838211156106bd57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261067c565b80156106ed5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026106bd565b505061064f9291505b5b8082111561064f57600081556001016106f7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107815761078161070b565b604052919050565b600067ffffffffffffffff8211156107a3576107a361070b565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff811681146107d157600080fd5b919050565b600082601f8301126107e757600080fd5b813560206107fc6107f783610789565b61073a565b82815260059290921b8401810191818101908684111561081b57600080fd5b8286015b8481101561083d57610830816107ad565b835291830191830161081f565b509695505050505050565b600082601f83011261085957600080fd5b813560206108696107f783610789565b82815260059290921b8401810191818101908684111561088857600080fd5b8286015b8481101561083d5780357fffffffff00000000000000000000000000000000000000000000000000000000811681146108c55760008081fd5b835291830191830161088c565b600080604083850312156108e557600080fd5b823567ffffffffffffffff808211156108fd57600080fd5b610909868387016107d6565b9350602085013591508082111561091f57600080fd5b5061092c85828601610848565b9150509250929050565b60006020828403121561094857600080fd5b610951826107ad565b9392505050565b600082601f83011261096957600080fd5b813560206109796107f783610789565b82815260059290921b8401810191818101908684111561099857600080fd5b8286015b8481101561083d578035835291830191830161099c565b60008060008060008060c087890312156109cc57600080fd5b6109d5876107ad565b95506109e3602088016107ad565b94506109f1604088016107ad565b9350606087013567ffffffffffffffff80821115610a0e57600080fd5b610a1a8a838b01610958565b94506080890135915080821115610a3057600080fd5b50610a3d89828a01610958565b92505060a087013560048110610a5257600080fd5b809150509295509295509295565b600060208284031215610a7257600080fd5b813567ffffffffffffffff80821115610a8a57600080fd5b9083019060608286031215610a9e57600080fd5b604051606081018181108382111715610ab957610ab961070b565b604052823582811115610acb57600080fd5b610ad7878286016107d6565b825250610ae6602084016107ad565b6020820152604083013582811115610afd57600080fd5b610b0987828601610848565b60408301525095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b818382376000910190815291905056fea264697066735822122087289981956cd9033a8d0569f4b172bd5b869530409e6cac5adbd254da0b29e364736f6c63430008110033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(input, overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
