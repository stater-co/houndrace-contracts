/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Payments,
  PaymentsInterface,
  PaymentsConstructor,
} from "../Payments";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "NewPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "operators",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
          {
            internalType: "bytes4[][]",
            name: "targets",
            type: "bytes4[][]",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e8e38038062001e8e833981810160405281019062000037919062000a06565b808060000151816040015160016000819055506200006a6200005e6200024e60201b60201c565b6200025660201b60201c565b80518251146200007957600080fd5b60005b8251811015620001b85760005b8282815181106200009f576200009e62000a57565b5b602002602001015151811015620001a35760026000858481518110620000ca57620000c962000a57565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811062000122576200012162000a57565b5b602002602001015182815181106200013f576200013e62000a57565b5b602002602001015190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c0217905550806200019b9062000abf565b905062000089565b5080620001b09062000abf565b90506200007c565b5050508060036000820151816000019080519060200190620001dc9291906200031c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019062000242929190620003ab565b50905050505062000b0c565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805482825590600052602060002090810192821562000398579160200282015b82811115620003975782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200033d565b5b509050620003a7919062000412565b5090565b828054828255906000526020600020908101928215620003ff579160200282015b82811115620003fe578251829080519060200190620003ed92919062000431565b5091602001919060010190620003cc565b5b5090506200040e9190620004e5565b5090565b5b808211156200042d57600081600090555060010162000413565b5090565b82805482825590600052602060002090600701600890048101928215620004d25791602002820160005b838211156200049e57835183826101000a81548163ffffffff021916908360e01c021790555092602001926004016020816003010492830192600103026200045b565b8015620004d05782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200049e565b505b509050620004e1919062000412565b5090565b5b80821115620005095760008181620004ff91906200050d565b50600101620004e6565b5090565b50805460008255600701600890049060005260206000209081019062000534919062000412565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200059b8262000550565b810181811067ffffffffffffffff82111715620005bd57620005bc62000561565b5b80604052505050565b6000620005d262000537565b9050620005e0828262000590565b919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156200060d576200060c62000561565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006508262000623565b9050919050565b620006628162000643565b81146200066e57600080fd5b50565b600081519050620006828162000657565b92915050565b60006200069f6200069984620005ef565b620005c6565b90508083825260208201905060208402830185811115620006c557620006c46200061e565b5b835b81811015620006f25780620006dd888262000671565b845260208401935050602081019050620006c7565b5050509392505050565b600082601f830112620007145762000713620005ea565b5b81516200072684826020860162000688565b91505092915050565b600067ffffffffffffffff8211156200074d576200074c62000561565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156200077c576200077b62000561565b5b602082029050602081019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620007c4816200078d565b8114620007d057600080fd5b50565b600081519050620007e481620007b9565b92915050565b600062000801620007fb846200075e565b620005c6565b905080838252602082019050602084028301858111156200082757620008266200061e565b5b835b818110156200085457806200083f8882620007d3565b84526020840193505060208101905062000829565b5050509392505050565b600082601f830112620008765762000875620005ea565b5b815162000888848260208601620007ea565b91505092915050565b6000620008a8620008a2846200072f565b620005c6565b90508083825260208201905060208402830185811115620008ce57620008cd6200061e565b5b835b818110156200091c57805167ffffffffffffffff811115620008f757620008f6620005ea565b5b8086016200090689826200085e565b85526020850194505050602081019050620008d0565b5050509392505050565b600082601f8301126200093e576200093d620005ea565b5b81516200095084826020860162000891565b91505092915050565b6000606082840312156200097257620009716200054b565b5b6200097e6060620005c6565b9050600082015167ffffffffffffffff811115620009a157620009a0620005e5565b5b620009af84828501620006fc565b6000830152506020620009c58482850162000671565b602083015250604082015167ffffffffffffffff811115620009ec57620009eb620005e5565b5b620009fa8482850162000926565b60408301525092915050565b60006020828403121562000a1f5762000a1e62000541565b5b600082015167ffffffffffffffff81111562000a405762000a3f62000546565b5b62000a4e8482850162000959565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000acc8262000ab5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000b015762000b0062000a86565b5b600182019050919050565b6113728062000b1c6000396000f3fe6080604052600436106100745760003560e01c8063c01f59c21161004e578063c01f59c2146100fc578063d8de658714610118578063eccf35ba14610143578063f2fde38b1461016c5761007b565b80635b19e2941461007d578063715018a6146100ba5780638da5cb5b146100d15761007b565b3661007b57005b005b34801561008957600080fd5b506100a4600480360381019061009f9190610a7d565b610195565b6040516100b19190610af8565b60405180910390f35b3480156100c657600080fd5b506100cf6101db565b005b3480156100dd57600080fd5b506100e66101ef565b6040516100f39190610b22565b60405180910390f35b61011660048036038101906101119190610cbb565b610219565b005b34801561012457600080fd5b5061012d6102bf565b60405161013a9190610b22565b60405180910390f35b34801561014f57600080fd5b5061016a600480360381019061016591906110b9565b6102eb565b005b34801561017857600080fd5b50610193600480360381019061018e9190611102565b61038f565b005b600260205281600052604060002081815481106101b157600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900460e01b81565b6101e3610412565b6101ed6000610490565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405161026892919061116e565b600060405180830381855af49150503d80600081146102a3576040519150601f19603f3d011682016040523d82523d6000602084013e6102a8565b606091505b50509050806102b657600080fd5b50505050505050565b60038060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6102f3610412565b80600360008201518160000190805190602001906103129291906107d5565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061037692919061085f565b5090505061038c81600001518260400151610556565b50565b610397610412565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd9061120a565b60405180910390fd5b61040f81610490565b50565b61041a6107cd565b73ffffffffffffffffffffffffffffffffffffffff166104386101ef565b73ffffffffffffffffffffffffffffffffffffffff161461048e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048590611276565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b805182511461056457600080fd5b60005b82518110156107c85760005b82828151811061058657610585611296565b5b6020026020010151518110156107b657600260008584815181106105ad576105ac611296565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106106d457600260008584815181106106105761060f611296565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083838151811061066557610664611296565b5b6020026020010151828151811061067f5761067e611296565b5b602002602001015190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c02179055506107a5565b8282815181106106e7576106e6611296565b5b6020026020010151818151811061070157610700611296565b5b6020026020010151600260008685815181106107205761071f611296565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061077457610773611296565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c02179055505b806107af906112f4565b9050610573565b50806107c1906112f4565b9050610567565b505050565b600033905090565b82805482825590600052602060002090810192821561084e579160200282015b8281111561084d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107f5565b5b50905061085b91906108bf565b5090565b8280548282559060005260206000209081019282156108ae579160200282015b828111156108ad57825182908051906020019061089d9291906108dc565b509160200191906001019061087f565b5b5090506108bb9190610989565b5090565b5b808211156108d85760008160009055506001016108c0565b5090565b828054828255906000526020600020906007016008900481019282156109785791602002820160005b8382111561094657835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610905565b80156109765782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610946565b505b50905061098591906108bf565b5090565b5b808211156109a957600081816109a091906109ad565b5060010161098a565b5090565b5080546000825560070160089004906000526020600020908101906109d291906108bf565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a14826109e9565b9050919050565b610a2481610a09565b8114610a2f57600080fd5b50565b600081359050610a4181610a1b565b92915050565b6000819050919050565b610a5a81610a47565b8114610a6557600080fd5b50565b600081359050610a7781610a51565b92915050565b60008060408385031215610a9457610a936109df565b5b6000610aa285828601610a32565b9250506020610ab385828601610a68565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610af281610abd565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b610b1c81610a09565b82525050565b6000602082019050610b376000830184610b13565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b8b82610b42565b810181811067ffffffffffffffff82111715610baa57610ba9610b53565b5b80604052505050565b6000610bbd6109d5565b9050610bc98282610b82565b919050565b600067ffffffffffffffff821115610be957610be8610b53565b5b602082029050602081019050919050565b600080fd5b6000610c12610c0d84610bce565b610bb3565b90508083825260208201905060208402830185811115610c3557610c34610bfa565b5b835b81811015610c5e5780610c4a8882610a68565b845260208401935050602081019050610c37565b5050509392505050565b600082601f830112610c7d57610c7c610b3d565b5b8135610c8d848260208601610bff565b91505092915050565b60048110610ca357600080fd5b50565b600081359050610cb581610c96565b92915050565b60008060008060008060c08789031215610cd857610cd76109df565b5b6000610ce689828a01610a32565b9650506020610cf789828a01610a32565b9550506040610d0889828a01610a32565b945050606087013567ffffffffffffffff811115610d2957610d286109e4565b5b610d3589828a01610c68565b935050608087013567ffffffffffffffff811115610d5657610d556109e4565b5b610d6289828a01610c68565b92505060a0610d7389828a01610ca6565b9150509295509295509295565b600080fd5b600080fd5b600067ffffffffffffffff821115610da557610da4610b53565b5b602082029050602081019050919050565b6000610dc9610dc484610d8a565b610bb3565b90508083825260208201905060208402830185811115610dec57610deb610bfa565b5b835b81811015610e155780610e018882610a32565b845260208401935050602081019050610dee565b5050509392505050565b600082601f830112610e3457610e33610b3d565b5b8135610e44848260208601610db6565b91505092915050565b600067ffffffffffffffff821115610e6857610e67610b53565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e9457610e93610b53565b5b602082029050602081019050919050565b610eae81610abd565b8114610eb957600080fd5b50565b600081359050610ecb81610ea5565b92915050565b6000610ee4610edf84610e79565b610bb3565b90508083825260208201905060208402830185811115610f0757610f06610bfa565b5b835b81811015610f305780610f1c8882610ebc565b845260208401935050602081019050610f09565b5050509392505050565b600082601f830112610f4f57610f4e610b3d565b5b8135610f5f848260208601610ed1565b91505092915050565b6000610f7b610f7684610e4d565b610bb3565b90508083825260208201905060208402830185811115610f9e57610f9d610bfa565b5b835b81811015610fe557803567ffffffffffffffff811115610fc357610fc2610b3d565b5b808601610fd08982610f3a565b85526020850194505050602081019050610fa0565b5050509392505050565b600082601f83011261100457611003610b3d565b5b8135611014848260208601610f68565b91505092915050565b60006060828403121561103357611032610d80565b5b61103d6060610bb3565b9050600082013567ffffffffffffffff81111561105d5761105c610d85565b5b61106984828501610e1f565b600083015250602061107d84828501610a32565b602083015250604082013567ffffffffffffffff8111156110a1576110a0610d85565b5b6110ad84828501610fef565b60408301525092915050565b6000602082840312156110cf576110ce6109df565b5b600082013567ffffffffffffffff8111156110ed576110ec6109e4565b5b6110f98482850161101d565b91505092915050565b600060208284031215611118576111176109df565b5b600061112684828501610a32565b91505092915050565b600081905092915050565b82818337600083830152505050565b6000611155838561112f565b935061116283858461113a565b82840190509392505050565b600061117b828486611149565b91508190509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006111f4602683611187565b91506111ff82611198565b604082019050919050565b60006020820190508181036000830152611223816111e7565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611260602083611187565b915061126b8261122a565b602082019050919050565b6000602082019050818103600083015261128f81611253565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112ff82610a47565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611331576113306112c5565b5b60018201905091905056fea2646970667358221220f5d414d555b47df94fe3d2cc0a5bbe45542ae8d52e5ec657e433826a0e2c1e3e64736f6c63430008110033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(input, overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
