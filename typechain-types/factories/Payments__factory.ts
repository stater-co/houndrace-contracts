/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Payments,
  PaymentsInterface,
  PaymentsConstructor,
} from "../Payments";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "alphaduneReservoirs",
    outputs: [
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reservoirAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "enum Payment.PaymentTypes",
            name: "paymentType",
            type: "uint8",
          },
        ],
        internalType: "struct Reservoir.Struct",
        name: "reservoir",
        type: "tuple",
      },
    ],
    name: "fillRewardsReservoir",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsReservoirs",
    outputs: [
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109ac3803806109ac83398101604081905261002f916100f6565b806100393361008a565b600180558051600480546001600160a01b03199081166001600160a01b039384161790915560208301516005805483169184169190911790556040909201516006805490931691161790555061016f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f157600080fd5b919050565b60006060828403121561010857600080fd5b604051606081016001600160401b038111828210171561013857634e487b7160e01b600052604160045260246000fd5b604052610144836100da565b8152610152602084016100da565b6020820152610163604084016100da565b60408201529392505050565b61082e8061017e6000396000f3fe6080604052600436106100775760003560e01c80630319ed2e14610080578063715018a6146100ca5780638da5cb5b146100df578063baa726c41461010c578063c01f59c21461011f578063d6dc0dfd14610132578063d8de658714610152578063d8f042e1146101a9578063f2fde38b146101dc57005b3661007e57005b005b34801561008c57600080fd5b506100b461009b366004610506565b6002602081905260009182526040909120015460ff1681565b6040516100c19190610528565b60405180910390f35b3480156100d657600080fd5b5061007e6101fc565b3480156100eb57600080fd5b506100f4610210565b6040516001600160a01b0390911681526020016100c1565b61007e61011a36600461060f565b61021f565b61007e61012d3660046106d9565b61029a565b34801561013e57600080fd5b5061007e61014d36600461077d565b610371565b34801561015e57600080fd5b5060045460055460065461017f926001600160a01b03908116928116911683565b604080516001600160a01b03948516815292841660208401529216918101919091526060016100c1565b3480156101b557600080fd5b506100b46101c4366004610506565b60036020526000908152604090206002015460ff1681565b3480156101e857600080fd5b5061007e6101f7366004610506565b6103c2565b61020461043b565b61020e600061049a565b565b6000546001600160a01b031690565b61022761043b565b6006546040516000916001600160a01b03169061024790839036906107e8565b600060405180830381855af49150503d8060008114610282576040519150601f19603f3d011682016040523d82523d6000602084013e610287565b606091505b505090508061029557600080fd5b505050565b6002600154036102f15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556006546040516000916001600160a01b03169061031690839036906107e8565b600060405180830381855af49150503d8060008114610351576040519150601f19603f3d011682016040523d82523d6000602084013e610356565b606091505b505090508061036457600080fd5b5050600180555050505050565b61037961043b565b8051600480546001600160a01b03199081166001600160a01b03938416179091556020830151600580548316918416919091179055604090920151600680549093169116179055565b6103ca61043b565b6001600160a01b03811661042f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e8565b6104388161049a565b50565b33610444610210565b6001600160a01b03161461020e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461050157600080fd5b919050565b60006020828403121561051857600080fd5b610521826104ea565b9392505050565b602081016004831061054a57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261057757600080fd5b813560206001600160401b038083111561059357610593610550565b8260051b604051601f19603f830116810181811084821117156105b8576105b8610550565b6040529384528581018301938381019250878511156105d657600080fd5b83870191505b848210156105f5578135835291830191908301906105dc565b979650505050505050565b80356004811061050157600080fd5b6000806040838503121561062257600080fd5b61062b836104ea565b915060208301356001600160401b038082111561064757600080fd5b908401906060828703121561065b57600080fd5b60405160608101818110838211171561067657610676610550565b60405282358281111561068857600080fd5b61069488828601610566565b8252506020830135828111156106a957600080fd5b6106b588828601610566565b6020830152506106c760408401610600565b60408201528093505050509250929050565b60008060008060008060c087890312156106f257600080fd5b6106fb876104ea565b9550610709602088016104ea565b9450610717604088016104ea565b935060608701356001600160401b038082111561073357600080fd5b61073f8a838b01610566565b9450608089013591508082111561075557600080fd5b5061076289828a01610566565b92505061077160a08801610600565b90509295509295509295565b60006060828403121561078f57600080fd5b604051606081016001600160401b03811182821017156107b1576107b1610550565b6040526107bd836104ea565b81526107cb602084016104ea565b60208201526107dc604084016104ea565b60408201529392505050565b818382376000910190815291905056fea264697066735822122059171d2bb8e1ba1bcbdfbc1759bfcc3b368c48f964fba1e46e913313c5e1a95c64736f6c63430008100033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(input, overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
