/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Payments,
  PaymentsInterface,
  PaymentsConstructor,
} from "../Payments";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedCallers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "alphaduneReservoirs",
    outputs: [
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
      {
        internalType: "address",
        name: "restricted",
        type: "address",
      },
      {
        internalType: "address",
        name: "methods",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reservoirAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "enum Payment.PaymentTypes",
            name: "paymentType",
            type: "uint8",
          },
        ],
        internalType: "struct Reservoir.Struct",
        name: "reservoir",
        type: "tuple",
      },
    ],
    name: "fillRewardsReservoir",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsReservoirs",
    outputs: [
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "allowedCallers",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
          {
            internalType: "address",
            name: "restricted",
            type: "address",
          },
          {
            internalType: "address",
            name: "methods",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d4038038062000d4083398101604081905262000034916200021d565b806200004033620000bb565b60018055805180518291600591620000609183916020909101906200010b565b5060208201516001820180546001600160a01b03199081166001600160a01b039384161790915560408401516002840180548316918416919091179055606090930151600390920180549093169116179055506200033d9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000163579160200282015b828111156200016357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200012c565b506200017192915062000175565b5090565b5b8082111562000171576000815560010162000176565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715620001c757620001c76200018c565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620001f857620001f86200018c565b604052919050565b80516001600160a01b03811681146200021857600080fd5b919050565b600060208083850312156200023157600080fd5b82516001600160401b03808211156200024957600080fd5b90840190608082870312156200025e57600080fd5b62000268620001a2565b8251828111156200027857600080fd5b8301601f810188136200028a57600080fd5b8051838111156200029f576200029f6200018c565b8060051b9350620002b2868501620001cd565b818152938201860193868101908a861115620002cd57600080fd5b928701925b85841015620002f657620002e68462000200565b82529287019290870190620002d2565b8452506200030991505083850162000200565b848201526200031b6040840162000200565b60408201526200032e6060840162000200565b60608201529695505050505050565b6109f3806200034d6000396000f3fe6080604052600436106100825760003560e01c80630319ed2e1461008b5780634cdcdc08146100d4578063715018a6146100f45780637b334154146101095780638da5cb5b14610149578063baa726c414610176578063c01f59c214610189578063d8de65871461019c578063d8f042e1146101f3578063f2fde38b1461022657005b3661008957005b005b34801561009757600080fd5b506100be6100a63660046105f0565b60036020526000908152604090206002015460ff1681565b6040516100cb9190610612565b60405180910390f35b3480156100e057600080fd5b506100896100ef3660046106cb565b610246565b34801561010057600080fd5b506100896102bd565b34801561011557600080fd5b506101396101243660046105f0565b60026020526000908152604090205460ff1681565b60405190151581526020016100cb565b34801561015557600080fd5b5061015e6102d1565b6040516001600160a01b0390911681526020016100cb565b61008961018436600461083f565b6102e0565b610089610197366004610909565b61035b565b3480156101a857600080fd5b506006546007546008546101c9926001600160a01b03908116928116911683565b604080516001600160a01b03948516815292841660208401529216918101919091526060016100cb565b3480156101ff57600080fd5b506100be61020e3660046105f0565b60046020526000908152604090206002015460ff1681565b34801561023257600080fd5b506100896102413660046105f0565b610432565b61024e6104ab565b80518051829160059161026891839160209091019061055a565b5060208201516001820180546001600160a01b03199081166001600160a01b03938416179091556040840151600284018054831691841691909117905560609093015160039092018054909316911617905550565b6102c56104ab565b6102cf600061050a565b565b6000546001600160a01b031690565b6102e86104ab565b6008546040516000916001600160a01b03169061030890839036906109ad565b600060405180830381855af49150503d8060008114610343576040519150601f19603f3d011682016040523d82523d6000602084013e610348565b606091505b505090508061035657600080fd5b505050565b6002600154036103b25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556008546040516000916001600160a01b0316906103d790839036906109ad565b600060405180830381855af49150503d8060008114610412576040519150601f19603f3d011682016040523d82523d6000602084013e610417565b606091505b505090508061042557600080fd5b5050600180555050505050565b61043a6104ab565b6001600160a01b03811661049f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a9565b6104a88161050a565b50565b336104b46102d1565b6001600160a01b0316146102cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156105af579160200282015b828111156105af57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061057a565b506105bb9291506105bf565b5090565b5b808211156105bb57600081556001016105c0565b80356001600160a01b03811681146105eb57600080fd5b919050565b60006020828403121561060257600080fd5b61060b826105d4565b9392505050565b602081016004831061063457634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156106725761067261063a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156106a0576106a061063a565b604052919050565b60006001600160401b038211156106c1576106c161063a565b5060051b60200190565b600060208083850312156106de57600080fd5b82356001600160401b03808211156106f557600080fd5b908401906080828703121561070957600080fd5b610711610650565b82358281111561072057600080fd5b83019150601f8201871361073357600080fd5b8135610746610741826106a8565b610678565b81815260059190911b8301850190858101908983111561076557600080fd5b938601935b8285101561078a5761077b856105d4565b8252938601939086019061076a565b83525061079a90508385016105d4565b848201526107aa604084016105d4565b60408201526107bb606084016105d4565b60608201529695505050505050565b600082601f8301126107db57600080fd5b813560206107eb610741836106a8565b82815260059290921b8401810191818101908684111561080a57600080fd5b8286015b84811015610825578035835291830191830161080e565b509695505050505050565b8035600481106105eb57600080fd5b6000806040838503121561085257600080fd5b61085b836105d4565b915060208301356001600160401b038082111561087757600080fd5b908401906060828703121561088b57600080fd5b6040516060810181811083821117156108a6576108a661063a565b6040528235828111156108b857600080fd5b6108c4888286016107ca565b8252506020830135828111156108d957600080fd5b6108e5888286016107ca565b6020830152506108f760408401610830565b60408201528093505050509250929050565b60008060008060008060c0878903121561092257600080fd5b61092b876105d4565b9550610939602088016105d4565b9450610947604088016105d4565b935060608701356001600160401b038082111561096357600080fd5b61096f8a838b016107ca565b9450608089013591508082111561098557600080fd5b5061099289828a016107ca565b9250506109a160a08801610830565b90509295509295509295565b818382376000910190815291905056fea26469706673582212207a8ce742ac788a5510769a863b216d21f1db0440e6b2cded151c354a5691d50064736f6c63430008100033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(input, overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
