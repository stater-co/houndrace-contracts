/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Payments, PaymentsInterface } from "../Payments";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint32",
        name: "paymentType",
        type: "uint32",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a8d806100826000396000f3fe6080604052600436106100405760003560e01c8063400f959f14610049578063715018a61461005c5780638da5cb5b14610071578063f2fde38b146100a257005b3661004757005b005b61004761005736600461082b565b6100c2565b34801561006857600080fd5b50610047610566565b34801561007d57600080fd5b5061008661057a565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ae57600080fd5b506100476100bd3660046108dc565b610589565b6100e76040518060400160405280600481526020016306f6b20360e41b815250610607565b8063ffffffff1660000361019b5761011a604051806040016040528060048152602001636f6b203160e01b815250610607565b836001600160a01b03166342842e0e87878660008151811061013e5761013e6108fe565b60200260200101516040518463ffffffff1660e01b815260040161016493929190610914565b600060405180830381600087803b15801561017e57600080fd5b505af1158015610192573d6000803e3d6000fd5b5050505061055e565b8063ffffffff16600103610200576101ce6040518060400160405280600481526020016337b5901960e11b815250610607565b604051631759616b60e11b81526001600160a01b03851690632eb2c2d690610164908990899088908890600401610973565b8063ffffffff1660020361040257610233604051806040016040528060048152602001636f6b203360e01b815250610607565b6001600160a01b038616301461037f5761026a604051806040016040528060068152602001656f6b20332e3160d01b815250610607565b604051636eb1769f60e11b81526001600160a01b0387811660048301523060248301526102e4919086169063dd62ed3e90604401602060405180830381865afa1580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df91906109ce565b61064a565b836001600160a01b03166323b872dd878785600081518110610308576103086108fe565b60200260200101516040518463ffffffff1660e01b815260040161032e93929190610914565b6020604051808303816000875af115801561034d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037191906109e7565b61037a57600080fd5b61055e565b6103a66040518060400160405280600681526020016537b59019971960d11b815250610607565b836001600160a01b031663a9059cbb86846000815181106103c9576103c96108fe565b60200260200101516040518363ffffffff1660e01b815260040161032e9291906001600160a01b03929092168252602082015260400190565b8063ffffffff1660030361055e57610435604051806040016040528060048152602001631bdac80d60e21b815250610607565b6001600160a01b0385163b156104ec5761046c604051806040016040528060068152602001656f6b20342e3160d01b815250610607565b6000856001600160a01b03168360008151811061048b5761048b6108fe565b602002602001015160405160006040518083038185875af1925050503d80600081146104d3576040519150601f19603f3d011682016040523d82523d6000602084013e6104d8565b606091505b50509050806104e657600080fd5b5061055e565b6105136040518060400160405280600681526020016537b5901a171960d11b815250610607565b846001600160a01b03166108fc83600081518110610533576105336108fe565b60200260200101519081150290604051600060405180830381858888f1935050505061055e57600080fd5b505050505050565b61056e61068f565b61057860006106ee565b565b6000546001600160a01b031690565b61059161068f565b6001600160a01b0381166105fb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610604816106ee565b50565b6106048160405160240161061b9190610a09565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261073e565b6106048160405160240161066091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905261073e565b3361069861057a565b6001600160a01b0316146105785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461077657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126107a257600080fd5b813560206001600160401b03808311156107be576107be61077b565b8260051b604051601f19603f830116810181811084821117156107e3576107e361077b565b60405293845285810183019383810192508785111561080157600080fd5b83870191505b8482101561082057813583529183019190830190610807565b979650505050505050565b60008060008060008060c0878903121561084457600080fd5b61084d8761075f565b955061085b6020880161075f565b94506108696040880161075f565b935060608701356001600160401b038082111561088557600080fd5b6108918a838b01610791565b945060808901359150808211156108a757600080fd5b506108b489828a01610791565b92505060a087013563ffffffff811681146108ce57600080fd5b809150509295509295509295565b6000602082840312156108ee57600080fd5b6108f78261075f565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600081518084526020808501945080840160005b838110156109685781518752958201959082019060010161094c565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061099f90830185610938565b82810360608401526109b18185610938565b838103608090940193909352505060008152602001949350505050565b6000602082840312156109e057600080fd5b5051919050565b6000602082840312156109f957600080fd5b815180151581146108f757600080fd5b600060208083528351808285015260005b81811015610a3657858101830151858201604001528201610a1a565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220f40ebe003abe9b97064c7ea0ff6ac9d9e72d1ae08403713a40a74761ccbf413d64736f6c63430008100033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
