/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Payments,
  PaymentsInterface,
  PaymentsConstructor,
} from "../Payments";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610df1380380610df183398101604081905261002f916100b3565b8061003933610063565b6001805551600480546001600160a01b0319166001600160a01b0390921691909117905550610118565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c557600080fd5b604051602081016001600160401b03811182821017156100f557634e487b7160e01b600052604160045260246000fd5b60405282516001600160a01b038116811461010f57600080fd5b81529392505050565b610cca806101276000396000f3fe6080604052600436106100565760003560e01c80632a6dea6c1461005f578063715018a61461007f5780638da5cb5b14610094578063c01f59c2146100c5578063d8de6587146100d8578063f2fde38b146100f857005b3661005d57005b005b34801561006b57600080fd5b5061005d61007a366004610993565b610118565b34801561008b57600080fd5b5061005d610142565b3480156100a057600080fd5b506100a9610156565b6040516001600160a01b03909116815260200160405180910390f35b61005d6100d3366004610a76565b610165565b3480156100e457600080fd5b506004546100a9906001600160a01b031681565b34801561010457600080fd5b5061005d610113366004610b22565b610839565b6101206108b2565b51600480546001600160a01b0319166001600160a01b03909216919091179055565b61014a6108b2565b6101546000610911565b565b6000546001600160a01b031690565b6002600154036101bc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260015560008160038111156101d5576101d5610b44565b0361025b57836001600160a01b03166342842e0e8787866000815181106101fe576101fe610b5a565b60200260200101516040518463ffffffff1660e01b815260040161022493929190610b70565b600060405180830381600087803b15801561023e57600080fd5b505af1158015610252573d6000803e3d6000fd5b5050505061082d565b600181600381111561026f5761026f610b44565b036104b557604051631759616b60e11b81526001600160a01b03851690632eb2c2d6906102a6908990899088908890600401610bcf565b600060405180830381600087803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b50506004546001600160a01b039081169088160391506104b090505760005b83518110156104ae576000805b6001600160a01b0387166000908152600260205260409020548110156103fa576001600160a01b038716600090815260026020526040902080548290811061034a5761034a610b5a565b906000526020600020015486848151811061036757610367610b5a565b6020026020010151036103ea5784838151811061038657610386610b5a565b602002602001015160026000896001600160a01b03166001600160a01b0316815260200190815260200160002060010182815481106103c7576103c7610b5a565b9060005260206000200160008282546103e09190610c40565b9091555060019250505b6103f381610c59565b9050610300565b508061049d576001600160a01b0386166000908152600260205260409020855186908490811061042c5761042c610b5a565b6020908102919091018101518254600181810185556000948552838520909101919091556001600160a01b038916835260029091526040909120855191019085908490811061047d5761047d610b5a565b602090810291909101810151825460018101845560009384529190922001555b506104a781610c59565b90506102f3565b505b61082d565b60028160038111156104c9576104c9610b44565b036106af576001600160a01b038616301461057957836001600160a01b03166323b872dd87878560008151811061050257610502610b5a565b60200260200101516040518463ffffffff1660e01b815260040161052893929190610b70565b6020604051808303816000875af1158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190610c72565b61057457600080fd5b610621565b836001600160a01b031663a9059cbb868460008151811061059c5761059c610b5a565b60200260200101516040518363ffffffff1660e01b81526004016105d59291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610c72565b61062157600080fd5b6004546001600160a01b03908116908616036104b0578160008151811061064a5761064a610b5a565b602002602001015160036000866001600160a01b03166001600160a01b0316815260200190815260200160002060010160008154811061068c5761068c610b5a565b9060005260206000200160008282546106a59190610c40565b909155505061082d565b60038160038111156106c3576106c3610b44565b0361082d576001600160a01b0385163b15610758576000856001600160a01b0316836000815181106106f7576106f7610b5a565b602002602001015160405160006040518083038185875af1925050503d806000811461073f576040519150601f19603f3d011682016040523d82523d6000602084013e610744565b606091505b505090508061075257600080fd5b506107a3565b846001600160a01b03166108fc8360008151811061077857610778610b5a565b60200260200101519081150290604051600060405180830381858888f193505050506107a357600080fd5b6004546001600160a01b039081169086160361082d57816000815181106107cc576107cc610b5a565b602002602001015160036000866001600160a01b03166001600160a01b0316815260200190815260200160002060010160008154811061080e5761080e610b5a565b9060005260206000200160008282546108279190610c40565b90915550505b50506001805550505050565b6108416108b2565b6001600160a01b0381166108a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b3565b6108af81610911565b50565b336108bb610156565b6001600160a01b0316146101545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461098e57600080fd5b919050565b6000602082840312156109a557600080fd5b604051602081016001600160401b03811182821017156109c7576109c7610961565b6040526109d383610977565b81529392505050565b600082601f8301126109ed57600080fd5b813560206001600160401b0380831115610a0957610a09610961565b8260051b604051601f19603f83011681018181108482111715610a2e57610a2e610961565b604052938452858101830193838101925087851115610a4c57600080fd5b83870191505b84821015610a6b57813583529183019190830190610a52565b979650505050505050565b60008060008060008060c08789031215610a8f57600080fd5b610a9887610977565b9550610aa660208801610977565b9450610ab460408801610977565b935060608701356001600160401b0380821115610ad057600080fd5b610adc8a838b016109dc565b94506080890135915080821115610af257600080fd5b50610aff89828a016109dc565b92505060a087013560048110610b1457600080fd5b809150509295509295509295565b600060208284031215610b3457600080fd5b610b3d82610977565b9392505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600081518084526020808501945080840160005b83811015610bc457815187529582019590820190600101610ba8565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090610bfb90830185610b94565b8281036060840152610c0d8185610b94565b838103608090940193909352505060008152602001949350505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c5357610c53610c2a565b92915050565b600060018201610c6b57610c6b610c2a565b5060010190565b600060208284031215610c8457600080fd5b81518015158114610b3d57600080fdfea264697066735822122042f1ce838de0b57b639de1669023690e41d4079cf89831e8384ed3c39942252064736f6c63430008100033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(input, overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
