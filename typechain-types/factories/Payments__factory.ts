/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Payments,
  PaymentsInterface,
  PaymentsConstructor,
} from "../Payments";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "input",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "control",
    outputs: [
      {
        internalType: "address",
        name: "alphadune",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payment.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "alphadune",
            type: "address",
          },
        ],
        internalType: "struct PaymentsConstructor.Struct",
        name: "globalParameters",
        type: "tuple",
      },
    ],
    name: "setGlobalParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a36380380610a3683398101604081905261002f916100b3565b8061003933610063565b6001805551600280546001600160a01b0319166001600160a01b0390921691909117905550610118565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c557600080fd5b604051602081016001600160401b03811182821017156100f557634e487b7160e01b600052604160045260246000fd5b60405282516001600160a01b038116811461010f57600080fd5b81529392505050565b61090f806101276000396000f3fe6080604052600436106100565760003560e01c80632a6dea6c1461005f578063715018a61461007f5780638da5cb5b14610094578063c01f59c2146100c5578063d8de6587146100d8578063f2fde38b146100f857005b3661005d57005b005b34801561006b57600080fd5b5061005d61007a366004610620565b610118565b34801561008b57600080fd5b5061005d610142565b3480156100a057600080fd5b506100a9610156565b6040516001600160a01b03909116815260200160405180910390f35b61005d6100d3366004610703565b610165565b3480156100e457600080fd5b506002546100a9906001600160a01b031681565b34801561010457600080fd5b5061005d6101133660046107af565b6104c6565b61012061053f565b51600280546001600160a01b0319166001600160a01b03909216919091179055565b61014a61053f565b610154600061059e565b565b6000546001600160a01b031690565b6002600154036101bc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260015560008160038111156101d5576101d56107d1565b0361025b57836001600160a01b03166342842e0e8787866000815181106101fe576101fe6107e7565b60200260200101516040518463ffffffff1660e01b8152600401610224939291906107fd565b600060405180830381600087803b15801561023e57600080fd5b505af1158015610252573d6000803e3d6000fd5b505050506104ba565b600181600381111561026f5761026f6107d1565b036102a657604051631759616b60e11b81526001600160a01b03851690632eb2c2d69061022490899089908890889060040161085c565b60028160038111156102ba576102ba6107d1565b036103c6576001600160a01b038616301461036a57836001600160a01b03166323b872dd8787856000815181106102f3576102f36107e7565b60200260200101516040518463ffffffff1660e01b8152600401610319939291906107fd565b6020604051808303816000875af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c91906108b7565b61036557600080fd5b6104ba565b836001600160a01b031663a9059cbb868460008151811061038d5761038d6107e7565b60200260200101516040518363ffffffff1660e01b81526004016103199291906001600160a01b03929092168252602082015260400190565b60038160038111156103da576103da6107d1565b036104ba576001600160a01b0385163b1561046f576000856001600160a01b03168360008151811061040e5761040e6107e7565b602002602001015160405160006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b505090508061046957600080fd5b506104ba565b846001600160a01b03166108fc8360008151811061048f5761048f6107e7565b60200260200101519081150290604051600060405180830381858888f193505050506104ba57600080fd5b50506001805550505050565b6104ce61053f565b6001600160a01b0381166105335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b3565b61053c8161059e565b50565b33610548610156565b6001600160a01b0316146101545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461061b57600080fd5b919050565b60006020828403121561063257600080fd5b604051602081016001600160401b0381118282101715610654576106546105ee565b60405261066083610604565b81529392505050565b600082601f83011261067a57600080fd5b813560206001600160401b0380831115610696576106966105ee565b8260051b604051601f19603f830116810181811084821117156106bb576106bb6105ee565b6040529384528581018301938381019250878511156106d957600080fd5b83870191505b848210156106f8578135835291830191908301906106df565b979650505050505050565b60008060008060008060c0878903121561071c57600080fd5b61072587610604565b955061073360208801610604565b945061074160408801610604565b935060608701356001600160401b038082111561075d57600080fd5b6107698a838b01610669565b9450608089013591508082111561077f57600080fd5b5061078c89828a01610669565b92505060a0870135600481106107a157600080fd5b809150509295509295509295565b6000602082840312156107c157600080fd5b6107ca82610604565b9392505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600081518084526020808501945080840160005b8381101561085157815187529582019590820190600101610835565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061088890830185610821565b828103606084015261089a8185610821565b838103608090940193909352505060008152602001949350505050565b6000602082840312156108c957600080fd5b815180151581146107ca57600080fdfea26469706673582212208f50097fb25198c9796c3cce464d821177c28cba21cccec14502cff9abed9f2564736f6c63430008100033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(input, overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    input: PaymentsConstructor.StructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(input, overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
