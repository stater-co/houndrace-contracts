/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Payments, PaymentsInterface } from "../Payments";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "id",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
      {
        internalType: "uint32",
        name: "paymentType",
        type: "uint32",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107fa806100826000396000f3fe6080604052600436106100405760003560e01c8063400f959f14610049578063715018a61461005c5780638da5cb5b14610071578063f2fde38b146100a257005b3661004757005b005b6100476100573660046105ff565b6100c2565b34801561006857600080fd5b506100476103e3565b34801561007d57600080fd5b506100866103f7565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ae57600080fd5b506100476100bd3660046106b0565b610406565b8063ffffffff1660000361015157836001600160a01b03166342842e0e8787866000815181106100f4576100f46106d2565b60200260200101516040518463ffffffff1660e01b815260040161011a939291906106e8565b600060405180830381600087803b15801561013457600080fd5b505af1158015610148573d6000803e3d6000fd5b505050506103db565b8063ffffffff1660010361019157604051631759616b60e11b81526001600160a01b03851690632eb2c2d69061011a908990899088908890600401610747565b8063ffffffff166002036102f2576001600160a01b038616301461024557836001600160a01b03166323b872dd8730856000815181106101d3576101d36106d2565b60200260200101516040518463ffffffff1660e01b81526004016101f9939291906106e8565b6020604051808303816000875af1158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c91906107a2565b61024557600080fd5b836001600160a01b031663a9059cbb8684600081518110610268576102686106d2565b60200260200101516040518363ffffffff1660e01b81526004016102a19291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e491906107a2565b6102ed57600080fd5b6103db565b8063ffffffff166003036103db576001600160a01b0385163b15610390576000856001600160a01b03168360008151811061032f5761032f6106d2565b602002602001015160405160006040518083038185875af1925050503d8060008114610377576040519150601f19603f3d011682016040523d82523d6000602084013e61037c565b606091505b505090508061038a57600080fd5b506103db565b846001600160a01b03166108fc836000815181106103b0576103b06106d2565b60200260200101519081150290604051600060405180830381858888f193505050506103db57600080fd5b505050505050565b6103eb610484565b6103f560006104e3565b565b6000546001600160a01b031690565b61040e610484565b6001600160a01b0381166104785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610481816104e3565b50565b3361048d6103f7565b6001600160a01b0316146103f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461054a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261057657600080fd5b813560206001600160401b03808311156105925761059261054f565b8260051b604051601f19603f830116810181811084821117156105b7576105b761054f565b6040529384528581018301938381019250878511156105d557600080fd5b83870191505b848210156105f4578135835291830191908301906105db565b979650505050505050565b60008060008060008060c0878903121561061857600080fd5b61062187610533565b955061062f60208801610533565b945061063d60408801610533565b935060608701356001600160401b038082111561065957600080fd5b6106658a838b01610565565b9450608089013591508082111561067b57600080fd5b5061068889828a01610565565b92505060a087013563ffffffff811681146106a257600080fd5b809150509295509295509295565b6000602082840312156106c257600080fd5b6106cb82610533565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600081518084526020808501945080840160005b8381101561073c57815187529582019590820190600101610720565b509495945050505050565b6001600160a01b0385811682528416602082015260a0604082018190526000906107739083018561070c565b8281036060840152610785818561070c565b838103608090940193909352505060008152602001949350505050565b6000602082840312156107b457600080fd5b815180151581146106cb57600080fdfea2646970667358221220d429b0524e7d89ef2ee43a3fc3dae08b6254f0dca7fd15ed63c65ca616355d5664736f6c634300080f0033";

type PaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payments__factory extends ContractFactory {
  constructor(...args: PaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Payments";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payments> {
    return super.deploy(overrides || {}) as Promise<Payments>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Payments {
    return super.attach(address) as Payments;
  }
  connect(signer: Signer): Payments__factory {
    return super.connect(signer) as Payments__factory;
  }
  static readonly contractName: "Payments";
  public readonly contractName: "Payments";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentsInterface {
    return new utils.Interface(_abi) as PaymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payments {
    return new Contract(address, _abi, signerOrProvider) as Payments;
  }
}
